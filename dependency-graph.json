{
  "classDependencies": {
    "com.sapienter.jbilling.server.provisioning.task.mmsc.EfsBaseRequest": ["javax.xml.bind.annotation.XmlAccessorType", "com.sapienter.jbilling.server.provisioning.task.mmsc.EfsBaseRequest", "javax.xml.bind.annotation.XmlType", "com.sapienter.jbilling.server.provisioning.task.mmsc.EfsBaseObject", "javax.xml.bind.annotation.XmlSeeAlso", "com.sapienter.jbilling.server.provisioning.task.mmsc.EfsBaseMSISDNRequest", "javax.xml.bind.annotation.XmlAccessType"],
    "com.sapienter.jbilling.server.item.tasks.RulesPricingTask": ["com.sapienter.jbilling.server.item.tasks.RulesPricingTask", "com.sapienter.jbilling.server.item.tasks.Subscription", "com.sapienter.jbilling.server.item.PricingField", "com.sapienter.jbilling.server.util.DTOFactory", "com.sapienter.jbilling.server.order.db.OrderLineDTO", "org.drools.runtime.StatelessKnowledgeSession", "com.sapienter.jbilling.server.pluggableTask.TaskException", "java.util.ArrayList", "org.apache.log4j.Logger", "java.math.BigDecimal", "com.sapienter.jbilling.server.user.ContactDTOEx", "com.sapienter.jbilling.server.user.ContactBL", "java.util.Hashtable", "org.apache.log4j.Category", "com.sapienter.jbilling.server.order.OrderBL", "com.sapienter.jbilling.server.pluggableTask.PluggableTask", "com.sapienter.jbilling.server.user.contact.db.ContactFieldDTO", "com.sapienter.jbilling.server.item.tasks.IPricing", "java.util.Collection", "com.sapienter.jbilling.server.item.tasks.PricingManager", "com.sapienter.jbilling.server.user.UserDTOEx", "<nulltype>", "com.sapienter.jbilling.server.order.db.OrderDTO", "java.util.List", "org.drools.KnowledgeBase"],
    "com.sapienter.jbilling.server.payment.blacklist.IpAddressFilter": ["com.sapienter.jbilling.server.user.contact.db.ContactFieldDTO", "com.sapienter.jbilling.server.user.db.UserDTO", "com.sapienter.jbilling.server.payment.blacklist.IpAddressFilter", "java.util.Set", "com.sapienter.jbilling.server.util.Util", "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDAS", "com.sapienter.jbilling.server.payment.blacklist.BlacklistFilter$Result", "com.sapienter.jbilling.server.user.db.UserDAS", "com.sapienter.jbilling.server.payment.blacklist.BlacklistFilter", "com.sapienter.jbilling.server.user.contact.db.ContactFieldTypeDTO", "com.sapienter.jbilling.server.user.contact.db.ContactDTO", "<nulltype>", "java.util.List", "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDTO", "java.util.ResourceBundle", "com.sapienter.jbilling.server.user.contact.db.ContactDAS", "com.sapienter.jbilling.server.payment.PaymentDTOEx", "com.sapienter.jbilling.server.user.db.CompanyDTO", "com.sapienter.jbilling.server.util.db.AbstractDAS"],
    "com.sapienter.jbilling.server.pluggableTask.PaymentInfoTask": ["com.sapienter.jbilling.server.payment.PaymentDTOEx", "com.sapienter.jbilling.server.pluggableTask.PaymentInfoTask", "com.sapienter.jbilling.server.pluggableTask.TaskException"],
    "com.sapienter.jbilling.server.mediation.task.StatelessJDBCReader": ["com.sapienter.jbilling.server.pluggableTask.PluggableTask", "java.util.Iterator", "com.sapienter.jbilling.server.mediation.task.AbstractJDBCReader", "com.sapienter.jbilling.server.item.PricingField", "com.sapienter.jbilling.server.mediation.Record", "int[]", "com.sapienter.jbilling.server.mediation.task.StatelessJDBCReader", "<nulltype>", "org.apache.log4j.Logger", "java.util.List", "com.sapienter.jbilling.server.mediation.task.AbstractJDBCReader$MarkMethod", "com.sapienter.jbilling.common.SessionInternalError", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription", "org.apache.log4j.Category"],
    "com.sapienter.jbilling.server.mediation.GroupRecordComparator": ["com.sapienter.jbilling.server.mediation.Format", "com.sapienter.jbilling.common.SessionInternalError", "com.sapienter.jbilling.server.mediation.FormatField", "com.sapienter.jbilling.server.item.PricingField", "com.sapienter.jbilling.server.mediation.Record", "java.util.Comparator", "com.sapienter.jbilling.server.mediation.GroupRecordComparator", "<nulltype>"],
    "com.sapienter.jbilling.server.item.ItemPriceDTOEx": ["com.sapienter.jbilling.server.item.ItemPriceDTOEx", "<nulltype>", "java.io.Serializable", "java.math.BigDecimal"],
    "com.sapienter.jbilling.server.item.tasks.PricingResult": ["org.apache.log4j.Logger", "java.math.BigDecimal", "com.sapienter.jbilling.server.rule.Result", "com.sapienter.jbilling.server.item.tasks.PricingResult", "org.apache.log4j.Category"],
    "com.sapienter.jbilling.server.payment.tasks.paypal.dto.PaymentAction": ["com.sapienter.jbilling.server.payment.tasks.paypal.dto.PaymentAction"],
    "com.sapienter.jbilling.server.rule.RulesBaseTask": ["com.sapienter.jbilling.server.pluggableTask.PluggableTask", "org.mvel2.optimizers.OptimizerFactory", "org.drools.runtime.StatelessKnowledgeSession", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription$Type", "com.sapienter.jbilling.server.pluggableTask.TaskException", "java.util.ArrayList", "com.sapienter.jbilling.server.rule.RulesBaseTask", "org.apache.log4j.Logger", "java.util.List", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription", "org.drools.KnowledgeBase", "org.apache.log4j.Category"],
    "com.sapienter.jbilling.server.order.db.OrderLineTypeDAS": ["com.sapienter.jbilling.server.order.db.OrderLineTypeDAS", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.order.db.OrderLineTypeDTO"],
    "com.sapienter.jbilling.server.order.validator.DateRangeValidator": ["org.apache.commons.lang.StringUtils", "javax.validation.ConstraintValidator", "org.apache.commons.beanutils.BeanUtils", "javax.validation.ConstraintValidatorContext", "java.util.Date", "java.text.SimpleDateFormat", "com.sapienter.jbilling.server.order.validator.DateRangeValidator", "org.apache.log4j.Logger", "com.sapienter.jbilling.server.order.validator.DateRange", "java.text.ParseException", "java.text.DateFormat", "org.apache.log4j.Category"],
    "com.sapienter.jbilling.tools.LanguageKeys": ["java.io.PrintStream", "java.util.Properties", "java.util.Iterator", "java.util.Set", "java.io.FileInputStream", "com.sapienter.jbilling.tools.LanguageKeys"],
    "com.sapienter.jbilling.server.user.ContactTypeWS": ["com.sapienter.jbilling.server.util.db.LanguageDTO", "com.sapienter.jbilling.server.util.InternationalDescriptionWS", "com.sapienter.jbilling.server.user.contact.db.ContactTypeDTO", "<nulltype>", "java.util.ArrayList", "java.util.List", "com.sapienter.jbilling.server.util.db.AbstractDescription", "com.sapienter.jbilling.server.user.ContactTypeWS", "com.sapienter.jbilling.server.user.db.CompanyDTO"],
    "com.sapienter.jbilling.server.notification.barcode.TextPlacement": ["com.sapienter.jbilling.server.notification.barcode.TextPlacement"],
    "com.sapienter.jbilling.server.user.db.UserStatusDTO": ["javax.persistence.Entity", "javax.persistence.CascadeType", "com.sapienter.jbilling.server.util.db.AbstractGenericStatus", "com.sapienter.jbilling.server.user.db.UserDTO", "com.sapienter.jbilling.server.process.db.AgeingEntityStepDTO", "javax.persistence.OneToMany", "java.util.Set", "java.io.Serializable", "java.util.HashSet", "javax.persistence.DiscriminatorValue", "javax.persistence.Column", "javax.persistence.Transient", "javax.persistence.FetchType", "com.sapienter.jbilling.server.user.db.UserStatusDTO", "com.sapienter.jbilling.server.util.Constants"],
    "com.sapienter.jbilling.server.notification.barcode.Checksum": ["com.sapienter.jbilling.server.notification.barcode.Checksum"],
    "com.sapienter.jbilling.server.user.UserSQL": ["com.sapienter.jbilling.common.Constants", "com.sapienter.jbilling.server.util.audit.EventLogger", "com.sapienter.jbilling.server.user.UserSQL"],
    "com.sapienter.jbilling.server.util.csv.CsvExporter": ["com.sapienter.jbilling.server.util.csv.Exportable", "com.sapienter.jbilling.server.util.csv.CsvExporter", "au.com.bytecode.opencsv.CSVWriter", "com.sapienter.jbilling.server.util.converter.BigDecimalConverter", "java.io.StringWriter", "java.io.IOException", "<nulltype>", "org.apache.log4j.Logger", "java.math.BigDecimal", "com.sapienter.jbilling.server.util.csv.Exporter", "java.util.List", "org.apache.commons.beanutils.Converter", "org.apache.commons.beanutils.ConvertUtils", "org.apache.log4j.Category"],
    "com.sapienter.jbilling.server.payment.tasks.paypal.dto.CreditCard": ["com.sapienter.jbilling.server.payment.tasks.paypal.dto.CreditCard"],
    "com.sapienter.jbilling.server.provisioning.ExternalProvisioningMDB": ["com.sapienter.jbilling.server.provisioning.ExternalProvisioningMDB", "com.sapienter.jbilling.server.util.Context", "javax.jms.MessageListener", "com.sapienter.jbilling.server.util.Context$Name", "com.sapienter.jbilling.server.provisioning.IProvisioningProcessSessionBean", "org.apache.log4j.Logger", "com.sapienter.jbilling.common.SessionInternalError", "javax.jms.Message", "org.apache.log4j.Category"],
    "com.sapienter.jbilling.server.payment.blacklist.BlacklistBL": ["com.sapienter.jbilling.server.util.PreferenceBL", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskException", "java.util.Date", "com.sapienter.jbilling.server.util.Context", "com.sapienter.jbilling.server.payment.tasks.PaymentFilterTask", "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDTO", "org.springframework.dao.EmptyResultDataAccessException", "com.sapienter.jbilling.server.pluggableTask.PluggableTask", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDTO", "com.sapienter.jbilling.server.user.db.UserDTO", "com.sapienter.jbilling.server.payment.blacklist.BlacklistBL", "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDAS", "com.sapienter.jbilling.server.user.db.UserDAS", "com.sapienter.jbilling.server.user.contact.db.ContactDTO", "com.sapienter.jbilling.server.util.Context$Name", "<nulltype>", "java.util.List", "com.sapienter.jbilling.server.user.db.CreditCardDTO", "com.sapienter.jbilling.common.SessionInternalError", "com.sapienter.jbilling.server.user.db.CompanyDTO", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.util.Constants", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDAS"],
    "com.sapienter.jbilling.server.payment.event.EndProcessPaymentEvent": ["com.sapienter.jbilling.server.system.event.Event", "com.sapienter.jbilling.server.payment.event.EndProcessPaymentEvent"],
    "com.sapienter.jbilling.server.pluggableTask.ProcessorEmailAlarmTask": ["com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskException", "java.util.Date", "com.sapienter.jbilling.server.pluggableTask.ProcessorAlarm", "org.apache.log4j.Logger", "java.util.Map", "com.sapienter.jbilling.server.pluggableTask.ProcessorEmailAlarm", "org.apache.log4j.Category", "com.sapienter.jbilling.server.pluggableTask.PluggableTask", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDTO", "com.sapienter.jbilling.server.pluggableTask.ProcessorEmailAlarmTask", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription$Type", "<nulltype>", "java.util.List", "com.sapienter.jbilling.server.notification.NotificationBL", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription"],
    "com.sapienter.jbilling.server.payment.event.ProcessPaymentProcessor": ["com.sapienter.jbilling.server.system.event.Event", "com.sapienter.jbilling.server.system.event.AsynchronousEventProcessor", "com.sapienter.jbilling.server.system.event.EventProcessor", "com.sapienter.jbilling.server.payment.event.EndProcessPaymentEvent", "com.sapienter.jbilling.server.payment.tasks.IAsyncPaymentParameters", "com.sapienter.jbilling.server.util.Context", "com.sapienter.jbilling.server.payment.event.ProcessPaymentProcessor", "com.sapienter.jbilling.server.util.Context$Name", "<nulltype>", "com.sapienter.jbilling.server.system.event.MapMessage", "javax.jms.Destination", "com.sapienter.jbilling.common.SessionInternalError", "com.sapienter.jbilling.server.util.Constants", "com.sapienter.jbilling.server.payment.event.ProcessPaymentEvent"],
    "com.sapienter.jbilling.server.item.event.ItemDeletedEvent": ["com.sapienter.jbilling.server.item.db.ItemDTO", "com.sapienter.jbilling.server.item.event.AbstractItemEvent", "com.sapienter.jbilling.server.item.event.ItemDeletedEvent"],
    "com.sapienter.jbilling.server.user.ValidatePurchaseWS": ["java.math.BigDecimal", "com.sapienter.jbilling.server.user.ValidatePurchaseWS", "<nulltype>", "java.io.Serializable"],
    "com.sapienter.jbilling.server.order.db.OrderBillingTypeDAS": ["com.sapienter.jbilling.server.order.db.OrderBillingTypeDAS", "com.sapienter.jbilling.server.order.db.OrderBillingTypeDTO", "com.sapienter.jbilling.server.util.db.AbstractDAS"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentsGatewayTask": ["java.net.Socket", "com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskException", "javax.net.ssl.SSLSocket", "java.security.Security", "org.apache.log4j.Logger", "java.math.BigDecimal", "java.util.Calendar", "javax.net.ssl.SSLSession", "java.io.DataOutputStream", "com.sapienter.jbilling.server.payment.db.PaymentResultDAS", "com.sapienter.jbilling.server.payment.db.PaymentInfoChequeDTO", "com.sapienter.jbilling.server.user.ContactBL", "org.apache.log4j.Category", "com.sapienter.jbilling.server.payment.db.PaymentDTO", "com.sapienter.jbilling.server.payment.PaymentAuthorizationBL", "com.sun.net.ssl.internal.ssl.Provider", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO", "com.sapienter.jbilling.server.pluggableTask.PaymentTaskWithTimeout", "com.sapienter.jbilling.server.user.contact.db.ContactDTO", "java.io.InputStreamReader", "<nulltype>", "javax.net.ssl.SSLSocketFactory", "javax.net.SocketFactory", "com.sapienter.jbilling.server.user.db.AchDTO", "com.sapienter.jbilling.server.user.db.CreditCardDTO", "com.sapienter.jbilling.server.payment.tasks.PaymentsGatewayTask", "com.sapienter.jbilling.server.payment.PaymentDTOEx", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.pluggableTask.PaymentTask", "java.io.BufferedReader", "com.sapienter.jbilling.server.util.Constants"],
    "com.sapienter.jbilling.client.authentication.InitializingGrantedAuthority": ["com.sapienter.jbilling.client.authentication.InitializingGrantedAuthority", "org.springframework.security.core.GrantedAuthority"],
    "com.sapienter.jbilling.server.provisioning.event.SubscriptionActiveEvent": ["com.sapienter.jbilling.server.order.db.OrderDTO", "com.sapienter.jbilling.server.system.event.Event", "com.sapienter.jbilling.server.provisioning.event.SubscriptionActiveEvent"],
    "com.sapienter.jbilling.server.rule.task.AbstractGeneratorTask": ["java.net.URL", "org.drools.util.DroolsStreamUtils", "com.sapienter.jbilling.server.pluggableTask.TaskException", "org.apache.log4j.Logger", "com.sapienter.jbilling.common.Util", "java.util.Map", "org.apache.log4j.Category", "com.sapienter.jbilling.server.pluggableTask.PluggableTask", "org.apache.commons.digester.Digester", "java.io.FileOutputStream", "java.io.IOException", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription$Type", "java.io.FileNotFoundException", "<nulltype>", "java.io.File", "java.util.List", "java.io.StringReader", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription", "org.xml.sax.SAXException", "com.sapienter.jbilling.server.rule.task.IRulesGenerator", "com.sapienter.jbilling.server.rule.task.AbstractGeneratorTask", "org.apache.commons.digester.xmlrules.DigesterLoader", "org.drools.compiler.PackageBuilder"],
    "com.sapienter.jbilling.server.report.db.parameter.StringReportParameterDTO": ["javax.persistence.DiscriminatorValue", "javax.persistence.Entity", "javax.persistence.Transient", "com.sapienter.jbilling.server.report.db.parameter.StringReportParameterDTO", "com.sapienter.jbilling.server.report.db.ReportParameterDTO"],
    "com.sapienter.jbilling.server.user.validator.CreditCardNumber": ["javax.validation.Payload", "javax.validation.Constraint", "com.sapienter.jbilling.server.user.validator.CreditCardNumberValidator", "com.sapienter.jbilling.server.user.validator.CreditCardNumber"],
    "com.sapienter.jbilling.server.provisioning.config.Processor": ["java.util.List", "com.sapienter.jbilling.server.provisioning.config.Request", "com.sapienter.jbilling.server.provisioning.config.Processor", "<nulltype>"],
    "com.sapienter.jbilling.server.order.TimePeriod": ["com.sapienter.jbilling.server.order.TimePeriod", "java.util.Calendar", "<nulltype>"],
    "com.sapienter.jbilling.server.process.event.NoNewInvoiceEvent": ["com.sapienter.jbilling.server.system.event.Event", "com.sapienter.jbilling.server.process.event.NoNewInvoiceEvent", "java.util.Date"],
    "com.sapienter.jbilling.server.process.task.AbstractSimpleScheduledTask": ["org.apache.commons.lang.StringUtils", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskException", "java.util.Date", "com.sapienter.jbilling.server.process.task.AbstractSimpleScheduledTask", "java.text.SimpleDateFormat", "org.quartz.Scheduler", "org.apache.log4j.Logger", "java.util.Map", "org.quartz.SimpleTrigger", "java.text.ParseException", "java.text.DateFormat", "org.apache.log4j.Category", "com.sapienter.jbilling.server.process.task.IScheduledTask", "com.sapienter.jbilling.server.pluggableTask.PluggableTask", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription$Type", "<nulltype>", "java.util.List", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription", "org.joda.time.DateMidnight", "com.sapienter.jbilling.server.process.task.ScheduledTask"],
    "com.sapienter.jbilling.server.provisioning.task.mmsc.ObjectFactory": ["com.sapienter.jbilling.server.provisioning.task.mmsc.EfsBaseRequest", "com.sapienter.jbilling.server.provisioning.task.mmsc.AddCustomerRequest", "com.sapienter.jbilling.server.provisioning.task.mmsc.GetCustomerResponse$CustomerData$Entry", "com.sapienter.jbilling.server.provisioning.task.mmsc.ObjectFactory", "com.sapienter.jbilling.server.provisioning.task.mmsc.GetCustomerRequest", "com.sapienter.jbilling.server.provisioning.task.mmsc.EfsBaseMSISDNRequest", "com.sapienter.jbilling.server.provisioning.task.mmsc.GetCustomerInfo", "com.sapienter.jbilling.server.provisioning.task.mmsc.ModifyCustomerResponse", "javax.xml.bind.annotation.XmlElementDecl", "com.sapienter.jbilling.server.provisioning.task.mmsc.GetCustomerResponse$CustomerData", "com.sapienter.jbilling.server.provisioning.task.mmsc.MmscFacadeHandlerResponse", "com.sapienter.jbilling.server.provisioning.task.mmsc.AddCustomerResponse", "com.sapienter.jbilling.server.provisioning.task.mmsc.DeleteCustomer", "com.sapienter.jbilling.server.provisioning.task.mmsc.EfsBaseObject", "com.sapienter.jbilling.server.provisioning.task.mmsc.DeleteCustomerResponse", "com.sapienter.jbilling.server.provisioning.task.mmsc.MMSCException", "javax.xml.bind.JAXBElement", "com.sapienter.jbilling.server.provisioning.task.mmsc.DeleteCustomerRequest", "JAXBElement", "<nulltype>", "com.sapienter.jbilling.server.provisioning.task.mmsc.EfsBaseResponse", "com.sapienter.jbilling.server.provisioning.task.mmsc.GetCustomerInfoResponse", "javax.xml.bind.annotation.XmlRegistry", "javax.xml.namespace.QName", "com.sapienter.jbilling.server.provisioning.task.mmsc.ModifyCustomerRequest", "com.sapienter.jbilling.server.provisioning.task.mmsc.ModifyCustomer", "com.sapienter.jbilling.server.provisioning.task.mmsc.GetCustomerResponse", "com.sapienter.jbilling.server.provisioning.task.mmsc.AddCustomer"],
    "com.sapienter.jbilling.client.authentication.SafeWebExpressionVoter": ["java.util.Collection", "com.sapienter.jbilling.client.authentication.SafeWebExpressionVoter", "org.codehaus.groovy.grails.plugins.springsecurity.WebExpressionVoter", "org.springframework.security.core.Authentication", "org.springframework.security.access.ConfigAttribute"],
    "com.sapienter.jbilling.server.pluggableTask.OrderProcessingTask": ["com.sapienter.jbilling.server.order.db.OrderDTO", "com.sapienter.jbilling.server.pluggableTask.OrderProcessingTask", "com.sapienter.jbilling.server.pluggableTask.TaskException"],
    "com.sapienter.jbilling.server.payment.tasks.RouterAsyncParameters": ["com.sapienter.jbilling.server.invoice.InvoiceBL", "java.util.Map$Entry", "com.sapienter.jbilling.server.pluggableTask.PluggableTask", "com.sapienter.jbilling.server.user.db.UserDTO", "com.sapienter.jbilling.server.payment.tasks.IAsyncPaymentParameters", "com.sapienter.jbilling.server.payment.tasks.RouterAsyncParameters", "javax.jms.MapMessage", "com.sapienter.jbilling.server.pluggableTask.TaskException", "<nulltype>", "com.sapienter.jbilling.server.payment.tasks.AbstractPaymentRouterTask", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskManager", "java.util.Map", "com.sapienter.jbilling.server.user.db.CompanyDTO", "com.sapienter.jbilling.server.util.Constants", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO"],
    "com.sapienter.jbilling.server.pluggableTask.ProcessorAlarm": ["com.sapienter.jbilling.server.pluggableTask.ProcessorAlarm"],
    "com.sapienter.jbilling.server.mediation.db.MediationProcessDAS": ["java.util.List", "com.sapienter.jbilling.server.mediation.db.MediationConfiguration", "com.sapienter.jbilling.server.util.db.AbstractDAS", "org.hibernate.Query", "com.sapienter.jbilling.server.mediation.db.MediationProcessDAS", "com.sapienter.jbilling.server.mediation.db.MediationProcess"],
    "com.sapienter.jbilling.server.pluggableTask.BasicPenaltyTask": ["com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskException", "com.sapienter.jbilling.server.util.db.CurrencyDTO", "java.util.Date", "com.sapienter.jbilling.server.order.db.OrderLineDTO", "com.sapienter.jbilling.server.item.db.ItemDTO", "org.apache.log4j.Logger", "java.math.BigDecimal", "com.sapienter.jbilling.server.util.db.AbstractDescription", "java.util.Locale", "com.sapienter.jbilling.server.invoice.db.InvoiceDAS", "java.util.Map", "java.text.DateFormat", "org.apache.log4j.Category", "com.sapienter.jbilling.server.order.OrderBL", "com.sapienter.jbilling.server.pluggableTask.PluggableTask", "com.sapienter.jbilling.server.user.db.UserDTO", "com.sapienter.jbilling.server.system.event.task.IInternalEventsTask", "com.sapienter.jbilling.server.item.ItemBL", "com.sapienter.jbilling.server.order.db.OrderDTO", "java.util.List", "com.sapienter.jbilling.server.invoice.InvoiceBL", "com.sapienter.jbilling.server.order.db.OrderBillingTypeDTO", "java.text.SimpleDateFormat", "com.sapienter.jbilling.server.pluggableTask.BasicPenaltyTask", "java.util.Calendar", "java.util.ResourceBundle", "com.sapienter.jbilling.common.Util", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO", "com.sapienter.jbilling.server.process.event.NewUserStatusEvent", "com.sapienter.jbilling.server.system.event.Event", "com.sapienter.jbilling.server.order.db.OrderPeriodDTO", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription$Type", "com.sapienter.jbilling.server.user.UserBL", "<nulltype>", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription", "com.sapienter.jbilling.common.SessionInternalError", "com.sapienter.jbilling.server.user.db.CompanyDTO", "com.sapienter.jbilling.server.util.Constants"],
    "com.sapienter.jbilling.client.authentication.HttpAuthenticationEntryPoint": ["javax.servlet.http.HttpServletRequest", "com.sapienter.jbilling.client.authentication.HttpAuthenticationEntryPoint", "javax.servlet.ServletException", "org.springframework.security.web.AuthenticationEntryPoint", "javax.servlet.http.HttpServletResponse", "org.springframework.security.core.AuthenticationException", "java.io.IOException"],
    "com.sapienter.jbilling.server.payment.PaymentSQL": ["com.sapienter.jbilling.server.payment.PaymentSQL", "com.sapienter.jbilling.common.Constants"],
    "com.sapienter.jbilling.server.payment.blacklist.AddressFilter": ["com.sapienter.jbilling.server.user.db.UserDTO", "com.sapienter.jbilling.server.util.Util", "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDAS", "com.sapienter.jbilling.server.payment.blacklist.BlacklistFilter$Result", "com.sapienter.jbilling.server.user.db.UserDAS", "com.sapienter.jbilling.server.payment.blacklist.BlacklistFilter", "com.sapienter.jbilling.server.user.contact.db.ContactDTO", "<nulltype>", "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDTO", "java.util.List", "java.util.ResourceBundle", "com.sapienter.jbilling.server.payment.blacklist.AddressFilter", "com.sapienter.jbilling.server.user.contact.db.ContactDAS", "com.sapienter.jbilling.server.payment.PaymentDTOEx", "com.sapienter.jbilling.server.user.db.CompanyDTO", "com.sapienter.jbilling.server.util.db.AbstractDAS"],
    "com.sapienter.jbilling.server.user.tasks.UserBalanceValidatePurchaseTask": ["com.sapienter.jbilling.server.pluggableTask.PluggableTask", "com.sapienter.jbilling.server.item.PricingField", "com.sapienter.jbilling.server.user.balance.ValidatorPrePaid", "com.sapienter.jbilling.server.pluggableTask.TaskException", "<nulltype>", "com.sapienter.jbilling.server.user.db.CustomerDTO", "com.sapienter.jbilling.server.item.db.ItemDTO", "com.sapienter.jbilling.server.user.ValidatePurchaseWS", "java.math.BigDecimal", "java.util.List", "com.sapienter.jbilling.server.user.tasks.IValidatePurchaseTask", "com.sapienter.jbilling.server.user.balance.ValidatorNone", "com.sapienter.jbilling.server.user.tasks.UserBalanceValidatePurchaseTask", "com.sapienter.jbilling.server.user.balance.ValidatorCreditLimit", "com.sapienter.jbilling.server.util.Constants", "com.sapienter.jbilling.server.user.balance.IUserBalanceValidation"],
    "com.sapienter.jbilling.server.system.event.task.InternalEventsRulesTask": ["com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskException", "com.sapienter.jbilling.server.util.Context", "com.sapienter.jbilling.server.rule.RulesBaseTask", "org.apache.log4j.Logger", "java.util.Map", "com.sapienter.jbilling.server.system.event.task.InternalEventsRulesTask", "org.apache.log4j.Category", "com.sapienter.jbilling.server.pluggableTask.PluggableTask", "com.sapienter.jbilling.server.system.event.Event", "com.sapienter.jbilling.server.system.event.task.IInternalEventsTask", "com.sapienter.jbilling.server.util.Context$Name", "<nulltype>", "java.util.List", "com.sapienter.jbilling.common.SessionInternalError"],
    "com.sapienter.jbilling.server.item.db.ItemDAS": ["com.sapienter.jbilling.server.item.db.ItemDTO", "java.util.List", "org.hibernate.Criteria", "org.hibernate.criterion.Restrictions", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.item.db.ItemDAS"],
    "com.sapienter.jbilling.common.JNDILookup": ["javax.naming.InitialContext", "com.sapienter.jbilling.server.util.Context", "javax.naming.NamingException", "com.sapienter.jbilling.server.util.Context$Name", "<nulltype>", "org.apache.log4j.Logger", "javax.sql.DataSource", "com.sapienter.jbilling.common.JNDILookup", "javax.naming.Context", "java.util.Hashtable", "org.apache.log4j.Category"],
    "com.sapienter.jbilling.server.report.db.parameter.IntegerReportParameterDTO": ["javax.persistence.DiscriminatorValue", "javax.persistence.Entity", "com.sapienter.jbilling.server.report.db.parameter.IntegerReportParameterDTO", "javax.persistence.Transient", "com.sapienter.jbilling.server.report.db.ReportParameterDTO"],
    "com.sapienter.jbilling.server.payment.db.PaymentMethodDAS": ["com.sapienter.jbilling.server.payment.db.PaymentMethodDTO", "com.sapienter.jbilling.server.payment.db.PaymentMethodDAS", "com.sapienter.jbilling.server.util.db.AbstractDAS"],
    "com.sapienter.jbilling.server.order.Usage": ["java.util.Date", "com.sapienter.jbilling.server.order.Usage", "com.sapienter.jbilling.server.order.db.OrderLineDTO", "<nulltype>", "org.apache.log4j.Logger", "java.math.BigDecimal", "java.util.List", "org.apache.log4j.Category"],
    "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskTypeDTO": ["javax.persistence.Entity", "javax.persistence.ManyToOne", "javax.persistence.JoinColumn", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskTypeDTO", "org.hibernate.annotations.CacheConcurrencyStrategy", "org.hibernate.annotations.Cache", "java.io.Serializable", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskTypeCategoryDTO", "org.apache.log4j.Logger", "javax.persistence.Column", "com.sapienter.jbilling.server.util.db.AbstractDescription", "javax.persistence.Table", "com.sapienter.jbilling.server.util.Constants", "javax.persistence.Id"],
    "com.sapienter.jbilling.server.item.tasks.RulesPricingTask2": ["com.sapienter.jbilling.server.user.contact.db.ContactFieldDTO", "com.sapienter.jbilling.server.item.tasks.IPricing", "java.util.Collection", "com.sapienter.jbilling.server.item.PricingField", "com.sapienter.jbilling.server.util.DTOFactory", "com.sapienter.jbilling.server.user.UserDTOEx", "com.sapienter.jbilling.server.item.tasks.RulesPricingTask2", "com.sapienter.jbilling.server.item.tasks.PricingResult", "com.sapienter.jbilling.server.pluggableTask.TaskException", "<nulltype>", "com.sapienter.jbilling.server.rule.RulesBaseTask", "com.sapienter.jbilling.server.order.db.OrderDTO", "org.apache.log4j.Logger", "java.math.BigDecimal", "java.util.List", "com.sapienter.jbilling.server.rule.Result", "com.sapienter.jbilling.server.user.ContactDTOEx", "com.sapienter.jbilling.server.user.ContactBL", "java.util.Hashtable"],
    "com.sapienter.jbilling.server.order.db.OrderPeriodDTO": ["java.util.HashSet", "com.sapienter.jbilling.server.util.db.AbstractDescription", "javax.persistence.Table", "javax.persistence.TableGenerator", "javax.persistence.Version", "javax.persistence.Id", "javax.persistence.Entity", "javax.persistence.ManyToOne", "javax.persistence.CascadeType", "javax.persistence.JoinColumn", "javax.persistence.OneToMany", "java.util.Set", "org.hibernate.annotations.CacheConcurrencyStrategy", "com.sapienter.jbilling.server.order.db.OrderPeriodDTO", "<nulltype>", "org.hibernate.annotations.Cache", "java.io.Serializable", "com.sapienter.jbilling.server.order.db.OrderDTO", "javax.persistence.Column", "javax.persistence.GenerationType", "com.sapienter.jbilling.server.process.db.PeriodUnitDTO", "javax.persistence.GeneratedValue", "javax.persistence.Transient", "javax.persistence.FetchType", "com.sapienter.jbilling.server.user.db.CompanyDTO", "com.sapienter.jbilling.server.util.Constants"],
    "com.sapienter.jbilling.server.invoice.IInvoiceSessionBean": ["byte[]", "com.sapienter.jbilling.server.invoice.IInvoiceSessionBean", "com.sapienter.jbilling.common.SessionInternalError", "java.util.Date", "java.util.Map", "com.sapienter.jbilling.server.invoice.NewInvoiceDTO", "java.util.Set", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO"],
    "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskTypeCategoryDTO": ["javax.persistence.Entity", "org.hibernate.annotations.CacheConcurrencyStrategy", "org.hibernate.annotations.Cache", "java.io.Serializable", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskTypeCategoryDTO", "javax.persistence.Column", "com.sapienter.jbilling.server.util.db.AbstractDescription", "javax.persistence.Table", "javax.persistence.Transient", "com.sapienter.jbilling.server.util.Constants", "javax.persistence.Id"],
    "com.sapienter.jbilling.server.mediation.task.IMediationErrorHandler": ["java.util.List", "com.sapienter.jbilling.server.mediation.task.IMediationErrorHandler", "java.util.Date", "com.sapienter.jbilling.server.mediation.db.MediationConfiguration", "com.sapienter.jbilling.server.mediation.Record", "com.sapienter.jbilling.server.pluggableTask.TaskException"],
    "com.sapienter.jbilling.server.mediation.Format": ["java.util.List", "com.sapienter.jbilling.server.mediation.Format", "com.sapienter.jbilling.server.mediation.FormatField", "<nulltype>", "java.util.ArrayList"],
    "com.sapienter.jbilling.common.SessionInternalError": ["java.io.PrintWriter", "java.io.StringWriter", "<nulltype>", "org.apache.log4j.Logger", "com.sapienter.jbilling.common.SessionInternalError", "org.apache.log4j.Category"],
    "com.sapienter.jbilling.server.user.partner.db.PartnerRange": ["com.sapienter.jbilling.server.user.partner.db.Partner", "javax.persistence.Entity", "javax.persistence.ManyToOne", "javax.persistence.JoinColumn", "java.io.Serializable", "javax.persistence.GenerationType", "javax.persistence.Column", "javax.persistence.Table", "javax.persistence.GeneratedValue", "javax.persistence.TableGenerator", "com.sapienter.jbilling.server.user.partner.db.PartnerRange", "javax.persistence.FetchType", "javax.persistence.Version", "javax.persistence.Id"],
    "com.sapienter.jbilling.server.mediation.task.FixedFileReader": ["<nulltype>", "java.util.ArrayList", "java.util.List", "com.sapienter.jbilling.server.mediation.Format", "com.sapienter.jbilling.common.SessionInternalError", "com.sapienter.jbilling.server.mediation.FormatField", "com.sapienter.jbilling.server.mediation.task.FixedFileReader", "com.sapienter.jbilling.server.mediation.task.AbstractFileReader"],
    "com.sapienter.jbilling.server.user.tasks.AutoRechargeTask": ["com.sapienter.jbilling.server.util.PreferenceBL", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskException", "java.util.Date", "com.sapienter.jbilling.server.pluggableTask.TaskException", "com.sapienter.jbilling.server.user.db.CustomerDTO", "com.sapienter.jbilling.server.payment.PaymentSessionBean", "org.apache.log4j.Logger", "java.math.BigDecimal", "com.sapienter.jbilling.server.user.event.DynamicBalanceChangeEvent", "com.sapienter.jbilling.common.Constants", "org.apache.log4j.Category", "org.springframework.dao.EmptyResultDataAccessException", "com.sapienter.jbilling.server.pluggableTask.PluggableTask", "com.sapienter.jbilling.server.system.event.Event", "com.sapienter.jbilling.server.user.db.UserDTO", "com.sapienter.jbilling.server.payment.PaymentBL", "com.sapienter.jbilling.server.payment.db.PaymentDTO", "com.sapienter.jbilling.server.system.event.task.IInternalEventsTask", "com.sapienter.jbilling.server.user.UserBL", "<nulltype>", "com.sapienter.jbilling.server.payment.PaymentDTOEx", "com.sapienter.jbilling.server.user.db.CompanyDTO", "com.sapienter.jbilling.server.user.tasks.AutoRechargeTask", "com.sapienter.jbilling.server.payment.IPaymentSessionBean"],
    "com.sapienter.jbilling.server.util.api.validation.APIValidator": ["java.util.Arrays", "javax.validation.Validator", "java.util.Set", "<nulltype>", "java.util.ArrayList", "com.sapienter.jbilling.server.util.api.validation.UpdateValidationGroup", "org.apache.log4j.Logger", "com.sapienter.jbilling.server.util.api.validation.CreateValidationGroup", "java.util.List", "org.springframework.aop.MethodBeforeAdvice", "com.sapienter.jbilling.common.SessionInternalError", "javax.validation.ConstraintViolation", "com.sapienter.jbilling.server.util.api.validation.APIValidator"],
    "com.sapienter.jbilling.server.order.OrderLineWS": ["java.util.Date", "javax.validation.constraints.NotNull", "<nulltype>", "java.io.Serializable", "java.math.BigDecimal", "com.sapienter.jbilling.server.item.ItemDTOEx", "com.sapienter.jbilling.server.order.OrderLineWS"],
    "com.sapienter.jbilling.server.provisioning.db.ProvisioningStatusDTO": ["com.sapienter.jbilling.server.provisioning.db.ProvisioningStatusDTO", "javax.persistence.DiscriminatorValue", "javax.persistence.Entity", "com.sapienter.jbilling.server.util.db.AbstractGenericStatus", "javax.persistence.Transient", "com.sapienter.jbilling.server.util.Constants", "java.io.Serializable"],
    "com.sapienter.jbilling.server.util.CurrencyWS": ["com.sapienter.jbilling.server.util.CurrencyWS", "com.sapienter.jbilling.server.util.db.CurrencyDTO", "<nulltype>", "java.io.Serializable", "java.math.BigDecimal", "com.sapienter.jbilling.server.util.db.AbstractDescription"],
    "com.sapienter.jbilling.server.invoice.db.InvoiceStatusDTO": ["javax.persistence.Entity", "com.sapienter.jbilling.server.invoice.db.InvoiceStatusDTO", "com.sapienter.jbilling.server.util.db.AbstractGenericStatus", "java.util.Set", "java.io.Serializable", "java.util.HashSet", "javax.persistence.DiscriminatorValue", "javax.persistence.Transient", "com.sapienter.jbilling.server.util.Constants", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO"],
    "com.sapienter.jbilling.server.invoice.InvoiceIdComparator": ["com.sapienter.jbilling.server.invoice.InvoiceIdComparator", "java.util.Comparator", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO"],
    "com.sapienter.jbilling.server.pluggableTask.BasicLineTotalTask": ["com.sapienter.jbilling.server.pluggableTask.PluggableTask", "com.sapienter.jbilling.server.pluggableTask.BasicLineTotalTask", "com.sapienter.jbilling.server.item.db.ItemTypeDTO", "com.sapienter.jbilling.server.pluggableTask.OrderProcessingTask", "com.sapienter.jbilling.server.item.ItemDecimalsException", "java.util.Set", "com.sapienter.jbilling.server.order.db.OrderLineDTO", "com.sapienter.jbilling.server.pluggableTask.TaskException", "<nulltype>", "com.sapienter.jbilling.server.order.db.OrderDTO", "com.sapienter.jbilling.server.item.db.ItemDTO", "org.apache.log4j.Logger", "java.math.BigDecimal", "java.util.List", "com.sapienter.jbilling.server.item.db.ItemDAS", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.util.Constants", "org.apache.log4j.Category"],
    "com.sapienter.jbilling.server.payment.PaymentAuthorizationDTOEx": ["com.sapienter.jbilling.server.payment.PaymentAuthorizationDTOEx", "com.sapienter.jbilling.server.entity.PaymentAuthorizationDTO", "java.io.Serializable"],
    "com.sapienter.jbilling.server.item.db.ItemPriceDTO": ["com.sapienter.jbilling.server.util.db.CurrencyDTO", "com.sapienter.jbilling.server.item.db.ItemPriceDTO", "com.sapienter.jbilling.server.item.db.ItemDTO", "java.math.BigDecimal", "javax.persistence.Table", "javax.persistence.TableGenerator", "javax.persistence.Version", "javax.persistence.Id", "javax.persistence.Entity", "javax.persistence.ManyToOne", "javax.persistence.JoinColumn", "org.hibernate.annotations.CacheConcurrencyStrategy", "<nulltype>", "org.hibernate.annotations.Cache", "java.io.Serializable", "javax.persistence.Column", "javax.persistence.GenerationType", "javax.persistence.GeneratedValue", "javax.persistence.Transient", "javax.persistence.FetchType"],
    "com.sapienter.jbilling.server.process.db.ProcessRunTotalDAS": ["java.math.BigDecimal", "org.hibernate.Criteria", "org.hibernate.criterion.Restrictions", "com.sapienter.jbilling.server.process.db.ProcessRunTotalDAS", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.process.db.ProcessRunDTO", "java.util.Set", "com.sapienter.jbilling.server.util.db.CurrencyDAS", "com.sapienter.jbilling.server.process.db.ProcessRunTotalDTO"],
    "com.sapienter.jbilling.server.order.db.OrderLineDTO": ["com.sapienter.jbilling.server.provisioning.db.ProvisioningStatusDTO", "java.util.Date", "com.sapienter.jbilling.server.provisioning.db.ProvisioningStatusDAS", "com.sapienter.jbilling.server.mediation.db.MediationRecordLineDTO", "com.sapienter.jbilling.server.order.db.OrderLineDTO", "java.util.ArrayList", "com.sapienter.jbilling.server.item.db.ItemDTO", "com.sapienter.jbilling.server.order.db.OrderLineTypeDAS", "org.apache.log4j.Logger", "java.math.BigDecimal", "com.sapienter.jbilling.server.util.db.AbstractDescription", "javax.persistence.Table", "java.util.Calendar", "com.sapienter.jbilling.common.Constants", "javax.persistence.TableGenerator", "com.sapienter.jbilling.server.order.db.OrderLineTypeDTO", "com.sapienter.jbilling.server.item.db.ItemDAS", "javax.persistence.Version", "org.apache.log4j.Category", "javax.persistence.Id", "javax.persistence.Entity", "javax.persistence.ManyToOne", "javax.persistence.CascadeType", "com.sapienter.jbilling.server.util.db.AbstractGenericStatus", "javax.persistence.JoinColumn", "com.sapienter.jbilling.server.util.db.AbstractGenericStatusDAS", "javax.persistence.OneToMany", "org.hibernate.annotations.Cascade", "<nulltype>", "java.io.Serializable", "com.sapienter.jbilling.server.order.db.OrderDTO", "javax.persistence.Column", "javax.persistence.GenerationType", "java.util.List", "javax.persistence.GeneratedValue", "javax.persistence.Transient", "javax.persistence.FetchType", "com.sapienter.jbilling.server.util.db.AbstractDAS"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentRouterCurrencyTask": ["com.sapienter.jbilling.server.pluggableTask.PluggableTask", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskException", "com.sapienter.jbilling.server.util.db.CurrencyDTO", "com.sapienter.jbilling.server.payment.db.PaymentDTO", "java.util.HashMap", "com.sapienter.jbilling.server.payment.tasks.PaymentRouterCurrencyTask", "<nulltype>", "org.apache.log4j.Logger", "com.sapienter.jbilling.server.payment.tasks.AbstractPaymentRouterTask", "java.util.Map", "com.sapienter.jbilling.server.payment.PaymentDTOEx", "com.sapienter.jbilling.server.pluggableTask.PaymentTask", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO", "org.apache.log4j.Category"],
    "com.sapienter.jbilling.tools.ConvertToBinHexa": ["java.io.PrintStream", "java.sql.Connection", "com.sapienter.jbilling.common.JBCrypto", "com.sapienter.jbilling.server.util.Util", "com.sapienter.jbilling.tools.ConvertToBinHexa", "java.sql.PreparedStatement", "<nulltype>", "org.apache.commons.codec.binary.Base64", "java.sql.SQLException", "java.sql.ResultSet", "java.sql.Statement", "java.sql.DriverManager"],
    "com.sapienter.jbilling.server.pluggableTask.TaskException": ["com.sapienter.jbilling.server.pluggableTask.TaskException"],
    "com.sapienter.jbilling.server.util.audit.db.EventLogDTO": ["java.util.Date", "com.sapienter.jbilling.server.util.audit.db.EventLogMessageDTO", "com.sapienter.jbilling.server.util.audit.db.EventLogDTO", "javax.persistence.Table", "java.util.Calendar", "javax.persistence.TableGenerator", "javax.persistence.Version", "javax.persistence.Id", "javax.persistence.Entity", "com.sapienter.jbilling.server.util.audit.db.EventLogModuleDTO", "javax.persistence.ManyToOne", "com.sapienter.jbilling.server.user.db.UserDTO", "javax.persistence.JoinColumn", "org.hibernate.annotations.CacheConcurrencyStrategy", "<nulltype>", "org.hibernate.annotations.Cache", "java.io.Serializable", "javax.persistence.Column", "javax.persistence.GenerationType", "javax.persistence.GeneratedValue", "javax.persistence.FetchType", "com.sapienter.jbilling.server.user.db.CompanyDTO", "com.sapienter.jbilling.server.util.db.JbillingTable"],
    "com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi": ["com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskException", "java.net.URL", "org.apache.log4j.Logger", "java.math.BigDecimal", "com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi", "java.util.Calendar", "org.w3c.dom.Document", "java.net.URLConnection", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData", "org.w3c.dom.Node", "com.sapienter.jbilling.server.payment.tasks.DublicateProfileRecordException", "org.apache.log4j.Category", "java.io.OutputStream", "org.xml.sax.InputSource", "org.w3c.dom.NodeList", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO", "<nulltype>", "org.w3c.dom.Element", "java.io.StringReader", "javax.xml.parsers.DocumentBuilder", "javax.xml.parsers.DocumentBuilderFactory", "java.io.InputStream"],
    "com.sapienter.jbilling.server.util.IdGenerator": ["com.sapienter.jbilling.server.util.IdGenerator"],
    "com.sapienter.jbilling.server.payment.db.PaymentResultDAS": ["com.sapienter.jbilling.server.payment.db.PaymentResultDAS", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.payment.db.PaymentResultDTO"],
    "com.sapienter.jbilling.server.invoice.NewInvoiceEvent": ["com.sapienter.jbilling.server.system.event.Event", "com.sapienter.jbilling.server.user.db.UserDTO", "com.sapienter.jbilling.server.invoice.NewInvoiceEvent", "com.sapienter.jbilling.server.user.db.CompanyDTO", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO"],
    "com.sapienter.jbilling.server.notification.db.NotificationMessageTypeDAS": ["com.sapienter.jbilling.server.notification.db.NotificationMessageTypeDTO", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.notification.db.NotificationMessageTypeDAS"],
    "com.sapienter.jbilling.server.user.ContactBL": ["com.sapienter.jbilling.server.invoice.InvoiceBL", "com.sapienter.jbilling.server.user.contact.db.ContactTypeDAS", "java.util.Date", "com.sapienter.jbilling.server.util.Context", "javax.naming.NamingException", "com.sapienter.jbilling.server.user.contact.db.ContactTypeDTO", "java.util.ArrayList", "com.sapienter.jbilling.server.user.db.CustomerDTO", "org.apache.log4j.Logger", "com.sapienter.jbilling.server.user.EntityBL", "com.sapienter.jbilling.server.user.ContactDTOEx", "com.sapienter.jbilling.server.user.ContactBL", "com.sapienter.jbilling.server.system.event.EventManager", "java.util.Hashtable", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO", "org.apache.log4j.Category", "com.sapienter.jbilling.server.user.contact.db.ContactFieldDTO", "java.util.Iterator", "com.sapienter.jbilling.server.user.db.UserDTO", "com.sapienter.jbilling.server.util.audit.EventLogger", "java.util.Set", "com.sapienter.jbilling.server.user.event.NewContactEvent", "com.sapienter.jbilling.server.user.contact.db.ContactDTO", "com.sapienter.jbilling.server.user.contact.db.ContactFieldTypeDTO", "com.sapienter.jbilling.server.util.Context$Name", "com.sapienter.jbilling.server.user.UserBL", "<nulltype>", "com.sapienter.jbilling.server.user.contact.db.ContactFieldDAS", "java.util.List", "com.sapienter.jbilling.server.user.contact.db.ContactFieldTypeDAS", "com.sapienter.jbilling.server.user.contact.db.ContactMapDAS", "com.sapienter.jbilling.server.user.contact.db.ContactDAS", "com.sapienter.jbilling.common.SessionInternalError", "com.sapienter.jbilling.server.user.db.CompanyDTO", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.util.db.JbillingTableDAS", "com.sapienter.jbilling.server.user.contact.db.ContactMapDTO", "com.sapienter.jbilling.server.util.Constants"],
    "com.sapienter.jbilling.server.provisioning.task.mmsc.MmscFacadeHandlerResponse": ["javax.xml.bind.annotation.XmlAccessorType", "javax.xml.bind.annotation.XmlType", "com.sapienter.jbilling.server.provisioning.task.mmsc.MmscFacadeHandlerResponse", "com.sapienter.jbilling.server.provisioning.task.mmsc.EfsBaseResponse", "javax.xml.bind.annotation.XmlAccessType"],
    "com.sapienter.jbilling.server.item.IItemSessionBean": ["com.sapienter.jbilling.server.item.db.ItemDTO", "java.util.List", "com.sapienter.jbilling.server.item.IItemSessionBean", "com.sapienter.jbilling.server.util.db.CurrencyDTO", "com.sapienter.jbilling.common.SessionInternalError", "com.sapienter.jbilling.server.item.db.ItemTypeDTO", "com.sapienter.jbilling.server.item.PricingField", "com.sapienter.jbilling.server.util.db.CurrencyDTO[]"],
    "com.sapienter.jbilling.server.util.db.NotificationCategoryDTO": ["javax.persistence.Entity", "com.sapienter.jbilling.server.util.db.NotificationCategoryDTO", "javax.persistence.CascadeType", "javax.persistence.OneToMany", "java.util.Set", "org.hibernate.annotations.CacheConcurrencyStrategy", "org.hibernate.annotations.Cache", "java.io.Serializable", "java.util.HashSet", "com.sapienter.jbilling.server.notification.db.NotificationMessageTypeDTO", "javax.persistence.Column", "com.sapienter.jbilling.server.util.db.AbstractDescription", "javax.persistence.Table", "javax.persistence.Transient", "javax.persistence.FetchType", "com.sapienter.jbilling.server.util.Constants", "javax.persistence.Id"],
    "com.sapienter.jbilling.server.provisioning.config.Request": ["com.sapienter.jbilling.server.provisioning.config.Request", "<nulltype>"],
    "com.sapienter.jbilling.server.system.event.task.IInternalEventsTask": ["com.sapienter.jbilling.server.system.event.Event", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskException", "com.sapienter.jbilling.server.system.event.task.IInternalEventsTask"],
    "com.sapienter.jbilling.server.order.task.RefundOnCancelTask": ["java.util.Date", "com.sapienter.jbilling.server.item.ItemDecimalsException", "com.sapienter.jbilling.server.order.db.OrderLineDTO", "com.sapienter.jbilling.server.order.db.OrderLineTypeDAS", "com.sapienter.jbilling.server.item.db.ItemDTO", "org.apache.log4j.Logger", "java.math.BigDecimal", "com.sapienter.jbilling.server.util.db.AbstractDescription", "com.sapienter.jbilling.server.order.db.OrderStatusDAS", "java.util.ResourceBundle", "com.sapienter.jbilling.server.order.task.RefundOnCancelTask$EventType", "java.util.Map", "com.sapienter.jbilling.server.item.db.ItemDAS", "com.sapienter.jbilling.server.order.event.NewQuantityEvent", "org.apache.log4j.Category", "com.sapienter.jbilling.server.order.OrderBL", "com.sapienter.jbilling.server.pluggableTask.PluggableTask", "com.sapienter.jbilling.server.system.event.Event", "com.sapienter.jbilling.server.user.db.UserDTO", "com.sapienter.jbilling.server.util.db.AbstractGenericStatusDAS", "com.sapienter.jbilling.server.system.event.task.IInternalEventsTask", "java.util.Set", "com.sapienter.jbilling.server.util.audit.EventLogger", "com.sapienter.jbilling.server.order.task.RefundOnCancelTask", "com.sapienter.jbilling.server.item.ItemBL", "com.sapienter.jbilling.server.user.UserBL", "<nulltype>", "com.sapienter.jbilling.server.order.db.OrderDTO", "java.util.List", "com.sapienter.jbilling.server.order.event.PeriodCancelledEvent", "com.sapienter.jbilling.common.SessionInternalError", "com.sapienter.jbilling.server.user.db.CompanyDTO", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.order.db.OrderDAS", "com.sapienter.jbilling.server.util.Constants"],
    "com.sapienter.jbilling.server.user.contact.db.ContactFieldDAS": ["com.sapienter.jbilling.server.user.contact.db.ContactFieldDTO", "com.sapienter.jbilling.server.util.db.AbstractDAS", "org.hibernate.Query", "com.sapienter.jbilling.server.user.contact.db.ContactFieldDAS"],
    "com.sapienter.jbilling.server.util.PreferenceWS": ["<nulltype>", "java.io.Serializable", "com.sapienter.jbilling.server.util.db.PreferenceTypeDTO", "com.sapienter.jbilling.server.util.PreferenceWS", "com.sapienter.jbilling.server.util.db.PreferenceDTO", "com.sapienter.jbilling.server.util.PreferenceTypeWS", "com.sapienter.jbilling.server.util.db.JbillingTable"],
    "com.sapienter.jbilling.server.invoice.InvoiceEntityComparator": ["com.sapienter.jbilling.server.invoice.InvoiceEntityComparator", "java.util.Comparator", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO"],
    "com.sapienter.jbilling.tools.UploadData": ["java.util.Date", "com.sapienter.jbilling.server.order.db.OrderLineDTO", "com.sapienter.jbilling.server.user.db.CustomerDTO", "com.sapienter.jbilling.server.item.db.ItemDTO", "java.math.BigDecimal", "com.sapienter.jbilling.server.util.db.AbstractDescription", "com.sapienter.jbilling.common.Constants", "com.sapienter.jbilling.common.Util", "com.sapienter.jbilling.server.user.ContactDTOEx", "java.util.Hashtable", "java.io.PrintStream", "com.sapienter.jbilling.server.item.IItemSessionBean", "java.util.Properties", "com.sapienter.jbilling.server.user.contact.db.ContactFieldDTO", "com.sapienter.jbilling.server.user.db.UserDTO", "com.sapienter.jbilling.server.item.db.ItemTypeDTO", "java.util.Set", "com.sapienter.jbilling.server.user.IUserSessionBean", "java.io.IOException", "com.sapienter.jbilling.server.user.UserDTOEx", "java.io.FileInputStream", "com.sapienter.jbilling.server.user.contact.db.ContactFieldTypeDTO", "com.sapienter.jbilling.server.user.contact.db.ContactDTO", "<nulltype>", "com.sapienter.jbilling.server.user.permisson.db.RoleDTO", "com.sapienter.jbilling.server.order.db.OrderDTO", "com.sapienter.jbilling.tools.UploadData", "com.sapienter.jbilling.server.user.db.CreditCardDTO", "com.sapienter.jbilling.server.user.db.CompanyDTO", "java.io.BufferedReader", "java.io.FileReader", "com.sapienter.jbilling.server.order.IOrderSessionBean"],
    "com.sapienter.jbilling.server.mediation.task.SaveToFileMediationErrorHandler": ["java.util.Date", "com.sapienter.jbilling.server.item.PricingField", "com.sapienter.jbilling.server.mediation.Record", "java.text.SimpleDateFormat", "com.sapienter.jbilling.server.util.Util", "com.sapienter.jbilling.server.pluggableTask.TaskException", "java.util.ArrayList", "org.apache.log4j.Logger", "com.sapienter.jbilling.server.mediation.db.MediationConfiguration", "com.sapienter.jbilling.common.Util", "java.util.Map", "java.io.OutputStreamWriter", "java.text.DateFormat", "org.apache.log4j.Category", "com.sapienter.jbilling.server.pluggableTask.PluggableTask", "java.io.FileWriter", "java.io.IOException", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription$Type", "java.io.File", "<nulltype>", "java.util.List", "com.sapienter.jbilling.server.mediation.task.IMediationErrorHandler", "com.sapienter.jbilling.server.mediation.task.SaveToFileMediationErrorHandler", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription", "java.io.Writer"],
    "com.sapienter.jbilling.server.process.ProcessSQL": ["com.sapienter.jbilling.server.process.ProcessSQL"],
    "com.sapienter.jbilling.server.process.BillingProcessRunBL": ["java.sql.Connection", "com.sapienter.jbilling.server.process.db.ProcessRunTotalPmDTO", "com.sapienter.jbilling.server.util.db.CurrencyDTO", "java.util.Date", "com.sapienter.jbilling.server.process.db.ProcessRunTotalDAS", "javax.mail.MessagingException", "com.sapienter.jbilling.server.process.db.ProcessRunUserDAS", "org.apache.log4j.Logger", "java.math.BigDecimal", "com.sapienter.jbilling.server.process.db.ProcessRunDAS", "com.sapienter.jbilling.server.util.db.AbstractDescription", "com.sapienter.jbilling.server.process.db.BillingProcessDTO", "com.sapienter.jbilling.common.Constants", "javax.sql.rowset.CachedRowSet", "com.sapienter.jbilling.server.process.BillingProcessRunTotalDTOEx", "org.apache.log4j.Category", "com.sapienter.jbilling.server.item.CurrencyBL", "com.sapienter.jbilling.server.process.db.ProcessRunStatusDAS", "java.util.Set", "java.util.List", "com.sapienter.jbilling.server.process.ProcessSQL", "com.sapienter.jbilling.server.process.BillingProcessRunBL", "com.sapienter.jbilling.server.process.db.ProcessRunUserDTO", "com.sapienter.jbilling.server.process.db.BillingProcessDAS", "com.sapienter.jbilling.server.process.BillingProcessRunBL$DateComparator", "java.sql.SQLException", "java.util.Calendar", "com.sapienter.jbilling.server.list.ResultList", "javax.sql.RowSet", "com.sapienter.jbilling.server.process.db.ProcessRunDTO", "com.sapienter.jbilling.server.process.BillingProcessBL", "com.sapienter.jbilling.server.process.db.ProcessRunTotalPmDAS", "java.util.Hashtable", "com.sapienter.jbilling.server.process.db.ProcessRunTotalDTO", "com.sapienter.jbilling.server.process.BillingProcessRunDTOEx", "com.sapienter.jbilling.server.payment.db.PaymentMethodDAS", "java.util.Iterator", "com.sapienter.jbilling.server.util.db.AbstractGenericStatus", "com.sapienter.jbilling.server.util.db.AbstractGenericStatusDAS", "java.io.IOException", "<nulltype>", "com.sapienter.jbilling.server.process.db.ProcessRunStatusDTO", "com.sapienter.jbilling.server.notification.NotificationBL", "com.sapienter.jbilling.common.SessionInternalError", "com.sapienter.jbilling.server.util.db.AbstractDAS", "java.util.Comparator"],
    "com.sapienter.jbilling.server.invoice.task.FileInvoiceExportTask": ["com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskException", "java.text.SimpleDateFormat", "org.apache.log4j.Logger", "java.math.BigDecimal", "com.sapienter.jbilling.common.Util", "java.util.Map", "com.sapienter.jbilling.server.invoice.NewInvoiceEvent", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO", "com.sapienter.jbilling.server.user.ContactBL", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO", "java.text.DateFormat", "org.apache.log4j.Category", "com.sapienter.jbilling.server.pluggableTask.PluggableTask", "com.sapienter.jbilling.server.system.event.Event", "java.io.BufferedWriter", "java.math.MathContext", "com.sapienter.jbilling.server.system.event.task.IInternalEventsTask", "java.io.FileWriter", "java.io.IOException", "com.sapienter.jbilling.server.user.contact.db.ContactDTO", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription$Type", "com.sapienter.jbilling.server.user.UserBL", "<nulltype>", "java.io.File", "java.util.List", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription", "java.io.Writer", "com.sapienter.jbilling.server.invoice.task.FileInvoiceExportTask"],
    "com.sapienter.jbilling.server.user.PartnerRangeComparator": ["com.sapienter.jbilling.server.user.partner.db.PartnerRange", "java.util.Comparator", "com.sapienter.jbilling.server.user.PartnerRangeComparator"],
    "com.sapienter.jbilling.server.provisioning.task.mmsc.GetCustomerResponse": ["javax.xml.bind.annotation.XmlAccessorType", "com.sapienter.jbilling.server.provisioning.task.mmsc.GetCustomerResponse$CustomerData$Entry", "<nulltype>", "com.sapienter.jbilling.server.provisioning.task.mmsc.EfsBaseResponse", "java.util.ArrayList", "javax.xml.bind.annotation.XmlAccessType", "java.util.List", "javax.xml.bind.annotation.XmlType", "com.sapienter.jbilling.server.provisioning.task.mmsc.GetCustomerResponse$CustomerData", "com.sapienter.jbilling.server.provisioning.task.mmsc.GetCustomerResponse", "javax.xml.bind.annotation.XmlElement"],
    "com.sapienter.jbilling.server.notification.db.NotificationMessageSectionDAS": ["com.sapienter.jbilling.server.notification.db.NotificationMessageSectionDTO", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.notification.db.NotificationMessageSectionDAS"],
    "com.sapienter.jbilling.server.payment.event.PaymentFailedEvent": ["com.sapienter.jbilling.server.payment.PaymentDTOEx", "com.sapienter.jbilling.server.payment.event.AbstractPaymentEvent", "com.sapienter.jbilling.server.payment.event.PaymentFailedEvent"],
    "com.sapienter.jbilling.server.provisioning.task.TestMMSCCommunication": ["com.sapienter.jbilling.server.provisioning.task.TestMMSCCommunication", "com.sapienter.jbilling.server.provisioning.task.mmsc.EfsBaseRequest", "com.sapienter.jbilling.server.provisioning.task.mmsc.AddCustomerRequest", "com.sapienter.jbilling.server.provisioning.task.mmsc.GetCustomerRequest", "com.sapienter.jbilling.server.provisioning.task.mmsc.DeleteCustomerRequest", "com.sapienter.jbilling.server.provisioning.task.MMSCProvisioningTask", "<nulltype>", "com.sapienter.jbilling.server.provisioning.task.mmsc.EfsBaseResponse", "org.apache.log4j.Logger", "com.sapienter.jbilling.server.provisioning.task.mmsc.MMSCException_Exception", "com.sapienter.jbilling.server.provisioning.task.mmsc.IMMSCHandlerFacade", "com.sapienter.jbilling.server.provisioning.task.mmsc.ModifyCustomerRequest", "com.sapienter.jbilling.server.provisioning.task.mmsc.MmscFacadeHandlerResponse", "com.sapienter.jbilling.server.provisioning.task.mmsc.GetCustomerResponse", "org.apache.log4j.Category"],
    "com.sapienter.jbilling.server.user.db.CustomerDAS": ["com.sapienter.jbilling.server.user.db.CustomerDAS", "com.sapienter.jbilling.server.invoice.db.InvoiceDeliveryMethodDAS", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.util.Constants", "com.sapienter.jbilling.server.user.db.CustomerDTO"],
    "com.sapienter.jbilling.server.invoice.InvoiceBL": ["com.sapienter.jbilling.server.util.PreferenceBL", "com.sapienter.jbilling.server.user.db.CompanyDAS", "java.sql.Connection", "com.sapienter.jbilling.server.util.db.CurrencyDTO", "java.util.Date", "com.sapienter.jbilling.server.payment.db.PaymentInvoiceMapDAS", "com.sapienter.jbilling.server.util.Context", "com.sapienter.jbilling.server.user.db.CustomerDTO", "com.sapienter.jbilling.server.item.db.ItemDTO", "org.apache.log4j.Logger", "java.math.BigDecimal", "com.sapienter.jbilling.server.util.db.AbstractDescription", "com.sapienter.jbilling.server.process.db.BillingProcessDTO", "java.util.Locale", "java.sql.ResultSet", "com.sapienter.jbilling.server.invoice.db.InvoiceDAS", "javax.sql.rowset.CachedRowSet", "com.sapienter.jbilling.server.invoice.NewInvoiceEvent", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO", "com.sapienter.jbilling.server.user.ContactBL", "org.springframework.dao.EmptyResultDataAccessException", "org.apache.log4j.Category", "com.sapienter.jbilling.server.order.OrderBL", "com.sapienter.jbilling.server.item.CurrencyBL", "java.util.GregorianCalendar", "com.sapienter.jbilling.server.user.db.UserDTO", "com.sapienter.jbilling.server.payment.db.PaymentDTO", "java.util.Collection", "com.sapienter.jbilling.server.util.audit.EventLogger", "java.util.Set", "com.sapienter.jbilling.server.item.ItemBL", "com.sapienter.jbilling.server.util.Context$Name", "com.sapienter.jbilling.server.invoice.InvoiceLineComparator", "java.io.Serializable", "com.sapienter.jbilling.server.invoice.InvoiceWS", "com.sapienter.jbilling.server.order.db.OrderDTO", "java.util.List", "com.sapienter.jbilling.server.invoice.NewInvoiceDTO", "com.sapienter.jbilling.server.invoice.InvoiceBL", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDAS", "com.sapienter.jbilling.server.invoice.InvoiceSQL", "com.sapienter.jbilling.server.notification.INotificationSessionBean", "com.sapienter.jbilling.server.notification.NotificationNotFoundException", "com.sapienter.jbilling.server.notification.MessageDTO", "com.sapienter.jbilling.server.order.db.OrderProcessDAS", "com.sapienter.jbilling.server.payment.db.PaymentInvoiceMapDTO", "java.util.ArrayList", "com.sapienter.jbilling.server.user.EntityBL", "java.sql.SQLException", "java.util.Calendar", "java.util.ResourceBundle", "com.sapienter.jbilling.common.Util", "com.sapienter.jbilling.server.list.ResultList", "javax.sql.RowSet", "com.sapienter.jbilling.server.invoice.InvoiceWS[]", "com.sapienter.jbilling.server.system.event.EventManager", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO", "java.util.Iterator", "com.sapienter.jbilling.server.util.db.AbstractGenericStatus", "com.sapienter.jbilling.server.payment.PaymentBL", "com.sapienter.jbilling.server.user.contact.db.ContactDTO", "com.sapienter.jbilling.server.user.UserBL", "<nulltype>", "java.sql.Date", "com.sapienter.jbilling.server.order.db.OrderProcessDTO", "com.sapienter.jbilling.server.entity.InvoiceLineDTO", "com.sapienter.jbilling.server.notification.NotificationBL", "com.sapienter.jbilling.common.SessionInternalError", "com.sapienter.jbilling.server.user.db.CompanyDTO", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.util.Constants", "java.util.Collections"],
    "com.sapienter.jbilling.server.process.db.ProcessRunUserDTO": ["com.sapienter.jbilling.server.process.db.ProcessRunUserDTO", "com.sapienter.jbilling.server.process.db.Id", "com.sapienter.jbilling.server.user.db.UserDTO", "FetchType", "java.util.Date", "com.sapienter.jbilling.server.process.db.GeneratedValue", "com.sapienter.jbilling.server.process.db.TableGenerator", "com.sapienter.jbilling.server.process.db.JoinColumn", "com.sapienter.jbilling.server.process.db.Table", "com.sapienter.jbilling.server.process.db.ManyToOne", "com.sapienter.jbilling.server.process.db.Column", "java.io.Serializable", "GenerationType", "com.sapienter.jbilling.server.process.db.Version", "com.sapienter.jbilling.server.process.db.ProcessRunDTO", "com.sapienter.jbilling.server.process.db.Entity"],
    "com.sapienter.jbilling.server.provisioning.ProvisioningProcessBL": ["com.sapienter.jbilling.server.provisioning.ProvisioningProcessBL", "java.util.Iterator", "com.sapienter.jbilling.server.user.db.UserDTO", "com.sapienter.jbilling.server.provisioning.event.SubscriptionInactiveEvent", "com.sapienter.jbilling.server.order.db.OrderLineDTO", "<nulltype>", "com.sapienter.jbilling.server.order.db.OrderDTO", "org.apache.log4j.Logger", "java.util.List", "com.sapienter.jbilling.common.Constants", "com.sapienter.jbilling.server.order.db.OrderDAS", "com.sapienter.jbilling.server.user.db.CompanyDTO", "com.sapienter.jbilling.server.provisioning.event.SubscriptionActiveEvent", "com.sapienter.jbilling.server.system.event.EventManager", "org.apache.log4j.Category"],
    "com.sapienter.jbilling.server.invoice.InvoiceSQL": ["com.sapienter.jbilling.server.invoice.InvoiceSQL"],
    "com.sapienter.jbilling.server.pluggableTask.InvoiceCompositionTask": ["java.math.BigDecimal", "com.sapienter.jbilling.server.pluggableTask.InvoiceCompositionTask", "com.sapienter.jbilling.server.invoice.NewInvoiceDTO", "com.sapienter.jbilling.server.pluggableTask.TaskException", "com.sapienter.jbilling.server.process.PeriodOfTime"],
    "com.sapienter.jbilling.server.process.db.AgeingEntityStepDTO": ["com.sapienter.jbilling.server.process.db.AgeingEntityStepDTO", "com.sapienter.jbilling.server.util.db.AbstractDescription", "javax.persistence.Table", "javax.persistence.TableGenerator", "com.sapienter.jbilling.server.user.db.UserStatusDTO", "javax.persistence.Version", "javax.persistence.Id", "javax.persistence.Entity", "javax.persistence.ManyToOne", "javax.persistence.JoinColumn", "org.hibernate.annotations.CacheConcurrencyStrategy", "<nulltype>", "org.hibernate.annotations.Cache", "java.io.Serializable", "javax.persistence.Column", "javax.persistence.GenerationType", "javax.persistence.GeneratedValue", "javax.persistence.Transient", "javax.persistence.FetchType", "com.sapienter.jbilling.server.user.db.CompanyDTO", "com.sapienter.jbilling.server.util.Constants"],
    "com.sapienter.jbilling.server.rule.task.VelocityRulesGeneratorTask": ["com.sapienter.jbilling.server.pluggableTask.PluggableTask", "com.sapienter.jbilling.server.rule.task.VelocityRulesGeneratorTask", "java.io.StringWriter", "java.util.HashMap", "org.apache.velocity.VelocityContext", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription$Type", "com.sapienter.jbilling.server.pluggableTask.TaskException", "<nulltype>", "java.io.File", "org.apache.log4j.Logger", "java.util.List", "org.apache.velocity.app.VelocityEngine", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription", "java.util.Map", "com.sapienter.jbilling.server.rule.task.AbstractGeneratorTask", "org.apache.log4j.Category"],
    "com.sapienter.jbilling.server.mediation.MediationRecordWS": ["com.sapienter.jbilling.server.mediation.MediationRecordLineWS", "com.sapienter.jbilling.server.util.db.AbstractGenericStatus", "java.util.Date", "com.sapienter.jbilling.server.mediation.MediationRecordWS", "<nulltype>", "java.io.Serializable", "java.util.ArrayList", "com.sapienter.jbilling.server.mediation.db.MediationProcess", "java.util.List", "com.sapienter.jbilling.server.mediation.db.MediationRecordDTO"],
    "com.sapienter.jbilling.server.util.DTOFactory": ["com.sapienter.jbilling.server.invoice.InvoiceBL", "com.sapienter.jbilling.server.util.db.CurrencyDTO", "com.sapienter.jbilling.server.util.DTOFactory", "javax.naming.NamingException", "org.apache.log4j.Logger", "com.sapienter.jbilling.server.util.db.AbstractDescription", "java.util.Locale", "com.sapienter.jbilling.server.user.partner.PartnerBL", "org.apache.log4j.Category", "com.sapienter.jbilling.server.util.db.LanguageDTO", "com.sapienter.jbilling.server.item.CurrencyBL", "java.util.Iterator", "com.sapienter.jbilling.server.user.db.UserDTO", "com.sapienter.jbilling.server.util.db.AbstractGenericStatus", "com.sapienter.jbilling.server.util.db.LanguageDAS", "com.sapienter.jbilling.server.payment.blacklist.BlacklistBL", "java.util.Set", "com.sapienter.jbilling.server.user.UserDTOEx", "com.sapienter.jbilling.server.user.db.UserDAS", "com.sapienter.jbilling.server.user.UserBL", "<nulltype>", "com.sapienter.jbilling.server.user.permisson.db.RoleDTO", "com.sapienter.jbilling.server.user.db.AchDTO", "com.sapienter.jbilling.common.SessionInternalError", "com.sapienter.jbilling.server.user.AchBL", "com.sapienter.jbilling.server.user.db.CompanyDTO", "com.sapienter.jbilling.server.util.db.AbstractDAS"],
    "com.sapienter.jbilling.server.payment.blacklist.UserIdFilter": ["com.sapienter.jbilling.server.payment.blacklist.UserIdFilter", "com.sapienter.jbilling.server.util.Util", "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDAS", "com.sapienter.jbilling.server.payment.blacklist.BlacklistFilter$Result", "com.sapienter.jbilling.server.payment.blacklist.BlacklistFilter", "<nulltype>", "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDTO", "java.util.List", "java.util.ResourceBundle", "com.sapienter.jbilling.server.payment.PaymentDTOEx"],
    "com.sapienter.jbilling.server.user.contact.db.ContactTypeDTO": ["com.sapienter.jbilling.server.user.contact.db.ContactTypeDTO", "java.util.HashSet", "com.sapienter.jbilling.server.util.db.AbstractDescription", "javax.persistence.Table", "javax.persistence.TableGenerator", "javax.persistence.Version", "javax.persistence.Id", "javax.persistence.Entity", "javax.persistence.ManyToOne", "javax.persistence.CascadeType", "javax.persistence.JoinColumn", "javax.persistence.OneToMany", "java.util.Set", "org.hibernate.annotations.CacheConcurrencyStrategy", "<nulltype>", "org.hibernate.annotations.Cache", "java.io.Serializable", "javax.persistence.Column", "javax.persistence.GenerationType", "javax.persistence.GeneratedValue", "javax.persistence.Transient", "javax.persistence.FetchType", "com.sapienter.jbilling.server.user.db.CompanyDTO", "com.sapienter.jbilling.server.user.contact.db.ContactMapDTO", "com.sapienter.jbilling.server.util.Constants"],
    "com.sapienter.jbilling.server.util.audit.db.EventLogMessageDTO": ["javax.persistence.Entity", "javax.persistence.CascadeType", "javax.persistence.OneToMany", "java.util.Set", "org.hibernate.annotations.CacheConcurrencyStrategy", "com.sapienter.jbilling.server.util.audit.db.EventLogMessageDTO", "org.hibernate.annotations.Cache", "java.util.HashSet", "javax.persistence.Column", "com.sapienter.jbilling.server.util.db.AbstractDescription", "com.sapienter.jbilling.server.util.audit.db.EventLogDTO", "javax.persistence.Table", "javax.persistence.FetchType", "com.sapienter.jbilling.server.util.Constants", "javax.persistence.Id"],
    "com.sapienter.jbilling.server.payment.PaymentSessionBean": ["com.sapienter.jbilling.server.util.PreferenceBL", "com.sapienter.jbilling.server.user.partner.db.Partner", "com.sapienter.jbilling.server.util.db.CurrencyDTO", "java.util.Date", "com.sapienter.jbilling.server.util.Context", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO", "com.sapienter.jbilling.server.user.db.CustomerDTO", "org.apache.log4j.Logger", "java.math.BigDecimal", "com.sapienter.jbilling.server.payment.db.PaymentMethodDTO", "com.sapienter.jbilling.server.payment.blacklist.CsvProcessor", "com.sapienter.jbilling.server.payment.db.PaymentResultDAS", "com.sapienter.jbilling.server.process.AgeingBL", "org.springframework.dao.EmptyResultDataAccessException", "org.apache.log4j.Category", "com.sapienter.jbilling.server.item.CurrencyBL", "com.sapienter.jbilling.server.user.db.UserDTO", "com.sapienter.jbilling.server.payment.db.PaymentDTO", "com.sapienter.jbilling.server.payment.blacklist.CsvProcessor$ParseException", "com.sapienter.jbilling.server.util.audit.EventLogger", "com.sapienter.jbilling.server.util.Context$Name", "java.util.List", "com.sapienter.jbilling.server.payment.PaymentDTOEx", "com.sapienter.jbilling.server.payment.event.PaymentFailedEvent", "com.sapienter.jbilling.server.invoice.InvoiceBL", "com.sapienter.jbilling.server.notification.INotificationSessionBean", "com.sapienter.jbilling.server.payment.event.PaymentSuccessfulEvent", "com.sapienter.jbilling.server.notification.MessageDTO", "java.util.ArrayList", "com.sapienter.jbilling.server.payment.PaymentSessionBean", "java.sql.SQLException", "java.util.Calendar", "com.sapienter.jbilling.server.process.ConfigurationBL", "org.springframework.transaction.annotation.Propagation", "com.sapienter.jbilling.server.payment.db.PaymentResultDTO", "com.sapienter.jbilling.server.system.event.EventManager", "com.sapienter.jbilling.server.user.partner.PartnerBL", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO", "com.sapienter.jbilling.server.util.db.CurrencyDAS", "com.sapienter.jbilling.server.payment.db.PaymentMethodDAS", "com.sapienter.jbilling.server.payment.PaymentBL", "com.sapienter.jbilling.server.user.db.UserDAS", "com.sapienter.jbilling.server.user.UserBL", "<nulltype>", "com.sapienter.jbilling.server.notification.NotificationBL", "com.sapienter.jbilling.common.SessionInternalError", "com.sapienter.jbilling.server.user.db.CompanyDTO", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.payment.IPaymentSessionBean", "com.sapienter.jbilling.server.util.Constants", "org.springframework.transaction.annotation.Transactional"],
    "com.sapienter.jbilling.client.authentication.CompanyUserRememberMeFilter": ["com.sapienter.jbilling.client.authentication.CompanyUserDetails", "javax.servlet.http.HttpServletRequest", "com.sapienter.jbilling.client.authentication.CompanyUserRememberMeFilter", "com.sapienter.jbilling.client.authentication.util.SecuritySession", "javax.servlet.http.HttpServletResponse", "org.springframework.security.core.AuthenticationException", "org.springframework.security.core.Authentication", "<nulltype>", "org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter"],
    "com.sapienter.jbilling.server.notification.db.NotificationMessageArchDTO": ["java.util.Date", "com.sapienter.jbilling.server.notification.db.NotificationMessageArchLineDTO", "java.util.HashSet", "javax.persistence.Table", "com.sapienter.jbilling.server.notification.db.NotificationMessageArchDTO", "javax.persistence.TableGenerator", "javax.persistence.Version", "javax.persistence.Id", "javax.persistence.Entity", "javax.persistence.ManyToOne", "javax.persistence.CascadeType", "com.sapienter.jbilling.server.user.db.UserDTO", "javax.persistence.JoinColumn", "javax.persistence.OneToMany", "java.util.Set", "java.io.Serializable", "javax.persistence.Column", "javax.persistence.GenerationType", "javax.persistence.GeneratedValue", "javax.persistence.FetchType"],
    "com.sapienter.jbilling.server.entity.PaymentAuthorizationDTO": ["java.util.Date", "<nulltype>", "java.io.Serializable", "javax.xml.bind.annotation.XmlType", "com.sapienter.jbilling.server.entity.PaymentAuthorizationDTO"],
    "com.sapienter.jbilling.server.item.db.ItemTypeDAS": ["org.hibernate.Criteria", "org.hibernate.criterion.Restrictions", "com.sapienter.jbilling.server.item.db.ItemTypeDTO", "com.sapienter.jbilling.server.util.db.AbstractDAS", "org.hibernate.criterion.Projections", "com.sapienter.jbilling.server.item.db.ItemTypeDAS", "<nulltype>"],
    "com.sapienter.jbilling.server.provisioning.task.mmsc.AddCustomerResponse": ["javax.xml.bind.annotation.XmlAccessorType", "javax.xml.bind.annotation.XmlType", "com.sapienter.jbilling.server.provisioning.task.mmsc.MmscFacadeHandlerResponse", "com.sapienter.jbilling.server.provisioning.task.mmsc.AddCustomerResponse", "javax.xml.bind.annotation.XmlElement", "javax.xml.bind.annotation.XmlAccessType"],
    "com.sapienter.jbilling.tools.RulesGenerator": ["java.util.HashMap", "com.sapienter.jbilling.server.util.Util", "org.apache.log4j.Logger", "org.apache.velocity.app.VelocityEngine", "java.util.Map", "java.io.OutputStreamWriter", "com.sapienter.jbilling.tools.RulesGenerator", "org.apache.log4j.Category", "java.io.PrintStream", "java.io.FileWriter", "java.io.IOException", "java.io.Reader", "org.apache.velocity.VelocityContext", "java.io.File", "<nulltype>", "java.io.FileReader", "java.io.BufferedReader"],
    "com.sapienter.jbilling.server.invoice.db.InvoiceDeliveryMethodDAS": ["com.sapienter.jbilling.server.invoice.db.InvoiceDeliveryMethodDAS", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.invoice.db.InvoiceDeliveryMethodDTO"],
    "com.sapienter.jbilling.server.process.task.AbstractBackwardSimpleScheduledTask": ["org.apache.commons.lang.StringUtils", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskException", "com.sapienter.jbilling.server.process.task.AbstractSimpleScheduledTask", "java.util.Date", "org.apache.log4j.Logger", "com.sapienter.jbilling.common.Util", "java.util.Map", "org.quartz.SimpleTrigger", "java.text.ParseException", "java.text.DateFormat", "org.apache.log4j.Category", "org.quartz.JobExecutionContext", "com.sapienter.jbilling.server.process.task.AbstractBackwardSimpleScheduledTask", "com.sapienter.jbilling.server.pluggableTask.PluggableTask", "org.quartz.JobExecutionException", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription", "com.sapienter.jbilling.server.process.task.ScheduledTask"],
    "com.sapienter.jbilling.server.util.db.CurrencyExchangeDTO": ["javax.persistence.Entity", "com.sapienter.jbilling.server.util.db.CurrencyExchangeDTO", "javax.persistence.ManyToOne", "com.sapienter.jbilling.server.util.db.CurrencyDTO", "java.util.Date", "javax.persistence.JoinColumn", "org.hibernate.annotations.CacheConcurrencyStrategy", "org.hibernate.annotations.Cache", "java.io.Serializable", "java.math.BigDecimal", "javax.persistence.GenerationType", "javax.persistence.Column", "javax.persistence.Table", "javax.persistence.GeneratedValue", "javax.persistence.TableGenerator", "javax.persistence.FetchType", "javax.persistence.Version", "javax.persistence.Id"],
    "com.sapienter.jbilling.server.mediation.MediationRecordLineWS": ["com.sapienter.jbilling.server.mediation.MediationRecordLineWS", "java.util.Date", "com.sapienter.jbilling.server.mediation.db.MediationRecordLineDTO", "com.sapienter.jbilling.server.order.db.OrderLineDTO", "<nulltype>", "java.io.Serializable", "java.math.BigDecimal"],
    "com.sapienter.jbilling.server.util.db.AbstractGenericStatus": ["javax.persistence.Entity", "javax.persistence.InheritanceType", "javax.persistence.DiscriminatorType", "com.sapienter.jbilling.server.util.db.AbstractGenericStatus", "org.hibernate.annotations.CacheConcurrencyStrategy", "org.hibernate.annotations.Cache", "javax.persistence.Column", "com.sapienter.jbilling.server.util.db.AbstractDescription", "javax.persistence.Table", "javax.persistence.Inheritance", "javax.persistence.DiscriminatorColumn", "javax.persistence.Id"],
    "com.sapienter.jbilling.server.util.db.CountryDTO": ["javax.persistence.Entity", "com.sapienter.jbilling.server.util.db.CountryDTO", "org.hibernate.annotations.CacheConcurrencyStrategy", "org.hibernate.annotations.Cache", "java.io.Serializable", "javax.persistence.Column", "com.sapienter.jbilling.server.util.db.AbstractDescription", "javax.persistence.Table", "javax.persistence.Transient", "com.sapienter.jbilling.server.util.Constants", "javax.persistence.Id"],
    "com.sapienter.jbilling.server.user.db.UserDAS": ["com.sapienter.jbilling.common.CommonConstants", "org.hibernate.Criteria", "com.sapienter.jbilling.server.user.db.UserDTO", "org.hibernate.criterion.Restrictions", "com.sapienter.jbilling.server.user.UserDTOEx", "com.sapienter.jbilling.server.user.db.UserDAS", "<nulltype>", "org.apache.log4j.Logger", "java.util.List", "com.sapienter.jbilling.server.util.db.AbstractDAS", "org.hibernate.Query", "org.apache.log4j.Category"],
    "com.sapienter.jbilling.server.process.task.IBillingProcessFilterTask": ["org.hibernate.ScrollableResults", "java.util.Date", "com.sapienter.jbilling.server.process.task.IBillingProcessFilterTask"],
    "com.sapienter.jbilling.server.order.db.OrderProcessDTO": ["java.util.Date", "com.sapienter.jbilling.server.process.db.BillingProcessDTO", "javax.persistence.Table", "javax.persistence.TableGenerator", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO", "javax.persistence.Version", "javax.persistence.Id", "javax.persistence.Entity", "javax.persistence.ManyToOne", "javax.persistence.JoinColumn", "org.hibernate.annotations.CacheConcurrencyStrategy", "org.hibernate.annotations.Cache", "java.io.Serializable", "com.sapienter.jbilling.server.order.db.OrderDTO", "com.sapienter.jbilling.server.order.db.OrderProcessDTO", "javax.persistence.Column", "javax.persistence.GenerationType", "javax.persistence.GeneratedValue", "javax.persistence.FetchType"],
    "com.sapienter.jbilling.server.provisioning.task.mmsc.MMSCException_Exception": ["javax.xml.ws.WebFault", "com.sapienter.jbilling.server.provisioning.task.mmsc.MMSCException_Exception", "com.sapienter.jbilling.server.provisioning.task.mmsc.MMSCException"],
    "com.sapienter.jbilling.server.process.db.ProcessRunStatusDTO": ["javax.persistence.Entity", "com.sapienter.jbilling.server.util.db.AbstractGenericStatus", "java.io.Serializable", "javax.persistence.DiscriminatorValue", "com.sapienter.jbilling.server.util.db.AbstractDescription", "com.sapienter.jbilling.server.process.db.ProcessRunStatusDTO", "javax.persistence.Transient", "com.sapienter.jbilling.server.util.Constants"],
    "com.sapienter.jbilling.server.process.db.PeriodUnitDTO": ["com.sapienter.jbilling.server.user.partner.db.Partner", "javax.persistence.Entity", "javax.persistence.CascadeType", "javax.persistence.OneToMany", "java.util.Set", "org.hibernate.annotations.CacheConcurrencyStrategy", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO", "com.sapienter.jbilling.server.order.db.OrderPeriodDTO", "org.hibernate.annotations.Cache", "java.io.Serializable", "java.util.HashSet", "javax.persistence.Column", "com.sapienter.jbilling.server.util.db.AbstractDescription", "javax.persistence.Table", "com.sapienter.jbilling.server.process.db.BillingProcessDTO", "com.sapienter.jbilling.server.process.db.PeriodUnitDTO", "javax.persistence.Transient", "javax.persistence.FetchType", "com.sapienter.jbilling.server.util.Constants", "javax.persistence.Id"],
    "com.sapienter.jbilling.server.mediation.db.MediationRecordLineDAS": ["java.util.List", "com.sapienter.jbilling.server.mediation.db.MediationRecordLineDAS", "com.sapienter.jbilling.server.util.db.AbstractDAS", "org.hibernate.Query", "com.sapienter.jbilling.server.mediation.db.MediationRecordLineDTO"],
    "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription": ["com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription$Type"],
    "com.sapienter.jbilling.server.user.db.SubscriberStatusDAS": ["com.sapienter.jbilling.server.user.db.SubscriberStatusDTO", "com.sapienter.jbilling.server.user.db.SubscriberStatusDAS", "com.sapienter.jbilling.server.util.db.AbstractGenericStatusDAS"],
    "com.sapienter.jbilling.server.mediation.db.MediationConfigurationDAS": ["java.util.List", "com.sapienter.jbilling.server.mediation.db.MediationConfiguration", "com.sapienter.jbilling.server.mediation.db.MediationConfigurationDAS", "com.sapienter.jbilling.server.util.db.AbstractDAS", "org.hibernate.Query"],
    "com.sapienter.jbilling.client.process.JobScheduler": ["org.apache.log4j.Logger", "org.quartz.SchedulerException", "org.quartz.SchedulerFactory", "org.quartz.impl.StdSchedulerFactory", "com.sapienter.jbilling.client.process.JobScheduler", "org.quartz.Scheduler", "<nulltype>", "org.apache.log4j.Category"],
    "com.sapienter.jbilling.server.user.db.CompanyDTO": ["com.sapienter.jbilling.server.util.db.CurrencyDTO", "java.util.Date", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO", "com.sapienter.jbilling.server.item.db.ItemDTO", "com.sapienter.jbilling.server.util.audit.db.EventLogDTO", "com.sapienter.jbilling.server.payment.db.PaymentMethodDTO", "com.sapienter.jbilling.server.process.db.BillingProcessDTO", "org.hibernate.annotations.LazyCollection", "javax.persistence.ManyToMany", "javax.persistence.Version", "javax.persistence.Entity", "javax.persistence.ManyToOne", "javax.persistence.JoinTable", "javax.persistence.CascadeType", "com.sapienter.jbilling.server.user.db.UserDTO", "java.util.Set", "org.hibernate.annotations.BatchSize", "java.io.Serializable", "javax.persistence.Column", "javax.persistence.GenerationType", "javax.persistence.GeneratedValue", "com.sapienter.jbilling.server.report.db.ReportDTO", "org.hibernate.annotations.LazyCollectionOption", "org.hibernate.annotations.OrderBy", "com.sapienter.jbilling.server.invoice.db.InvoiceDeliveryMethodDTO", "com.sapienter.jbilling.server.process.db.AgeingEntityStepDTO", "com.sapienter.jbilling.server.user.contact.db.ContactTypeDTO", "java.util.HashSet", "javax.persistence.Table", "javax.persistence.TableGenerator", "com.sapienter.jbilling.server.notification.db.NotificationMessageDTO", "javax.persistence.Id", "com.sapienter.jbilling.server.util.db.LanguageDTO", "javax.persistence.JoinColumn", "com.sapienter.jbilling.server.item.db.ItemTypeDTO", "javax.persistence.OneToMany", "org.hibernate.annotations.CacheConcurrencyStrategy", "com.sapienter.jbilling.server.order.db.OrderPeriodDTO", "com.sapienter.jbilling.server.user.contact.db.ContactFieldTypeDTO", "org.hibernate.annotations.Cache", "javax.persistence.Transient", "javax.persistence.FetchType", "com.sapienter.jbilling.server.user.db.CompanyDTO"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentBeanstreamTask": ["com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskException", "java.net.URLDecoder", "java.net.URL", "com.sapienter.jbilling.server.pluggableTask.TaskException", "org.apache.log4j.Logger", "java.math.BigDecimal", "java.util.Calendar", "com.sapienter.jbilling.server.payment.db.PaymentResultDAS", "java.net.URLConnection", "com.sapienter.jbilling.server.user.ContactBL", "org.apache.log4j.Category", "java.io.OutputStream", "com.sapienter.jbilling.server.payment.db.PaymentDTO", "com.sapienter.jbilling.server.payment.PaymentAuthorizationBL", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO", "com.sapienter.jbilling.server.pluggableTask.PaymentTaskWithTimeout", "com.sapienter.jbilling.server.user.contact.db.ContactDTO", "<nulltype>", "com.sapienter.jbilling.server.user.db.CreditCardDTO", "com.sapienter.jbilling.server.payment.PaymentDTOEx", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.pluggableTask.PaymentTask", "com.sapienter.jbilling.server.payment.tasks.PaymentBeanstreamTask", "com.sapienter.jbilling.server.payment.tasks.PaymentBeanstreamTask$BeanstreamResponseDTO", "com.sapienter.jbilling.server.util.Constants", "java.io.InputStream"],
    "com.sapienter.jbilling.server.pluggableTask.PaymentAuthorizeNetTask": ["com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskException", "com.sapienter.jbilling.server.util.db.CurrencyDTO", "java.util.Random", "org.apache.commons.httpclient.methods.PostMethod", "org.apache.commons.httpclient.NameValuePair[]", "com.sapienter.jbilling.server.pluggableTask.TaskException", "java.util.ArrayList", "org.apache.log4j.Logger", "java.math.BigDecimal", "com.sapienter.jbilling.server.pluggableTask.AuthorizeNetResponseDTO", "com.sapienter.jbilling.server.payment.db.PaymentResultDAS", "org.apache.commons.httpclient.NameValuePair", "java.util.Map", "org.apache.commons.httpclient.HttpException", "com.sapienter.jbilling.server.user.ContactBL", "org.apache.log4j.Category", "com.sapienter.jbilling.server.pluggableTask.PluggableTask", "com.sapienter.jbilling.server.item.CurrencyBL", "com.sapienter.jbilling.server.user.CreditCardBL", "com.sapienter.jbilling.server.payment.db.PaymentDTO", "com.sapienter.jbilling.server.payment.PaymentAuthorizationBL", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO", "java.io.IOException", "com.sapienter.jbilling.server.user.contact.db.ContactDTO", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription$Type", "<nulltype>", "com.sapienter.jbilling.server.user.db.AchDTO", "org.apache.commons.httpclient.Credentials", "java.util.List", "com.sapienter.jbilling.server.user.db.CreditCardDTO", "org.apache.commons.httpclient.HttpClient", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription", "com.sapienter.jbilling.server.payment.PaymentDTOEx", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.pluggableTask.PaymentTask", "com.sapienter.jbilling.server.pluggableTask.PaymentAuthorizeNetTask", "com.sapienter.jbilling.server.util.Constants"],
    "com.sapienter.jbilling.server.report.ReportExportDTO": ["byte[]", "com.sapienter.jbilling.server.report.ReportExportDTO", "java.io.Serializable"],
    "com.sapienter.jbilling.server.customer.ICustomerSessionBean": ["com.sapienter.jbilling.server.user.ContactDTOEx", "com.sapienter.jbilling.common.SessionInternalError", "com.sapienter.jbilling.server.customer.ICustomerSessionBean"],
    "com.sapienter.jbilling.server.mediation.MediationConfigurationWS": ["com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDTO", "java.util.Date", "<nulltype>", "java.io.Serializable", "com.sapienter.jbilling.server.security.WSSecured", "com.sapienter.jbilling.server.mediation.db.MediationConfiguration", "com.sapienter.jbilling.server.mediation.MediationConfigurationWS"],
    "com.sapienter.jbilling.server.util.Constants": ["com.sapienter.jbilling.common.CommonConstants", "com.sapienter.jbilling.server.util.Constants"],
    "com.sapienter.jbilling.server.item.ItemSessionBean": ["com.sapienter.jbilling.server.item.IItemSessionBean", "com.sapienter.jbilling.server.item.CurrencyBL", "com.sapienter.jbilling.server.util.db.CurrencyDTO", "com.sapienter.jbilling.server.item.db.ItemTypeDTO", "com.sapienter.jbilling.server.item.PricingField", "com.sapienter.jbilling.server.item.ItemBL", "<nulltype>", "com.sapienter.jbilling.server.item.db.ItemDTO", "java.util.List", "org.springframework.transaction.annotation.Propagation", "com.sapienter.jbilling.common.SessionInternalError", "com.sapienter.jbilling.server.util.db.CurrencyDTO[]", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.item.ItemTypeBL", "com.sapienter.jbilling.server.item.ItemSessionBean", "com.sapienter.jbilling.server.item.db.ItemTypeDAS", "org.springframework.transaction.annotation.Transactional"],
    "com.sapienter.jbilling.server.item.validator.ItemPrices": ["javax.validation.Payload", "com.sapienter.jbilling.server.item.validator.ItemPrices"],
    "com.sapienter.jbilling.server.mediation.task.AbstractReader": ["com.sapienter.jbilling.server.pluggableTask.PluggableTask", "java.util.Iterator", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskException", "com.sapienter.jbilling.server.mediation.Record", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription$Type", "org.apache.log4j.Logger", "java.util.List", "com.sapienter.jbilling.server.mediation.task.IMediationReader", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription", "org.apache.log4j.Category", "com.sapienter.jbilling.server.mediation.task.AbstractReader"],
    "com.sapienter.jbilling.server.payment.event.ProcessPaymentEvent": ["com.sapienter.jbilling.server.system.event.Event", "com.sapienter.jbilling.server.payment.event.ProcessPaymentEvent"],
    "com.sapienter.jbilling.server.provisioning.config.Provisioning": ["com.sapienter.jbilling.server.provisioning.config.Provisioning", "java.util.List", "com.sapienter.jbilling.server.provisioning.config.Command", "<nulltype>"],
    "com.sapienter.jbilling.server.user.permisson.db.PermissionUserDTO": ["com.sapienter.jbilling.server.user.permisson.db.PermissionUserDTO", "javax.persistence.Entity", "javax.persistence.ManyToOne", "com.sapienter.jbilling.server.user.permisson.db.PermissionDTO", "com.sapienter.jbilling.server.user.db.UserDTO", "javax.persistence.JoinColumn", "java.io.Serializable", "javax.persistence.GenerationType", "javax.persistence.Column", "javax.persistence.Table", "javax.persistence.GeneratedValue", "javax.persistence.TableGenerator", "javax.persistence.Transient", "javax.persistence.FetchType", "javax.persistence.Id"],
    "com.sapienter.jbilling.server.util.WSExceptionAdvice": ["org.springframework.aop.ThrowsAdvice", "com.sapienter.jbilling.server.util.WSExceptionAdvice", "java.io.PrintWriter", "java.util.Arrays", "java.io.StringWriter", "<nulltype>", "org.apache.log4j.Logger", "com.sapienter.jbilling.common.SessionInternalError", "org.apache.log4j.Category"],
    "com.sapienter.jbilling.server.user.PartnerSQL": ["com.sapienter.jbilling.server.user.PartnerSQL", "com.sapienter.jbilling.server.user.UserDTOEx", "com.sapienter.jbilling.server.util.Constants"],
    "com.sapienter.jbilling.server.util.db.CurrencyDTO": ["com.sapienter.jbilling.server.util.CurrencyWS", "com.sapienter.jbilling.server.user.partner.db.Partner", "org.apache.commons.lang.StringUtils", "com.sapienter.jbilling.server.util.db.CurrencyDTO", "java.util.HashSet", "java.math.BigDecimal", "com.sapienter.jbilling.server.util.db.AbstractDescription", "javax.persistence.Table", "javax.persistence.TableGenerator", "javax.persistence.ManyToMany", "javax.persistence.Version", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO", "com.sapienter.jbilling.server.process.db.ProcessRunTotalDTO", "javax.persistence.Id", "javax.persistence.Entity", "com.sapienter.jbilling.server.util.db.CurrencyExchangeDTO", "javax.persistence.JoinTable", "javax.persistence.CascadeType", "com.sapienter.jbilling.server.user.db.UserDTO", "com.sapienter.jbilling.server.payment.db.PaymentDTO", "javax.persistence.JoinColumn", "javax.persistence.OneToMany", "java.util.Set", "org.hibernate.annotations.CacheConcurrencyStrategy", "org.hibernate.annotations.Cascade", "org.hibernate.annotations.Cache", "<nulltype>", "java.io.Serializable", "com.sapienter.jbilling.server.order.db.OrderDTO", "javax.persistence.Column", "javax.persistence.GenerationType", "javax.persistence.GeneratedValue", "javax.persistence.Transient", "javax.persistence.FetchType", "com.sapienter.jbilling.server.user.db.CompanyDTO", "com.sapienter.jbilling.server.util.Constants"],
    "com.sapienter.jbilling.server.util.converter.BigDecimalConverter": ["java.math.BigDecimal", "org.apache.commons.beanutils.Converter", "com.sapienter.jbilling.server.util.converter.BigDecimalConverter", "<nulltype>"],
    "com.sapienter.jbilling.server.item.PricingField": ["com.sapienter.jbilling.server.item.PricingField$Type", "java.util.Date", "com.sapienter.jbilling.server.item.PricingField", "javax.xml.bind.annotation.XmlTransient", "<nulltype>", "java.util.ArrayList", "java.math.BigDecimal", "java.util.List", "java.util.Calendar", "com.sapienter.jbilling.server.item.PricingField[]"],
    "com.sapienter.jbilling.server.notification.db.NotificationMessageLineDAS": ["com.sapienter.jbilling.server.notification.db.NotificationMessageLineDTO", "com.sapienter.jbilling.server.notification.db.NotificationMessageLineDAS", "com.sapienter.jbilling.server.util.db.AbstractDAS"],
    "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO": ["java.util.Date", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO", "com.sapienter.jbilling.server.process.db.PeriodUnitDAS", "javax.persistence.Table", "javax.persistence.TableGenerator", "javax.persistence.Version", "com.sapienter.jbilling.server.process.BillingProcessConfigurationWS", "javax.persistence.Id", "javax.persistence.Entity", "javax.persistence.ManyToOne", "javax.persistence.JoinColumn", "java.io.Serializable", "javax.persistence.Column", "javax.persistence.GenerationType", "com.sapienter.jbilling.server.process.db.PeriodUnitDTO", "javax.persistence.GeneratedValue", "javax.persistence.Transient", "javax.persistence.FetchType", "com.sapienter.jbilling.server.user.db.CompanyDTO", "com.sapienter.jbilling.server.util.db.AbstractDAS"],
    "com.sapienter.jbilling.server.process.task.BillableUsersBillingProcessFilterTask": ["com.sapienter.jbilling.server.pluggableTask.PluggableTask", "org.hibernate.ScrollableResults", "java.util.Date", "com.sapienter.jbilling.server.process.db.BillingProcessDAS", "com.sapienter.jbilling.server.process.task.BillableUsersBillingProcessFilterTask", "com.sapienter.jbilling.server.process.task.IBillingProcessFilterTask"],
    "com.sapienter.jbilling.server.order.db.OrderStatusDTO": ["javax.persistence.Entity", "javax.persistence.CascadeType", "com.sapienter.jbilling.server.util.db.AbstractGenericStatus", "javax.persistence.OneToMany", "java.util.Set", "com.sapienter.jbilling.server.order.db.OrderStatusDTO", "java.io.Serializable", "com.sapienter.jbilling.server.order.db.OrderDTO", "java.util.HashSet", "javax.persistence.DiscriminatorValue", "javax.persistence.Transient", "javax.persistence.FetchType", "com.sapienter.jbilling.server.util.Constants"],
    "com.sapienter.jbilling.server.user.tasks.ISubscriptionStatusManager": ["java.util.Date", "com.sapienter.jbilling.server.payment.PaymentDTOEx", "com.sapienter.jbilling.server.user.tasks.ISubscriptionStatusManager"],
    "com.sapienter.jbilling.server.invoice.db.InvoiceLineTypeDAS": ["com.sapienter.jbilling.server.invoice.db.InvoiceLineTypeDTO", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.invoice.db.InvoiceLineTypeDAS"],
    "com.sapienter.jbilling.server.util.db.AbstractDescription": ["com.sapienter.jbilling.server.util.db.InternationalDescriptionId", "com.sapienter.jbilling.server.util.Context", "com.sapienter.jbilling.server.util.Context$Name", "<nulltype>", "java.io.Serializable", "com.sapienter.jbilling.server.util.db.AbstractDescription", "com.sapienter.jbilling.common.SessionInternalError", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.util.db.DescriptionDAS", "com.sapienter.jbilling.server.util.db.InternationalDescriptionDTO", "com.sapienter.jbilling.server.util.db.JbillingTableDAS", "com.sapienter.jbilling.server.util.db.JbillingTable"],
    "com.sapienter.jbilling.server.process.db.BillingProcessDTO": ["java.util.Date", "java.util.HashSet", "org.apache.log4j.Logger", "javax.persistence.Table", "com.sapienter.jbilling.server.process.db.BillingProcessDTO", "javax.persistence.TableGenerator", "com.sapienter.jbilling.server.process.db.ProcessRunDTO", "com.sapienter.jbilling.server.process.db.PaperInvoiceBatchDTO", "javax.persistence.Version", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO", "javax.persistence.Id", "javax.persistence.Entity", "javax.persistence.ManyToOne", "javax.persistence.CascadeType", "javax.persistence.JoinColumn", "javax.persistence.OneToMany", "java.util.Set", "org.hibernate.annotations.CacheConcurrencyStrategy", "org.hibernate.annotations.Cache", "java.io.Serializable", "javax.persistence.OneToOne", "com.sapienter.jbilling.server.order.db.OrderProcessDTO", "javax.persistence.Column", "javax.persistence.GenerationType", "com.sapienter.jbilling.server.process.db.PeriodUnitDTO", "javax.persistence.GeneratedValue", "javax.persistence.FetchType", "com.sapienter.jbilling.server.user.db.CompanyDTO", "org.hibernate.annotations.OrderBy"],
    "com.sapienter.jbilling.server.user.ContactDTOEx": ["com.sapienter.jbilling.server.user.contact.db.ContactFieldDTO", "java.util.Date", "com.sapienter.jbilling.server.user.contact.db.ContactDTO", "com.sapienter.jbilling.server.user.contact.db.ContactFieldTypeDTO", "<nulltype>", "java.io.Serializable", "com.sapienter.jbilling.server.user.ContactWS", "com.sapienter.jbilling.server.user.ContactDTOEx", "java.util.Hashtable"],
    "com.sapienter.jbilling.server.payment.PaymentWS": ["com.sapienter.jbilling.server.entity.PaymentInfoChequeDTO", "java.util.Date", "javax.validation.constraints.NotNull", "<nulltype>", "java.io.Serializable", "javax.validation.Valid", "java.math.BigDecimal", "com.sapienter.jbilling.server.security.WSSecured", "com.sapienter.jbilling.server.entity.CreditCardDTO", "com.sapienter.jbilling.server.entity.PaymentAuthorizationDTO", "org.hibernate.validator.constraints.NotEmpty", "com.sapienter.jbilling.server.payment.PaymentWS", "com.sapienter.jbilling.server.entity.AchDTO", "javax.validation.constraints.Digits"],
    "com.sapienter.jbilling.server.item.ItemDTOEx": ["javax.validation.constraints.Size", "java.util.Arrays", "java.util.Collection", "com.sapienter.jbilling.server.item.validator.ItemTypes", "javax.validation.constraints.NotNull", "com.sapienter.jbilling.server.item.ItemPriceDTOEx", "<nulltype>", "java.io.Serializable", "java.util.ArrayList", "java.math.BigDecimal", "com.sapienter.jbilling.server.security.WSSecured", "java.util.List", "javax.validation.constraints.Digits", "com.sapienter.jbilling.server.item.ItemDTOEx", "com.sapienter.jbilling.server.item.validator.ItemPrices"],
    "com.sapienter.jbilling.server.payment.event.AbstractPaymentEvent": ["com.sapienter.jbilling.server.system.event.Event", "com.sapienter.jbilling.server.payment.db.PaymentDTO", "com.sapienter.jbilling.server.payment.event.PaymentSuccessfulEvent", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO", "com.sapienter.jbilling.server.payment.event.PaymentProcessorUnavailableEvent", "<nulltype>", "com.sapienter.jbilling.server.payment.PaymentDTOEx", "com.sapienter.jbilling.server.payment.db.PaymentResultDTO", "com.sapienter.jbilling.server.payment.event.AbstractPaymentEvent", "com.sapienter.jbilling.server.util.Constants", "com.sapienter.jbilling.server.payment.event.PaymentFailedEvent"],
    "com.sapienter.jbilling.server.rule.task.test.Bundle": ["com.sapienter.jbilling.server.rule.task.test.Product", "java.util.List", "java.util.LinkedList", "com.sapienter.jbilling.server.rule.task.test.Bundle", "<nulltype>"],
    "com.sapienter.jbilling.server.notification.barcode.BarcodeFactory": ["org.krysalis.barcode4j.impl.datamatrix.DataMatrixBean", "org.krysalis.barcode4j.ChecksumMode", "org.krysalis.barcode4j.impl.codabar.CodabarBean", "org.krysalis.barcode4j.impl.upcean.EAN13Bean", "org.krysalis.barcode4j.impl.upcean.UPCEBean", "org.krysalis.barcode4j.impl.pdf417.PDF417Bean", "org.krysalis.barcode4j.impl.int2of5.Interleaved2Of5Bean", "org.krysalis.barcode4j.impl.fourstate.USPSIntelligentMailBean", "<nulltype>", "org.krysalis.barcode4j.impl.AbstractBarcodeBean", "org.krysalis.barcode4j.impl.code39.Code39Bean", "org.krysalis.barcode4j.impl.upcean.UPCABean", "org.krysalis.barcode4j.impl.code128.Code128Bean", "org.krysalis.barcode4j.HumanReadablePlacement", "org.krysalis.barcode4j.impl.code128.EAN128Bean", "org.krysalis.barcode4j.impl.fourstate.RoyalMailCBCBean", "com.sapienter.jbilling.server.notification.barcode.TextPlacement", "com.sapienter.jbilling.server.notification.barcode.Checksum", "org.krysalis.barcode4j.impl.postnet.POSTNETBean", "org.krysalis.barcode4j.impl.upcean.EAN8Bean", "com.sapienter.jbilling.server.notification.barcode.BarcodeFactory"],
    "com.sapienter.jbilling.server.pluggableTask.ProcessorEmailAlarm": ["java.util.Date", "java.util.Collection", "java.util.HashMap", "<nulltype>", "org.apache.log4j.Logger", "java.util.Queue", "java.util.LinkedList", "com.sapienter.jbilling.server.pluggableTask.ProcessorEmailAlarm"],
    "com.sapienter.jbilling.server.process.task.BasicBillingProcessFilterTask": ["com.sapienter.jbilling.server.process.task.BasicBillingProcessFilterTask", "com.sapienter.jbilling.server.pluggableTask.PluggableTask", "org.hibernate.ScrollableResults", "java.util.Date", "com.sapienter.jbilling.server.process.db.BillingProcessDAS", "com.sapienter.jbilling.server.process.task.IBillingProcessFilterTask"],
    "com.sapienter.jbilling.server.provisioning.task.mmsc.DeleteCustomer": ["javax.xml.bind.annotation.XmlAccessorType", "com.sapienter.jbilling.server.provisioning.task.mmsc.DeleteCustomer", "javax.xml.bind.annotation.XmlType", "com.sapienter.jbilling.server.provisioning.task.mmsc.DeleteCustomerRequest", "javax.xml.bind.annotation.XmlAccessType"],
    "com.sapienter.jbilling.server.provisioning.task.TelnetCommunication": ["java.io.PrintStream", "com.sapienter.jbilling.server.provisioning.task.TelnetCommunication", "java.io.IOException", "com.sapienter.jbilling.server.pluggableTask.TaskException", "<nulltype>", "org.apache.log4j.Logger", "org.apache.commons.net.telnet.TelnetClient", "java.util.Map", "com.sapienter.jbilling.server.provisioning.task.IExternalCommunication", "java.io.InputStream", "org.apache.log4j.Category"],
    "com.sapienter.jbilling.server.payment.db.PaymentDTO": ["com.sapienter.jbilling.server.util.db.CurrencyDTO", "java.util.Date", "java.math.BigDecimal", "com.sapienter.jbilling.server.util.db.AbstractDescription", "com.sapienter.jbilling.server.payment.db.PaymentMethodDTO", "com.sapienter.jbilling.server.payment.db.PaymentInfoChequeDAS", "javax.persistence.Version", "javax.persistence.Entity", "javax.persistence.ManyToOne", "javax.persistence.CascadeType", "com.sapienter.jbilling.server.user.db.UserDTO", "com.sapienter.jbilling.server.payment.db.PaymentDTO", "java.util.Set", "com.sapienter.jbilling.server.user.partner.db.PartnerPayout", "java.io.Serializable", "javax.persistence.Column", "javax.persistence.GenerationType", "javax.persistence.GeneratedValue", "com.sapienter.jbilling.server.payment.PaymentDTOEx", "com.sapienter.jbilling.server.util.csv.Exportable", "com.sapienter.jbilling.server.payment.db.PaymentInvoiceMapDTO", "java.util.HashSet", "javax.persistence.Table", "javax.persistence.TableGenerator", "com.sapienter.jbilling.server.payment.db.PaymentInfoChequeDTO", "com.sapienter.jbilling.server.payment.db.PaymentResultDTO", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO", "javax.persistence.Id", "java.util.Iterator", "javax.persistence.JoinColumn", "javax.persistence.OneToMany", "org.hibernate.annotations.CacheConcurrencyStrategy", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO", "org.hibernate.annotations.Cache", "<nulltype>", "com.sapienter.jbilling.server.user.db.AchDTO", "com.sapienter.jbilling.server.user.db.CreditCardDTO", "javax.persistence.Transient", "javax.persistence.FetchType", "com.sapienter.jbilling.server.util.db.AbstractDAS"],
    "com.sapienter.jbilling.client.util.Constants": ["com.sapienter.jbilling.common.CommonConstants", "com.sapienter.jbilling.common.PermissionConstants", "com.sapienter.jbilling.client.util.Constants"],
    "com.sapienter.jbilling.server.util.db.LanguageDAS": ["com.sapienter.jbilling.server.util.db.LanguageDTO", "com.sapienter.jbilling.server.util.db.LanguageDAS", "com.sapienter.jbilling.server.util.db.AbstractDAS", "org.hibernate.Query"],
    "com.sapienter.jbilling.server.user.partner.db.PartnerPayout": ["com.sapienter.jbilling.server.user.partner.db.Partner", "java.util.Date", "java.math.BigDecimal", "javax.persistence.Table", "javax.persistence.TableGenerator", "javax.persistence.Version", "javax.persistence.Id", "javax.persistence.Entity", "javax.persistence.ManyToOne", "com.sapienter.jbilling.server.payment.db.PaymentDTO", "javax.persistence.JoinColumn", "com.sapienter.jbilling.server.user.partner.db.PartnerPayout", "<nulltype>", "java.io.Serializable", "javax.persistence.Column", "javax.persistence.GenerationType", "javax.persistence.GeneratedValue", "javax.persistence.Transient", "javax.persistence.FetchType"],
    "com.sapienter.jbilling.server.user.db.CreditCardDAS": ["java.util.List", "com.sapienter.jbilling.server.user.db.CreditCardDTO", "com.sapienter.jbilling.server.util.db.AbstractDAS", "org.hibernate.Query", "com.sapienter.jbilling.server.user.db.CreditCardDAS"],
    "com.sapienter.jbilling.server.util.audit.EventLoggerSQL": ["com.sapienter.jbilling.server.util.audit.EventLogger", "com.sapienter.jbilling.server.util.audit.EventLoggerSQL"],
    "com.sapienter.jbilling.server.user.contact.db.ContactMapDAS": ["com.sapienter.jbilling.server.user.contact.db.ContactMapDAS", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.user.contact.db.ContactMapDTO"],
    "com.sapienter.jbilling.server.pluggableTask.BasicEmailNotificationTask": ["javax.mail.Address", "org.springframework.mail.javamail.MimeMessageHelper", "javax.mail.MessagingException", "com.sapienter.jbilling.server.notification.MessageDTO", "com.sapienter.jbilling.server.pluggableTask.TaskException", "java.util.ArrayList", "javax.mail.internet.InternetAddress", "org.apache.log4j.Logger", "java.util.Calendar", "com.sapienter.jbilling.common.Util", "com.sapienter.jbilling.server.notification.MessageSection", "com.sapienter.jbilling.server.user.ContactDTOEx", "java.util.Map", "com.sapienter.jbilling.server.user.ContactBL", "org.apache.log4j.Category", "com.sapienter.jbilling.server.pluggableTask.PluggableTask", "javax.mail.internet.AddressException", "com.sapienter.jbilling.server.user.db.UserDTO", "org.springframework.core.io.FileSystemResource", "Message.RecipientType", "javax.mail.internet.MimeMessage", "com.sapienter.jbilling.server.user.contact.db.ContactDTO", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription$Type", "<nulltype>", "java.io.File", "com.sapienter.jbilling.server.pluggableTask.NotificationTask", "java.util.List", "com.sapienter.jbilling.server.pluggableTask.BasicEmailNotificationTask", "com.sapienter.jbilling.server.notification.NotificationBL", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription", "org.springframework.mail.javamail.JavaMailSenderImpl", "com.sapienter.jbilling.server.user.db.CompanyDTO"],
    "com.sapienter.jbilling.client.authentication.JBillingPasswordEncoder": ["org.springframework.dao.DataAccessException", "com.sapienter.jbilling.common.Constants", "com.sapienter.jbilling.client.authentication.JBillingPasswordEncoder", "com.sapienter.jbilling.common.JBCrypto", "org.springframework.security.authentication.encoding.PasswordEncoder"],
    "com.sapienter.jbilling.server.user.AchBL": ["java.util.Iterator", "com.sapienter.jbilling.server.user.db.UserDTO", "com.sapienter.jbilling.server.user.event.AchDeleteEvent", "com.sapienter.jbilling.server.payment.db.PaymentDTO", "com.sapienter.jbilling.server.util.audit.EventLogger", "java.util.Set", "com.sapienter.jbilling.server.user.UserBL", "<nulltype>", "org.apache.log4j.Logger", "com.sapienter.jbilling.server.user.db.AchDTO", "com.sapienter.jbilling.server.user.AchBL", "com.sapienter.jbilling.server.user.event.AchUpdateEvent", "com.sapienter.jbilling.server.user.db.CompanyDTO", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.user.db.AchDAS", "com.sapienter.jbilling.server.system.event.EventManager", "com.sapienter.jbilling.server.util.Constants", "org.apache.log4j.Category"],
    "com.sapienter.jbilling.server.pluggableTask.OrderPeriodAnticipateTask": ["java.util.GregorianCalendar", "java.util.Date", "com.sapienter.jbilling.server.pluggableTask.BasicOrderPeriodTask", "com.sapienter.jbilling.server.pluggableTask.TaskException", "<nulltype>", "com.sapienter.jbilling.server.order.db.OrderDTO", "org.apache.log4j.Logger", "java.util.Calendar", "com.sapienter.jbilling.server.pluggableTask.OrderPeriodAnticipateTask", "org.apache.log4j.Category"],
    "com.sapienter.jbilling.server.pluggableTask.PaymentPartnerTestTask": ["com.sapienter.jbilling.server.pluggableTask.PluggableTask", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskException", "com.sapienter.jbilling.server.payment.db.PaymentDTO", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO", "<nulltype>", "com.sapienter.jbilling.server.payment.db.PaymentResultDAS", "com.sapienter.jbilling.server.payment.PaymentDTOEx", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.pluggableTask.PaymentTask", "com.sapienter.jbilling.server.pluggableTask.PaymentPartnerTestTask", "com.sapienter.jbilling.server.util.Constants"],
    "com.sapienter.jbilling.server.provisioning.task.mmsc.ModifyCustomerRequest": ["javax.xml.bind.annotation.XmlAccessorType", "javax.xml.bind.annotation.XmlType", "com.sapienter.jbilling.server.provisioning.task.mmsc.ModifyCustomerRequest", "com.sapienter.jbilling.server.provisioning.task.mmsc.EfsBaseMSISDNRequest", "javax.xml.bind.annotation.XmlAccessType"],
    "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDAS": ["com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDTO", "<nulltype>", "org.springmodules.cache.FlushingModel", "org.apache.log4j.Logger", "org.springmodules.cache.provider.CacheProviderFacade", "java.util.List", "org.springmodules.cache.CachingModel", "com.sapienter.jbilling.server.util.db.AbstractDAS", "org.hibernate.Query", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDAS"],
    "com.sapienter.jbilling.server.item.ItemSQL": ["com.sapienter.jbilling.server.item.ItemSQL"],
    "com.sapienter.jbilling.server.mediation.MediationConfigurationBL": ["com.sapienter.jbilling.server.mediation.MediationConfigurationBL", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDTO", "com.sapienter.jbilling.server.util.Context", "com.sapienter.jbilling.server.util.Context$Name", "<nulltype>", "java.util.ArrayList", "java.util.List", "com.sapienter.jbilling.server.mediation.db.MediationConfiguration", "com.sapienter.jbilling.common.SessionInternalError", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.mediation.MediationConfigurationWS", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDAS"],
    "com.sapienter.jbilling.server.item.tasks.Subscription": ["com.sapienter.jbilling.server.order.db.OrderDTO", "java.math.BigDecimal", "com.sapienter.jbilling.server.item.tasks.Subscription", "java.util.Date", "com.sapienter.jbilling.server.order.db.OrderLineDTO", "com.sapienter.jbilling.server.order.db.OrderPeriodDTO"],
    "com.sapienter.jbilling.server.payment.tasks.SaveCreditCardExternallyTask": ["com.sapienter.jbilling.server.payment.IExternalCreditCardStorage", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskException", "com.sapienter.jbilling.server.payment.tasks.SaveCreditCardExternallyTask", "com.sapienter.jbilling.server.user.contact.db.ContactTypeDTO", "org.apache.log4j.Logger", "java.util.Map", "org.apache.log4j.Category", "com.sapienter.jbilling.server.pluggableTask.PluggableTask", "com.sapienter.jbilling.server.system.event.Event", "com.sapienter.jbilling.server.user.CreditCardBL", "com.sapienter.jbilling.server.user.db.UserDTO", "com.sapienter.jbilling.server.user.event.NewCreditCardEvent", "com.sapienter.jbilling.server.system.event.task.IInternalEventsTask", "java.util.Set", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskBL", "com.sapienter.jbilling.server.user.event.NewContactEvent", "com.sapienter.jbilling.server.user.contact.db.ContactDTO", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription$Type", "com.sapienter.jbilling.server.user.UserBL", "<nulltype>", "java.util.List", "com.sapienter.jbilling.server.user.db.CreditCardDTO", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription", "com.sapienter.jbilling.server.user.contact.db.ContactMapDTO"],
    "com.sapienter.jbilling.server.user.permisson.db.PermissionTypeDTO": ["javax.persistence.Entity", "com.sapienter.jbilling.server.user.permisson.db.PermissionDTO", "javax.persistence.CascadeType", "com.sapienter.jbilling.server.user.permisson.db.PermissionTypeDTO", "javax.persistence.OneToMany", "java.util.Set", "org.hibernate.annotations.CacheConcurrencyStrategy", "<nulltype>", "org.hibernate.annotations.Cache", "java.io.Serializable", "java.util.HashSet", "javax.persistence.Column", "javax.persistence.Table", "javax.persistence.FetchType", "javax.persistence.Id"],
    "com.sapienter.jbilling.client.authentication.util.SecuritySession": ["javax.servlet.http.HttpSession", "org.apache.log4j.Logger", "com.sapienter.jbilling.client.authentication.CompanyUserDetails", "javax.servlet.http.HttpServletRequest", "com.sapienter.jbilling.client.authentication.util.SecuritySession", "org.springframework.web.servlet.LocaleResolver", "javax.servlet.http.HttpServletResponse", "<nulltype>", "org.apache.log4j.Category"],
    "com.sapienter.jbilling.server.mediation.task.MediationProcessTask": ["com.sapienter.jbilling.server.process.task.AbstractBackwardSimpleScheduledTask", "org.quartz.JobExecutionContext", "com.sapienter.jbilling.server.pluggableTask.PluggableTask", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskException", "java.util.Date", "com.sapienter.jbilling.server.process.task.AbstractSimpleScheduledTask", "com.sapienter.jbilling.server.mediation.task.MediationProcessTask", "java.util.concurrent.atomic.AtomicBoolean", "com.sapienter.jbilling.server.util.Context", "com.sapienter.jbilling.server.util.Context$Name", "org.quartz.JobExecutionException", "org.apache.log4j.Logger", "com.sapienter.jbilling.common.Util", "org.quartz.SimpleTrigger", "com.sapienter.jbilling.server.mediation.IMediationSessionBean", "org.apache.log4j.Category"],
    "com.sapienter.jbilling.server.mediation.Record": ["com.sapienter.jbilling.server.item.PricingField", "com.sapienter.jbilling.server.mediation.Record", "java.util.ArrayList", "java.util.List"],
    "com.sapienter.jbilling.server.order.OrderHelper": ["java.util.Iterator", "java.util.Collection", "java.util.Set", "com.sapienter.jbilling.server.order.OrderHelper", "com.sapienter.jbilling.server.order.db.OrderLineDTO", "<nulltype>", "java.util.ArrayList", "com.sapienter.jbilling.server.order.db.OrderDTO", "java.math.BigDecimal", "java.util.List", "java.util.concurrent.CopyOnWriteArrayList"],
    "com.sapienter.jbilling.server.provisioning.config.Command": ["com.sapienter.jbilling.server.provisioning.config.Field", "java.util.List", "com.sapienter.jbilling.server.provisioning.config.Command", "com.sapienter.jbilling.server.provisioning.config.Processor", "<nulltype>"],
    "com.sapienter.jbilling.server.provisioning.task.MMSCProvisioningTask": ["com.sapienter.jbilling.server.provisioning.task.mmsc.EfsBaseRequest", "com.sapienter.jbilling.server.provisioning.task.mmsc.AddCustomerRequest", "java.util.HashMap", "com.sapienter.jbilling.server.util.Context", "com.sapienter.jbilling.server.provisioning.task.MMSCProvisioningTask", "com.sapienter.jbilling.server.pluggableTask.TaskException", "com.sapienter.jbilling.server.provisioning.task.mmsc.EfsBaseMSISDNRequest", "java.util.LinkedHashMap", "org.apache.log4j.Logger", "com.sapienter.jbilling.server.provisioning.task.mmsc.IMMSCHandlerFacade", "java.util.StringTokenizer", "java.util.Map", "com.sapienter.jbilling.server.provisioning.task.mmsc.MmscFacadeHandlerResponse", "com.sapienter.jbilling.server.provisioning.task.IExternalProvisioning", "org.apache.log4j.Category", "com.sapienter.jbilling.server.pluggableTask.PluggableTask", "com.sapienter.jbilling.server.provisioning.task.mmsc.DeleteCustomerRequest", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription$Type", "com.sapienter.jbilling.server.util.Context$Name", "<nulltype>", "com.sapienter.jbilling.server.provisioning.task.mmsc.EfsBaseResponse", "com.sapienter.jbilling.server.provisioning.task.mmsc.MMSCException_Exception", "java.util.List", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription", "com.sapienter.jbilling.server.provisioning.task.mmsc.ModifyCustomerRequest"],
    "com.sapienter.jbilling.tools.Trigger": ["java.io.PrintStream", "com.sapienter.jbilling.server.process.IBillingProcessSessionBean", "java.util.Date", "com.sapienter.jbilling.server.user.IUserSessionBean", "com.sapienter.jbilling.tools.Trigger", "<nulltype>", "com.sapienter.jbilling.server.invoice.IInvoiceSessionBean", "java.util.Calendar", "com.sapienter.jbilling.common.Util", "com.sapienter.jbilling.common.SessionInternalError", "com.sapienter.jbilling.server.order.IOrderSessionBean"],
    "com.sapienter.jbilling.server.provisioning.ProvisioningProcessSessionBean": ["com.sapienter.jbilling.server.provisioning.ProvisioningProcessBL", "com.sapienter.jbilling.server.order.db.OrderLineDTO", "com.sapienter.jbilling.server.provisioning.ExternalProvisioning", "com.sapienter.jbilling.server.provisioning.ProvisioningProcessSessionBean", "org.apache.log4j.Logger", "com.sapienter.jbilling.server.order.db.OrderLineDAS", "org.springframework.transaction.annotation.Propagation", "javax.jms.Message", "org.springframework.dao.EmptyResultDataAccessException", "org.apache.log4j.Category", "com.sapienter.jbilling.server.order.OrderBL", "<nulltype>", "com.sapienter.jbilling.server.provisioning.IProvisioningProcessSessionBean", "com.sapienter.jbilling.server.order.db.OrderDTO", "com.sapienter.jbilling.common.SessionInternalError", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.order.db.OrderDAS", "com.sapienter.jbilling.server.util.Constants", "org.springframework.transaction.annotation.Transactional"],
    "com.sapienter.jbilling.server.item.event.ItemUpdatedEvent": ["com.sapienter.jbilling.server.item.db.ItemDTO", "com.sapienter.jbilling.server.item.event.AbstractItemEvent", "com.sapienter.jbilling.server.item.event.ItemUpdatedEvent"],
    "com.sapienter.jbilling.server.user.EntityBL": ["com.sapienter.jbilling.server.user.db.CompanyDAS", "com.sapienter.jbilling.server.user.EntitySQL", "com.sapienter.jbilling.server.user.CompanyWS", "java.sql.Connection", "javax.naming.NamingException", "java.util.ArrayList", "com.sapienter.jbilling.server.user.EntityBL", "java.sql.SQLException", "java.util.Locale", "java.sql.ResultSet", "com.sapienter.jbilling.server.list.ResultList", "javax.sql.rowset.CachedRowSet", "javax.sql.RowSet", "com.sapienter.jbilling.server.user.ContactBL", "com.sapienter.jbilling.server.util.db.LanguageDTO", "com.sapienter.jbilling.server.util.db.LanguageDAS", "com.sapienter.jbilling.server.util.audit.EventLogger", "com.sapienter.jbilling.server.user.contact.db.ContactDTO", "<nulltype>", "java.util.List", "com.sapienter.jbilling.server.user.ContactWS", "com.sapienter.jbilling.server.user.contact.db.ContactDAS", "com.sapienter.jbilling.common.SessionInternalError", "com.sapienter.jbilling.server.user.db.CompanyDTO", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.util.Constants"],
    "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDTO": ["java.util.Date", "org.apache.log4j.Logger", "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDTO", "javax.persistence.Table", "javax.persistence.TableGenerator", "javax.persistence.Version", "javax.persistence.Id", "javax.persistence.Entity", "javax.persistence.ManyToOne", "javax.persistence.CascadeType", "com.sapienter.jbilling.server.user.db.UserDTO", "javax.persistence.JoinColumn", "com.sapienter.jbilling.server.user.contact.db.ContactDTO", "java.io.Serializable", "javax.persistence.OneToOne", "javax.persistence.Column", "javax.persistence.GenerationType", "javax.persistence.GeneratedValue", "com.sapienter.jbilling.server.user.db.CreditCardDTO", "com.sapienter.jbilling.server.user.db.CompanyDTO"],
    "com.sapienter.jbilling.server.process.ConfigurationBL": ["com.sapienter.jbilling.server.user.db.CompanyDAS", "java.util.Date", "com.sapienter.jbilling.server.process.db.BillingProcessDAS", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO", "com.sapienter.jbilling.server.process.db.PeriodUnitDAS", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDAS", "org.apache.log4j.Logger", "com.sapienter.jbilling.server.user.EntityBL", "com.sapienter.jbilling.server.process.db.ProcessRunDAS", "com.sapienter.jbilling.server.process.db.BillingProcessDTO", "com.sapienter.jbilling.server.process.ConfigurationBL", "com.sapienter.jbilling.server.process.db.ProcessRunDTO", "com.sapienter.jbilling.server.process.BillingProcessConfigurationWS", "org.apache.log4j.Category", "com.sapienter.jbilling.server.util.db.AbstractGenericStatus", "com.sapienter.jbilling.server.util.audit.EventLogger", "<nulltype>", "com.sapienter.jbilling.server.process.db.PeriodUnitDTO", "com.sapienter.jbilling.common.SessionInternalError", "com.sapienter.jbilling.server.user.db.CompanyDTO", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.util.Constants"],
    "com.sapienter.jbilling.server.provisioning.task.mmsc.ModifyCustomerResponse": ["javax.xml.bind.annotation.XmlAccessorType", "javax.xml.bind.annotation.XmlType", "com.sapienter.jbilling.server.provisioning.task.mmsc.ModifyCustomerResponse", "com.sapienter.jbilling.server.provisioning.task.mmsc.MmscFacadeHandlerResponse", "javax.xml.bind.annotation.XmlElement", "javax.xml.bind.annotation.XmlAccessType"],
    "com.sapienter.jbilling.server.payment.db.PaymentResultDTO": ["javax.persistence.Entity", "javax.persistence.CascadeType", "com.sapienter.jbilling.server.payment.db.PaymentDTO", "javax.persistence.OneToMany", "java.util.Set", "org.hibernate.annotations.CacheConcurrencyStrategy", "org.hibernate.annotations.Cache", "java.io.Serializable", "java.util.HashSet", "javax.persistence.Column", "com.sapienter.jbilling.server.util.db.AbstractDescription", "javax.persistence.Table", "javax.persistence.Transient", "javax.persistence.FetchType", "com.sapienter.jbilling.server.payment.db.PaymentResultDTO", "com.sapienter.jbilling.server.util.Constants", "javax.persistence.Id"],
    "com.sapienter.jbilling.server.user.tasks.RulesValidatePurchaseTask": ["com.sapienter.jbilling.server.user.tasks.RulesValidatePurchaseTask$ValidatePurchase", "java.util.Arrays", "com.sapienter.jbilling.server.item.tasks.Subscription", "java.util.Date", "com.sapienter.jbilling.server.item.PricingField", "com.sapienter.jbilling.server.order.db.OrderLineDTO", "org.drools.runtime.StatelessKnowledgeSession", "com.sapienter.jbilling.server.pluggableTask.TaskException", "com.sapienter.jbilling.server.user.db.CustomerDTO", "java.util.ArrayList", "com.sapienter.jbilling.server.item.db.ItemDTO", "java.math.BigDecimal", "com.sapienter.jbilling.server.user.tasks.IValidatePurchaseTask", "com.sapienter.jbilling.server.user.ContactDTOEx", "com.sapienter.jbilling.server.user.tasks.RulesValidatePurchaseTask", "com.sapienter.jbilling.server.user.ContactBL", "java.util.LinkedList", "java.util.Hashtable", "com.sapienter.jbilling.server.order.OrderBL", "com.sapienter.jbilling.server.pluggableTask.PluggableTask", "com.sapienter.jbilling.server.user.contact.db.ContactFieldDTO", "com.sapienter.jbilling.server.user.db.UserDTO", "java.util.Collection", "<nulltype>", "com.sapienter.jbilling.server.order.db.OrderDTO", "com.sapienter.jbilling.server.user.ValidatePurchaseWS", "java.util.List", "org.drools.KnowledgeBase"],
    "com.sapienter.jbilling.server.util.db.InternationalDescriptionDTO": ["javax.persistence.Entity", "com.sapienter.jbilling.server.util.db.InternationalDescriptionId", "org.hibernate.annotations.CacheConcurrencyStrategy", "org.hibernate.annotations.Cache", "java.io.Serializable", "javax.persistence.AttributeOverrides", "javax.persistence.AttributeOverride", "javax.persistence.Column", "javax.persistence.Table", "javax.persistence.EmbeddedId", "com.sapienter.jbilling.server.util.db.InternationalDescriptionDTO"],
    "com.sapienter.jbilling.server.util.db.PreferenceTypeDAS": ["com.sapienter.jbilling.server.util.db.PreferenceTypeDTO", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.util.db.PreferenceTypeDAS"],
    "com.sapienter.jbilling.server.notification.NotificationSessionBean": ["com.sapienter.jbilling.server.invoice.InvoiceBL", "com.sapienter.jbilling.server.notification.INotificationSessionBean", "com.sapienter.jbilling.server.notification.NotificationNotFoundException", "com.sapienter.jbilling.server.notification.db.NotificationMessageArchDAS", "com.sapienter.jbilling.server.notification.MessageDTO", "com.sapienter.jbilling.server.pluggableTask.TaskException", "org.apache.log4j.Logger", "com.sapienter.jbilling.server.notification.db.NotificationMessageArchDTO", "org.springframework.transaction.annotation.Propagation", "com.sapienter.jbilling.common.Util", "com.sapienter.jbilling.server.notification.MessageSection", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskManager", "com.sapienter.jbilling.server.payment.db.PaymentResultDTO", "com.sapienter.jbilling.server.notification.NotificationSessionBean", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO", "org.apache.log4j.Category", "com.sapienter.jbilling.server.user.db.UserDTO", "com.sapienter.jbilling.server.payment.PaymentBL", "com.sapienter.jbilling.server.payment.db.PaymentDTO", "com.sapienter.jbilling.server.user.UserBL", "<nulltype>", "com.sapienter.jbilling.server.pluggableTask.NotificationTask", "com.sapienter.jbilling.server.notification.NotificationBL", "com.sapienter.jbilling.common.SessionInternalError", "com.sapienter.jbilling.server.user.db.CompanyDTO", "com.sapienter.jbilling.server.util.Constants", "org.springframework.transaction.annotation.Transactional"],
    "com.sapienter.jbilling.server.payment.tasks.paypal.dto.PaypalResult": ["com.sapienter.jbilling.server.payment.tasks.paypal.dto.PaypalResult"],
    "com.sapienter.jbilling.server.notification.db.NotificationMessageDAS": ["com.sapienter.jbilling.server.notification.db.NotificationMessageDAS", "com.sapienter.jbilling.server.user.db.CompanyDAS", "com.sapienter.jbilling.server.util.db.LanguageDTO", "org.hibernate.Criteria", "org.hibernate.criterion.Restrictions", "com.sapienter.jbilling.server.notification.db.NotificationMessageSectionDTO", "com.sapienter.jbilling.server.util.db.LanguageDAS", "java.util.Set", "com.sapienter.jbilling.server.notification.db.NotificationMessageTypeDTO", "com.sapienter.jbilling.server.notification.db.NotificationMessageDTO", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.user.db.CompanyDTO", "com.sapienter.jbilling.server.notification.db.NotificationMessageTypeDAS"],
    "com.sapienter.jbilling.server.process.task.SimpleTaxCompositionTask": ["com.sapienter.jbilling.server.pluggableTask.InvoiceCompositionTask", "com.sapienter.jbilling.server.util.db.CurrencyDTO", "com.sapienter.jbilling.server.pluggableTask.TaskException", "com.sapienter.jbilling.server.item.db.ItemDTO", "org.apache.log4j.Logger", "java.math.BigDecimal", "com.sapienter.jbilling.server.util.db.AbstractDescription", "com.sapienter.jbilling.server.item.db.ItemDAS", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO", "org.apache.log4j.Category", "com.sapienter.jbilling.server.process.task.SimpleTaxCompositionTask", "com.sapienter.jbilling.server.pluggableTask.PluggableTask", "com.sapienter.jbilling.server.user.contact.db.ContactFieldDTO", "com.sapienter.jbilling.server.item.db.ItemTypeDTO", "java.util.Set", "com.sapienter.jbilling.server.user.contact.db.ContactFieldTypeDTO", "com.sapienter.jbilling.server.item.ItemBL", "com.sapienter.jbilling.server.user.contact.db.ContactDTO", "<nulltype>", "java.util.List", "com.sapienter.jbilling.server.user.contact.db.ContactDAS", "com.sapienter.jbilling.server.invoice.NewInvoiceDTO", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.util.Constants", "com.sapienter.jbilling.server.process.PeriodOfTime"],
    "com.sapienter.jbilling.server.process.BillingProcessRunDTOEx": ["com.sapienter.jbilling.server.process.BillingProcessRunDTOEx", "java.util.Date", "<nulltype>", "java.util.ArrayList", "java.util.List", "com.sapienter.jbilling.server.process.db.ProcessRunDTO", "com.sapienter.jbilling.server.process.BillingProcessRunTotalDTOEx"],
    "com.sapienter.jbilling.server.pluggableTask.PaymentEmailAuthorizeNetTask": ["com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskException", "java.util.ArrayList", "org.apache.log4j.Logger", "java.math.BigDecimal", "com.sapienter.jbilling.server.pluggableTask.PaymentEmailAuthorizeNetTask$1", "java.util.Map", "com.sapienter.jbilling.server.payment.db.PaymentResultDTO", "org.apache.log4j.Category", "com.sapienter.jbilling.server.pluggableTask.PluggableTask", "com.sapienter.jbilling.server.user.db.UserDTO", "com.sapienter.jbilling.server.pluggableTask.PaymentEmailAuthorizeNetTask", "com.sapienter.jbilling.server.payment.db.PaymentDTO", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription$Type", "com.sapienter.jbilling.server.user.UserBL", "<nulltype>", "java.util.List", "com.sapienter.jbilling.server.notification.NotificationBL", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription", "com.sapienter.jbilling.server.payment.PaymentDTOEx", "com.sapienter.jbilling.server.user.db.CompanyDTO", "com.sapienter.jbilling.server.pluggableTask.PaymentAuthorizeNetTask", "com.sapienter.jbilling.server.util.Constants"],
    "com.sapienter.jbilling.server.user.tasks.PaymentInfoNoValidateTask": ["com.sapienter.jbilling.server.pluggableTask.PaymentInfoTask", "com.sapienter.jbilling.server.pluggableTask.TaskException", "com.sapienter.jbilling.server.user.db.CustomerDTO", "org.apache.log4j.Logger", "org.apache.log4j.Category", "com.sapienter.jbilling.server.pluggableTask.PluggableTask", "com.sapienter.jbilling.server.payment.db.PaymentMethodDAS", "com.sapienter.jbilling.server.user.CreditCardBL", "java.util.Iterator", "com.sapienter.jbilling.server.user.db.UserDTO", "com.sapienter.jbilling.server.payment.db.PaymentDTO", "com.sapienter.jbilling.server.user.tasks.PaymentInfoNoValidateTask", "java.util.Set", "com.sapienter.jbilling.server.user.UserBL", "<nulltype>", "com.sapienter.jbilling.server.user.db.AchDTO", "com.sapienter.jbilling.server.user.db.CreditCardDTO", "com.sapienter.jbilling.server.user.AchBL", "com.sapienter.jbilling.server.payment.PaymentDTOEx", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.util.Constants"],
    "com.sapienter.jbilling.server.pluggableTask.BasicOrderPeriodTask": ["com.sapienter.jbilling.server.pluggableTask.OrderPeriodTask", "java.util.Date", "com.sapienter.jbilling.server.pluggableTask.TaskException", "java.util.ArrayList", "org.apache.log4j.Logger", "com.sapienter.jbilling.server.util.db.AbstractDescription", "java.util.Calendar", "com.sapienter.jbilling.server.order.db.OrderStatusDAS", "com.sapienter.jbilling.common.Util", "org.apache.log4j.Category", "com.sapienter.jbilling.server.util.MapPeriodToCalendar", "com.sapienter.jbilling.server.pluggableTask.PluggableTask", "java.util.GregorianCalendar", "com.sapienter.jbilling.server.user.db.UserDTO", "com.sapienter.jbilling.server.util.db.AbstractGenericStatusDAS", "com.sapienter.jbilling.server.pluggableTask.BasicOrderPeriodTask", "com.sapienter.jbilling.server.util.audit.EventLogger", "com.sapienter.jbilling.server.order.db.OrderPeriodDTO", "<nulltype>", "com.sapienter.jbilling.server.order.db.OrderDTO", "java.util.List", "com.sapienter.jbilling.server.process.db.PeriodUnitDTO", "com.sapienter.jbilling.server.user.db.CompanyDTO", "com.sapienter.jbilling.server.util.Constants", "com.sapienter.jbilling.server.process.PeriodOfTime"],
    "com.sapienter.jbilling.server.item.ItemTypeWS": ["javax.validation.constraints.Size", "com.sapienter.jbilling.server.item.db.ItemTypeDTO", "javax.validation.constraints.Min", "com.sapienter.jbilling.server.item.ItemTypeWS", "<nulltype>", "java.io.Serializable"],
    "com.sapienter.jbilling.server.process.task.BasicAgeingTask": ["com.sapienter.jbilling.server.util.PreferenceBL", "java.util.Date", "com.sapienter.jbilling.server.util.Context", "org.apache.commons.httpclient.methods.PostMethod", "javax.naming.NamingException", "org.apache.log4j.Logger", "com.sapienter.jbilling.server.util.db.AbstractDescription", "java.sql.ResultSet", "java.util.Map", "com.sapienter.jbilling.server.invoice.db.InvoiceDAS", "javax.sql.rowset.CachedRowSet", "com.sapienter.jbilling.server.process.db.AgeingEntityStepDAS", "com.sapienter.jbilling.server.user.db.UserStatusDTO", "org.apache.log4j.Category", "org.springframework.dao.EmptyResultDataAccessException", "com.sapienter.jbilling.server.order.OrderBL", "com.sapienter.jbilling.server.pluggableTask.PluggableTask", "com.sapienter.jbilling.server.process.task.IAgeingTask", "java.util.GregorianCalendar", "com.sapienter.jbilling.server.user.db.UserDTO", "com.sapienter.jbilling.server.util.audit.EventLogger", "java.util.Set", "com.sapienter.jbilling.server.util.Context$Name", "com.sapienter.jbilling.server.order.db.OrderDTO", "java.util.List", "org.apache.commons.httpclient.HttpClient", "com.sapienter.jbilling.server.invoice.InvoiceBL", "com.sapienter.jbilling.server.process.db.AgeingEntityStepDTO", "com.sapienter.jbilling.server.notification.INotificationSessionBean", "com.sapienter.jbilling.server.notification.NotificationNotFoundException", "java.util.HashMap", "com.sapienter.jbilling.server.notification.MessageDTO", "java.sql.SQLException", "com.sapienter.jbilling.server.user.db.UserStatusDAS", "java.util.Calendar", "org.apache.commons.httpclient.NameValuePair", "com.sapienter.jbilling.server.system.event.EventManager", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO", "com.sapienter.jbilling.server.util.db.LanguageDTO", "com.sapienter.jbilling.server.process.event.NewUserStatusEvent", "com.sapienter.jbilling.server.util.db.AbstractGenericStatus", "com.sapienter.jbilling.server.util.db.AbstractGenericStatusDAS", "com.sapienter.jbilling.server.user.UserDTOEx", "com.sapienter.jbilling.server.user.db.UserDAS", "com.sapienter.jbilling.server.process.task.BasicAgeingTask", "com.sapienter.jbilling.server.user.UserBL", "<nulltype>", "com.sapienter.jbilling.server.notification.NotificationBL", "com.sapienter.jbilling.server.user.db.CompanyDTO", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.order.db.OrderDAS", "com.sapienter.jbilling.server.util.Constants"],
    "com.sapienter.jbilling.server.payment.blacklist.TestBlacklistFilter": ["com.sapienter.jbilling.server.user.db.CompanyDAS", "com.sapienter.jbilling.server.user.db.UserDTO", "java.util.Date", "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDAS", "com.sapienter.jbilling.server.payment.blacklist.BlacklistFilter$Result", "com.sapienter.jbilling.server.user.db.UserDAS", "com.sapienter.jbilling.server.payment.blacklist.BlacklistFilter", "<nulltype>", "org.apache.log4j.Logger", "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDTO", "java.util.List", "com.sapienter.jbilling.server.payment.blacklist.TestBlacklistFilter", "com.sapienter.jbilling.server.payment.PaymentDTOEx", "com.sapienter.jbilling.server.util.db.AbstractDAS", "org.apache.log4j.Category"],
    "com.sapienter.jbilling.server.user.CreateResponseWS": ["com.sapienter.jbilling.server.payment.PaymentAuthorizationDTOEx", "com.sapienter.jbilling.server.user.CreateResponseWS", "<nulltype>", "java.io.Serializable"],
    "com.sapienter.jbilling.client.authentication.CompanyUserDetailsService": ["org.springframework.dao.DataAccessException", "org.springframework.security.core.userdetails.UsernameNotFoundException", "com.sapienter.jbilling.server.user.permisson.db.PermissionDTO", "com.sapienter.jbilling.client.authentication.util.UsernameHelper", "com.sapienter.jbilling.server.util.db.CurrencyDTO", "org.codehaus.groovy.grails.plugins.springsecurity.SpringSecurityUtils", "java.util.ArrayList", "com.sapienter.jbilling.client.authentication.CompanyUserDetails", "grails.plugins.springsecurity.SpringSecurityService", "org.springframework.security.core.authority.GrantedAuthorityImpl", "org.springframework.security.core.userdetails.UserDetails", "org.codehaus.groovy.grails.plugins.springsecurity.GrailsUserDetailsService", "com.sapienter.jbilling.server.util.db.LanguageDTO", "com.sapienter.jbilling.server.user.db.UserDTO", "java.util.Collection", "com.sapienter.jbilling.server.user.UserBL", "<nulltype>", "org.springframework.security.core.GrantedAuthority", "com.sapienter.jbilling.server.user.permisson.db.RoleDTO", "java.util.List", "com.sapienter.jbilling.server.user.db.CompanyDTO", "com.sapienter.jbilling.client.authentication.CompanyUserDetailsService"],
    "com.sapienter.jbilling.server.pluggableTask.OrderPeriodTask": ["com.sapienter.jbilling.server.order.db.OrderDTO", "com.sapienter.jbilling.server.pluggableTask.OrderPeriodTask", "java.util.List", "java.util.Date", "com.sapienter.jbilling.server.pluggableTask.TaskException", "com.sapienter.jbilling.server.process.PeriodOfTime"],
    "com.sapienter.jbilling.server.process.BillingProcessSessionBean": ["com.sapienter.jbilling.server.util.PreferenceBL", "com.sapienter.jbilling.server.user.db.CompanyDAS", "com.sapienter.jbilling.server.process.BillingProcessSessionBean", "com.sapienter.jbilling.server.process.IBillingProcessSessionBean", "java.util.Date", "com.sapienter.jbilling.server.util.Context", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO", "com.sapienter.jbilling.server.process.db.PeriodUnitDAS", "org.apache.log4j.Logger", "java.math.BigDecimal", "com.sapienter.jbilling.server.process.db.BillingProcessDTO", "com.sapienter.jbilling.server.invoice.db.InvoiceDAS", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskManager", "org.springframework.transaction.interceptor.TransactionAspectSupport", "com.sapienter.jbilling.server.process.AgeingBL", "com.sapienter.jbilling.server.process.db.PaperInvoiceBatchDTO", "org.apache.log4j.Category", "org.springframework.dao.EmptyResultDataAccessException", "com.sapienter.jbilling.server.process.task.BasicBillingProcessFilterTask", "com.sapienter.jbilling.server.util.MapPeriodToCalendar", "java.util.GregorianCalendar", "org.hibernate.ScrollableResults", "com.sapienter.jbilling.server.user.db.UserDTO", "java.util.Collection", "com.sapienter.jbilling.server.payment.event.EndProcessPaymentEvent", "com.sapienter.jbilling.server.util.audit.EventLogger", "java.util.Set", "com.sapienter.jbilling.server.util.Context$Name", "com.sapienter.jbilling.server.process.AgeingDTOEx[]", "java.util.List", "com.sapienter.jbilling.server.invoice.PaperInvoiceBatchBL", "com.sapienter.jbilling.server.process.BillingProcessRunBL", "com.sapienter.jbilling.server.process.BillingProcessDTOEx", "com.sapienter.jbilling.server.invoice.InvoiceBL", "com.sapienter.jbilling.server.process.db.ProcessRunUserDTO", "com.sapienter.jbilling.server.notification.INotificationSessionBean", "com.sapienter.jbilling.server.process.event.NoNewInvoiceEvent", "com.sapienter.jbilling.server.process.AgeingDTOEx", "com.sapienter.jbilling.server.process.db.BillingProcessDAS", "com.sapienter.jbilling.server.notification.NotificationNotFoundException", "java.util.concurrent.atomic.AtomicBoolean", "com.sapienter.jbilling.server.process.BillingProcessRunBL$DateComparator", "com.sapienter.jbilling.server.notification.MessageDTO", "com.sapienter.jbilling.server.user.EntityBL", "java.sql.SQLException", "java.util.Calendar", "com.sapienter.jbilling.server.process.ConfigurationBL", "org.springframework.transaction.annotation.Propagation", "com.sapienter.jbilling.common.Util", "com.sapienter.jbilling.server.process.db.ProcessRunDTO", "com.sapienter.jbilling.server.process.BillingProcessBL", "com.sapienter.jbilling.server.system.event.EventManager", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO", "java.util.Iterator", "com.sapienter.jbilling.server.util.db.AbstractGenericStatus", "com.sapienter.jbilling.server.user.UserBL", "<nulltype>", "com.sapienter.jbilling.server.process.task.IBillingProcessFilterTask", "com.sapienter.jbilling.server.order.db.OrderProcessDTO", "com.sapienter.jbilling.server.process.db.PeriodUnitDTO", "com.sapienter.jbilling.server.notification.NotificationBL", "com.sapienter.jbilling.common.SessionInternalError", "com.sapienter.jbilling.server.user.db.CompanyDTO", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.util.Constants", "java.util.Collections", "com.sapienter.jbilling.server.payment.event.ProcessPaymentEvent", "org.springframework.transaction.annotation.Transactional"],
    "com.sapienter.jbilling.server.payment.event.PaymentDeletedEvent": ["com.sapienter.jbilling.server.payment.event.PaymentDeletedEvent", "com.sapienter.jbilling.server.system.event.Event", "com.sapienter.jbilling.server.payment.db.PaymentDTO"],
    "com.sapienter.jbilling.server.process.IBillingProcessSessionBean": ["com.sapienter.jbilling.server.process.IBillingProcessSessionBean", "java.util.Date", "java.util.Collection", "com.sapienter.jbilling.server.process.AgeingDTOEx", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO", "java.sql.SQLException", "com.sapienter.jbilling.server.process.AgeingDTOEx[]", "com.sapienter.jbilling.common.SessionInternalError", "com.sapienter.jbilling.server.process.BillingProcessDTOEx", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO"],
    "com.sapienter.jbilling.server.util.Bootstrap": ["com.sapienter.jbilling.server.user.db.CompanyDAS", "com.sapienter.jbilling.server.util.Bootstrap", "com.sapienter.jbilling.server.process.task.IScheduledTask", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskException", "<nulltype>", "com.sapienter.jbilling.client.process.Scheduler", "org.apache.log4j.Logger", "java.util.List", "org.quartz.SchedulerException", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskManager", "com.sapienter.jbilling.client.process.JobScheduler", "com.sapienter.jbilling.server.user.db.CompanyDTO", "com.sapienter.jbilling.server.util.Constants", "com.sapienter.jbilling.client.process.Trigger", "org.apache.log4j.Category"],
    "com.sapienter.jbilling.common.PermissionTypeIdComparator": ["com.sapienter.jbilling.server.user.permisson.db.PermissionDTO", "com.sapienter.jbilling.common.PermissionTypeIdComparator", "com.sapienter.jbilling.server.user.permisson.db.PermissionTypeDTO", "java.util.Comparator", "<nulltype>"],
    "com.sapienter.jbilling.server.process.db.ProcessRunTotalPmDTO": ["javax.persistence.Entity", "javax.persistence.ManyToOne", "com.sapienter.jbilling.server.process.db.ProcessRunTotalPmDTO", "javax.persistence.JoinColumn", "org.hibernate.annotations.CacheConcurrencyStrategy", "org.hibernate.annotations.Cache", "java.io.Serializable", "java.math.BigDecimal", "javax.persistence.GenerationType", "javax.persistence.Column", "com.sapienter.jbilling.server.payment.db.PaymentMethodDTO", "javax.persistence.Table", "javax.persistence.GeneratedValue", "javax.persistence.TableGenerator", "javax.persistence.FetchType", "javax.persistence.Version", "com.sapienter.jbilling.server.process.db.ProcessRunTotalDTO", "javax.persistence.Id"],
    "com.sapienter.jbilling.server.payment.db.PaymentInvoiceMapDAS": ["org.hibernate.Criteria", "org.hibernate.criterion.Restrictions", "com.sapienter.jbilling.server.payment.db.PaymentDTO", "com.sapienter.jbilling.server.payment.db.PaymentInvoiceMapDAS", "com.sapienter.jbilling.server.payment.db.PaymentInvoiceMapDTO", "<nulltype>", "java.math.BigDecimal", "java.util.List", "java.util.Calendar", "com.sapienter.jbilling.server.invoice.db.InvoiceDAS", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO"],
    "com.sapienter.jbilling.server.pluggableTask.CalculateDueDate": ["com.sapienter.jbilling.server.order.TimePeriod", "com.sapienter.jbilling.server.util.MapPeriodToCalendar", "com.sapienter.jbilling.server.pluggableTask.PluggableTask", "java.util.GregorianCalendar", "com.sapienter.jbilling.server.pluggableTask.InvoiceCompositionTask", "java.util.Date", "com.sapienter.jbilling.server.pluggableTask.CalculateDueDate", "com.sapienter.jbilling.server.pluggableTask.TaskException", "java.math.BigDecimal", "org.apache.log4j.Logger", "java.util.Calendar", "com.sapienter.jbilling.server.invoice.NewInvoiceDTO", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO", "com.sapienter.jbilling.server.process.PeriodOfTime", "org.apache.log4j.Category"],
    "com.sapienter.jbilling.server.order.OrderPeriodWS": ["javax.validation.constraints.Min", "com.sapienter.jbilling.server.util.InternationalDescriptionWS", "com.sapienter.jbilling.server.order.db.OrderPeriodDTO", "com.sapienter.jbilling.server.order.OrderPeriodWS", "<nulltype>", "java.io.Serializable", "java.util.ArrayList", "java.util.List", "com.sapienter.jbilling.server.process.db.PeriodUnitDTO", "javax.validation.constraints.Digits", "com.sapienter.jbilling.server.user.db.CompanyDTO"],
    "com.sapienter.jbilling.server.system.event.InternalEventProcessor": ["com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDTO", "com.sapienter.jbilling.server.system.event.Event", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskException", "com.sapienter.jbilling.server.system.event.task.IInternalEventsTask", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskTypeDTO", "com.sapienter.jbilling.server.system.event.InternalEventProcessor", "<nulltype>", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskTypeCategoryDTO", "org.apache.log4j.Logger", "com.sapienter.jbilling.common.SessionInternalError", "com.sapienter.jbilling.server.system.event.CatchAllEvent", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskManager", "com.sapienter.jbilling.server.util.Constants", "org.apache.log4j.Category"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentFilterTask": ["com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskException", "com.sapienter.jbilling.server.payment.blacklist.IpAddressFilter", "com.sapienter.jbilling.server.payment.blacklist.UserIdFilter", "java.util.ArrayList", "com.sapienter.jbilling.server.payment.tasks.PaymentFilterTask", "com.sapienter.jbilling.server.payment.blacklist.NameFilter", "org.apache.log4j.Logger", "com.sapienter.jbilling.server.payment.db.PaymentResultDAS", "com.sapienter.jbilling.server.payment.blacklist.AddressFilter", "java.util.Map", "com.sapienter.jbilling.server.payment.db.PaymentResultDTO", "java.util.LinkedList", "com.sapienter.jbilling.server.payment.blacklist.CreditCardFilter", "org.apache.log4j.Category", "com.sapienter.jbilling.server.pluggableTask.PluggableTask", "com.sapienter.jbilling.server.payment.db.PaymentDTO", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO", "com.sapienter.jbilling.server.payment.blacklist.BlacklistFilter$Result", "com.sapienter.jbilling.server.payment.blacklist.BlacklistFilter", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription$Type", "<nulltype>", "com.sapienter.jbilling.server.payment.blacklist.PhoneFilter", "java.util.List", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription", "com.sapienter.jbilling.server.payment.PaymentDTOEx", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.pluggableTask.PaymentTask", "com.sapienter.jbilling.server.util.Constants"],
    "com.sapienter.jbilling.server.util.db.InternationalDescription": ["javax.persistence.Entity", "com.sapienter.jbilling.server.util.db.InternationalDescriptionId", "org.hibernate.annotations.CacheConcurrencyStrategy", "org.hibernate.annotations.Cache", "java.io.Serializable", "javax.persistence.AttributeOverrides", "javax.persistence.AttributeOverride", "javax.persistence.Column", "com.sapienter.jbilling.server.util.db.InternationalDescription", "javax.persistence.Table", "javax.persistence.EmbeddedId"],
    "com.sapienter.jbilling.server.payment.blacklist.CsvProcessor": ["com.sapienter.jbilling.server.user.db.CompanyDAS", "java.util.Date", "com.sapienter.jbilling.server.util.Util", "com.sapienter.jbilling.server.payment.blacklist.CsvProcessor$Column[]", "java.util.HashSet", "org.apache.log4j.Logger", "com.sapienter.jbilling.server.user.EntityBL", "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDTO", "com.sapienter.jbilling.server.payment.blacklist.CsvProcessor", "java.util.ResourceBundle", "java.util.Locale", "org.apache.log4j.Category", "com.sapienter.jbilling.server.user.contact.db.ContactFieldDTO", "com.sapienter.jbilling.server.user.db.UserDTO", "com.sapienter.jbilling.server.payment.blacklist.BlacklistBL", "com.sapienter.jbilling.server.payment.blacklist.CsvProcessor$ParseException", "java.util.Set", "java.io.IOException", "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDAS", "com.sapienter.jbilling.server.payment.blacklist.CsvProcessor$Column", "com.sapienter.jbilling.server.user.db.UserDAS", "com.sapienter.jbilling.server.user.db.CreditCardDAS", "com.sapienter.jbilling.server.user.contact.db.ContactFieldTypeDTO", "com.sapienter.jbilling.server.user.contact.db.ContactDTO", "<nulltype>", "com.sapienter.jbilling.server.user.contact.db.ContactFieldTypeDAS", "com.sapienter.jbilling.server.user.db.CreditCardDTO", "com.sapienter.jbilling.server.user.contact.db.ContactDAS", "com.sapienter.jbilling.common.SessionInternalError", "com.sapienter.jbilling.server.user.db.CompanyDTO", "com.sapienter.jbilling.server.util.db.AbstractDAS", "java.io.FileReader", "java.io.BufferedReader"],
    "com.sapienter.jbilling.common.Constants": ["com.sapienter.jbilling.common.CommonConstants", "com.sapienter.jbilling.common.Constants"],
    "com.sapienter.jbilling.server.system.event.CatchAllEvent": ["com.sapienter.jbilling.server.system.event.Event", "com.sapienter.jbilling.server.system.event.CatchAllEvent", "<nulltype>"],
    "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskManager": ["com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskException", "com.sapienter.jbilling.server.util.Context", "java.util.ArrayList", "org.apache.log4j.Logger", "T", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskManager", "org.apache.log4j.Category", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDTO", "com.sapienter.jbilling.server.pluggableTask.PluggableTask", "java.util.Iterator", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskTypeDTO", "com.sapienter.jbilling.server.util.Context$Name", "<nulltype>", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskTypeCategoryDTO", "java.util.List", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDAS"],
    "com.sapienter.jbilling.server.process.BillingProcessRunTotalDTOEx": ["com.sapienter.jbilling.server.util.db.CurrencyDTO", "<nulltype>", "java.math.BigDecimal", "com.sapienter.jbilling.server.process.BillingProcessRunTotalDTOEx", "java.util.Hashtable", "com.sapienter.jbilling.server.process.db.ProcessRunTotalDTO"],
    "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO": ["com.sapienter.jbilling.server.invoice.db.InvoiceLineTypeDTO", "com.sapienter.jbilling.server.item.db.ItemDTO", "java.math.BigDecimal", "javax.persistence.Table", "javax.persistence.TableGenerator", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO", "javax.persistence.Version", "javax.persistence.Id", "javax.persistence.Entity", "javax.persistence.ManyToOne", "javax.persistence.JoinColumn", "org.hibernate.annotations.CacheConcurrencyStrategy", "<nulltype>", "org.hibernate.annotations.Cache", "java.io.Serializable", "javax.persistence.Column", "javax.persistence.GenerationType", "javax.persistence.GeneratedValue", "javax.persistence.Transient", "javax.persistence.FetchType"],
    "com.sapienter.jbilling.server.process.AgeingBL": ["com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskException", "com.sapienter.jbilling.server.process.db.AgeingEntityStepDTO", "java.util.Date", "com.sapienter.jbilling.server.process.AgeingDTOEx", "com.sapienter.jbilling.server.process.AgeingWS", "javax.naming.NamingException", "java.util.concurrent.ConcurrentMap", "org.apache.log4j.Logger", "com.sapienter.jbilling.server.user.EntityBL", "java.sql.SQLException", "com.sapienter.jbilling.server.user.db.UserStatusDAS", "com.sapienter.jbilling.server.util.db.AbstractDescription", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskManager", "java.util.Map", "com.sapienter.jbilling.server.process.db.AgeingEntityStepDAS", "com.sapienter.jbilling.server.process.AgeingBL", "com.sapienter.jbilling.server.user.db.UserStatusDTO", "org.apache.log4j.Category", "com.sapienter.jbilling.server.process.task.IAgeingTask", "com.sapienter.jbilling.server.user.db.UserDTO", "com.sapienter.jbilling.server.util.db.AbstractGenericStatusDAS", "java.util.concurrent.ConcurrentHashMap", "com.sapienter.jbilling.server.util.audit.EventLogger", "com.sapienter.jbilling.server.user.UserDTOEx", "com.sapienter.jbilling.server.user.db.UserDAS", "<nulltype>", "com.sapienter.jbilling.server.process.AgeingDTOEx[]", "com.sapienter.jbilling.common.SessionInternalError", "com.sapienter.jbilling.server.user.db.CompanyDTO", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.util.Constants"],
    "com.sapienter.jbilling.server.notification.barcode.BarcodeRenderer": ["net.sf.jasperreports.engine.JRException", "org.krysalis.barcode4j.impl.upcean.EAN13Bean", "java.awt.geom.Rectangle2D", "org.krysalis.barcode4j.impl.upcean.UPCEBean", "org.krysalis.barcode4j.impl.pdf417.PDF417Bean", "org.krysalis.barcode4j.impl.int2of5.Interleaved2Of5Bean", "org.krysalis.barcode4j.impl.AbstractBarcodeBean", "org.krysalis.barcode4j.impl.code39.Code39Bean", "org.krysalis.barcode4j.impl.upcean.UPCABean", "org.krysalis.barcode4j.impl.code128.Code128Bean", "java.awt.Graphics2D", "org.krysalis.barcode4j.impl.code128.EAN128Bean", "org.krysalis.barcode4j.impl.fourstate.RoyalMailCBCBean", "com.sapienter.jbilling.server.notification.barcode.BarcodeRenderer", "org.krysalis.barcode4j.BarcodeDimension", "org.krysalis.barcode4j.impl.postnet.POSTNETBean", "org.krysalis.barcode4j.impl.upcean.EAN8Bean", "net.sf.jasperreports.engine.JRAbstractSvgRenderer", "org.krysalis.barcode4j.impl.datamatrix.DataMatrixBean", "org.krysalis.barcode4j.impl.codabar.CodabarBean", "org.krysalis.barcode4j.impl.fourstate.USPSIntelligentMailBean", "<nulltype>", "org.krysalis.barcode4j.output.java2d.Java2DCanvasProvider", "java.awt.geom.RectangularShape", "java.awt.Graphics", "com.sapienter.jbilling.server.notification.barcode.BarcodeType"],
    "com.sapienter.jbilling.server.payment.db.PaymentInfoChequeDAS": ["org.hibernate.Criteria", "org.hibernate.criterion.Restrictions", "com.sapienter.jbilling.server.payment.db.PaymentInfoChequeDTO", "com.sapienter.jbilling.server.payment.db.PaymentDTO", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.payment.db.PaymentInfoChequeDAS"],
    "com.sapienter.jbilling.server.process.db.PaperInvoiceBatchDTO": ["java.util.Date", "java.util.HashSet", "com.sapienter.jbilling.server.process.db.BillingProcessDTO", "javax.persistence.Table", "javax.persistence.TableGenerator", "com.sapienter.jbilling.server.process.db.PaperInvoiceBatchDTO", "javax.persistence.Version", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO", "javax.persistence.Id", "javax.persistence.Entity", "javax.persistence.CascadeType", "javax.persistence.OneToMany", "java.util.Set", "org.hibernate.annotations.CacheConcurrencyStrategy", "<nulltype>", "org.hibernate.annotations.Cache", "java.io.Serializable", "javax.persistence.OneToOne", "javax.persistence.Column", "javax.persistence.GenerationType", "javax.persistence.GeneratedValue", "javax.persistence.FetchType"],
    "com.sapienter.jbilling.server.payment.tasks.paypal.dto.RefundType": ["com.sapienter.jbilling.server.payment.tasks.paypal.dto.RefundType"],
    "com.sapienter.jbilling.server.report.db.ReportParameterDTO": ["javax.persistence.Table", "T", "javax.persistence.TableGenerator", "com.sapienter.jbilling.server.report.db.ReportParameterDTO", "javax.persistence.Id", "javax.persistence.Entity", "javax.persistence.InheritanceType", "javax.persistence.ManyToOne", "javax.persistence.JoinColumn", "org.hibernate.annotations.CacheConcurrencyStrategy", "org.hibernate.annotations.Cache", "java.io.Serializable", "javax.persistence.Column", "javax.persistence.GenerationType", "javax.persistence.Inheritance", "javax.persistence.GeneratedValue", "javax.persistence.DiscriminatorColumn", "com.sapienter.jbilling.server.report.db.ReportDTO", "javax.persistence.Transient", "javax.persistence.FetchType"],
    "com.sapienter.jbilling.common.CommonConstants": ["java.math.BigDecimal", "com.sapienter.jbilling.common.CommonConstants"],
    "com.sapienter.jbilling.server.process.task.IScheduledTask": ["com.sapienter.jbilling.server.process.task.IScheduledTask", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskException", "org.quartz.Trigger", "org.quartz.Job", "org.quartz.JobDetail"],
    "com.sapienter.jbilling.server.pluggableTask.PluggableTask": ["org.drools.runtime.StatefulKnowledgeSession", "org.apache.commons.lang.StringUtils", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskException", "java.util.Date", "java.text.SimpleDateFormat", "java.util.concurrent.atomic.AtomicBoolean", "java.util.HashMap", "com.sapienter.jbilling.server.util.Util", "org.drools.agent.KnowledgeAgent", "java.util.ArrayList", "org.drools.io.ResourceFactory", "org.apache.log4j.Logger", "com.sapienter.jbilling.common.Util", "java.util.Map", "java.text.ParseException", "java.util.Hashtable", "java.text.DateFormat", "org.apache.log4j.Category", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDTO", "com.sapienter.jbilling.server.pluggableTask.PluggableTask", "org.drools.runtime.rule.FactHandle", "java.util.Collection", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskTypeDTO", "org.drools.agent.KnowledgeAgentFactory", "org.drools.io.ResourceChangeScannerConfiguration", "<nulltype>", "java.io.File", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskParameterDTO", "java.util.List", "org.drools.io.impl.ByteArrayResource", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription", "org.drools.KnowledgeBase"],
    "com.sapienter.jbilling.server.user.event.SubscriptionStatusEventProcessor": ["com.sapienter.jbilling.server.system.event.Event", "com.sapienter.jbilling.server.user.event.SubscriptionStatusEventProcessor", "com.sapienter.jbilling.server.system.event.EventProcessor", "com.sapienter.jbilling.server.process.event.NoNewInvoiceEvent", "com.sapienter.jbilling.server.order.event.NewActiveUntilEvent", "com.sapienter.jbilling.server.payment.event.PaymentSuccessfulEvent", "com.sapienter.jbilling.server.payment.event.PaymentProcessorUnavailableEvent", "com.sapienter.jbilling.server.user.UserDTOEx", "<nulltype>", "com.sapienter.jbilling.server.user.tasks.ISubscriptionStatusManager", "org.apache.log4j.Logger", "com.sapienter.jbilling.server.util.Constants", "com.sapienter.jbilling.server.payment.event.AbstractPaymentEvent", "org.apache.log4j.Category", "com.sapienter.jbilling.server.payment.event.PaymentFailedEvent"],
    "com.sapienter.jbilling.server.mediation.db.MediationMapDAS": ["com.sapienter.jbilling.server.mediation.db.MediationMapDAS", "com.sapienter.jbilling.server.mediation.db.MediationOrderMap", "com.sapienter.jbilling.server.util.db.AbstractDAS"],
    "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDAS": ["java.util.Calendar", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDAS", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO"],
    "com.sapienter.jbilling.server.user.partner.db.PartnerDAS": ["com.sapienter.jbilling.server.user.partner.db.Partner", "com.sapienter.jbilling.server.user.partner.db.PartnerDAS", "com.sapienter.jbilling.server.util.db.AbstractDAS"],
    "com.sapienter.jbilling.server.util.db.InternationalDescriptionId": ["javax.persistence.Column", "com.sapienter.jbilling.server.util.db.InternationalDescriptionId", "javax.persistence.Embeddable", "<nulltype>", "java.io.Serializable"],
    "com.sapienter.jbilling.server.payment.PaymentAuthorizationBL": ["com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDAS", "com.sapienter.jbilling.server.payment.PaymentBL", "com.sapienter.jbilling.server.payment.db.PaymentDTO", "com.sapienter.jbilling.server.payment.PaymentAuthorizationBL", "java.util.Collection", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO", "<nulltype>", "com.sapienter.jbilling.server.payment.db.PaymentDAS", "org.apache.log4j.Logger", "java.math.BigDecimal", "com.sapienter.jbilling.common.Util", "com.sapienter.jbilling.common.SessionInternalError", "com.sapienter.jbilling.server.payment.PaymentDTOEx", "com.sapienter.jbilling.server.util.db.AbstractDAS", "org.apache.log4j.Category"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentAuthorizeNetCIMTask": ["com.sapienter.jbilling.server.payment.IExternalCreditCardStorage", "com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskException", "org.apache.log4j.Logger", "com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi", "com.sapienter.jbilling.server.payment.db.PaymentResultDAS", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData", "com.sapienter.jbilling.server.payment.tasks.DublicateProfileRecordException", "com.sapienter.jbilling.server.user.ContactBL", "org.apache.log4j.Category", "java.util.Iterator", "com.sapienter.jbilling.server.user.db.UserDTO", "com.sapienter.jbilling.server.payment.db.PaymentDTO", "com.sapienter.jbilling.server.payment.PaymentAuthorizationBL", "com.sapienter.jbilling.server.payment.tasks.PaymentAuthorizeNetCIMTask", "java.util.Set", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO", "com.sapienter.jbilling.server.pluggableTask.PaymentTaskWithTimeout", "com.sapienter.jbilling.server.user.contact.db.ContactDTO", "com.sapienter.jbilling.server.user.UserBL", "<nulltype>", "com.sapienter.jbilling.server.user.db.AchDTO", "com.sapienter.jbilling.server.user.db.CreditCardDTO", "com.sapienter.jbilling.server.payment.PaymentDTOEx", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.pluggableTask.PaymentTask", "com.sapienter.jbilling.server.util.Constants"],
    "com.sapienter.jbilling.server.invoice.InvoiceWS": ["java.util.Arrays", "java.util.Date", "<nulltype>", "java.io.Serializable", "com.sapienter.jbilling.server.invoice.InvoiceWS", "com.sapienter.jbilling.server.entity.InvoiceLineDTO[]", "java.math.BigDecimal", "com.sapienter.jbilling.server.security.WSSecured", "com.sapienter.jbilling.server.entity.InvoiceLineDTO"],
    "com.sapienter.jbilling.server.order.OrderWS": ["java.util.Arrays", "java.util.Date", "javax.validation.constraints.NotNull", "<nulltype>", "java.io.Serializable", "com.sapienter.jbilling.server.invoice.InvoiceWS", "javax.validation.Valid", "java.math.BigDecimal", "com.sapienter.jbilling.server.security.WSSecured", "com.sapienter.jbilling.server.order.OrderLineWS[]", "com.sapienter.jbilling.server.order.OrderWS", "org.hibernate.validator.constraints.NotEmpty", "com.sapienter.jbilling.server.order.validator.DateRange", "com.sapienter.jbilling.server.invoice.InvoiceWS[]", "com.sapienter.jbilling.server.order.OrderLineWS"],
    "com.sapienter.jbilling.server.provisioning.task.StringPair": ["com.sapienter.jbilling.server.provisioning.task.StringPair"],
    "com.sapienter.jbilling.server.report.db.ReportDTO": ["com.sapienter.jbilling.server.report.db.ReportTypeDTO", "java.util.HashMap", "java.util.ArrayList", "java.util.HashSet", "com.sapienter.jbilling.server.util.db.AbstractDescription", "javax.persistence.Table", "javax.persistence.TableGenerator", "org.hibernate.annotations.FetchMode", "com.sapienter.jbilling.common.Util", "java.util.Map", "javax.persistence.ManyToMany", "javax.persistence.Version", "com.sapienter.jbilling.server.report.db.ReportParameterDTO", "javax.persistence.Id", "javax.persistence.Entity", "javax.persistence.ManyToOne", "org.hibernate.annotations.Fetch", "javax.persistence.JoinTable", "javax.persistence.CascadeType", "javax.persistence.JoinColumn", "javax.persistence.OneToMany", "java.util.Set", "org.hibernate.annotations.CacheConcurrencyStrategy", "java.io.File", "<nulltype>", "org.hibernate.annotations.Cache", "java.io.Serializable", "javax.persistence.Column", "javax.persistence.GenerationType", "java.util.List", "javax.persistence.GeneratedValue", "com.sapienter.jbilling.server.report.db.ReportDTO", "javax.persistence.Transient", "javax.persistence.FetchType", "com.sapienter.jbilling.server.user.db.CompanyDTO", "com.sapienter.jbilling.server.util.Constants"],
    "com.sapienter.jbilling.server.pluggableTask.PenaltyTask": ["com.sapienter.jbilling.server.pluggableTask.PenaltyTask", "com.sapienter.jbilling.server.pluggableTask.TaskException"],
    "com.sapienter.jbilling.server.process.task.ScheduledTask": ["org.quartz.JobExecutionContext", "com.sapienter.jbilling.server.process.task.IScheduledTask", "com.sapienter.jbilling.server.pluggableTask.PluggableTask", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskException", "java.util.HashMap", "org.quartz.Scheduler", "org.quartz.JobExecutionException", "org.quartz.JobDataMap", "java.util.Map", "com.sapienter.jbilling.server.process.task.ScheduledTask", "org.quartz.JobDetail"],
    "com.sapienter.jbilling.server.util.db.JbillingTable": ["javax.persistence.Entity", "javax.persistence.UniqueConstraint", "javax.persistence.CascadeType", "javax.persistence.OneToMany", "java.util.Set", "org.hibernate.annotations.CacheConcurrencyStrategy", "org.hibernate.annotations.Cache", "java.io.Serializable", "java.util.HashSet", "javax.persistence.Column", "com.sapienter.jbilling.server.util.db.PreferenceDTO", "com.sapienter.jbilling.server.util.audit.db.EventLogDTO", "javax.persistence.Table", "javax.persistence.FetchType", "com.sapienter.jbilling.server.user.contact.db.ContactMapDTO", "com.sapienter.jbilling.server.util.db.JbillingTable", "javax.persistence.Id"],
    "com.sapienter.jbilling.server.notification.db.NotificationMessageArchLineDAS": ["org.apache.log4j.Logger", "com.sapienter.jbilling.server.notification.db.NotificationMessageArchLineDAS", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.notification.db.NotificationMessageArchLineDTO", "org.apache.log4j.Category"],
    "com.sapienter.jbilling.server.item.tasks.BasicItemManager": ["com.sapienter.jbilling.server.item.tasks.BasicItemManager", "com.sapienter.jbilling.server.item.PricingField", "com.sapienter.jbilling.server.mediation.Record", "com.sapienter.jbilling.server.item.ItemDecimalsException", "com.sapienter.jbilling.server.order.db.OrderLineDTO", "com.sapienter.jbilling.server.pluggableTask.TaskException", "java.util.ArrayList", "com.sapienter.jbilling.server.item.db.ItemDTO", "java.math.BigDecimal", "com.sapienter.jbilling.server.util.db.AbstractDescription", "com.sapienter.jbilling.common.Constants", "com.sapienter.jbilling.server.order.OrderBL", "com.sapienter.jbilling.server.item.tasks.IItemPurchaseManager", "com.sapienter.jbilling.server.pluggableTask.PluggableTask", "com.sapienter.jbilling.server.item.ItemBL", "<nulltype>", "com.sapienter.jbilling.server.order.db.OrderDTO", "java.util.List"],
    "com.sapienter.jbilling.server.user.permisson.db.PermissionDTO": ["com.sapienter.jbilling.server.user.permisson.db.PermissionUserDTO", "com.sapienter.jbilling.server.user.permisson.db.PermissionDTO", "com.sapienter.jbilling.server.user.permisson.db.PermissionTypeDTO", "java.util.HashSet", "com.sapienter.jbilling.server.util.db.AbstractDescription", "javax.persistence.Table", "javax.persistence.ManyToMany", "javax.persistence.Id", "javax.persistence.Entity", "javax.persistence.ManyToOne", "javax.persistence.JoinTable", "javax.persistence.CascadeType", "javax.persistence.JoinColumn", "javax.persistence.OneToMany", "java.util.Set", "org.hibernate.annotations.CacheConcurrencyStrategy", "<nulltype>", "org.hibernate.annotations.Cache", "java.io.Serializable", "com.sapienter.jbilling.server.user.permisson.db.RoleDTO", "javax.persistence.Column", "javax.persistence.Transient", "com.sapienter.jbilling.client.authentication.InitializingGrantedAuthority", "javax.persistence.FetchType", "com.sapienter.jbilling.server.util.Constants"],
    "com.sapienter.jbilling.server.notification.NotificationNotFoundException": ["com.sapienter.jbilling.server.notification.NotificationNotFoundException"],
    "com.sapienter.jbilling.server.process.task.DailyProRateCompositionTask": ["org.apache.log4j.Logger", "java.math.BigDecimal", "com.sapienter.jbilling.server.process.task.DailyProRateCompositionTask", "com.sapienter.jbilling.server.pluggableTask.BasicCompositionTask", "com.sapienter.jbilling.server.util.Constants", "<nulltype>", "com.sapienter.jbilling.server.process.PeriodOfTime", "org.apache.log4j.Category"],
    "com.sapienter.jbilling.server.order.UsagePeriod": ["java.util.Date", "com.sapienter.jbilling.server.order.UsagePeriod", "<nulltype>", "java.io.Serializable", "com.sapienter.jbilling.server.order.db.OrderDTO", "java.util.List", "com.sapienter.jbilling.server.process.PeriodOfTime"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentSageTask": ["com.sapienter.jbilling.server.payment.tasks.PaymentSageTask$SageAuthorization", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskException", "com.sapienter.jbilling.server.payment.tasks.PaymentSageTask$SageParams$VirtualCheck", "org.apache.commons.httpclient.methods.PostMethod", "org.apache.log4j.Logger", "java.math.BigDecimal", "com.sapienter.jbilling.server.payment.tasks.PaymentSageTask$Transaction", "com.sapienter.jbilling.server.payment.tasks.PaymentSageTask$SageResponseParser", "com.sapienter.jbilling.server.payment.tasks.PaymentSageTask$Params", "com.sapienter.jbilling.server.payment.db.PaymentResultDAS", "com.sapienter.jbilling.server.user.ContactBL", "java.text.DateFormat", "java.math.RoundingMode", "org.apache.log4j.Category", "com.sapienter.jbilling.server.payment.tasks.PaymentSageTask$NVPList", "com.sapienter.jbilling.server.payment.tasks.PaymentSageTask$SageParams$CreditCard", "com.sapienter.jbilling.server.payment.db.PaymentDTO", "com.sapienter.jbilling.server.payment.tasks.PaymentSageTask$SageValues$CustomerType", "com.sapienter.jbilling.server.pluggableTask.PaymentTaskWithTimeout", "org.apache.commons.httpclient.HttpClient", "com.sapienter.jbilling.server.payment.tasks.PaymentSageTask$SageResponseParser$SageResponseEntry", "com.sapienter.jbilling.server.payment.PaymentDTOEx", "com.sapienter.jbilling.server.payment.tasks.PaymentSageTask$SageValues$BankAccountType", "com.sapienter.jbilling.server.pluggableTask.PaymentTask", "com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase$Result", "com.sapienter.jbilling.server.payment.tasks.PaymentSageTask$SageParams$General", "com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase", "java.text.SimpleDateFormat", "com.sapienter.jbilling.server.payment.tasks.PaymentSageTask$SageParams", "com.sapienter.jbilling.server.payment.tasks.PaymentSageTask", "com.sapienter.jbilling.server.payment.tasks.PaymentSageTask$Urls", "org.apache.commons.httpclient.NameValuePair", "com.sapienter.jbilling.server.payment.db.PaymentResultDTO", "java.util.LinkedList", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDTO", "com.sapienter.jbilling.server.payment.tasks.PaymentSageTask$SageValues$ApprovalIndicator", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO", "java.io.IOException", "com.sapienter.jbilling.server.payment.tasks.PaymentSageTask$SageValues", "com.sapienter.jbilling.server.user.contact.db.ContactDTO", "<nulltype>", "com.sapienter.jbilling.server.user.db.AchDTO", "com.sapienter.jbilling.server.user.db.CreditCardDTO", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.util.Constants"],
    "com.sapienter.jbilling.server.provisioning.task.CAIProvisioningTask": ["com.sapienter.jbilling.server.pluggableTask.PluggableTask", "java.util.HashMap", "com.sapienter.jbilling.server.provisioning.task.CAIProvisioningTask", "com.sapienter.jbilling.server.util.Context", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription$Type", "com.sapienter.jbilling.server.pluggableTask.TaskException", "com.sapienter.jbilling.server.util.Context$Name", "<nulltype>", "org.apache.log4j.Logger", "java.util.List", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription", "java.util.Map", "com.sapienter.jbilling.server.provisioning.task.IExternalCommunication", "com.sapienter.jbilling.server.provisioning.task.IExternalProvisioning", "org.apache.log4j.Category"],
    "com.sapienter.jbilling.server.user.partner.db.PartnerPayoutDAS": ["com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.user.partner.db.PartnerPayout", "com.sapienter.jbilling.server.user.partner.db.PartnerPayoutDAS"],
    "com.sapienter.jbilling.common.PermissionIdComparator": ["com.sapienter.jbilling.server.user.permisson.db.PermissionDTO", "java.util.Comparator", "com.sapienter.jbilling.common.PermissionIdComparator"],
    "com.sapienter.jbilling.server.mediation.db.MediationProcess": ["java.util.Date", "com.sapienter.jbilling.server.mediation.db.MediationOrderMap", "java.util.ArrayList", "com.sapienter.jbilling.server.mediation.db.MediationProcess", "javax.persistence.Table", "javax.persistence.TableGenerator", "com.sapienter.jbilling.server.mediation.db.MediationConfiguration", "javax.persistence.Version", "com.sapienter.jbilling.server.mediation.db.MediationRecordDTO", "javax.persistence.Id", "javax.persistence.Entity", "javax.persistence.ManyToOne", "javax.persistence.CascadeType", "java.util.Collection", "javax.persistence.JoinColumn", "javax.persistence.OneToMany", "java.io.Serializable", "javax.persistence.Column", "javax.persistence.GenerationType", "javax.persistence.GeneratedValue", "javax.persistence.FetchType"],
    "com.sapienter.jbilling.server.payment.blacklist.NameFilter": ["com.sapienter.jbilling.server.user.db.UserDTO", "com.sapienter.jbilling.server.util.Util", "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDAS", "com.sapienter.jbilling.server.payment.blacklist.BlacklistFilter$Result", "com.sapienter.jbilling.server.user.db.UserDAS", "com.sapienter.jbilling.server.payment.blacklist.BlacklistFilter", "com.sapienter.jbilling.server.user.contact.db.ContactDTO", "<nulltype>", "com.sapienter.jbilling.server.payment.blacklist.NameFilter", "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDTO", "java.util.List", "java.util.ResourceBundle", "com.sapienter.jbilling.server.user.contact.db.ContactDAS", "com.sapienter.jbilling.server.payment.PaymentDTOEx", "com.sapienter.jbilling.server.user.db.CompanyDTO", "com.sapienter.jbilling.server.util.db.AbstractDAS"],
    "com.sapienter.jbilling.server.security.WSSecured": ["com.sapienter.jbilling.server.security.WSSecured"],
    "com.sapienter.jbilling.server.user.tasks.IValidatePurchaseTask": ["com.sapienter.jbilling.server.item.db.ItemDTO", "com.sapienter.jbilling.server.user.ValidatePurchaseWS", "java.math.BigDecimal", "java.util.List", "com.sapienter.jbilling.server.user.tasks.IValidatePurchaseTask", "com.sapienter.jbilling.server.item.PricingField", "com.sapienter.jbilling.server.pluggableTask.TaskException", "com.sapienter.jbilling.server.user.db.CustomerDTO"],
    "com.sapienter.jbilling.server.mediation.FormatField": ["com.sapienter.jbilling.server.mediation.FormatField"],
    "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskWS": ["com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDTO", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskTypeDTO", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskBL", "java.util.HashMap", "javax.validation.constraints.Min", "javax.validation.constraints.NotNull", "<nulltype>", "java.io.Serializable", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskParameterDTO", "com.sapienter.jbilling.server.security.WSSecured", "java.util.Map", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskWS", "java.util.Hashtable"],
    "com.sapienter.jbilling.server.process.db.ProcessRunDTO": ["java.util.Date", "java.util.HashSet", "com.sapienter.jbilling.server.process.db.BillingProcessDTO", "javax.persistence.Table", "javax.persistence.TableGenerator", "com.sapienter.jbilling.server.process.db.ProcessRunDTO", "javax.persistence.Version", "com.sapienter.jbilling.server.process.db.ProcessRunTotalDTO", "javax.persistence.Id", "javax.persistence.Entity", "javax.persistence.ManyToOne", "javax.persistence.CascadeType", "javax.persistence.JoinColumn", "javax.persistence.OneToMany", "java.util.Set", "org.hibernate.annotations.CacheConcurrencyStrategy", "org.hibernate.annotations.Cache", "java.io.Serializable", "javax.persistence.Column", "javax.persistence.GenerationType", "com.sapienter.jbilling.server.process.db.ProcessRunStatusDTO", "javax.persistence.GeneratedValue", "javax.persistence.FetchType"],
    "com.sapienter.jbilling.server.user.UserSessionBean": ["com.sapienter.jbilling.server.user.partner.db.Partner", "com.sapienter.jbilling.server.util.PreferenceBL", "com.sapienter.jbilling.server.user.PartnerSQL", "java.sql.Connection", "com.sapienter.jbilling.server.util.db.CurrencyDTO", "java.util.Date", "com.sapienter.jbilling.server.util.Context", "com.sapienter.jbilling.server.user.db.CustomerDTO", "org.apache.log4j.Logger", "java.math.BigDecimal", "com.sapienter.jbilling.server.util.audit.db.EventLogDTO", "com.sapienter.jbilling.server.user.ContactDTOEx", "java.util.Locale", "java.sql.ResultSet", "com.sapienter.jbilling.server.process.AgeingBL", "com.sapienter.jbilling.server.user.partner.db.PartnerRange[]", "com.sapienter.jbilling.server.user.ContactBL", "org.apache.log4j.Category", "org.springframework.dao.EmptyResultDataAccessException", "com.sapienter.jbilling.server.user.db.UserDTO", "java.util.Set", "com.sapienter.jbilling.server.user.partner.db.PartnerPayout", "java.sql.PreparedStatement", "java.util.List", "com.sapienter.jbilling.server.user.AchBL", "org.springframework.context.ApplicationContextAware", "com.sapienter.jbilling.server.notification.NotificationNotFoundException", "com.sapienter.jbilling.server.util.DTOFactory", "java.util.HashMap", "java.util.Calendar", "org.springframework.transaction.annotation.Propagation", "javax.sql.DataSource", "com.sapienter.jbilling.common.JNDILookup", "com.sapienter.jbilling.server.user.partner.PartnerBL", "com.sapienter.jbilling.server.user.UserSessionBean", "com.sapienter.jbilling.server.util.audit.db.EventLogDAS", "com.sapienter.jbilling.server.user.CreditCardBL", "java.util.Iterator", "com.sapienter.jbilling.server.user.IUserSessionBean", "com.sapienter.jbilling.server.user.UserDTOEx", "com.sapienter.jbilling.server.user.db.UserDAS", "org.springframework.context.ApplicationContext", "com.sapienter.jbilling.server.user.contact.db.ContactDTO", "com.sapienter.jbilling.server.user.UserBL", "<nulltype>", "java.sql.Date", "com.sapienter.jbilling.server.user.db.AchDTO", "com.sapienter.jbilling.server.user.db.CreditCardDTO", "com.sapienter.jbilling.common.SessionInternalError", "com.sapienter.jbilling.server.user.partner.db.PartnerRange", "java.util.Date[]", "java.sql.Statement", "com.sapienter.jbilling.server.user.db.CompanyDTO", "com.sapienter.jbilling.server.util.db.AbstractDAS", "org.springframework.transaction.annotation.Transactional"],
    "com.sapienter.jbilling.server.invoice.db.InvoiceDTO": ["com.sapienter.jbilling.server.invoice.db.InvoiceStatusDTO", "com.sapienter.jbilling.server.util.db.CurrencyDTO", "java.util.Date", "com.sapienter.jbilling.server.item.db.ItemDTO", "org.apache.log4j.Logger", "java.math.BigDecimal", "com.sapienter.jbilling.server.util.db.AbstractDescription", "com.sapienter.jbilling.server.process.db.BillingProcessDTO", "org.hibernate.annotations.FetchMode", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO", "com.sapienter.jbilling.server.process.db.PaperInvoiceBatchDTO", "javax.persistence.Version", "javax.persistence.Entity", "javax.persistence.ManyToOne", "javax.persistence.CascadeType", "com.sapienter.jbilling.server.user.db.UserDTO", "com.sapienter.jbilling.server.payment.db.PaymentDTO", "java.util.Collection", "java.util.Set", "java.io.Serializable", "com.sapienter.jbilling.server.order.db.OrderDTO", "javax.persistence.Column", "javax.persistence.GenerationType", "java.util.List", "javax.persistence.GeneratedValue", "com.sapienter.jbilling.server.util.csv.Exportable", "com.sapienter.jbilling.server.invoice.db.InvoiceLineTypeDTO", "com.sapienter.jbilling.server.payment.db.PaymentInvoiceMapDTO", "java.util.ArrayList", "java.util.HashSet", "javax.persistence.Table", "javax.persistence.TableGenerator", "com.sapienter.jbilling.server.invoice.db.InvoiceStatusDAS", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO", "javax.persistence.Id", "org.hibernate.annotations.Fetch", "java.util.Iterator", "com.sapienter.jbilling.server.util.db.AbstractGenericStatus", "javax.persistence.JoinColumn", "com.sapienter.jbilling.server.util.db.AbstractGenericStatusDAS", "javax.persistence.OneToMany", "org.hibernate.annotations.CacheConcurrencyStrategy", "org.hibernate.annotations.Cache", "<nulltype>", "com.sapienter.jbilling.server.order.db.OrderProcessDTO", "javax.persistence.Transient", "javax.persistence.FetchType", "com.sapienter.jbilling.server.util.Constants"],
    "com.sapienter.jbilling.server.provisioning.task.IExternalProvisioning": ["java.util.Map", "com.sapienter.jbilling.server.pluggableTask.TaskException", "com.sapienter.jbilling.server.provisioning.task.IExternalProvisioning"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayExternalTask": ["com.sapienter.jbilling.server.payment.IExternalCreditCardStorage", "com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskException", "java.util.Date", "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask", "org.apache.log4j.Logger", "java.math.BigDecimal", "com.sapienter.jbilling.common.Constants", "com.sapienter.jbilling.common.Util", "com.sapienter.jbilling.server.user.ContactBL", "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask$WorldPayParams$General", "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask$SvcType", "java.text.DateFormat", "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask$NVPList", "org.apache.log4j.Category", "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask$WorldPayParams$CreditCard", "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayExternalTask", "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask$WorldPayParams", "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask$WorldPayParams$ReAuthorize", "com.sapienter.jbilling.server.payment.db.PaymentMethodDAS", "java.util.Iterator", "com.sapienter.jbilling.server.user.db.UserDTO", "com.sapienter.jbilling.server.payment.db.PaymentDTO", "java.util.Set", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO", "com.sapienter.jbilling.server.user.contact.db.ContactDTO", "com.sapienter.jbilling.server.user.UserBL", "<nulltype>", "com.sapienter.jbilling.server.payment.db.PaymentDAS", "com.sapienter.jbilling.server.user.db.AchDTO", "com.sapienter.jbilling.server.user.db.CreditCardDTO", "com.sapienter.jbilling.server.payment.PaymentDTOEx", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase$Result"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayTask": ["com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskException", "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask", "org.apache.log4j.Logger", "java.math.BigDecimal", "com.sapienter.jbilling.server.payment.db.PaymentResultDTO", "com.sapienter.jbilling.server.user.ContactBL", "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask$WorldPayParams$General", "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask$SvcType", "java.text.DateFormat", "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask$NVPList", "org.apache.log4j.Category", "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayTask", "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask$WorldPayParams$CreditCard", "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask$WorldPayParams", "com.sapienter.jbilling.server.payment.db.PaymentDTO", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO", "com.sapienter.jbilling.server.user.contact.db.ContactDTO", "<nulltype>", "com.sapienter.jbilling.server.user.db.CreditCardDTO", "com.sapienter.jbilling.server.payment.PaymentDTOEx", "com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase$Result"],
    "com.sapienter.jbilling.server.process.event.NewUserStatusEvent": ["com.sapienter.jbilling.server.process.event.NewUserStatusEvent", "com.sapienter.jbilling.server.system.event.Event"],
    "com.sapienter.jbilling.server.provisioning.task.mmsc.EfsBaseObject": ["javax.xml.bind.annotation.XmlAccessorType", "com.sapienter.jbilling.server.provisioning.task.mmsc.EfsBaseRequest", "javax.xml.bind.annotation.XmlType", "com.sapienter.jbilling.server.provisioning.task.mmsc.EfsBaseObject", "javax.xml.bind.annotation.XmlSeeAlso", "com.sapienter.jbilling.server.provisioning.task.mmsc.EfsBaseResponse", "javax.xml.bind.annotation.XmlAccessType"],
    "com.sapienter.jbilling.server.util.db.PreferenceDAS": ["com.sapienter.jbilling.server.util.db.PreferenceDTO", "com.sapienter.jbilling.server.util.db.PreferenceDAS", "com.sapienter.jbilling.server.util.db.AbstractDAS", "org.hibernate.Query"],
    "com.sapienter.jbilling.server.customer.CustomerBL": ["com.sapienter.jbilling.server.user.db.CustomerDAS", "java.sql.Connection", "com.sapienter.jbilling.server.user.db.UserDTO", "com.sapienter.jbilling.server.customer.CustomerBL", "com.sapienter.jbilling.server.user.UserBL", "<nulltype>", "com.sapienter.jbilling.server.user.db.CustomerDTO", "java.sql.SQLException", "com.sapienter.jbilling.server.list.ResultList", "javax.sql.rowset.CachedRowSet", "com.sapienter.jbilling.server.customer.CustomerSQL", "javax.sql.RowSet", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.util.Constants"],
    "com.sapienter.jbilling.server.process.BillingProcessWS": ["java.util.Date", "java.util.ArrayList", "com.sapienter.jbilling.server.security.WSSecured", "com.sapienter.jbilling.server.process.db.BillingProcessDTO", "com.sapienter.jbilling.server.order.OrderProcessWS", "com.sapienter.jbilling.server.process.db.ProcessRunDTO", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO", "com.sapienter.jbilling.server.process.BillingProcessRunDTOEx", "java.util.Set", "com.sapienter.jbilling.server.process.BillingProcessWS", "<nulltype>", "java.io.Serializable", "com.sapienter.jbilling.server.order.db.OrderProcessDTO", "com.sapienter.jbilling.server.process.ProcessRunWS", "java.util.List", "com.sapienter.jbilling.server.process.db.PeriodUnitDTO", "com.sapienter.jbilling.server.user.db.CompanyDTO", "com.sapienter.jbilling.server.process.BillingProcessDTOEx"],
    "com.sapienter.jbilling.server.mediation.task.SaveToJDBCMediationErrorHandler": ["java.sql.Connection", "com.sapienter.jbilling.server.item.PricingField$Type", "java.util.Date", "com.sapienter.jbilling.server.item.PricingField", "com.sapienter.jbilling.server.mediation.Record", "com.sapienter.jbilling.server.util.Util", "com.sapienter.jbilling.server.pluggableTask.TaskException", "org.apache.log4j.Logger", "java.sql.SQLException", "com.sapienter.jbilling.server.mediation.db.MediationConfiguration", "java.util.Map", "java.util.LinkedList", "org.apache.log4j.Category", "com.sapienter.jbilling.server.pluggableTask.PluggableTask", "java.util.Iterator", "java.sql.Timestamp", "java.sql.PreparedStatement", "com.sapienter.jbilling.server.mediation.task.SaveToJDBCMediationErrorHandler", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription$Type", "<nulltype>", "java.util.List", "com.sapienter.jbilling.server.mediation.task.IMediationErrorHandler", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription", "java.util.Collections", "java.sql.DriverManager", "java.sql.Types"],
    "com.sapienter.jbilling.server.user.contact.db.ContactDTO": ["java.util.Date", "java.util.HashSet", "javax.persistence.Table", "javax.persistence.TableGenerator", "javax.persistence.Version", "javax.persistence.Id", "javax.persistence.Entity", "javax.persistence.UniqueConstraint", "com.sapienter.jbilling.server.user.contact.db.ContactFieldDTO", "javax.persistence.CascadeType", "com.sapienter.jbilling.server.user.db.UserDTO", "javax.persistence.JoinColumn", "javax.persistence.OneToMany", "java.util.Set", "org.hibernate.annotations.CacheConcurrencyStrategy", "com.sapienter.jbilling.server.user.contact.db.ContactDTO", "<nulltype>", "org.hibernate.annotations.Cache", "java.io.Serializable", "javax.persistence.OneToOne", "javax.persistence.Column", "javax.persistence.GenerationType", "javax.persistence.GeneratedValue", "javax.persistence.Transient", "javax.persistence.FetchType", "com.sapienter.jbilling.server.user.contact.db.ContactMapDTO"],
    "com.sapienter.jbilling.server.user.UserBL": ["com.sapienter.jbilling.server.util.PreferenceBL", "com.sapienter.jbilling.server.user.permisson.db.PermissionUserDTO", "com.sapienter.jbilling.server.user.partner.db.Partner", "java.util.Arrays", "com.sapienter.jbilling.server.util.db.CurrencyDTO", "com.sapienter.jbilling.server.item.PricingField", "com.sapienter.jbilling.server.util.Context", "com.sapienter.jbilling.server.item.db.ItemDTO", "java.math.BigDecimal", "java.sql.ResultSet", "javax.sql.rowset.CachedRowSet", "com.sapienter.jbilling.server.user.UserSQL", "java.io.PrintWriter", "com.sapienter.jbilling.server.order.OrderBL", "com.sapienter.jbilling.server.util.db.LanguageDAS", "java.util.Set", "com.sapienter.jbilling.server.order.db.OrderDTO", "com.sapienter.jbilling.server.user.ValidatePurchaseWS", "com.sapienter.jbilling.server.user.contact.db.ContactDAS", "com.sapienter.jbilling.server.entity.CreditCardDTO", "com.sapienter.jbilling.server.user.AchBL", "com.sapienter.jbilling.server.user.db.AchDAS", "java.util.ArrayList", "com.sapienter.jbilling.server.user.EntityBL", "java.sql.SQLException", "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDTO", "java.util.Calendar", "com.sapienter.jbilling.common.Util", "com.sapienter.jbilling.server.list.ResultList", "javax.sql.RowSet", "com.sapienter.jbilling.server.util.db.CurrencyDAS", "java.io.StringWriter", "com.sapienter.jbilling.server.util.db.AbstractGenericStatusDAS", "com.sapienter.jbilling.server.user.permisson.db.RoleDTO", "com.sapienter.jbilling.common.SessionInternalError", "com.sapienter.jbilling.server.user.UserWS", "com.sapienter.jbilling.server.user.UserTransitionResponseWS[]", "com.sapienter.jbilling.server.user.db.CompanyDAS", "java.sql.Connection", "java.util.Date", "com.sapienter.jbilling.server.user.UserWS[]", "javax.naming.NamingException", "com.sapienter.jbilling.server.user.db.CustomerDTO", "org.apache.log4j.Logger", "java.util.Locale", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskManager", "com.sapienter.jbilling.server.invoice.db.InvoiceDAS", "com.sapienter.jbilling.server.process.AgeingBL", "com.sapienter.jbilling.server.user.ContactBL", "org.springframework.dao.EmptyResultDataAccessException", "org.apache.log4j.Category", "com.sapienter.jbilling.server.user.db.UserDTO", "java.util.Collection", "com.sapienter.jbilling.server.util.audit.EventLogger", "com.sapienter.jbilling.server.util.Context$Name", "java.util.List", "com.sapienter.jbilling.server.user.permisson.db.RoleDAS", "com.sapienter.jbilling.server.user.db.CustomerDAS", "com.sapienter.jbilling.server.user.permisson.db.PermissionDTO", "com.sapienter.jbilling.server.notification.INotificationSessionBean", "com.sapienter.jbilling.server.user.UserTransitionResponseWS", "com.sapienter.jbilling.server.notification.NotificationNotFoundException", "com.sapienter.jbilling.server.util.DTOFactory", "com.sapienter.jbilling.server.notification.MessageDTO", "com.sapienter.jbilling.common.PermissionIdComparator", "java.util.HashSet", "com.sapienter.jbilling.server.user.db.UserStatusDAS", "com.sapienter.jbilling.server.user.tasks.IValidatePurchaseTask", "java.util.LinkedList", "com.sapienter.jbilling.server.user.partner.PartnerBL", "com.sapienter.jbilling.server.util.db.LanguageDTO", "com.sapienter.jbilling.server.user.CreditCardBL", "java.util.Iterator", "com.sapienter.jbilling.server.util.db.AbstractGenericStatus", "com.sapienter.jbilling.common.JBCrypto", "com.sapienter.jbilling.server.user.UserDTOEx", "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDAS", "com.sapienter.jbilling.server.user.db.UserDAS", "com.sapienter.jbilling.server.user.contact.db.ContactDTO", "com.sapienter.jbilling.server.user.UserBL", "<nulltype>", "com.sapienter.jbilling.server.payment.db.PaymentDAS", "java.sql.Date", "com.sapienter.jbilling.server.user.db.AchDTO", "com.sapienter.jbilling.server.user.db.CreditCardDTO", "com.sapienter.jbilling.server.user.ContactWS", "com.sapienter.jbilling.server.notification.NotificationBL", "com.sapienter.jbilling.server.user.db.SubscriberStatusDAS", "com.sapienter.jbilling.server.user.db.CompanyDTO", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.util.Constants", "java.util.Collections"],
    "com.sapienter.jbilling.server.pluggableTask.NotificationTask": ["com.sapienter.jbilling.server.user.db.UserDTO", "com.sapienter.jbilling.server.notification.MessageDTO", "com.sapienter.jbilling.server.pluggableTask.TaskException", "com.sapienter.jbilling.server.pluggableTask.NotificationTask"],
    "com.sapienter.jbilling.server.provisioning.task.mmsc.EfsBaseResponse": ["javax.xml.bind.annotation.XmlAccessorType", "javax.xml.bind.annotation.XmlType", "com.sapienter.jbilling.server.provisioning.task.mmsc.EfsBaseObject", "com.sapienter.jbilling.server.provisioning.task.mmsc.MmscFacadeHandlerResponse", "com.sapienter.jbilling.server.provisioning.task.mmsc.GetCustomerResponse", "javax.xml.bind.annotation.XmlSeeAlso", "com.sapienter.jbilling.server.provisioning.task.mmsc.EfsBaseResponse", "javax.xml.bind.annotation.XmlAccessType"],
    "com.sapienter.jbilling.server.util.api.validation.UpdateValidationGroup": ["com.sapienter.jbilling.server.util.api.validation.UpdateValidationGroup"],
    "com.sapienter.jbilling.server.user.ContactWS": ["org.hibernate.validator.constraints.Email", "java.util.Date", "com.sapienter.jbilling.server.user.contact.db.ContactTypeDTO", "com.sapienter.jbilling.server.user.ContactDTOEx", "java.util.Hashtable", "com.sapienter.jbilling.server.util.api.validation.EntitySignupValidationGroup", "com.sapienter.jbilling.server.user.contact.db.ContactFieldDTO", "java.util.Iterator", "java.util.Set", "com.sapienter.jbilling.server.user.contact.db.ContactFieldTypeDTO", "com.sapienter.jbilling.server.user.contact.db.ContactDTO", "<nulltype>", "java.io.Serializable", "com.sapienter.jbilling.server.user.ContactWS", "org.hibernate.validator.constraints.NotEmpty", "com.sapienter.jbilling.server.user.contact.db.ContactMapDTO"],
    "com.sapienter.jbilling.server.pluggableTask.CalculateDueDateDfFm": ["com.sapienter.jbilling.server.order.TimePeriod", "java.util.GregorianCalendar", "com.sapienter.jbilling.server.pluggableTask.CalculateDueDate", "com.sapienter.jbilling.server.pluggableTask.TaskException", "<nulltype>", "java.util.Calendar", "com.sapienter.jbilling.server.pluggableTask.CalculateDueDateDfFm", "com.sapienter.jbilling.server.invoice.NewInvoiceDTO", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO"],
    "com.sapienter.jbilling.server.user.balance.ValidatorNone": ["java.math.BigDecimal", "com.sapienter.jbilling.server.user.balance.ValidatorNone", "com.sapienter.jbilling.server.user.balance.IUserBalanceValidation", "com.sapienter.jbilling.server.user.db.CustomerDTO"],
    "com.sapienter.jbilling.server.rule.task.IRulesGenerator": ["com.sapienter.jbilling.server.rule.task.IRulesGenerator", "com.sapienter.jbilling.server.pluggableTask.TaskException"],
    "com.sapienter.jbilling.server.util.PreferenceBL": ["com.sapienter.jbilling.server.util.PreferenceBL", "org.apache.commons.lang.StringUtils", "com.sapienter.jbilling.server.util.db.PreferenceDAS", "com.sapienter.jbilling.server.util.Context", "com.sapienter.jbilling.server.util.Context$Name", "<nulltype>", "com.sapienter.jbilling.server.util.db.PreferenceTypeDTO", "org.apache.log4j.Logger", "java.math.BigDecimal", "com.sapienter.jbilling.server.util.db.PreferenceDTO", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.util.db.PreferenceTypeDAS", "com.sapienter.jbilling.server.util.db.JbillingTableDAS", "com.sapienter.jbilling.server.util.Constants", "org.springframework.dao.EmptyResultDataAccessException", "org.apache.log4j.Category"],
    "com.sapienter.jbilling.server.provisioning.task.mmsc.AddCustomerRequest": ["javax.xml.bind.annotation.XmlAccessorType", "javax.xml.bind.annotation.XmlType", "com.sapienter.jbilling.server.provisioning.task.mmsc.AddCustomerRequest", "com.sapienter.jbilling.server.provisioning.task.mmsc.EfsBaseMSISDNRequest", "javax.xml.bind.annotation.XmlAccessType"],
    "com.sapienter.jbilling.server.util.audit.db.EventLogMessageDAS": ["com.sapienter.jbilling.server.util.audit.db.EventLogMessageDAS", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.util.audit.db.EventLogMessageDTO"],
    "com.sapienter.jbilling.server.order.event.NewOrderEvent": ["com.sapienter.jbilling.server.order.db.OrderDTO", "com.sapienter.jbilling.server.system.event.Event", "com.sapienter.jbilling.server.order.event.NewOrderEvent"],
    "com.sapienter.jbilling.server.system.event.EventProcessor": ["com.sapienter.jbilling.server.system.event.Event", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskException", "com.sapienter.jbilling.server.system.event.EventProcessor", "com.sapienter.jbilling.common.SessionInternalError", "TaskType", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskManager"],
    "com.sapienter.jbilling.server.user.event.AchDeleteEvent": ["com.sapienter.jbilling.server.user.db.AchDTO", "com.sapienter.jbilling.server.system.event.Event", "com.sapienter.jbilling.server.user.event.AchDeleteEvent"],
    "com.sapienter.jbilling.server.provisioning.event.SubscriptionInactiveEvent": ["com.sapienter.jbilling.server.order.db.OrderDTO", "com.sapienter.jbilling.server.system.event.Event", "com.sapienter.jbilling.server.provisioning.event.SubscriptionInactiveEvent"],
    "com.sapienter.jbilling.server.provisioning.task.ProvisioningCommandsRulesTask": ["com.sapienter.jbilling.server.provisioning.task.ProvisioningCommandsRulesTask$CommandManager", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskException", "com.sapienter.jbilling.server.provisioning.event.SubscriptionInactiveEvent", "java.util.Date", "com.sapienter.jbilling.server.provisioning.task.ProvisioningCommandsRulesTask", "com.sapienter.jbilling.server.order.db.OrderLineDTO", "com.sapienter.jbilling.server.provisioning.task.CommandsQueueSender", "com.sapienter.jbilling.server.pluggableTask.TaskException", "java.util.ArrayList", "org.apache.log4j.Logger", "java.math.BigDecimal", "com.sapienter.jbilling.server.order.event.NewQuantityEvent", "java.util.LinkedList", "org.apache.log4j.Category", "com.sapienter.jbilling.server.pluggableTask.PluggableTask", "com.sapienter.jbilling.server.system.event.Event", "com.sapienter.jbilling.server.util.db.AbstractGenericStatus", "com.sapienter.jbilling.server.system.event.task.IInternalEventsTask", "javax.jms.JMSException", "<nulltype>", "com.sapienter.jbilling.server.order.db.OrderDTO", "java.util.List", "com.sapienter.jbilling.server.provisioning.task.StringPair", "com.sapienter.jbilling.server.provisioning.event.SubscriptionActiveEvent", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.order.db.OrderDAS", "com.sapienter.jbilling.server.util.Constants", "org.drools.KnowledgeBase"],
    "com.sapienter.jbilling.server.user.tasks.BasicSubscriptionStatusManagerTask": ["java.util.Date", "com.sapienter.jbilling.server.user.tasks.BasicSubscriptionStatusManagerTask", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO", "com.sapienter.jbilling.server.user.tasks.ISubscriptionStatusManager", "org.apache.log4j.Logger", "com.sapienter.jbilling.server.util.db.AbstractDescription", "com.sapienter.jbilling.server.process.ConfigurationBL", "com.sapienter.jbilling.server.invoice.db.InvoiceDAS", "java.util.Map", "org.apache.log4j.Category", "com.sapienter.jbilling.server.pluggableTask.PluggableTask", "com.sapienter.jbilling.server.user.db.UserDTO", "com.sapienter.jbilling.server.util.db.AbstractGenericStatus", "com.sapienter.jbilling.server.payment.db.PaymentDTO", "com.sapienter.jbilling.server.util.audit.EventLogger", "com.sapienter.jbilling.server.user.UserDTOEx", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription$Type", "com.sapienter.jbilling.server.user.UserBL", "<nulltype>", "java.util.List", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription", "com.sapienter.jbilling.common.SessionInternalError", "com.sapienter.jbilling.server.payment.PaymentDTOEx", "com.sapienter.jbilling.server.util.Constants"],
    "com.sapienter.jbilling.server.item.db.ItemDTO": ["com.sapienter.jbilling.server.util.csv.Exportable", "java.util.Arrays", "com.sapienter.jbilling.server.util.db.CurrencyDTO", "com.sapienter.jbilling.server.item.db.ItemPriceDTO", "com.sapienter.jbilling.server.order.db.OrderLineDTO", "java.util.ArrayList", "java.util.HashSet", "com.sapienter.jbilling.server.item.db.ItemDTO", "java.math.BigDecimal", "com.sapienter.jbilling.server.util.db.AbstractDescription", "javax.persistence.Table", "javax.persistence.TableGenerator", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO", "javax.persistence.ManyToMany", "javax.persistence.Version", "javax.persistence.Id", "javax.persistence.Entity", "javax.persistence.ManyToOne", "javax.persistence.JoinTable", "java.util.Iterator", "javax.persistence.CascadeType", "java.util.Collection", "javax.persistence.JoinColumn", "com.sapienter.jbilling.server.item.db.ItemTypeDTO", "javax.persistence.OneToMany", "java.util.Set", "org.hibernate.annotations.CacheConcurrencyStrategy", "org.hibernate.annotations.Cache", "<nulltype>", "javax.persistence.Column", "javax.persistence.GenerationType", "java.util.List", "javax.persistence.GeneratedValue", "javax.persistence.Transient", "javax.persistence.FetchType", "com.sapienter.jbilling.server.user.db.CompanyDTO", "com.sapienter.jbilling.server.util.Constants"],
    "com.sapienter.jbilling.server.order.OrderLineComparator": ["com.sapienter.jbilling.server.item.db.ItemDTO", "com.sapienter.jbilling.server.order.OrderLineComparator", "com.sapienter.jbilling.server.order.db.OrderLineDTO", "java.util.Comparator", "<nulltype>", "java.io.Serializable"],
    "com.sapienter.jbilling.server.util.db.CountryDAS": ["com.sapienter.jbilling.server.util.db.CountryDAS", "com.sapienter.jbilling.server.util.db.CountryDTO", "com.sapienter.jbilling.server.util.db.AbstractDAS"],
    "com.sapienter.jbilling.server.pluggableTask.AuthorizeNetResponseDTO": ["com.sapienter.jbilling.server.pluggableTask.AuthorizeNetResponseDTO", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO", "<nulltype>", "java.io.Serializable"],
    "com.sapienter.jbilling.server.payment.db.PaymentMethodDTO": ["com.sapienter.jbilling.server.process.db.ProcessRunTotalPmDTO", "java.util.HashSet", "com.sapienter.jbilling.server.util.db.AbstractDescription", "com.sapienter.jbilling.server.payment.db.PaymentMethodDTO", "javax.persistence.Table", "javax.persistence.ManyToMany", "javax.persistence.Id", "javax.persistence.Entity", "javax.persistence.JoinTable", "javax.persistence.CascadeType", "com.sapienter.jbilling.server.payment.db.PaymentDTO", "javax.persistence.JoinColumn", "javax.persistence.OneToMany", "java.util.Set", "org.hibernate.annotations.CacheConcurrencyStrategy", "org.hibernate.annotations.Cache", "java.io.Serializable", "javax.persistence.Column", "javax.persistence.Transient", "javax.persistence.FetchType", "com.sapienter.jbilling.server.user.db.CompanyDTO", "com.sapienter.jbilling.server.util.Constants"],
    "com.sapienter.jbilling.server.mediation.task.SeparatorFileReader": ["org.apache.commons.lang.StringUtils", "com.sapienter.jbilling.server.pluggableTask.PluggableTask", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription$Type", "java.util.List", "com.sapienter.jbilling.server.mediation.task.SeparatorFileReader", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription", "java.util.Map", "com.sapienter.jbilling.server.mediation.task.AbstractFileReader"],
    "com.sapienter.jbilling.server.order.validator.DateRange": ["com.sapienter.jbilling.server.order.validator.DateRangeValidator", "javax.validation.Payload", "javax.validation.Constraint", "com.sapienter.jbilling.server.order.validator.DateRange"],
    "com.sapienter.jbilling.server.payment.tasks.paypal.dto.Payment": ["com.sapienter.jbilling.server.payment.tasks.paypal.dto.Payment"],
    "com.sapienter.jbilling.server.pluggableTask.BasicCompositionTask": ["com.sapienter.jbilling.server.util.PreferenceBL", "com.sapienter.jbilling.server.invoice.InvoiceBL", "org.apache.commons.lang.StringUtils", "com.sapienter.jbilling.server.pluggableTask.InvoiceCompositionTask", "java.text.SimpleDateFormat", "com.sapienter.jbilling.server.order.db.OrderLineDTO", "com.sapienter.jbilling.server.pluggableTask.TaskException", "org.apache.log4j.Logger", "java.math.BigDecimal", "java.util.ResourceBundle", "java.util.Locale", "java.util.Map", "com.sapienter.jbilling.server.order.db.OrderLineTypeDTO", "com.sapienter.jbilling.server.pluggableTask.BasicCompositionTask", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO", "java.text.DateFormat", "org.apache.log4j.Category", "org.joda.time.format.DateTimeFormat", "com.sapienter.jbilling.server.pluggableTask.PluggableTask", "com.sapienter.jbilling.server.user.db.UserDTO", "org.joda.time.format.DateTimeFormatter", "com.sapienter.jbilling.server.order.db.OrderPeriodDTO", "com.sapienter.jbilling.server.user.UserBL", "<nulltype>", "com.sapienter.jbilling.server.order.db.OrderDTO", "java.util.List", "com.sapienter.jbilling.common.SessionInternalError", "com.sapienter.jbilling.server.invoice.NewInvoiceDTO", "com.sapienter.jbilling.server.user.db.CompanyDTO", "org.joda.time.DateMidnight", "com.sapienter.jbilling.server.util.Constants", "com.sapienter.jbilling.server.process.PeriodOfTime"],
    "com.sapienter.jbilling.server.process.db.AgeingEntityStepDAS": ["com.sapienter.jbilling.server.user.db.CompanyDAS", "com.sapienter.jbilling.server.user.db.UserStatusDAS", "com.sapienter.jbilling.server.process.db.AgeingEntityStepDTO", "com.sapienter.jbilling.server.util.db.AbstractGenericStatusDAS", "com.sapienter.jbilling.server.util.db.AbstractDAS", "org.hibernate.Query", "com.sapienter.jbilling.server.process.db.AgeingEntityStepDAS"],
    "com.sapienter.jbilling.server.process.task.BusinessDayAgeingTask": ["com.sapienter.jbilling.server.pluggableTask.PluggableTask", "com.sapienter.jbilling.server.user.db.UserDTO", "com.sapienter.jbilling.server.process.db.AgeingEntityStepDTO", "java.util.Date", "java.text.SimpleDateFormat", "com.sapienter.jbilling.server.process.BusinessDays", "com.sapienter.jbilling.server.process.task.BasicAgeingTask", "<nulltype>", "java.io.File", "org.apache.log4j.Logger", "com.sapienter.jbilling.common.Util", "com.sapienter.jbilling.server.process.task.BusinessDayAgeingTask", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO", "org.apache.log4j.Category"],
    "com.sapienter.jbilling.server.order.OrderBL": ["com.sapienter.jbilling.server.util.PreferenceBL", "java.util.Arrays", "com.sapienter.jbilling.server.order.event.NewOrderEvent", "com.sapienter.jbilling.server.item.PricingField", "com.sapienter.jbilling.server.util.Context", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO", "com.sapienter.jbilling.server.order.db.OrderLineTypeDAS", "com.sapienter.jbilling.server.item.db.ItemDTO", "java.math.BigDecimal", "com.sapienter.jbilling.server.util.db.AbstractDescription", "java.sql.ResultSet", "javax.sql.rowset.CachedRowSet", "org.springframework.jdbc.support.rowset.SqlRowSet", "com.sapienter.jbilling.server.order.OrderBL", "java.util.Set", "java.sql.PreparedStatement", "com.sapienter.jbilling.server.item.ItemBL", "com.sapienter.jbilling.server.order.db.OrderDTO", "com.sapienter.jbilling.server.order.db.OrderBillingTypeDAS", "com.sapienter.jbilling.server.provisioning.event.SubscriptionActiveEvent", "com.sapienter.jbilling.server.order.TimePeriod", "com.sapienter.jbilling.server.item.ItemDecimalsException", "com.sapienter.jbilling.server.pluggableTask.OrderProcessingTask", "com.sapienter.jbilling.server.mediation.Record", "java.util.ArrayList", "java.sql.SQLException", "java.util.Calendar", "com.sapienter.jbilling.server.process.ConfigurationBL", "com.sapienter.jbilling.common.Util", "com.sapienter.jbilling.server.list.ResultList", "javax.sql.RowSet", "com.sapienter.jbilling.server.item.db.ItemDAS", "com.sapienter.jbilling.server.order.db.OrderLineTypeDTO", "com.sapienter.jbilling.server.system.event.EventManager", "com.sapienter.jbilling.server.util.db.CurrencyDAS", "com.sapienter.jbilling.server.util.db.AbstractGenericStatusDAS", "com.sapienter.jbilling.server.order.db.OrderPeriodDTO", "com.sapienter.jbilling.common.SessionInternalError", "com.sapienter.jbilling.server.order.OrderLineWS", "com.sapienter.jbilling.server.user.db.CompanyDAS", "java.sql.Connection", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskException", "java.util.Date", "com.sapienter.jbilling.server.order.CurrentOrder", "javax.naming.NamingException", "com.sapienter.jbilling.server.order.db.OrderLineDTO", "com.sapienter.jbilling.server.process.db.PeriodUnitDAS", "com.sapienter.jbilling.server.order.event.NewStatusEvent", "com.sapienter.jbilling.server.pluggableTask.TaskException", "com.sapienter.jbilling.server.user.db.CustomerDTO", "org.apache.log4j.Logger", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskManager", "com.sapienter.jbilling.server.user.ContactBL", "org.springframework.dao.EmptyResultDataAccessException", "org.apache.log4j.Category", "com.sapienter.jbilling.server.item.tasks.IItemPurchaseManager", "com.sapienter.jbilling.common.CommonConstants", "com.sapienter.jbilling.server.user.db.UserDTO", "com.sapienter.jbilling.server.order.event.NewActiveUntilEvent", "java.util.Collection", "com.sapienter.jbilling.server.util.audit.EventLogger", "com.sapienter.jbilling.server.util.Context$Name", "com.sapienter.jbilling.server.order.event.OrderDeletedEvent", "java.util.List", "com.sapienter.jbilling.server.order.OrderWS", "com.sapienter.jbilling.server.order.OrderBL$1", "com.sapienter.jbilling.server.invoice.InvoiceBL", "com.sapienter.jbilling.server.notification.INotificationSessionBean", "com.sapienter.jbilling.server.notification.NotificationNotFoundException", "com.sapienter.jbilling.server.provisioning.db.ProvisioningStatusDAS", "com.sapienter.jbilling.server.notification.MessageDTO", "com.sapienter.jbilling.server.order.OrderLineBL", "org.springframework.jdbc.core.JdbcTemplate", "com.sapienter.jbilling.server.order.OrderSQL", "com.sapienter.jbilling.server.order.db.OrderLineDAS", "com.sapienter.jbilling.server.order.db.OrderStatusDAS", "javax.sql.DataSource", "com.sapienter.jbilling.server.order.db.OrderPeriodDAS", "com.sapienter.jbilling.server.order.event.NewQuantityEvent", "java.util.Iterator", "com.sapienter.jbilling.server.util.db.AbstractGenericStatus", "com.sapienter.jbilling.server.user.db.UserDAS", "com.sapienter.jbilling.server.order.db.OrderPeriodDTO[]", "com.sapienter.jbilling.server.user.UserBL", "<nulltype>", "java.sql.Date", "com.sapienter.jbilling.server.order.db.OrderProcessDTO", "com.sapienter.jbilling.server.order.event.PeriodCancelledEvent", "com.sapienter.jbilling.server.notification.NotificationBL", "com.sapienter.jbilling.server.order.db.OrderDAS", "com.sapienter.jbilling.server.user.db.CompanyDTO", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.util.Constants", "java.util.Comparator", "java.util.Collections"],
    "com.sapienter.jbilling.server.util.audit.db.EventLogModuleDTO": ["javax.persistence.Entity", "com.sapienter.jbilling.server.util.audit.db.EventLogModuleDTO", "javax.persistence.CascadeType", "javax.persistence.OneToMany", "java.util.Set", "org.hibernate.annotations.CacheConcurrencyStrategy", "org.hibernate.annotations.Cache", "java.io.Serializable", "java.util.HashSet", "javax.persistence.Column", "com.sapienter.jbilling.server.util.audit.db.EventLogDTO", "javax.persistence.Table", "javax.persistence.FetchType", "javax.persistence.Id"],
    "com.sapienter.jbilling.server.process.db.ProcessRunStatusDAS": ["com.sapienter.jbilling.server.process.db.ProcessRunStatusDTO", "com.sapienter.jbilling.server.process.db.ProcessRunStatusDAS", "com.sapienter.jbilling.server.util.db.AbstractGenericStatusDAS"],
    "com.sapienter.jbilling.server.provisioning.task.mmsc.DeleteCustomerResponse": ["javax.xml.bind.annotation.XmlAccessorType", "javax.xml.bind.annotation.XmlType", "com.sapienter.jbilling.server.provisioning.task.mmsc.DeleteCustomerResponse", "com.sapienter.jbilling.server.provisioning.task.mmsc.MmscFacadeHandlerResponse", "javax.xml.bind.annotation.XmlElement", "javax.xml.bind.annotation.XmlAccessType"],
    "com.sapienter.jbilling.server.user.event.NewCreditCardEvent": ["com.sapienter.jbilling.server.system.event.Event", "com.sapienter.jbilling.server.user.db.CreditCardDTO", "com.sapienter.jbilling.server.user.event.NewCreditCardEvent"],
    "com.sapienter.jbilling.server.item.tasks.PricingManager": ["org.apache.log4j.Logger", "java.math.BigDecimal", "com.sapienter.jbilling.client.util.Constants", "com.sapienter.jbilling.server.item.tasks.PricingManager", "org.apache.log4j.Category"],
    "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskBL": ["com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskException", "com.sapienter.jbilling.server.util.Context", "java.util.ArrayList", "org.apache.log4j.Logger", "T", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskParameterDAS", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskManager", "org.apache.log4j.Category", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDTO", "com.sapienter.jbilling.server.pluggableTask.PluggableTask", "java.util.Collection", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskTypeDTO", "com.sapienter.jbilling.server.util.audit.EventLogger", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskBL", "com.sapienter.jbilling.server.util.Context$Name", "<nulltype>", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskParameterDTO", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskTypeCategoryDTO", "java.util.List", "com.sapienter.jbilling.common.SessionInternalError", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDAS", "com.sapienter.jbilling.server.util.Constants"],
    "com.sapienter.jbilling.server.item.ItemBL": ["com.sapienter.jbilling.server.user.db.CompanyDAS", "com.sapienter.jbilling.server.item.event.NewItemEvent", "com.sapienter.jbilling.server.util.db.CurrencyDTO", "com.sapienter.jbilling.server.item.PricingField", "com.sapienter.jbilling.server.item.db.ItemPriceDTO", "com.sapienter.jbilling.server.util.Context", "com.sapienter.jbilling.server.item.ItemPriceDTOEx", "com.sapienter.jbilling.server.item.db.ItemDTO", "org.apache.log4j.Logger", "java.math.BigDecimal", "com.sapienter.jbilling.server.util.db.AbstractDescription", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskManager", "com.sapienter.jbilling.server.item.ItemTypeBL", "com.sapienter.jbilling.server.item.ItemDTOEx", "org.apache.log4j.Category", "com.sapienter.jbilling.server.item.CurrencyBL", "java.util.Collection", "com.sapienter.jbilling.server.util.audit.EventLogger", "java.util.Set", "com.sapienter.jbilling.server.item.ItemBL", "com.sapienter.jbilling.server.util.Context$Name", "com.sapienter.jbilling.server.item.event.ItemDeletedEvent", "com.sapienter.jbilling.server.order.db.OrderDTO", "java.util.List", "org.springmodules.cache.CachingModel", "java.util.ArrayList", "com.sapienter.jbilling.server.item.event.ItemUpdatedEvent", "com.sapienter.jbilling.server.user.EntityBL", "org.springmodules.cache.provider.CacheProviderFacade", "com.sapienter.jbilling.server.order.db.OrderLineDAS", "com.sapienter.jbilling.server.item.db.ItemPriceDAS", "com.sapienter.jbilling.server.item.db.ItemDAS", "com.sapienter.jbilling.server.system.event.EventManager", "com.sapienter.jbilling.server.util.db.CurrencyDAS", "java.util.Iterator", "com.sapienter.jbilling.server.item.tasks.IPricing", "com.sapienter.jbilling.server.item.db.ItemTypeDTO", "com.sapienter.jbilling.server.item.ItemDTOEx[]", "com.sapienter.jbilling.server.user.UserBL", "<nulltype>", "org.springmodules.cache.FlushingModel", "com.sapienter.jbilling.common.SessionInternalError", "com.sapienter.jbilling.server.user.db.CompanyDTO", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.util.Constants"],
    "com.sapienter.jbilling.server.order.db.OrderDTO": ["com.sapienter.jbilling.server.util.db.CurrencyDTO", "java.util.Date", "com.sapienter.jbilling.server.item.PricingField", "com.sapienter.jbilling.server.order.db.OrderLineDTO", "com.sapienter.jbilling.server.order.db.OrderStatusDTO", "com.sapienter.jbilling.server.item.db.ItemDTO", "org.apache.log4j.Logger", "java.math.BigDecimal", "com.sapienter.jbilling.server.util.db.AbstractDescription", "com.sapienter.jbilling.server.process.db.BillingProcessDTO", "org.hibernate.annotations.FetchMode", "javax.persistence.Version", "org.apache.log4j.Category", "javax.persistence.Entity", "javax.persistence.ManyToOne", "javax.persistence.CascadeType", "com.sapienter.jbilling.server.user.db.UserDTO", "java.util.Collection", "java.util.Set", "java.io.Serializable", "com.sapienter.jbilling.server.order.db.OrderDTO", "javax.persistence.Column", "javax.persistence.GenerationType", "java.util.List", "javax.persistence.GeneratedValue", "org.hibernate.annotations.OrderBy", "com.sapienter.jbilling.server.util.csv.Exportable", "com.sapienter.jbilling.server.invoice.InvoiceBL", "com.sapienter.jbilling.server.order.db.OrderBillingTypeDTO", "com.sapienter.jbilling.server.util.Util", "java.util.ArrayList", "java.util.HashSet", "javax.persistence.Table", "java.util.Calendar", "com.sapienter.jbilling.server.order.db.OrderStatusDAS", "javax.persistence.TableGenerator", "com.sapienter.jbilling.server.order.db.OrderPeriodDAS", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO", "javax.persistence.Id", "org.hibernate.annotations.CollectionOfElements", "org.hibernate.annotations.Fetch", "com.sapienter.jbilling.server.util.db.AbstractGenericStatus", "javax.persistence.JoinColumn", "com.sapienter.jbilling.server.util.db.AbstractGenericStatusDAS", "javax.persistence.OneToMany", "com.sapienter.jbilling.server.order.db.OrderPeriodDTO", "<nulltype>", "com.sapienter.jbilling.server.order.db.OrderProcessDTO", "javax.persistence.Transient", "com.sapienter.jbilling.common.SessionInternalError", "javax.persistence.FetchType", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.util.Constants"],
    "com.sapienter.jbilling.server.provisioning.task.ProvisioningCommandsMDB": ["javax.jms.MapMessage", "com.sapienter.jbilling.server.util.Context", "javax.jms.MessageListener", "com.sapienter.jbilling.server.util.Context$Name", "<nulltype>", "com.sapienter.jbilling.server.provisioning.IProvisioningProcessSessionBean", "org.apache.log4j.Logger", "com.sapienter.jbilling.server.provisioning.task.ProvisioningCommandsMDB", "javax.jms.Message", "org.apache.log4j.Category", "org.springframework.dao.EmptyResultDataAccessException"],
    "com.sapienter.jbilling.server.pluggableTask.PaymentFakeExternalStorage": ["com.sapienter.jbilling.server.user.db.AchDTO", "com.sapienter.jbilling.server.payment.IExternalCreditCardStorage", "com.sapienter.jbilling.server.pluggableTask.PluggableTask", "com.sapienter.jbilling.server.user.db.CreditCardDTO", "com.sapienter.jbilling.server.pluggableTask.PaymentFakeExternalStorage", "com.sapienter.jbilling.server.pluggableTask.PaymentFakeTask", "com.sapienter.jbilling.server.user.contact.db.ContactDTO", "<nulltype>"],
    "com.sapienter.jbilling.server.entity.CreditCardDTO": ["java.util.Date", "javax.validation.constraints.NotNull", "<nulltype>", "java.io.Serializable", "javax.xml.bind.annotation.XmlType", "com.sapienter.jbilling.server.entity.CreditCardDTO", "org.hibernate.validator.constraints.NotEmpty", "com.sapienter.jbilling.server.user.validator.CreditCardNumber"],
    "com.sapienter.jbilling.server.notification.barcode.BarcodeType": ["com.sapienter.jbilling.server.notification.barcode.BarcodeType"],
    "com.sapienter.jbilling.server.user.db.AchDAS": ["com.sapienter.jbilling.server.user.db.AchDTO", "com.sapienter.jbilling.server.user.db.UserDTO", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.user.db.AchDAS"],
    "com.sapienter.jbilling.server.invoice.db.InvoiceDeliveryMethodDTO": ["com.sapienter.jbilling.server.user.db.CustomerDTO", "java.util.HashSet", "javax.persistence.Table", "javax.persistence.TableGenerator", "javax.persistence.ManyToMany", "javax.persistence.Id", "javax.persistence.Entity", "javax.persistence.JoinTable", "javax.persistence.CascadeType", "javax.persistence.JoinColumn", "javax.persistence.OneToMany", "java.util.Set", "org.hibernate.annotations.CacheConcurrencyStrategy", "org.hibernate.annotations.Cache", "java.io.Serializable", "javax.persistence.Column", "javax.persistence.GenerationType", "javax.persistence.GeneratedValue", "javax.persistence.FetchType", "com.sapienter.jbilling.server.user.db.CompanyDTO", "com.sapienter.jbilling.server.invoice.db.InvoiceDeliveryMethodDTO"],
    "com.sapienter.jbilling.server.rule.task.test.Product": ["com.sapienter.jbilling.server.item.db.ItemDTO", "com.sapienter.jbilling.server.rule.task.test.Product", "java.util.List", "com.sapienter.jbilling.server.item.db.ItemDAS", "<nulltype>"],
    "com.sapienter.jbilling.server.user.EntitySQL": ["com.sapienter.jbilling.server.user.EntitySQL"],
    "com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase": ["com.sapienter.jbilling.server.pluggableTask.PluggableTask", "com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskException", "com.sapienter.jbilling.server.payment.db.PaymentDTO", "com.sapienter.jbilling.server.payment.PaymentAuthorizationBL", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO", "<nulltype>", "java.util.Map", "com.sapienter.jbilling.server.payment.PaymentDTOEx", "com.sapienter.jbilling.server.pluggableTask.PaymentTask", "com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase$Result"],
    "com.sapienter.jbilling.server.order.db.OrderBillingTypeDTO": ["javax.persistence.Entity", "javax.persistence.CascadeType", "com.sapienter.jbilling.server.order.db.OrderBillingTypeDTO", "javax.persistence.OneToMany", "java.util.Set", "org.hibernate.annotations.CacheConcurrencyStrategy", "org.hibernate.annotations.Cache", "java.io.Serializable", "com.sapienter.jbilling.server.order.db.OrderDTO", "java.util.HashSet", "javax.persistence.Column", "com.sapienter.jbilling.server.util.db.AbstractDescription", "javax.persistence.Table", "javax.persistence.Transient", "javax.persistence.FetchType", "com.sapienter.jbilling.server.util.Constants", "javax.persistence.Id"],
    "com.sapienter.jbilling.server.provisioning.task.TestCommunication": ["com.sapienter.jbilling.server.provisioning.task.TestCommunication", "com.sapienter.jbilling.server.pluggableTask.TaskException", "org.apache.log4j.Logger", "java.util.Map", "com.sapienter.jbilling.server.provisioning.task.IExternalCommunication", "org.apache.log4j.Category"],
    "com.sapienter.jbilling.server.mediation.db.MediationOrderMap": ["javax.persistence.Entity", "javax.persistence.Table", "javax.persistence.IdClass", "com.sapienter.jbilling.server.mediation.db.MediationOrderMap", "com.sapienter.jbilling.server.mediation.db.MapPK", "java.io.Serializable", "javax.persistence.Id"],
    "com.sapienter.jbilling.server.item.ItemDecimalsException": ["com.sapienter.jbilling.server.item.ItemDecimalsException"],
    "com.sapienter.jbilling.server.pluggableTask.BasicOrderFilterTask": ["java.util.Date", "com.sapienter.jbilling.server.pluggableTask.BasicOrderFilterTask", "com.sapienter.jbilling.server.pluggableTask.TaskException", "org.apache.log4j.Logger", "com.sapienter.jbilling.server.process.db.BillingProcessDTO", "java.util.Calendar", "com.sapienter.jbilling.common.Util", "com.sapienter.jbilling.server.process.BillingProcessBL", "org.apache.log4j.Category", "com.sapienter.jbilling.server.order.OrderBL", "com.sapienter.jbilling.server.util.MapPeriodToCalendar", "com.sapienter.jbilling.server.pluggableTask.PluggableTask", "java.util.GregorianCalendar", "com.sapienter.jbilling.server.user.db.UserDTO", "com.sapienter.jbilling.server.util.audit.EventLogger", "com.sapienter.jbilling.server.order.db.OrderPeriodDTO", "<nulltype>", "com.sapienter.jbilling.server.order.db.OrderDTO", "com.sapienter.jbilling.server.pluggableTask.OrderFilterTask", "com.sapienter.jbilling.common.SessionInternalError", "com.sapienter.jbilling.server.user.db.CompanyDTO", "com.sapienter.jbilling.server.util.Constants"],
    "com.sapienter.jbilling.server.order.db.OrderProcessDAS": ["com.sapienter.jbilling.server.order.db.OrderProcessDTO", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.order.db.OrderProcessDAS"],
    "com.sapienter.jbilling.server.payment.db.PaymentInvoiceMapDTO": ["java.util.Date", "com.sapienter.jbilling.server.payment.db.PaymentInvoiceMapDTO", "org.apache.log4j.Logger", "java.math.BigDecimal", "javax.persistence.Table", "javax.persistence.TableGenerator", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO", "javax.persistence.Version", "javax.persistence.Id", "javax.persistence.Entity", "javax.persistence.ManyToOne", "com.sapienter.jbilling.server.payment.db.PaymentDTO", "javax.persistence.JoinColumn", "org.hibernate.annotations.CacheConcurrencyStrategy", "org.hibernate.annotations.Cache", "java.io.Serializable", "javax.persistence.Column", "javax.persistence.GenerationType", "javax.persistence.GeneratedValue", "javax.persistence.FetchType"],
    "com.sapienter.jbilling.server.user.partner.PartnerWS": ["com.sapienter.jbilling.server.user.partner.db.Partner", "com.sapienter.jbilling.server.util.db.CurrencyDTO", "java.util.Date", "java.util.ArrayList", "com.sapienter.jbilling.server.user.db.CustomerDTO", "com.sapienter.jbilling.server.user.partner.PartnerWS", "java.math.BigDecimal", "com.sapienter.jbilling.server.security.WSSecured", "com.sapienter.jbilling.server.user.partner.PartnerPayoutWS", "com.sapienter.jbilling.server.user.db.UserDTO", "java.util.Set", "com.sapienter.jbilling.server.user.partner.db.PartnerPayout", "com.sapienter.jbilling.server.user.partner.PartnerRangeWS", "<nulltype>", "java.io.Serializable", "java.util.List", "com.sapienter.jbilling.server.process.db.PeriodUnitDTO", "com.sapienter.jbilling.server.user.partner.db.PartnerRange"],
    "com.sapienter.jbilling.server.user.event.DynamicBalanceChangeEvent": ["java.math.BigDecimal", "com.sapienter.jbilling.server.user.event.DynamicBalanceChangeEvent", "com.sapienter.jbilling.server.system.event.Event"],
    "com.sapienter.jbilling.server.util.db.PreferenceDTO": ["com.sapienter.jbilling.server.util.db.PreferenceTypeDTO", "java.math.BigDecimal", "com.sapienter.jbilling.server.util.db.PreferenceDTO", "javax.persistence.Table", "javax.persistence.TableGenerator", "javax.persistence.Id", "javax.persistence.Entity", "javax.persistence.ManyToOne", "javax.persistence.JoinColumn", "org.hibernate.annotations.CacheConcurrencyStrategy", "<nulltype>", "org.hibernate.annotations.Cache", "java.io.Serializable", "javax.persistence.Column", "javax.persistence.GenerationType", "javax.persistence.GeneratedValue", "javax.persistence.Transient", "javax.persistence.FetchType", "com.sapienter.jbilling.server.util.db.JbillingTable"],
    "com.sapienter.jbilling.server.mediation.MediationRecordBL": ["java.util.List", "com.sapienter.jbilling.server.mediation.MediationRecordLineWS", "com.sapienter.jbilling.server.mediation.MediationRecordBL", "com.sapienter.jbilling.server.mediation.MediationRecordWS", "java.util.Collection", "com.sapienter.jbilling.server.mediation.db.MediationRecordLineDTO", "<nulltype>", "com.sapienter.jbilling.server.mediation.db.MediationRecordDTO", "java.util.ArrayList"],
    "com.sapienter.jbilling.server.user.partner.db.PartnerRangeDAS": ["com.sapienter.jbilling.server.user.partner.db.PartnerRangeDAS", "com.sapienter.jbilling.server.user.partner.db.PartnerRange", "com.sapienter.jbilling.server.util.db.AbstractDAS"],
    "com.sapienter.jbilling.common.Util": ["java.util.GregorianCalendar", "java.util.Date", "<nulltype>", "java.io.File", "org.apache.log4j.Logger", "java.util.Calendar", "com.sapienter.jbilling.common.Constants", "com.sapienter.jbilling.common.SessionInternalError", "com.sapienter.jbilling.common.Util", "com.sapienter.jbilling.common.SystemProperties", "org.apache.log4j.Category"],
    "com.sapienter.jbilling.server.list.ResultList": ["java.sql.Connection", "com.sapienter.jbilling.server.util.Context", "com.sapienter.jbilling.server.util.Context$Name", "<nulltype>", "java.sql.SQLException", "com.sun.rowset.CachedRowSetImpl", "java.sql.ResultSet", "javax.sql.rowset.CachedRowSet", "com.sapienter.jbilling.server.list.ResultList", "javax.sql.RowSet", "javax.sql.DataSource"],
    "com.sapienter.jbilling.server.payment.tasks.paypal.PaypalApi": ["com.sapienter.jbilling.server.payment.tasks.paypal.dto.CreditCard", "com.sapienter.jbilling.server.payment.tasks.paypal.dto.PaymentAction", "com.paypal.sdk.profiles.APIProfile", "com.paypal.sdk.profiles.ProfileFactory", "com.paypal.sdk.services.NVPCallerServices", "com.paypal.sdk.core.nvp.NVPDecoder", "com.sapienter.jbilling.server.payment.tasks.paypal.dto.Payment", "com.sapienter.jbilling.server.payment.tasks.paypal.PaypalApi", "com.sapienter.jbilling.server.payment.tasks.paypal.dto.CompleteType", "com.paypal.sdk.exceptions.PayPalException", "com.sapienter.jbilling.server.payment.tasks.paypal.dto.Payer", "com.paypal.sdk.core.nvp.NVPEncoder", "com.sapienter.jbilling.server.payment.tasks.paypal.dto.PaypalResult", "com.sapienter.jbilling.server.payment.tasks.paypal.dto.RefundType"],
    "com.sapienter.jbilling.server.order.db.OrderLineTypeDTO": ["javax.persistence.Entity", "javax.persistence.CascadeType", "javax.persistence.OneToMany", "java.util.Set", "org.hibernate.annotations.CacheConcurrencyStrategy", "com.sapienter.jbilling.server.order.db.OrderLineDTO", "org.hibernate.annotations.Cache", "java.io.Serializable", "java.util.HashSet", "javax.persistence.Column", "com.sapienter.jbilling.server.util.db.AbstractDescription", "javax.persistence.Table", "javax.persistence.Transient", "javax.persistence.FetchType", "com.sapienter.jbilling.server.order.db.OrderLineTypeDTO", "com.sapienter.jbilling.server.util.Constants", "javax.persistence.Id"],
    "com.sapienter.jbilling.server.util.db.DescriptionDAS": ["com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.util.db.DescriptionDAS", "com.sapienter.jbilling.server.util.db.InternationalDescriptionDTO"],
    "com.sapienter.jbilling.server.invoice.db.InvoiceStatusDAS": ["com.sapienter.jbilling.server.invoice.db.InvoiceStatusDTO", "com.sapienter.jbilling.server.util.db.AbstractGenericStatusDAS", "com.sapienter.jbilling.server.invoice.db.InvoiceStatusDAS"],
    "com.sapienter.jbilling.server.item.tasks.SubscriptionResult": ["com.sapienter.jbilling.server.order.OrderBL", "java.util.Date", "com.sapienter.jbilling.server.mediation.task.MediationResult", "com.sapienter.jbilling.server.order.db.OrderLineDTO", "com.sapienter.jbilling.server.order.db.OrderPeriodDTO", "com.sapienter.jbilling.server.item.tasks.PricingResult", "<nulltype>", "com.sapienter.jbilling.server.order.db.OrderDTO", "java.math.BigDecimal", "com.sapienter.jbilling.server.rule.Result", "com.sapienter.jbilling.server.item.tasks.SubscriptionResult"],
    "com.sapienter.jbilling.server.order.OrderEntityComparator": ["com.sapienter.jbilling.server.order.db.OrderDTO", "com.sapienter.jbilling.server.order.OrderEntityComparator", "java.util.Comparator"],
    "com.sapienter.jbilling.server.item.db.ItemTypeDTO": ["java.util.HashSet", "com.sapienter.jbilling.server.item.db.ItemDTO", "com.sapienter.jbilling.server.util.db.AbstractDescription", "javax.persistence.Table", "javax.persistence.TableGenerator", "javax.persistence.ManyToMany", "javax.persistence.Version", "javax.persistence.Id", "javax.persistence.Entity", "javax.persistence.ManyToOne", "javax.persistence.JoinTable", "javax.persistence.CascadeType", "javax.persistence.JoinColumn", "com.sapienter.jbilling.server.item.db.ItemTypeDTO", "java.util.Set", "org.hibernate.annotations.CacheConcurrencyStrategy", "<nulltype>", "org.hibernate.annotations.Cache", "java.io.Serializable", "javax.persistence.Column", "javax.persistence.GenerationType", "javax.persistence.GeneratedValue", "javax.persistence.Transient", "javax.persistence.FetchType", "com.sapienter.jbilling.server.user.db.CompanyDTO", "com.sapienter.jbilling.server.util.Constants"],
    "com.sapienter.jbilling.server.util.db.AbstractGenericStatusDAS": ["org.hibernate.criterion.Restrictions", "com.sapienter.jbilling.server.util.db.AbstractGenericStatusDAS", "com.sapienter.jbilling.server.util.Context", "com.sapienter.jbilling.server.util.Context$Name", "<nulltype>", "java.io.Serializable", "org.apache.log4j.Logger", "org.springmodules.cache.provider.CacheProviderFacade", "T", "org.springmodules.cache.CachingModel", "com.sapienter.jbilling.server.util.db.AbstractDAS"],
    "com.sapienter.jbilling.server.report.ReportExportFormat": ["net.sf.jasperreports.engine.JasperPrint", "net.sf.jasperreports.engine.export.JExcelApiExporter", "java.io.ByteArrayOutputStream", "net.sf.jasperreports.engine.JRException", "com.sapienter.jbilling.server.report.ReportExportFormat", "net.sf.jasperreports.engine.JasperExportManager", "java.io.IOException", "net.sf.jasperreports.engine.export.JRXlsExporterParameter", "com.sapienter.jbilling.server.report.ReportExportFormat$2", "com.sapienter.jbilling.server.report.ReportExportFormat$1", "com.sapienter.jbilling.server.report.ReportExportDTO"],
    "com.sapienter.jbilling.server.user.IUserSessionBean": ["com.sapienter.jbilling.server.user.partner.db.Partner", "com.sapienter.jbilling.server.util.db.CurrencyDTO", "java.util.Date", "com.sapienter.jbilling.server.notification.NotificationNotFoundException", "java.util.HashMap", "com.sapienter.jbilling.server.util.audit.db.EventLogDTO", "com.sapienter.jbilling.server.user.ContactDTOEx", "java.util.Locale", "com.sapienter.jbilling.server.user.partner.db.PartnerRange[]", "com.sapienter.jbilling.server.user.db.UserDTO", "com.sapienter.jbilling.server.user.IUserSessionBean", "com.sapienter.jbilling.server.user.partner.db.PartnerPayout", "com.sapienter.jbilling.server.user.UserDTOEx", "com.sapienter.jbilling.server.user.db.AchDTO", "java.util.List", "com.sapienter.jbilling.server.user.db.CreditCardDTO", "com.sapienter.jbilling.common.SessionInternalError", "com.sapienter.jbilling.server.user.partner.db.PartnerRange", "java.util.Date[]"],
    "com.sapienter.jbilling.server.user.event.NewContactEvent": ["com.sapienter.jbilling.server.system.event.Event", "com.sapienter.jbilling.server.user.event.NewContactEvent", "com.sapienter.jbilling.server.user.contact.db.ContactDTO"],
    "com.sapienter.jbilling.server.payment.blacklist.BlacklistFilter": ["com.sapienter.jbilling.server.payment.PaymentDTOEx", "com.sapienter.jbilling.server.payment.blacklist.BlacklistFilter$Result", "com.sapienter.jbilling.server.payment.blacklist.BlacklistFilter"],
    "com.sapienter.jbilling.server.payment.event.GatewayAlarmEventProcessor": ["com.sapienter.jbilling.server.system.event.Event", "com.sapienter.jbilling.server.system.event.EventProcessor", "com.sapienter.jbilling.server.payment.db.PaymentDTO", "com.sapienter.jbilling.server.payment.event.PaymentSuccessfulEvent", "com.sapienter.jbilling.server.payment.event.PaymentProcessorUnavailableEvent", "com.sapienter.jbilling.server.pluggableTask.ProcessorAlarm", "<nulltype>", "com.sapienter.jbilling.server.payment.event.GatewayAlarmEventProcessor", "org.apache.log4j.Logger", "com.sapienter.jbilling.server.payment.db.PaymentResultDTO", "com.sapienter.jbilling.server.util.Constants", "com.sapienter.jbilling.server.payment.event.AbstractPaymentEvent", "org.apache.log4j.Category", "com.sapienter.jbilling.server.payment.event.PaymentFailedEvent"],
    "com.sapienter.jbilling.server.provisioning.task.mmsc.GetCustomerInfoResponse": ["com.sapienter.jbilling.server.provisioning.task.mmsc.GetCustomerInfoResponse", "javax.xml.bind.annotation.XmlAccessorType", "javax.xml.bind.annotation.XmlType", "com.sapienter.jbilling.server.provisioning.task.mmsc.GetCustomerResponse", "javax.xml.bind.annotation.XmlElement", "javax.xml.bind.annotation.XmlAccessType"],
    "com.sapienter.jbilling.server.user.permisson.db.RoleDTO": ["com.sapienter.jbilling.server.user.permisson.db.PermissionDTO", "java.util.HashSet", "com.sapienter.jbilling.server.util.db.AbstractDescription", "javax.persistence.Table", "javax.persistence.TableGenerator", "javax.persistence.ManyToMany", "javax.persistence.Id", "javax.persistence.Entity", "javax.persistence.JoinTable", "javax.persistence.CascadeType", "com.sapienter.jbilling.server.user.db.UserDTO", "javax.persistence.JoinColumn", "java.util.Set", "<nulltype>", "java.io.Serializable", "com.sapienter.jbilling.server.user.permisson.db.RoleDTO", "javax.persistence.Column", "javax.persistence.GenerationType", "javax.persistence.GeneratedValue", "javax.persistence.Transient", "com.sapienter.jbilling.client.authentication.InitializingGrantedAuthority", "javax.persistence.FetchType", "org.hibernate.annotations.OrderBy", "com.sapienter.jbilling.server.util.Constants"],
    "com.sapienter.jbilling.server.user.RoleBL": ["com.sapienter.jbilling.server.user.permisson.db.PermissionDTO", "java.util.Set", "<nulltype>", "com.sapienter.jbilling.server.user.permisson.db.RoleDTO", "org.apache.log4j.Logger", "com.sapienter.jbilling.server.user.RoleBL", "com.sapienter.jbilling.server.util.db.AbstractDescription", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.user.permisson.db.RoleDAS", "org.apache.log4j.Category"],
    "com.sapienter.jbilling.server.entity.InvoiceLineDTO": ["<nulltype>", "java.io.Serializable", "java.math.BigDecimal", "javax.xml.bind.annotation.XmlType", "com.sapienter.jbilling.server.entity.InvoiceLineDTO"],
    "com.sapienter.jbilling.server.payment.tasks.paypal.dto.Payer": ["com.sapienter.jbilling.server.payment.tasks.paypal.dto.Payer"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentAtlasTask": ["com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskException", "java.net.URL", "java.util.HashMap", "com.sapienter.jbilling.server.pluggableTask.TaskException", "java.util.ArrayList", "org.apache.xmlrpc.XmlRpcException", "org.apache.log4j.Logger", "java.math.BigDecimal", "org.apache.xmlrpc.client.XmlRpcClientConfigImpl", "com.sapienter.jbilling.server.payment.db.PaymentResultDAS", "java.util.Map", "org.apache.xmlrpc.client.XmlRpcClient", "com.sapienter.jbilling.server.user.ContactBL", "org.apache.log4j.Category", "com.sapienter.jbilling.server.pluggableTask.PluggableTask", "com.sapienter.jbilling.server.user.CreditCardBL", "java.net.MalformedURLException", "com.sapienter.jbilling.server.payment.db.PaymentDTO", "com.sapienter.jbilling.server.payment.PaymentAuthorizationBL", "org.apache.xmlrpc.client.XmlRpcCommonsTransportFactory", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO", "com.sapienter.jbilling.server.pluggableTask.PaymentTaskWithTimeout", "com.sapienter.jbilling.server.user.contact.db.ContactDTO", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription$Type", "<nulltype>", "java.util.List", "com.sapienter.jbilling.server.user.db.CreditCardDTO", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription", "com.sapienter.jbilling.server.payment.PaymentDTOEx", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.payment.tasks.PaymentAtlasTask", "com.sapienter.jbilling.server.util.Constants"],
    "com.sapienter.jbilling.server.mediation.task.AbstractFileReader": ["java.util.Arrays", "com.sapienter.jbilling.server.item.PricingField$Type", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskException", "java.util.Date", "com.sapienter.jbilling.server.item.PricingField", "org.apache.log4j.Logger", "java.math.BigDecimal", "java.util.Map", "java.text.ParseException", "java.text.DateFormat", "org.apache.log4j.Category", "com.sapienter.jbilling.server.pluggableTask.PluggableTask", "org.apache.commons.digester.Digester", "java.io.FileNotFoundException", "java.util.List", "org.xml.sax.SAXException", "com.sapienter.jbilling.server.mediation.Record", "java.text.SimpleDateFormat", "com.sapienter.jbilling.server.mediation.task.AbstractFileReader$Reader", "java.util.ArrayList", "com.sapienter.jbilling.common.Util", "com.sapienter.jbilling.server.mediation.FormatField", "java.util.NoSuchElementException", "java.util.Iterator", "com.sapienter.jbilling.server.mediation.task.AbstractFileReader$Reader$1", "com.sapienter.jbilling.server.mediation.task.AbstractFileReader$Reader$2", "java.io.IOException", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription$Type", "java.io.File", "<nulltype>", "java.io.FileFilter", "com.sapienter.jbilling.server.mediation.Format", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription", "com.sapienter.jbilling.common.SessionInternalError", "java.io.FileReader", "java.io.BufferedReader", "java.util.Comparator", "com.sapienter.jbilling.server.mediation.task.AbstractFileReader", "com.sapienter.jbilling.server.mediation.task.AbstractReader"],
    "com.sapienter.jbilling.server.order.IOrderSessionBean": ["com.sapienter.jbilling.server.order.db.OrderDTO", "java.math.BigDecimal", "com.sapienter.jbilling.common.SessionInternalError", "java.util.Date", "com.sapienter.jbilling.server.item.ItemDecimalsException", "com.sapienter.jbilling.server.order.db.OrderPeriodDTO", "com.sapienter.jbilling.server.order.IOrderSessionBean", "com.sapienter.jbilling.server.order.db.OrderPeriodDTO[]"],
    "com.sapienter.jbilling.server.provisioning.task.IExternalCommunication": ["java.util.Map", "com.sapienter.jbilling.server.provisioning.task.IExternalCommunication", "com.sapienter.jbilling.server.pluggableTask.TaskException"],
    "com.sapienter.jbilling.server.provisioning.task.mmsc.AddCustomer": ["javax.xml.bind.annotation.XmlAccessorType", "javax.xml.bind.annotation.XmlType", "com.sapienter.jbilling.server.provisioning.task.mmsc.AddCustomerRequest", "com.sapienter.jbilling.server.provisioning.task.mmsc.AddCustomer", "javax.xml.bind.annotation.XmlAccessType"],
    "com.sapienter.jbilling.server.item.event.NewItemEvent": ["com.sapienter.jbilling.server.item.db.ItemDTO", "com.sapienter.jbilling.server.item.event.NewItemEvent", "com.sapienter.jbilling.server.item.event.AbstractItemEvent"],
    "com.sapienter.jbilling.server.pluggableTask.BasicInvoiceFilterTask": ["com.sapienter.jbilling.server.pluggableTask.BasicInvoiceFilterTask", "com.sapienter.jbilling.server.pluggableTask.PluggableTask", "com.sapienter.jbilling.server.process.db.BillingProcessDTO", "com.sapienter.jbilling.server.pluggableTask.InvoiceFilterTask", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO", "com.sapienter.jbilling.server.pluggableTask.TaskException"],
    "com.sapienter.jbilling.server.user.db.CompanyDAS": ["com.sapienter.jbilling.server.user.db.CompanyDAS", "java.util.List", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.user.db.CompanyDTO"],
    "com.sapienter.jbilling.server.user.db.SubscriberStatusDTO": ["javax.persistence.Entity", "com.sapienter.jbilling.server.user.db.SubscriberStatusDTO", "javax.persistence.CascadeType", "com.sapienter.jbilling.server.util.db.AbstractGenericStatus", "com.sapienter.jbilling.server.user.db.UserDTO", "javax.persistence.OneToMany", "java.util.Set", "java.io.Serializable", "java.util.HashSet", "javax.persistence.DiscriminatorValue", "javax.persistence.Transient", "javax.persistence.FetchType", "com.sapienter.jbilling.server.util.Constants"],
    "com.sapienter.jbilling.server.payment.IExternalCreditCardStorage": ["com.sapienter.jbilling.server.user.db.AchDTO", "com.sapienter.jbilling.server.payment.IExternalCreditCardStorage", "com.sapienter.jbilling.server.user.db.CreditCardDTO", "com.sapienter.jbilling.server.user.contact.db.ContactDTO"],
    "com.sapienter.jbilling.server.user.contact.db.ContactTypeDAS": ["org.hibernate.Criteria", "com.sapienter.jbilling.server.user.contact.db.ContactTypeDAS", "org.hibernate.criterion.Restrictions", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.user.contact.db.ContactTypeDTO"],
    "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskException": ["com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskException"],
    "com.sapienter.jbilling.server.order.CurrentOrder": ["com.sapienter.jbilling.server.util.db.CurrencyDTO", "java.util.Date", "com.sapienter.jbilling.server.order.CurrentOrder", "com.sapienter.jbilling.server.util.Context", "com.sapienter.jbilling.server.user.db.CustomerDTO", "org.apache.log4j.Logger", "com.sapienter.jbilling.server.user.EntityBL", "org.springmodules.cache.provider.CacheProviderFacade", "java.util.Calendar", "java.util.ResourceBundle", "com.sapienter.jbilling.common.Util", "org.apache.log4j.Category", "com.sapienter.jbilling.server.order.OrderBL", "com.sapienter.jbilling.server.util.MapPeriodToCalendar", "java.util.GregorianCalendar", "com.sapienter.jbilling.server.user.db.UserDTO", "com.sapienter.jbilling.server.util.audit.EventLogger", "com.sapienter.jbilling.server.order.db.OrderPeriodDTO", "com.sapienter.jbilling.server.user.UserBL", "com.sapienter.jbilling.server.util.Context$Name", "<nulltype>", "org.springmodules.cache.FlushingModel", "com.sapienter.jbilling.server.order.db.OrderDTO", "java.util.List", "com.sapienter.jbilling.server.process.db.PeriodUnitDTO", "org.springmodules.cache.CachingModel", "com.sapienter.jbilling.common.SessionInternalError", "com.sapienter.jbilling.server.user.db.CompanyDTO", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.order.db.OrderDAS", "com.sapienter.jbilling.server.util.Constants"],
    "com.sapienter.jbilling.server.notification.db.NotificationMessageArchDAS": ["com.sapienter.jbilling.server.notification.db.NotificationMessageArchLineDAS", "java.util.Date", "com.sapienter.jbilling.server.notification.db.NotificationMessageArchDAS", "java.util.Set", "com.sapienter.jbilling.server.notification.db.NotificationMessageArchLineDTO", "com.sapienter.jbilling.server.notification.db.NotificationMessageArchDTO", "com.sapienter.jbilling.server.notification.MessageSection[]", "com.sapienter.jbilling.server.notification.MessageSection", "com.sapienter.jbilling.server.util.db.AbstractDAS"],
    "com.sapienter.jbilling.server.order.task.CancellationFeeRulesTask": ["com.sapienter.jbilling.server.order.task.CancellationFeeRulesTask$FeeOrderManager", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskException", "com.sapienter.jbilling.server.util.db.CurrencyDTO", "java.util.Date", "com.sapienter.jbilling.server.order.task.CancellationFeeRulesTask$EventType", "com.sapienter.jbilling.server.order.task.CancellationFeeRulesTask", "com.sapienter.jbilling.server.order.db.OrderLineDTO", "com.sapienter.jbilling.server.pluggableTask.TaskException", "com.sapienter.jbilling.server.order.db.OrderLineTypeDAS", "com.sapienter.jbilling.server.item.db.ItemDTO", "org.apache.log4j.Logger", "java.math.BigDecimal", "com.sapienter.jbilling.server.util.db.AbstractDescription", "org.apache.log4j.Category", "com.sapienter.jbilling.server.order.OrderBL", "com.sapienter.jbilling.server.user.db.UserDTO", "com.sapienter.jbilling.server.order.event.NewActiveUntilEvent", "com.sapienter.jbilling.server.system.event.task.IInternalEventsTask", "com.sapienter.jbilling.server.order.task.RefundOnCancelTask", "com.sapienter.jbilling.server.item.ItemBL", "com.sapienter.jbilling.server.order.db.OrderDTO", "java.util.List", "com.sapienter.jbilling.server.item.ItemDecimalsException", "java.util.ResourceBundle", "com.sapienter.jbilling.server.item.tasks.RulesItemManager$OrderManager", "com.sapienter.jbilling.server.item.db.ItemDAS", "com.sapienter.jbilling.server.order.event.NewQuantityEvent", "com.sapienter.jbilling.server.order.db.OrderPeriodDAS", "com.sapienter.jbilling.server.util.db.LanguageDTO", "com.sapienter.jbilling.server.system.event.Event", "com.sapienter.jbilling.server.item.tasks.RulesItemManager", "com.sapienter.jbilling.server.user.UserBL", "<nulltype>", "com.sapienter.jbilling.common.SessionInternalError", "com.sapienter.jbilling.server.user.db.CompanyDTO", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.order.db.OrderDAS", "com.sapienter.jbilling.server.util.Constants"],
    "com.sapienter.jbilling.server.process.db.ProcessRunUserDAS": ["com.sapienter.jbilling.server.process.db.ProcessRunUserDTO", "org.hibernate.Criteria", "org.hibernate.criterion.Restrictions", "java.util.Date", "com.sapienter.jbilling.server.process.db.ProcessRunUserDAS", "org.hibernate.criterion.Projections", "com.sapienter.jbilling.server.user.db.UserDAS", "java.util.List", "com.sapienter.jbilling.server.process.db.ProcessRunDAS", "com.sapienter.jbilling.server.util.db.AbstractDAS", "org.hibernate.Query"],
    "com.sapienter.jbilling.server.provisioning.task.CommandsQueueSender": ["javax.jms.MapMessage", "com.sapienter.jbilling.server.provisioning.task.ProvisioningCommandsRulesTask", "com.sapienter.jbilling.server.util.Context", "com.sapienter.jbilling.server.order.db.OrderLineDTO", "com.sapienter.jbilling.server.provisioning.task.CommandsQueueSender", "org.apache.log4j.Logger", "java.util.AbstractCollection", "javax.jms.Session", "org.springframework.jms.core.JmsTemplate", "java.util.LinkedList", "javax.jms.Message", "org.apache.log4j.Category", "com.sapienter.jbilling.server.order.OrderBL", "java.util.Iterator", "com.sapienter.jbilling.server.user.db.UserDTO", "com.sapienter.jbilling.server.util.audit.EventLogger", "com.sapienter.jbilling.server.provisioning.task.CommandsQueueSender$1", "java.util.UUID", "javax.jms.JMSException", "java.util.AbstractSequentialList", "com.sapienter.jbilling.server.util.Context$Name", "<nulltype>", "com.sapienter.jbilling.server.order.db.OrderDTO", "org.springframework.jms.core.MessageCreator", "com.sapienter.jbilling.server.provisioning.task.StringPair", "javax.jms.Destination", "com.sapienter.jbilling.server.user.db.CompanyDTO", "com.sapienter.jbilling.server.util.Constants"],
    "com.sapienter.jbilling.server.order.event.NewStatusEvent": ["com.sapienter.jbilling.server.order.OrderBL", "com.sapienter.jbilling.server.system.event.Event", "com.sapienter.jbilling.server.user.db.UserDTO", "com.sapienter.jbilling.server.order.db.OrderPeriodDTO", "com.sapienter.jbilling.server.order.event.NewStatusEvent", "com.sapienter.jbilling.server.order.db.OrderDTO", "org.apache.log4j.Logger", "com.sapienter.jbilling.server.user.db.CompanyDTO", "org.apache.log4j.Category"],
    "com.sapienter.jbilling.server.process.db.PeriodUnitDAS": ["com.sapienter.jbilling.server.process.db.PeriodUnitDTO", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.process.db.PeriodUnitDAS"],
    "com.sapienter.jbilling.server.util.DescriptionBL": ["com.sapienter.jbilling.server.util.db.InternationalDescriptionDAS", "java.util.Collection", "com.sapienter.jbilling.server.util.Context", "com.sapienter.jbilling.server.util.DescriptionBL", "com.sapienter.jbilling.server.util.Context$Name"],
    "com.sapienter.jbilling.server.util.db.HibernateIdGenerator": ["org.hibernate.id.IdentifierGenerator", "java.util.Properties", "org.hibernate.id.IdentifierGeneratorFactory", "org.hibernate.SessionFactory", "org.hibernate.id.enhanced.TableGenerator", "org.hibernate.StatelessSession", "com.sapienter.jbilling.server.util.Context", "com.sapienter.jbilling.server.util.db.HibernateIdGenerator$ID", "com.sapienter.jbilling.server.util.Context$Name", "com.sapienter.jbilling.server.util.db.HibernateIdGenerator", "java.io.Serializable", "org.hibernate.impl.SessionFactoryImpl", "org.hibernate.impl.StatelessSessionImpl", "org.hibernate.type.IntegerType", "javax.persistence.Id"],
    "com.sapienter.jbilling.server.user.db.CustomerDTO": ["com.sapienter.jbilling.server.user.partner.db.Partner", "com.sapienter.jbilling.server.user.db.CustomerDTO", "java.util.HashSet", "org.apache.log4j.Logger", "java.math.BigDecimal", "javax.persistence.Table", "com.sapienter.jbilling.common.Constants", "javax.persistence.TableGenerator", "javax.persistence.Version", "org.apache.log4j.Category", "javax.persistence.Id", "com.sapienter.jbilling.server.invoice.db.InvoiceDeliveryMethodDAS", "javax.persistence.Entity", "javax.persistence.ManyToOne", "javax.persistence.CascadeType", "com.sapienter.jbilling.server.user.db.UserDTO", "com.sapienter.jbilling.server.user.partner.db.PartnerDAS", "javax.persistence.JoinColumn", "javax.persistence.OneToMany", "java.util.Set", "com.sapienter.jbilling.server.user.db.UserDAS", "<nulltype>", "java.io.Serializable", "javax.persistence.OneToOne", "javax.persistence.Column", "javax.persistence.GenerationType", "javax.persistence.GeneratedValue", "javax.persistence.Transient", "javax.persistence.FetchType", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.user.UserWS", "com.sapienter.jbilling.server.invoice.db.InvoiceDeliveryMethodDTO"],
    "com.sapienter.jbilling.server.util.db.PreferenceTypeDTO": ["javax.persistence.Entity", "javax.persistence.CascadeType", "javax.persistence.OneToMany", "java.util.Set", "org.hibernate.annotations.CacheConcurrencyStrategy", "org.hibernate.annotations.Cache", "java.io.Serializable", "com.sapienter.jbilling.server.util.db.PreferenceTypeDTO", "java.util.HashSet", "javax.persistence.Column", "com.sapienter.jbilling.server.util.db.AbstractDescription", "com.sapienter.jbilling.server.util.db.PreferenceDTO", "javax.persistence.Table", "javax.persistence.Transient", "javax.persistence.FetchType", "com.sapienter.jbilling.server.util.Constants", "javax.persistence.Id"],
    "com.sapienter.jbilling.server.report.ReportBL": ["java.sql.Connection", "org.springframework.jdbc.datasource.DataSourceUtils", "net.sf.jasperreports.engine.JRException", "java.util.HashMap", "com.sapienter.jbilling.server.util.Context", "org.apache.log4j.Logger", "com.sapienter.jbilling.server.report.ReportBL", "java.util.Locale", "net.sf.jasperreports.engine.JRExporterParameter", "java.util.Map", "javax.sql.DataSource", "net.sf.jasperreports.engine.export.JRHtmlExporterParameter", "org.apache.log4j.Category", "javax.servlet.http.HttpSession", "java.io.PrintWriter", "net.sf.jasperreports.engine.JasperPrint", "javax.servlet.http.HttpServletResponse", "com.sapienter.jbilling.server.report.ReportExportFormat", "net.sf.jasperreports.engine.export.JRHtmlExporter", "java.io.IOException", "net.sf.jasperreports.engine.JasperFillManager", "java.io.FileInputStream", "net.sf.jasperreports.engine.JRParameter", "java.io.File", "com.sapienter.jbilling.server.util.Context$Name", "java.io.FileNotFoundException", "com.sapienter.jbilling.server.user.UserBL", "<nulltype>", "com.sapienter.jbilling.server.report.db.ReportDTO", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.report.ReportExportDTO", "com.sapienter.jbilling.server.report.db.ReportDAS"],
    "com.sapienter.jbilling.server.order.OrderProcessWS": ["java.util.Date", "<nulltype>", "java.io.Serializable", "com.sapienter.jbilling.server.order.db.OrderProcessDTO", "com.sapienter.jbilling.server.order.db.OrderDTO", "com.sapienter.jbilling.server.process.db.BillingProcessDTO", "com.sapienter.jbilling.server.order.OrderProcessWS", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO"],
    "com.sapienter.jbilling.server.pluggableTask.PaymentFakeTask": ["com.sapienter.jbilling.server.pluggableTask.PaymentFakeTask$NameStartsWithFilter", "com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskException", "org.apache.log4j.Logger", "java.math.BigDecimal", "com.sapienter.jbilling.server.payment.db.PaymentResultDAS", "com.sapienter.jbilling.server.pluggableTask.PaymentFakeTask$Filter", "java.util.Map", "com.sapienter.jbilling.server.pluggableTask.PaymentFakeTask", "org.apache.log4j.Category", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDTO", "com.sapienter.jbilling.server.pluggableTask.PluggableTask", "com.sapienter.jbilling.server.payment.db.PaymentDTO", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription$Type", "<nulltype>", "com.sapienter.jbilling.server.pluggableTask.PaymentFakeTask$Filter$1", "com.sapienter.jbilling.server.user.db.AchDTO", "java.util.List", "com.sapienter.jbilling.server.user.db.CreditCardDTO", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription", "com.sapienter.jbilling.server.payment.PaymentDTOEx", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.pluggableTask.PaymentTask", "com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase$Result", "com.sapienter.jbilling.server.util.Constants"],
    "com.sapienter.jbilling.common.SystemProperties": ["java.io.PrintStream", "java.util.Properties", "java.net.URL", "java.io.IOException", "java.io.FileInputStream", "java.io.File", "<nulltype>", "org.apache.log4j.Logger", "com.sapienter.jbilling.common.SystemProperties", "org.apache.log4j.Category"],
    "com.sapienter.jbilling.server.report.db.parameter.DateReportParameterDTO": ["javax.persistence.DiscriminatorValue", "javax.persistence.Entity", "javax.persistence.Transient", "java.util.Date", "com.sapienter.jbilling.server.report.db.parameter.DateReportParameterDTO", "com.sapienter.jbilling.server.report.db.ReportParameterDTO"],
    "com.sapienter.jbilling.server.payment.tasks.SaveACHExternallyTask": ["com.sapienter.jbilling.server.payment.IExternalCreditCardStorage", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskException", "com.sapienter.jbilling.server.payment.tasks.SaveCreditCardExternallyTask", "com.sapienter.jbilling.server.user.event.AchDeleteEvent", "org.apache.log4j.Logger", "com.sapienter.jbilling.server.user.event.AchUpdateEvent", "java.util.Map", "com.sapienter.jbilling.server.payment.tasks.SaveACHExternallyTask", "org.apache.log4j.Category", "com.sapienter.jbilling.server.pluggableTask.PluggableTask", "com.sapienter.jbilling.server.system.event.Event", "com.sapienter.jbilling.server.system.event.task.IInternalEventsTask", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskBL", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription$Type", "<nulltype>", "com.sapienter.jbilling.server.user.db.AchDTO", "java.util.List", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.user.db.AchDAS"],
    "com.sapienter.jbilling.server.payment.blacklist.CreditCardFilter": ["com.sapienter.jbilling.server.user.db.UserDTO", "java.util.Collection", "com.sapienter.jbilling.server.util.Util", "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDAS", "com.sapienter.jbilling.server.payment.blacklist.BlacklistFilter$Result", "com.sapienter.jbilling.server.user.db.UserDAS", "com.sapienter.jbilling.server.payment.blacklist.BlacklistFilter", "<nulltype>", "java.util.ArrayList", "java.util.List", "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDTO", "java.util.ResourceBundle", "com.sapienter.jbilling.server.user.db.CreditCardDTO", "com.sapienter.jbilling.server.payment.PaymentDTOEx", "com.sapienter.jbilling.server.user.db.CompanyDTO", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.payment.blacklist.CreditCardFilter"],
    "com.sapienter.jbilling.server.pluggableTask.OrderFilterAnticipatedTask": ["com.sapienter.jbilling.server.util.PreferenceBL", "java.util.GregorianCalendar", "java.util.Date", "com.sapienter.jbilling.server.pluggableTask.BasicOrderFilterTask", "com.sapienter.jbilling.server.pluggableTask.TaskException", "<nulltype>", "com.sapienter.jbilling.server.order.db.OrderDTO", "org.apache.log4j.Logger", "com.sapienter.jbilling.server.process.db.BillingProcessDTO", "java.util.Calendar", "com.sapienter.jbilling.server.user.db.CompanyDTO", "com.sapienter.jbilling.server.process.BillingProcessBL", "com.sapienter.jbilling.server.pluggableTask.OrderFilterAnticipatedTask", "com.sapienter.jbilling.server.util.Constants", "org.apache.log4j.Category", "org.springframework.dao.EmptyResultDataAccessException"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentMethodRouterTask": ["com.sapienter.jbilling.server.payment.tasks.PaymentMethodRouterTask", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDTO", "com.sapienter.jbilling.server.pluggableTask.PluggableTask", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskException", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription$Type", "<nulltype>", "org.apache.log4j.Logger", "java.util.List", "com.sapienter.jbilling.server.payment.tasks.AbstractPaymentRouterTask", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription", "java.util.Map", "com.sapienter.jbilling.server.payment.PaymentDTOEx", "com.sapienter.jbilling.server.pluggableTask.PaymentTask", "org.apache.log4j.Category"],
    "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskTypeDAS": ["org.apache.log4j.Logger", "java.util.List", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskTypeDAS", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskTypeDTO", "com.sapienter.jbilling.server.util.db.AbstractDAS", "org.hibernate.Query", "org.apache.log4j.Category"],
    "com.sapienter.jbilling.server.process.task.IAgeingTask": ["com.sapienter.jbilling.server.process.task.IAgeingTask", "com.sapienter.jbilling.server.process.db.AgeingEntityStepDTO", "com.sapienter.jbilling.server.user.db.UserDTO", "java.util.Date", "java.util.Set", "com.sapienter.jbilling.server.user.db.UserStatusDTO", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO"],
    "com.sapienter.jbilling.client.authentication.CompanyUserAuthenticationFilter": ["com.sapienter.jbilling.client.authentication.util.UsernameHelper", "javax.servlet.ServletException", "com.sapienter.jbilling.client.authentication.CompanyUserAuthenticationFilter", "com.sapienter.jbilling.client.authentication.util.SecuritySession", "javax.servlet.http.HttpServletResponse", "java.io.IOException", "<nulltype>", "org.apache.log4j.Logger", "com.sapienter.jbilling.client.authentication.CompanyUserDetails", "javax.servlet.http.HttpServletRequest", "org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter", "org.springframework.security.core.AuthenticationException", "org.springframework.security.core.Authentication", "org.apache.log4j.Category"],
    "com.sapienter.jbilling.server.provisioning.task.mmsc.MMSCException": ["javax.xml.bind.annotation.XmlAccessorType", "javax.xml.bind.annotation.XmlType", "com.sapienter.jbilling.server.provisioning.task.mmsc.MMSCException", "javax.xml.bind.annotation.XmlAccessType"],
    "com.sapienter.jbilling.server.user.db.UserDTO": ["com.sapienter.jbilling.server.user.partner.db.Partner", "com.sapienter.jbilling.server.user.permisson.db.PermissionUserDTO", "com.sapienter.jbilling.server.user.db.SubscriberStatusDTO", "com.sapienter.jbilling.server.util.db.CurrencyDTO", "java.util.Date", "com.sapienter.jbilling.server.user.db.CustomerDTO", "java.math.BigDecimal", "com.sapienter.jbilling.server.util.audit.db.EventLogDTO", "com.sapienter.jbilling.server.util.db.AbstractDescription", "com.sapienter.jbilling.server.user.db.UserStatusDTO", "com.sapienter.jbilling.server.user.ContactBL", "javax.persistence.ManyToMany", "javax.persistence.Version", "javax.persistence.Entity", "javax.persistence.ManyToOne", "javax.persistence.JoinTable", "javax.persistence.CascadeType", "com.sapienter.jbilling.server.user.db.UserDTO", "com.sapienter.jbilling.server.payment.db.PaymentDTO", "java.util.Set", "org.hibernate.annotations.Cascade", "java.io.Serializable", "com.sapienter.jbilling.server.order.db.OrderDTO", "javax.persistence.Column", "javax.persistence.GenerationType", "javax.persistence.GeneratedValue", "com.sapienter.jbilling.server.invoice.db.InvoiceDeliveryMethodDTO", "com.sapienter.jbilling.server.util.csv.Exportable", "java.util.HashSet", "javax.persistence.Table", "com.sapienter.jbilling.server.notification.db.NotificationMessageArchDTO", "javax.persistence.TableGenerator", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO", "javax.persistence.Id", "com.sapienter.jbilling.server.util.db.LanguageDTO", "javax.persistence.JoinColumn", "javax.persistence.OneToMany", "com.sapienter.jbilling.server.user.contact.db.ContactDTO", "<nulltype>", "com.sapienter.jbilling.server.user.permisson.db.RoleDTO", "javax.persistence.OneToOne", "com.sapienter.jbilling.server.user.db.AchDTO", "javax.persistence.Transient", "com.sapienter.jbilling.server.user.db.CreditCardDTO", "javax.persistence.FetchType", "com.sapienter.jbilling.server.user.db.CompanyDTO"],
    "com.sapienter.jbilling.server.mediation.task.AbstractJDBCReader": ["com.sapienter.jbilling.server.util.PreferenceBL", "java.sql.Connection", "com.sapienter.jbilling.server.item.PricingField$Type", "org.springframework.jdbc.datasource.DataSourceUtils", "com.sapienter.jbilling.server.mediation.task.JDBCUtils", "com.sapienter.jbilling.server.item.PricingField", "com.sapienter.jbilling.server.mediation.Record", "org.springframework.jdbc.core.JdbcTemplate", "java.util.ArrayList", "org.apache.log4j.Logger", "com.sapienter.jbilling.server.mediation.task.AbstractJDBCReader$MarkMethod", "java.sql.SQLException", "com.sapienter.jbilling.common.Constants", "org.springframework.jdbc.support.rowset.SqlRowSetMetaData", "com.sapienter.jbilling.common.Util", "javax.sql.DataSource", "org.springframework.jdbc.support.rowset.SqlRowSet", "java.util.LinkedList", "java.util.NoSuchElementException", "org.apache.log4j.Category", "org.springframework.dao.EmptyResultDataAccessException", "com.sapienter.jbilling.server.pluggableTask.PluggableTask", "org.springframework.jdbc.CannotGetJdbcConnectionException", "java.util.Iterator", "com.sapienter.jbilling.server.mediation.task.AbstractJDBCReader", "int[]", "com.sapienter.jbilling.server.mediation.task.AbstractJDBCReader$Reader", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription$Type", "<nulltype>", "java.util.List", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription", "com.sapienter.jbilling.common.SessionInternalError", "org.springframework.jdbc.datasource.DriverManagerDataSource", "com.sapienter.jbilling.server.mediation.task.AbstractReader", "java.sql.Types"],
    "com.sapienter.jbilling.server.payment.tasks.NoAsyncParameters": ["com.sapienter.jbilling.server.pluggableTask.PluggableTask", "com.sapienter.jbilling.server.payment.tasks.NoAsyncParameters", "com.sapienter.jbilling.server.payment.tasks.IAsyncPaymentParameters", "javax.jms.MapMessage", "javax.jms.JMSException", "com.sapienter.jbilling.server.pluggableTask.TaskException"],
    "com.sapienter.jbilling.server.payment.blacklist.tasks.BlacklistUserStatusTask": ["java.util.Date", "java.util.HashSet", "org.apache.log4j.Logger", "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDTO", "org.apache.log4j.Category", "com.sapienter.jbilling.server.pluggableTask.PluggableTask", "com.sapienter.jbilling.server.process.event.NewUserStatusEvent", "com.sapienter.jbilling.server.system.event.Event", "com.sapienter.jbilling.server.user.contact.db.ContactFieldDTO", "com.sapienter.jbilling.server.user.db.UserDTO", "java.util.Collection", "com.sapienter.jbilling.server.system.event.task.IInternalEventsTask", "com.sapienter.jbilling.server.payment.blacklist.BlacklistBL", "java.util.Set", "com.sapienter.jbilling.server.user.UserDTOEx", "com.sapienter.jbilling.server.user.db.UserDAS", "com.sapienter.jbilling.server.payment.blacklist.tasks.BlacklistUserStatusTask", "com.sapienter.jbilling.server.user.contact.db.ContactFieldTypeDTO", "com.sapienter.jbilling.server.user.contact.db.ContactDTO", "<nulltype>", "com.sapienter.jbilling.server.user.contact.db.ContactFieldTypeDAS", "com.sapienter.jbilling.server.user.db.CreditCardDTO", "com.sapienter.jbilling.server.user.contact.db.ContactDAS", "com.sapienter.jbilling.server.user.db.CompanyDTO", "com.sapienter.jbilling.server.util.db.AbstractDAS"],
    "com.sapienter.jbilling.server.mediation.MediationSessionBean": ["com.sapienter.jbilling.server.mediation.db.MediationRecordStatusDAS", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskException", "java.util.Date", "com.sapienter.jbilling.server.mediation.task.IMediationProcess", "com.sapienter.jbilling.server.mediation.db.MediationRecordLineDTO", "com.sapienter.jbilling.server.util.Context", "com.sapienter.jbilling.server.order.db.OrderLineDTO", "com.sapienter.jbilling.server.pluggableTask.TaskException", "org.apache.log4j.Logger", "com.sapienter.jbilling.server.mediation.db.MediationConfiguration", "java.util.Map", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskManager", "com.sapienter.jbilling.server.mediation.db.MediationRecordDTO", "org.apache.log4j.Category", "com.sapienter.jbilling.server.mediation.db.MediationMapDAS", "com.sapienter.jbilling.server.util.audit.EventLogger", "org.springframework.util.StopWatch", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskBL", "com.sapienter.jbilling.server.util.Context$Name", "com.sapienter.jbilling.server.mediation.MediationSessionBean", "com.sapienter.jbilling.server.order.db.OrderDTO", "java.util.List", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDAS", "com.sapienter.jbilling.server.mediation.db.MediationOrderMap", "com.sapienter.jbilling.server.mediation.Record", "com.sapienter.jbilling.server.mediation.db.MediationRecordDAS", "java.util.HashMap", "com.sapienter.jbilling.server.mediation.db.MediationProcess", "com.sapienter.jbilling.server.mediation.db.MediationProcessDAS", "java.util.ArrayList", "com.sapienter.jbilling.server.user.EntityBL", "com.sapienter.jbilling.server.rule.Result", "com.sapienter.jbilling.server.order.db.OrderLineDAS", "java.util.Calendar", "com.sapienter.jbilling.server.mediation.task.IMediationReader", "org.springframework.transaction.annotation.Propagation", "javax.persistence.EntityNotFoundException", "java.util.LinkedList", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDTO", "java.util.Iterator", "com.sapienter.jbilling.server.mediation.task.MediationResult", "com.sapienter.jbilling.server.util.db.AbstractGenericStatusDAS", "<nulltype>", "com.sapienter.jbilling.common.InvalidArgumentException", "com.sapienter.jbilling.server.mediation.task.IMediationErrorHandler", "com.sapienter.jbilling.server.mediation.db.MediationRecordLineDAS", "com.sapienter.jbilling.common.SessionInternalError", "com.sapienter.jbilling.server.mediation.db.MediationConfigurationDAS", "com.sapienter.jbilling.server.mediation.db.MediationRecordStatusDTO", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.util.Constants", "com.sapienter.jbilling.server.mediation.IMediationSessionBean", "org.springframework.transaction.annotation.Transactional"],
    "com.sapienter.jbilling.server.order.event.OrderDeletedEvent": ["com.sapienter.jbilling.server.order.db.OrderDTO", "com.sapienter.jbilling.server.order.event.OrderDeletedEvent", "com.sapienter.jbilling.server.system.event.Event"],
    "com.sapienter.jbilling.server.invoice.PaperInvoiceBatchBL": ["com.sapienter.jbilling.server.util.PreferenceBL", "com.sapienter.jbilling.server.invoice.InvoiceBL", "com.lowagie.text.pdf.PdfCopy", "java.util.ArrayList", "org.apache.log4j.Logger", "java.sql.SQLException", "com.sapienter.jbilling.server.util.db.PreferenceDTO", "com.sapienter.jbilling.server.process.db.BillingProcessDTO", "com.sapienter.jbilling.common.Util", "java.sql.ResultSet", "com.sapienter.jbilling.server.process.db.PaperInvoiceBatchDAS", "javax.sql.rowset.CachedRowSet", "com.sapienter.jbilling.server.process.BillingProcessBL", "com.sapienter.jbilling.server.process.db.PaperInvoiceBatchDTO", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO", "org.apache.log4j.Category", "com.lowagie.text.pdf.PdfImportedPage", "com.sapienter.jbilling.server.util.audit.EventLogger", "java.io.FileOutputStream", "java.io.IOException", "com.lowagie.text.DocumentException", "com.lowagie.text.Document", "<nulltype>", "java.io.File", "com.lowagie.text.pdf.SimpleBookmark", "java.util.List", "com.sapienter.jbilling.server.invoice.PaperInvoiceBatchBL", "com.lowagie.text.pdf.PdfReader", "com.sapienter.jbilling.server.invoice.InvoiceEntityComparator", "com.sapienter.jbilling.server.notification.NotificationBL", "com.sapienter.jbilling.common.SessionInternalError", "com.lowagie.text.pdf.PRAcroForm", "com.sapienter.jbilling.server.user.db.CompanyDTO", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.util.Constants", "java.util.Collections"],
    "com.sapienter.jbilling.server.user.contact.db.ContactFieldTypeDAS": ["com.sapienter.jbilling.server.user.contact.db.ContactFieldTypeDAS", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.user.contact.db.ContactFieldTypeDTO"],
    "com.sapienter.jbilling.server.user.ContactTypeComparator": ["com.sapienter.jbilling.server.user.ContactTypeComparator", "java.util.Comparator", "com.sapienter.jbilling.server.user.contact.db.ContactTypeDTO"],
    "com.sapienter.jbilling.server.invoice.NewInvoiceDTO": ["com.sapienter.jbilling.server.order.TimePeriod", "java.util.Iterator", "java.util.Date", "java.util.Set", "java.util.HashMap", "<nulltype>", "java.util.ArrayList", "com.sapienter.jbilling.server.order.db.OrderDTO", "java.util.HashSet", "org.apache.log4j.Logger", "java.math.BigDecimal", "java.util.List", "com.sapienter.jbilling.common.SessionInternalError", "java.util.Map", "com.sapienter.jbilling.server.invoice.NewInvoiceDTO", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO", "org.apache.log4j.Category", "com.sapienter.jbilling.server.process.PeriodOfTime"],
    "com.sapienter.jbilling.server.mediation.task.MySQLReader": ["com.sapienter.jbilling.server.pluggableTask.PluggableTask", "com.sapienter.jbilling.server.mediation.task.AbstractJDBCReader", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription$Type", "<nulltype>", "java.util.List", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription", "java.util.Map", "com.sapienter.jbilling.server.mediation.task.MySQLReader", "com.sapienter.jbilling.server.mediation.task.JDBCReader"],
    "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskTypeCategoryDAS": ["com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskTypeCategoryDTO", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskTypeCategoryDAS"],
    "com.sapienter.jbilling.server.notification.INotificationSessionBean": ["com.sapienter.jbilling.server.user.db.UserDTO", "com.sapienter.jbilling.server.notification.INotificationSessionBean", "com.sapienter.jbilling.common.SessionInternalError", "com.sapienter.jbilling.server.notification.MessageDTO"],
    "com.sapienter.jbilling.server.invoice.db.InvoiceLineTypeDTO": ["javax.persistence.Entity", "javax.persistence.CascadeType", "com.sapienter.jbilling.server.invoice.db.InvoiceLineTypeDTO", "javax.persistence.OneToMany", "java.util.Set", "org.hibernate.annotations.CacheConcurrencyStrategy", "org.hibernate.annotations.Cache", "java.io.Serializable", "java.util.HashSet", "javax.persistence.Column", "javax.persistence.Table", "javax.persistence.FetchType", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO", "javax.persistence.Id"],
    "com.sapienter.jbilling.server.user.UserTransitionResponseWS": ["com.sapienter.jbilling.server.security.WSSecured", "java.util.Date", "com.sapienter.jbilling.server.user.UserTransitionResponseWS", "<nulltype>", "java.io.Serializable"],
    "com.sapienter.jbilling.server.mediation.db.MediationRecordDAS": ["com.sapienter.jbilling.server.mediation.db.MediationRecordDAS", "<nulltype>", "java.util.List", "com.sapienter.jbilling.server.mediation.db.MediationRecordStatusDTO", "com.sapienter.jbilling.server.util.db.AbstractDAS", "org.hibernate.Query", "com.sapienter.jbilling.server.mediation.db.MediationRecordDTO"],
    "com.sapienter.jbilling.server.payment.event.PaymentSuccessfulEvent": ["com.sapienter.jbilling.server.payment.db.PaymentDTO", "com.sapienter.jbilling.server.payment.PaymentDTOEx", "com.sapienter.jbilling.server.payment.event.PaymentSuccessfulEvent", "com.sapienter.jbilling.server.payment.event.AbstractPaymentEvent"],
    "com.sapienter.jbilling.server.process.task.BillableUserOrdersBillingProcessFilterTask": ["com.sapienter.jbilling.server.pluggableTask.PluggableTask", "org.hibernate.ScrollableResults", "java.util.Date", "com.sapienter.jbilling.server.process.db.BillingProcessDAS", "com.sapienter.jbilling.server.process.task.BillableUserOrdersBillingProcessFilterTask", "com.sapienter.jbilling.server.process.task.IBillingProcessFilterTask"],
    "com.sapienter.jbilling.server.provisioning.db.ProvisioningStatusDAS": ["com.sapienter.jbilling.server.provisioning.db.ProvisioningStatusDTO", "com.sapienter.jbilling.server.util.db.AbstractGenericStatusDAS", "com.sapienter.jbilling.server.provisioning.db.ProvisioningStatusDAS"],
    "com.sapienter.jbilling.server.notification.MessageDTO": ["java.util.HashMap", "com.sapienter.jbilling.server.notification.MessageDTO", "<nulltype>", "java.io.Serializable", "java.util.List", "com.sapienter.jbilling.server.notification.MessageSection[]", "java.util.Vector", "com.sapienter.jbilling.common.Constants", "com.sapienter.jbilling.server.notification.MessageSection"],
    "com.sapienter.jbilling.server.pluggableTask.PaymentACHCommerceTask": ["com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskException", "org.apache.commons.httpclient.methods.PostMethod", "org.apache.commons.httpclient.NameValuePair[]", "com.sapienter.jbilling.server.pluggableTask.PaymentACHCommerceTask", "org.apache.log4j.Logger", "java.math.BigDecimal", "com.sapienter.jbilling.server.payment.db.PaymentResultDAS", "com.sapienter.jbilling.common.Constants", "org.apache.commons.httpclient.NameValuePair", "org.apache.commons.httpclient.HttpException", "com.sapienter.jbilling.server.user.ContactBL", "org.apache.log4j.Category", "com.sapienter.jbilling.server.payment.db.PaymentDTO", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO", "java.io.IOException", "com.sapienter.jbilling.server.user.contact.db.ContactDTO", "<nulltype>", "com.sapienter.jbilling.server.user.db.AchDTO", "org.apache.commons.httpclient.HttpClient", "com.sapienter.jbilling.server.payment.PaymentDTOEx", "com.sapienter.jbilling.server.util.db.AbstractDAS"],
    "com.sapienter.jbilling.server.mediation.db.MapPK": ["javax.persistence.Column", "javax.persistence.Embeddable", "com.sapienter.jbilling.server.mediation.db.MapPK", "java.io.Serializable"],
    "com.sapienter.jbilling.server.notification.NotificationLineEntityComparator": ["com.sapienter.jbilling.server.notification.NotificationLineEntityComparator", "com.sapienter.jbilling.server.notification.db.NotificationMessageLineDTO", "java.util.Comparator"],
    "com.sapienter.jbilling.server.notification.db.NotificationMessageTypeDTO": ["java.util.HashSet", "com.sapienter.jbilling.server.notification.db.NotificationMessageTypeDTO", "com.sapienter.jbilling.server.util.db.AbstractDescription", "javax.persistence.Table", "javax.persistence.TableGenerator", "com.sapienter.jbilling.server.notification.db.NotificationMessageDTO", "javax.persistence.Version", "javax.persistence.Id", "javax.persistence.Entity", "javax.persistence.ManyToOne", "com.sapienter.jbilling.server.util.db.NotificationCategoryDTO", "javax.persistence.CascadeType", "javax.persistence.JoinColumn", "javax.persistence.OneToMany", "java.util.Set", "org.hibernate.annotations.CacheConcurrencyStrategy", "org.hibernate.annotations.Cache", "java.io.Serializable", "javax.persistence.Column", "javax.persistence.GenerationType", "javax.persistence.GeneratedValue", "javax.persistence.Transient", "javax.persistence.FetchType", "com.sapienter.jbilling.server.util.Constants"],
    "com.sapienter.jbilling.server.order.OrderSQL": ["com.sapienter.jbilling.server.order.OrderSQL"],
    "com.sapienter.jbilling.server.order.db.OrderLineDAS": ["com.sapienter.jbilling.server.user.db.UserDTO", "com.sapienter.jbilling.server.order.db.OrderLineDTO", "com.sapienter.jbilling.server.user.UserBL", "<nulltype>", "com.sapienter.jbilling.server.user.db.CustomerDTO", "org.apache.log4j.Logger", "java.util.List", "com.sapienter.jbilling.server.order.db.OrderLineDAS", "com.sapienter.jbilling.server.util.db.AbstractDAS", "org.hibernate.Query", "org.joda.time.DateMidnight", "com.sapienter.jbilling.server.util.Constants", "java.util.Collections", "org.apache.log4j.Category"],
    "com.sapienter.jbilling.server.user.db.UserStatusDAS": ["com.sapienter.jbilling.server.user.db.UserStatusDAS", "com.sapienter.jbilling.server.util.db.AbstractGenericStatusDAS", "com.sapienter.jbilling.server.user.db.UserStatusDTO"],
    "com.sapienter.jbilling.server.item.db.ItemPriceDAS": ["org.hibernate.Criteria", "com.sapienter.jbilling.server.item.db.ItemPriceDAS", "org.hibernate.criterion.Restrictions", "com.sapienter.jbilling.server.item.db.ItemPriceDTO", "com.sapienter.jbilling.server.util.db.AbstractDAS"],
    "com.sapienter.jbilling.server.order.db.OrderStatusDAS": ["com.sapienter.jbilling.server.order.db.OrderStatusDAS", "com.sapienter.jbilling.server.util.db.AbstractGenericStatusDAS", "com.sapienter.jbilling.server.order.db.OrderStatusDTO"],
    "com.sapienter.jbilling.server.provisioning.task.TestExternalProvisioningTask": ["com.sapienter.jbilling.server.pluggableTask.PluggableTask", "java.util.HashMap", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription$Type", "com.sapienter.jbilling.server.pluggableTask.TaskException", "<nulltype>", "org.apache.log4j.Logger", "java.util.List", "com.sapienter.jbilling.server.provisioning.task.TestExternalProvisioningTask", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription", "java.util.Map", "com.sapienter.jbilling.server.provisioning.task.IExternalProvisioning", "org.apache.log4j.Category"],
    "com.sapienter.jbilling.server.util.api.WebServicesConstants": ["com.sapienter.jbilling.server.util.api.WebServicesConstants"],
    "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskParameterDAS": ["com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskParameterDAS", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskParameterDTO"],
    "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData": ["com.sapienter.jbilling.server.user.db.AchDTO", "com.sapienter.jbilling.server.user.db.CreditCardDTO", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData", "java.text.SimpleDateFormat", "com.sapienter.jbilling.server.user.contact.db.ContactDTO", "java.text.DateFormat", "<nulltype>"],
    "com.sapienter.jbilling.tools.UploadInternationalData": ["java.io.PrintStream", "java.sql.Connection", "java.util.Properties", "java.io.FileInputStream", "java.sql.PreparedStatement", "<nulltype>", "com.sapienter.jbilling.tools.UploadInternationalData", "java.sql.Statement", "java.io.FileReader", "java.io.BufferedReader", "java.sql.DriverManager"],
    "com.sapienter.jbilling.server.order.task.RulesLineTotalTask": ["com.sapienter.jbilling.server.order.db.OrderDTO", "com.sapienter.jbilling.server.util.db.LanguageDTO", "com.sapienter.jbilling.server.item.tasks.RulesItemManager$OrderManager", "com.sapienter.jbilling.server.user.db.UserDTO", "com.sapienter.jbilling.server.util.db.CurrencyDTO", "com.sapienter.jbilling.server.pluggableTask.OrderProcessingTask", "com.sapienter.jbilling.server.user.db.CompanyDTO", "com.sapienter.jbilling.server.item.tasks.RulesItemManager", "com.sapienter.jbilling.server.order.task.RulesLineTotalTask", "com.sapienter.jbilling.server.pluggableTask.TaskException"],
    "com.sapienter.jbilling.server.pluggableTask.PluggableTaskSessionBean": ["com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDTO", "java.util.Collection", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskBL", "com.sapienter.jbilling.server.util.Context", "com.sapienter.jbilling.server.pluggableTask.IPluggableTaskSessionBean", "com.sapienter.jbilling.server.util.Context$Name", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskParameterDTO", "org.springframework.transaction.annotation.Propagation", "com.sapienter.jbilling.common.SessionInternalError", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDTO[]", "com.sapienter.jbilling.server.pluggableTask.PluggableTaskSessionBean", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDAS", "org.springframework.transaction.annotation.Transactional"],
    "com.sapienter.jbilling.server.order.event.NewQuantityEvent": ["java.math.BigDecimal", "com.sapienter.jbilling.server.system.event.Event", "com.sapienter.jbilling.server.order.db.OrderLineDTO", "com.sapienter.jbilling.server.order.event.NewQuantityEvent", "<nulltype>"],
    "com.sapienter.jbilling.server.util.audit.db.EventLogDAS": ["org.hibernate.Criteria", "org.hibernate.criterion.Restrictions", "com.sapienter.jbilling.server.util.audit.EventLogger", "<nulltype>", "org.apache.log4j.Logger", "java.util.List", "org.hibernate.criterion.Order", "com.sapienter.jbilling.server.util.audit.db.EventLogDTO", "com.sapienter.jbilling.server.util.db.AbstractDAS", "org.hibernate.Query", "com.sapienter.jbilling.server.util.audit.db.EventLogDAS", "org.apache.log4j.Category"],
    "com.sapienter.jbilling.server.process.db.ProcessRunTotalDTO": ["com.sapienter.jbilling.server.util.db.CurrencyDTO", "com.sapienter.jbilling.server.process.db.ProcessRunTotalPmDTO", "java.util.HashSet", "java.math.BigDecimal", "javax.persistence.Table", "javax.persistence.TableGenerator", "com.sapienter.jbilling.server.process.db.ProcessRunDTO", "javax.persistence.Version", "com.sapienter.jbilling.server.process.db.ProcessRunTotalDTO", "javax.persistence.Id", "javax.persistence.Entity", "javax.persistence.ManyToOne", "javax.persistence.CascadeType", "javax.persistence.JoinColumn", "javax.persistence.OneToMany", "java.util.Set", "org.hibernate.annotations.CacheConcurrencyStrategy", "org.hibernate.annotations.Cache", "java.io.Serializable", "javax.persistence.Column", "javax.persistence.GenerationType", "javax.persistence.GeneratedValue", "javax.persistence.FetchType"],
    "com.sapienter.jbilling.server.user.partner.PartnerPayoutWS": ["com.sapienter.jbilling.server.user.partner.db.Partner", "com.sapienter.jbilling.server.user.partner.PartnerPayoutWS", "java.util.Date", "com.sapienter.jbilling.server.payment.db.PaymentDTO", "com.sapienter.jbilling.server.user.partner.db.PartnerPayout", "<nulltype>", "java.io.Serializable", "java.math.BigDecimal"],
    "com.sapienter.jbilling.server.util.IWebServicesSessionBean": ["com.sapienter.jbilling.server.util.CurrencyWS", "com.sapienter.jbilling.server.user.UserTransitionResponseWS[]", "com.sapienter.jbilling.server.user.CompanyWS", "com.sapienter.jbilling.server.payment.PaymentAuthorizationDTOEx", "java.util.Date", "com.sapienter.jbilling.server.process.AgeingWS", "com.sapienter.jbilling.server.user.ContactWS[]", "com.sapienter.jbilling.server.order.OrderPeriodWS", "java.math.BigDecimal", "com.sapienter.jbilling.server.user.contact.ContactFieldTypeWS[]", "com.sapienter.jbilling.server.item.ItemTypeWS[]", "com.sapienter.jbilling.server.payment.PaymentWS", "com.sapienter.jbilling.server.user.ContactTypeWS", "com.sapienter.jbilling.server.order.OrderProcessWS", "com.sapienter.jbilling.server.user.contact.ContactFieldTypeWS", "com.sapienter.jbilling.server.item.ItemDTOEx", "com.sapienter.jbilling.server.process.AgeingWS[]", "javax.jws.WebService", "com.sapienter.jbilling.server.invoice.InvoiceWS", "com.sapienter.jbilling.server.user.ValidatePurchaseWS", "com.sapienter.jbilling.server.order.OrderWS", "java.util.List", "com.sapienter.jbilling.server.util.PreferenceWS", "com.sapienter.jbilling.server.order.OrderLineWS[]", "com.sapienter.jbilling.server.order.OrderWS[]", "com.sapienter.jbilling.server.entity.CreditCardDTO", "com.sapienter.jbilling.server.mediation.MediationRecordWS", "com.sapienter.jbilling.server.util.CurrencyWS[]", "com.sapienter.jbilling.server.user.UserTransitionResponseWS", "com.sapienter.jbilling.server.notification.MessageDTO", "com.sapienter.jbilling.server.user.partner.PartnerWS", "com.sapienter.jbilling.server.order.OrderPeriodWS[]", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskWS", "com.sapienter.jbilling.server.invoice.InvoiceWS[]", "com.sapienter.jbilling.server.process.BillingProcessConfigurationWS", "com.sapienter.jbilling.server.util.IWebServicesSessionBean", "com.sapienter.jbilling.server.mediation.MediationRecordLineWS", "com.sapienter.jbilling.server.process.BillingProcessWS", "com.sapienter.jbilling.server.item.ItemTypeWS", "com.sapienter.jbilling.server.mediation.RecordCountWS", "com.sapienter.jbilling.server.item.ItemDTOEx[]", "byte[]", "com.sapienter.jbilling.server.util.PreferenceWS[]", "com.sapienter.jbilling.server.user.ContactWS", "com.sapienter.jbilling.common.SessionInternalError", "com.sapienter.jbilling.server.entity.AchDTO", "com.sapienter.jbilling.server.user.CreateResponseWS", "com.sapienter.jbilling.server.user.UserWS", "com.sapienter.jbilling.server.mediation.MediationConfigurationWS", "com.sapienter.jbilling.server.order.OrderLineWS", "com.sapienter.jbilling.server.mediation.MediationProcessWS"],
    "com.sapienter.jbilling.server.user.CreditCardBL": ["java.sql.Connection", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskException", "com.sapienter.jbilling.server.payment.PaymentAuthorizationDTOEx", "java.util.Date", "com.sapienter.jbilling.server.util.Context", "org.apache.log4j.Logger", "java.math.BigDecimal", "com.sapienter.jbilling.server.payment.db.PaymentResultDAS", "java.sql.ResultSet", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskManager", "com.sapienter.jbilling.server.payment.event.AbstractPaymentEvent", "org.apache.log4j.Category", "java.util.GregorianCalendar", "com.sapienter.jbilling.server.user.db.UserDTO", "com.sapienter.jbilling.server.user.event.NewCreditCardEvent", "com.sapienter.jbilling.server.payment.db.PaymentDTO", "java.util.Collection", "com.sapienter.jbilling.server.util.audit.EventLogger", "java.util.Set", "com.sapienter.jbilling.server.user.db.CreditCardDAS", "com.sapienter.jbilling.server.util.Context$Name", "com.sapienter.jbilling.server.payment.PaymentDTOEx", "com.sapienter.jbilling.server.pluggableTask.PaymentTask", "com.sapienter.jbilling.server.notification.INotificationSessionBean", "com.sapienter.jbilling.server.notification.NotificationNotFoundException", "com.sapienter.jbilling.server.user.CreditCardSQL", "com.sapienter.jbilling.server.notification.MessageDTO", "java.sql.SQLException", "java.util.Calendar", "com.sapienter.jbilling.common.Util", "com.sapienter.jbilling.server.list.ResultList", "javax.sql.RowSet", "com.sapienter.jbilling.server.payment.db.PaymentResultDTO", "com.sapienter.jbilling.server.system.event.EventManager", "com.sapienter.jbilling.server.util.db.CurrencyDAS", "com.sapienter.jbilling.server.payment.db.PaymentMethodDAS", "com.sapienter.jbilling.server.user.CreditCardBL", "java.util.Iterator", "com.sapienter.jbilling.server.payment.PaymentBL", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO", "com.sapienter.jbilling.server.user.db.UserDAS", "com.sapienter.jbilling.server.user.UserBL", "<nulltype>", "com.sapienter.jbilling.server.payment.db.PaymentDAS", "java.sql.Date", "com.sapienter.jbilling.server.user.db.CreditCardDTO", "com.sapienter.jbilling.server.notification.NotificationBL", "com.sapienter.jbilling.common.SessionInternalError", "com.sapienter.jbilling.server.user.db.CompanyDTO", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.util.Constants"],
    "com.sapienter.jbilling.server.notification.db.NotificationMessageSectionDTO": ["java.util.HashSet", "javax.persistence.Table", "javax.persistence.TableGenerator", "org.hibernate.annotations.FetchMode", "com.sapienter.jbilling.server.notification.db.NotificationMessageDTO", "com.sapienter.jbilling.server.notification.db.NotificationMessageLineDTO", "javax.persistence.Version", "javax.persistence.Id", "javax.persistence.Entity", "javax.persistence.ManyToOne", "org.hibernate.annotations.Fetch", "javax.persistence.CascadeType", "com.sapienter.jbilling.server.notification.db.NotificationMessageSectionDTO", "javax.persistence.JoinColumn", "javax.persistence.OneToMany", "java.util.Set", "org.hibernate.annotations.CacheConcurrencyStrategy", "org.hibernate.annotations.Cache", "java.io.Serializable", "javax.persistence.Column", "javax.persistence.GenerationType", "javax.persistence.GeneratedValue", "javax.persistence.FetchType"],
    "com.sapienter.jbilling.server.item.tasks.IPricing": ["com.sapienter.jbilling.server.order.db.OrderDTO", "java.math.BigDecimal", "java.util.List", "com.sapienter.jbilling.server.item.tasks.IPricing", "com.sapienter.jbilling.server.item.PricingField", "com.sapienter.jbilling.server.pluggableTask.TaskException"],
    "com.sapienter.jbilling.server.payment.db.PaymentInvoiceId": ["java.util.Date", "com.sapienter.jbilling.server.payment.db.PaymentInvoiceId", "<nulltype>", "java.io.Serializable", "javax.persistence.Column", "javax.persistence.Embeddable"],
    "com.sapienter.jbilling.server.mediation.RecordCountWS": ["com.sapienter.jbilling.server.mediation.RecordCountWS", "java.io.Serializable"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentRouterCCFTask": ["com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskException", "java.util.HashMap", "org.apache.log4j.Logger", "com.sapienter.jbilling.server.user.ContactDTOEx", "java.util.Map", "com.sapienter.jbilling.server.user.ContactBL", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO", "java.util.Hashtable", "org.apache.log4j.Category", "com.sapienter.jbilling.server.pluggableTask.PluggableTask", "com.sapienter.jbilling.server.user.contact.db.ContactFieldDTO", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription$Type", "com.sapienter.jbilling.server.payment.tasks.PaymentRouterCCFTask", "<nulltype>", "java.util.List", "com.sapienter.jbilling.server.payment.tasks.AbstractPaymentRouterTask", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription", "com.sapienter.jbilling.server.payment.PaymentDTOEx", "com.sapienter.jbilling.server.pluggableTask.PaymentTask"],
    "com.sapienter.jbilling.server.user.partner.PartnerRangeWS": ["com.sapienter.jbilling.server.user.partner.db.Partner", "<nulltype>", "com.sapienter.jbilling.server.user.partner.PartnerRangeWS", "java.io.Serializable", "com.sapienter.jbilling.server.user.partner.db.PartnerRange"],
    "com.sapienter.jbilling.server.payment.db.PaymentDAS": ["com.sapienter.jbilling.common.CommonConstants", "org.hibernate.Criteria", "com.sapienter.jbilling.server.util.db.CurrencyDTO", "com.sapienter.jbilling.server.user.db.UserDTO", "org.hibernate.criterion.Restrictions", "com.sapienter.jbilling.server.payment.db.PaymentDTO", "java.util.Collection", "org.hibernate.criterion.Projections", "com.sapienter.jbilling.server.user.db.UserDAS", "<nulltype>", "com.sapienter.jbilling.server.payment.db.PaymentDAS", "java.math.BigDecimal", "java.util.List", "org.hibernate.criterion.Order", "com.sapienter.jbilling.server.payment.db.PaymentMethodDTO", "java.util.Calendar", "com.sapienter.jbilling.common.Constants", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.payment.db.PaymentResultDTO", "com.sapienter.jbilling.server.util.db.CurrencyDAS"],
    "com.sapienter.jbilling.server.util.db.NotificationCategoryDAS": ["com.sapienter.jbilling.server.util.db.NotificationCategoryDTO", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.util.db.NotificationCategoryDAS"],
    "com.sapienter.jbilling.server.payment.PaymentInvoiceMapDTOEx": ["com.sapienter.jbilling.server.payment.PaymentInvoiceMapDTOEx", "java.math.BigDecimal", "java.util.Date", "com.sapienter.jbilling.server.payment.db.PaymentInvoiceMapDTO"],
    "com.sapienter.jbilling.server.process.ProcessRunWS": ["com.sapienter.jbilling.server.process.ProcessRunTotalWS", "com.sapienter.jbilling.server.process.BillingProcessRunDTOEx", "com.sapienter.jbilling.server.util.db.AbstractGenericStatus", "java.util.Date", "java.util.Set", "<nulltype>", "java.io.Serializable", "java.util.ArrayList", "com.sapienter.jbilling.server.process.ProcessRunWS", "java.util.List", "com.sapienter.jbilling.server.process.db.BillingProcessDTO", "com.sapienter.jbilling.server.process.db.ProcessRunDTO", "com.sapienter.jbilling.server.process.BillingProcessRunTotalDTOEx", "com.sapienter.jbilling.server.process.db.ProcessRunTotalDTO"],
    "com.sapienter.jbilling.server.order.event.PeriodCancelledEvent": ["com.sapienter.jbilling.server.order.db.OrderDTO", "com.sapienter.jbilling.server.system.event.Event", "com.sapienter.jbilling.server.order.event.PeriodCancelledEvent"],
    "com.sapienter.jbilling.server.user.db.CreditCardDTO": ["java.util.Date", "java.util.HashSet", "org.apache.log4j.Logger", "javax.persistence.Table", "com.sapienter.jbilling.common.Constants", "javax.persistence.TableGenerator", "com.sapienter.jbilling.common.Util", "javax.persistence.ManyToMany", "javax.persistence.Version", "org.apache.log4j.Category", "javax.persistence.Id", "javax.persistence.Entity", "javax.persistence.JoinTable", "javax.persistence.CascadeType", "com.sapienter.jbilling.server.user.db.UserDTO", "com.sapienter.jbilling.server.payment.db.PaymentDTO", "javax.persistence.JoinColumn", "com.sapienter.jbilling.common.JBCrypto", "javax.persistence.OneToMany", "java.util.Set", "<nulltype>", "java.io.Serializable", "javax.persistence.Column", "javax.persistence.GenerationType", "javax.persistence.GeneratedValue", "javax.persistence.Transient", "com.sapienter.jbilling.server.user.db.CreditCardDTO", "com.sapienter.jbilling.server.entity.CreditCardDTO", "javax.persistence.FetchType"],
    "com.sapienter.jbilling.server.mediation.db.MediationRecordStatusDTO": ["javax.persistence.DiscriminatorValue", "javax.persistence.Entity", "com.sapienter.jbilling.server.util.db.AbstractGenericStatus", "javax.persistence.Transient", "com.sapienter.jbilling.server.mediation.db.MediationRecordStatusDTO", "com.sapienter.jbilling.server.util.Constants", "java.io.Serializable"],
    "com.sapienter.jbilling.server.user.partner.db.Partner": ["com.sapienter.jbilling.server.user.partner.db.Partner", "com.sapienter.jbilling.server.util.db.CurrencyDTO", "java.util.Date", "com.sapienter.jbilling.server.user.db.CustomerDTO", "java.util.HashSet", "java.math.BigDecimal", "javax.persistence.Table", "javax.persistence.TableGenerator", "org.hibernate.annotations.FetchMode", "javax.persistence.Version", "javax.persistence.Id", "javax.persistence.Entity", "javax.persistence.ManyToOne", "org.hibernate.annotations.Fetch", "javax.persistence.CascadeType", "com.sapienter.jbilling.server.user.db.UserDTO", "javax.persistence.JoinColumn", "javax.persistence.OneToMany", "java.util.Set", "com.sapienter.jbilling.server.user.partner.db.PartnerPayout", "<nulltype>", "java.io.Serializable", "javax.persistence.OneToOne", "javax.persistence.Column", "javax.persistence.GenerationType", "com.sapienter.jbilling.server.process.db.PeriodUnitDTO", "javax.persistence.GeneratedValue", "javax.persistence.Transient", "com.sapienter.jbilling.server.user.partner.db.PartnerRange", "javax.persistence.FetchType"],
    "com.sapienter.jbilling.server.user.CompanyWS": ["com.sapienter.jbilling.server.user.db.CompanyDAS", "com.sapienter.jbilling.server.user.CompanyWS", "com.sapienter.jbilling.server.util.db.LanguageDAS", "com.sapienter.jbilling.server.user.contact.db.ContactDTO", "<nulltype>", "java.io.Serializable", "com.sapienter.jbilling.server.user.EntityBL", "com.sapienter.jbilling.server.user.ContactWS", "com.sapienter.jbilling.server.user.db.CompanyDTO", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.util.db.CurrencyDAS"],
    "com.sapienter.jbilling.server.mediation.db.MediationRecordStatusDAS": ["java.util.List", "com.sapienter.jbilling.server.mediation.db.MediationRecordStatusDAS", "com.sapienter.jbilling.server.util.db.AbstractGenericStatusDAS", "com.sapienter.jbilling.server.mediation.db.MediationRecordStatusDTO"],
    "com.sapienter.jbilling.server.mediation.task.IMediationProcess": ["java.util.List", "com.sapienter.jbilling.server.mediation.task.MediationResult", "com.sapienter.jbilling.server.mediation.task.IMediationProcess", "com.sapienter.jbilling.server.mediation.Record", "com.sapienter.jbilling.server.pluggableTask.TaskException"],
    "com.sapienter.jbilling.server.process.AgeingWS": ["com.sapienter.jbilling.server.process.db.AgeingEntityStepDTO", "com.sapienter.jbilling.server.process.AgeingDTOEx", "com.sapienter.jbilling.server.process.AgeingWS", "javax.validation.constraints.NotNull", "<nulltype>", "java.io.Serializable", "com.sapienter.jbilling.server.security.WSSecured", "com.sapienter.jbilling.server.user.db.CompanyDTO"],
    "com.sapienter.jbilling.server.report.db.ReportTypeDTO": ["com.sapienter.jbilling.server.report.db.ReportTypeDTO", "java.util.HashSet", "com.sapienter.jbilling.server.util.db.AbstractDescription", "javax.persistence.Table", "javax.persistence.TableGenerator", "javax.persistence.Version", "javax.persistence.Id", "javax.persistence.Entity", "javax.persistence.CascadeType", "javax.persistence.OneToMany", "java.util.Set", "org.hibernate.annotations.CacheConcurrencyStrategy", "org.hibernate.annotations.Cache", "java.io.Serializable", "javax.persistence.Column", "javax.persistence.GenerationType", "javax.persistence.GeneratedValue", "com.sapienter.jbilling.server.report.db.ReportDTO", "javax.persistence.Transient", "javax.persistence.FetchType", "com.sapienter.jbilling.server.util.Constants"],
    "com.sapienter.jbilling.server.notification.db.NotificationMessageArchLineDTO": ["javax.persistence.Entity", "javax.persistence.ManyToOne", "javax.persistence.JoinColumn", "com.sapienter.jbilling.server.notification.db.NotificationMessageArchLineDTO", "java.io.Serializable", "javax.persistence.GenerationType", "javax.persistence.Column", "com.sapienter.jbilling.server.notification.db.NotificationMessageArchDTO", "javax.persistence.Table", "javax.persistence.GeneratedValue", "javax.persistence.TableGenerator", "javax.persistence.FetchType", "javax.persistence.Version", "javax.persistence.Id"],
    "com.sapienter.jbilling.server.payment.tasks.IAsyncPaymentParameters": ["com.sapienter.jbilling.server.payment.tasks.IAsyncPaymentParameters", "javax.jms.MapMessage", "com.sapienter.jbilling.server.pluggableTask.TaskException"],
    "com.sapienter.jbilling.server.mediation.db.MediationRecordLineDTO": ["javax.persistence.Entity", "javax.persistence.ManyToOne", "com.sapienter.jbilling.server.mediation.MediationRecordLineWS", "java.util.Date", "javax.persistence.JoinColumn", "com.sapienter.jbilling.server.mediation.db.MediationRecordLineDTO", "com.sapienter.jbilling.server.order.db.OrderLineDTO", "java.io.Serializable", "javax.persistence.OneToOne", "java.math.BigDecimal", "javax.persistence.GenerationType", "javax.persistence.Column", "javax.persistence.Table", "javax.persistence.GeneratedValue", "javax.persistence.TableGenerator", "javax.persistence.FetchType", "javax.persistence.Version", "com.sapienter.jbilling.server.mediation.db.MediationRecordDTO", "javax.persistence.Id"],
    "com.sapienter.jbilling.server.util.Context": ["T", "com.sapienter.jbilling.server.util.Context", "org.springframework.context.ApplicationContext", "com.sapienter.jbilling.server.util.Context$Name", "<nulltype>"],
    "com.sapienter.jbilling.client.api.ExternalCallbackServlet": ["javax.servlet.ServletException", "java.util.Enumeration", "java.net.URL", "com.sapienter.jbilling.server.util.Context", "com.sapienter.jbilling.client.api.ExternalCallbackServlet", "org.apache.log4j.Logger", "java.math.BigDecimal", "javax.servlet.http.HttpServletRequest", "java.net.URLConnection", "org.apache.log4j.Category", "java.io.PrintWriter", "javax.servlet.http.HttpServlet", "javax.servlet.http.HttpServletResponse", "java.io.IOException", "java.io.InputStreamReader", "com.sapienter.jbilling.server.util.Context$Name", "<nulltype>", "java.net.URLEncoder", "com.sapienter.jbilling.server.payment.IPaymentSessionBean", "java.io.BufferedReader"],
    "com.sapienter.jbilling.server.provisioning.task.mmsc.IMMSCHandlerFacade": ["javax.jws.WebService", "javax.jws.WebParam", "javax.xml.ws.RequestWrapper", "com.sapienter.jbilling.server.provisioning.task.mmsc.AddCustomerRequest", "com.sapienter.jbilling.server.provisioning.task.mmsc.ObjectFactory", "com.sapienter.jbilling.server.provisioning.task.mmsc.GetCustomerRequest", "com.sapienter.jbilling.server.provisioning.task.mmsc.DeleteCustomerRequest", "javax.xml.ws.ResponseWrapper", "javax.xml.bind.annotation.XmlSeeAlso", "com.sapienter.jbilling.server.provisioning.task.mmsc.MMSCException_Exception", "javax.jws.WebMethod", "com.sapienter.jbilling.server.provisioning.task.mmsc.IMMSCHandlerFacade", "javax.jws.WebResult", "com.sapienter.jbilling.server.provisioning.task.mmsc.ModifyCustomerRequest", "com.sapienter.jbilling.server.provisioning.task.mmsc.MmscFacadeHandlerResponse", "com.sapienter.jbilling.server.provisioning.task.mmsc.GetCustomerResponse"],
    "com.sapienter.jbilling.server.mediation.db.MediationConfiguration": ["javax.persistence.Entity", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDTO", "java.util.Date", "javax.persistence.JoinColumn", "org.hibernate.annotations.CacheConcurrencyStrategy", "org.hibernate.annotations.Cache", "java.io.Serializable", "javax.persistence.OneToOne", "javax.persistence.GenerationType", "javax.persistence.Column", "javax.persistence.Table", "javax.persistence.GeneratedValue", "javax.persistence.TableGenerator", "com.sapienter.jbilling.server.mediation.db.MediationConfiguration", "javax.persistence.FetchType", "com.sapienter.jbilling.server.mediation.MediationConfigurationWS", "javax.persistence.Version", "javax.persistence.Id"],
    "com.sapienter.jbilling.server.user.event.AchUpdateEvent": ["com.sapienter.jbilling.server.user.db.AchDTO", "com.sapienter.jbilling.server.system.event.Event", "com.sapienter.jbilling.server.user.event.AchUpdateEvent"],
    "com.sapienter.jbilling.server.user.contact.ContactFieldTypeWS": ["com.sapienter.jbilling.server.util.InternationalDescriptionWS", "com.sapienter.jbilling.server.user.contact.db.ContactFieldTypeDTO", "<nulltype>", "java.io.Serializable", "java.util.ArrayList", "java.util.List", "com.sapienter.jbilling.server.user.contact.db.ContactFieldTypeDAS", "com.sapienter.jbilling.server.util.db.AbstractDescription", "com.sapienter.jbilling.server.user.contact.ContactFieldTypeWS", "com.sapienter.jbilling.server.user.db.CompanyDTO", "com.sapienter.jbilling.server.util.db.AbstractDAS"],
    "com.sapienter.jbilling.server.payment.tasks.paypal.dto.CompleteType": ["com.sapienter.jbilling.server.payment.tasks.paypal.dto.CompleteType"],
    "com.sapienter.jbilling.server.user.balance.ValidatorCreditLimit": ["java.math.BigDecimal", "com.sapienter.jbilling.server.user.balance.ValidatorCreditLimit", "com.sapienter.jbilling.server.util.Constants", "com.sapienter.jbilling.server.user.balance.IUserBalanceValidation", "com.sapienter.jbilling.server.user.db.CustomerDTO"],
    "com.sapienter.jbilling.server.payment.tasks.paypal.dto.CreditCardType": ["com.sapienter.jbilling.server.payment.tasks.paypal.dto.CreditCardType"],
    "com.sapienter.jbilling.server.mediation.db.MediationRecordDTO": ["java.util.Date", "com.sapienter.jbilling.server.mediation.MediationRecordWS", "com.sapienter.jbilling.server.mediation.db.MediationRecordLineDTO", "com.sapienter.jbilling.server.mediation.db.MediationProcess", "java.util.ArrayList", "javax.persistence.Table", "javax.persistence.TableGenerator", "javax.persistence.Version", "com.sapienter.jbilling.server.mediation.db.MediationRecordDTO", "javax.persistence.Id", "javax.persistence.Entity", "javax.persistence.ManyToOne", "javax.persistence.CascadeType", "java.util.Collection", "javax.persistence.JoinColumn", "javax.persistence.OneToMany", "java.io.Serializable", "javax.persistence.Column", "javax.persistence.GenerationType", "javax.persistence.GeneratedValue", "com.sapienter.jbilling.server.mediation.db.MediationRecordStatusDTO", "javax.persistence.FetchType"],
    "com.sapienter.jbilling.server.process.event.InvoicesGeneratedEvent": ["java.util.Arrays", "com.sapienter.jbilling.server.system.event.Event", "<nulltype>", "java.util.ArrayList", "java.util.List", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO[]", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO", "com.sapienter.jbilling.server.process.event.InvoicesGeneratedEvent"],
    "com.sapienter.jbilling.server.pluggableTask.BasicPaymentInfoTask": ["com.sapienter.jbilling.server.pluggableTask.PaymentInfoTask", "com.sapienter.jbilling.server.pluggableTask.TaskException", "com.sapienter.jbilling.server.user.db.CustomerDTO", "org.apache.log4j.Logger", "org.apache.log4j.Category", "com.sapienter.jbilling.server.pluggableTask.BasicPaymentInfoTask", "com.sapienter.jbilling.server.pluggableTask.PluggableTask", "com.sapienter.jbilling.server.payment.db.PaymentMethodDAS", "com.sapienter.jbilling.server.user.CreditCardBL", "java.util.Iterator", "com.sapienter.jbilling.server.user.db.UserDTO", "com.sapienter.jbilling.server.payment.db.PaymentDTO", "java.util.Set", "com.sapienter.jbilling.server.user.UserBL", "<nulltype>", "com.sapienter.jbilling.server.user.db.AchDTO", "com.sapienter.jbilling.server.user.db.CreditCardDTO", "com.sapienter.jbilling.server.user.AchBL", "com.sapienter.jbilling.server.payment.PaymentDTOEx", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.util.Constants"],
    "com.sapienter.jbilling.server.util.api.validation.EntitySignupValidationGroup": ["com.sapienter.jbilling.server.util.api.validation.EntitySignupValidationGroup"],
    "com.sapienter.jbilling.server.item.CurrencyBL": ["com.sapienter.jbilling.server.user.db.CompanyDAS", "java.sql.Connection", "com.sapienter.jbilling.server.util.db.CurrencyDTO", "java.util.Date", "javax.naming.NamingException", "org.apache.log4j.Logger", "java.math.BigDecimal", "com.sapienter.jbilling.server.user.EntityBL", "java.sql.SQLException", "com.sapienter.jbilling.server.util.db.AbstractDescription", "java.util.Calendar", "com.sapienter.jbilling.common.Constants", "java.sql.ResultSet", "javax.sql.DataSource", "com.sapienter.jbilling.common.JNDILookup", "java.text.ParseException", "com.sapienter.jbilling.server.util.db.CurrencyDAS", "org.apache.log4j.Category", "com.sapienter.jbilling.server.util.db.CurrencyExchangeDTO", "com.sapienter.jbilling.server.item.CurrencyBL", "java.util.Iterator", "java.util.Set", "com.sapienter.jbilling.server.util.db.CurrencyExchangeDAS", "java.sql.PreparedStatement", "<nulltype>", "java.util.List", "com.sapienter.jbilling.common.SessionInternalError", "java.sql.Statement", "com.sapienter.jbilling.server.util.db.CurrencyDTO[]", "com.sapienter.jbilling.server.user.db.CompanyDTO", "com.sapienter.jbilling.server.util.db.AbstractDAS"],
    "com.sapienter.jbilling.server.system.event.AsynchronousEventProcessor": ["com.sapienter.jbilling.server.system.event.Event", "com.sapienter.jbilling.server.system.event.EventProcessor", "com.sapienter.jbilling.server.system.event.AsynchronousEventProcessor", "javax.jms.MapMessage", "com.sapienter.jbilling.server.util.Context", "javax.jms.JMSException", "com.sapienter.jbilling.server.util.Context$Name", "org.apache.log4j.Logger", "org.springframework.jms.core.MessageCreator", "javax.jms.Session", "javax.jms.Destination", "org.springframework.jms.core.JmsTemplate", "javax.jms.Message", "com.sapienter.jbilling.server.system.event.AsynchronousEventProcessor$1"],
    "com.sapienter.jbilling.server.util.db.CurrencyExchangeDAS": ["java.util.List", "com.sapienter.jbilling.server.util.db.CurrencyExchangeDTO", "com.sapienter.jbilling.server.util.db.AbstractDAS", "org.hibernate.Query", "com.sapienter.jbilling.server.util.db.CurrencyExchangeDAS"],
    "com.sapienter.jbilling.server.order.event.OrderToInvoiceEvent": ["com.sapienter.jbilling.server.order.db.OrderDTO", "com.sapienter.jbilling.server.system.event.Event", "java.util.Date", "com.sapienter.jbilling.server.order.event.OrderToInvoiceEvent"],
    "com.sapienter.jbilling.server.pluggableTask.PaymentTaskWithTimeout": ["com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDTO", "com.sapienter.jbilling.server.pluggableTask.PluggableTask", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskException", "com.sapienter.jbilling.server.pluggableTask.PaymentTaskWithTimeout"],
    "com.sapienter.jbilling.server.invoice.InvoiceLineComparator": ["com.sapienter.jbilling.server.item.ItemBL", "<nulltype>", "com.sapienter.jbilling.server.invoice.InvoiceLineComparator", "com.sapienter.jbilling.server.item.db.ItemDTO", "org.apache.log4j.Logger", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO", "java.util.Comparator", "com.sapienter.jbilling.server.util.Constants", "org.apache.log4j.Category"],
    "com.sapienter.jbilling.server.payment.blacklist.PhoneFilter": ["com.sapienter.jbilling.server.user.db.UserDTO", "com.sapienter.jbilling.server.util.Util", "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDAS", "com.sapienter.jbilling.server.payment.blacklist.BlacklistFilter$Result", "com.sapienter.jbilling.server.user.db.UserDAS", "com.sapienter.jbilling.server.payment.blacklist.BlacklistFilter", "com.sapienter.jbilling.server.user.contact.db.ContactDTO", "<nulltype>", "com.sapienter.jbilling.server.payment.blacklist.PhoneFilter", "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDTO", "java.util.List", "java.util.ResourceBundle", "com.sapienter.jbilling.server.user.contact.db.ContactDAS", "com.sapienter.jbilling.server.payment.PaymentDTOEx", "com.sapienter.jbilling.server.user.db.CompanyDTO", "com.sapienter.jbilling.server.util.db.AbstractDAS"],
    "com.sapienter.jbilling.server.pluggableTask.OrderFilterTask": ["com.sapienter.jbilling.server.order.db.OrderDTO", "com.sapienter.jbilling.server.pluggableTask.OrderFilterTask", "com.sapienter.jbilling.server.process.db.BillingProcessDTO", "com.sapienter.jbilling.server.pluggableTask.TaskException"],
    "com.sapienter.jbilling.server.billing.task.BillingProcessTask": ["com.sapienter.jbilling.server.process.task.AbstractBackwardSimpleScheduledTask", "org.quartz.JobExecutionContext", "com.sapienter.jbilling.server.process.IBillingProcessSessionBean", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskException", "java.util.Date", "com.sapienter.jbilling.server.process.task.AbstractSimpleScheduledTask", "com.sapienter.jbilling.server.util.Context", "com.sapienter.jbilling.server.util.Context$Name", "org.quartz.JobExecutionException", "org.apache.log4j.Logger", "com.sapienter.jbilling.server.billing.task.BillingProcessTask", "com.sapienter.jbilling.common.Util", "org.quartz.SimpleTrigger", "org.apache.log4j.Category"],
    "com.sapienter.jbilling.server.user.contact.db.ContactDAS": ["com.sapienter.jbilling.server.user.contact.db.ContactDAS", "com.sapienter.jbilling.server.util.db.AbstractDAS", "org.hibernate.Query", "com.sapienter.jbilling.server.util.Constants", "com.sapienter.jbilling.server.user.contact.db.ContactDTO"],
    "com.sapienter.jbilling.server.payment.PaymentDTOEx": ["com.sapienter.jbilling.server.util.db.CurrencyDTO", "com.sapienter.jbilling.server.entity.PaymentInfoChequeDTO", "java.util.ArrayList", "org.apache.log4j.Logger", "com.sapienter.jbilling.server.payment.db.PaymentMethodDTO", "com.sapienter.jbilling.server.payment.db.PaymentResultDAS", "com.sapienter.jbilling.server.payment.db.PaymentInfoChequeDTO", "com.sapienter.jbilling.server.payment.PaymentWS", "org.apache.log4j.Category", "com.sapienter.jbilling.server.user.db.UserDTO", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDAS", "com.sapienter.jbilling.server.payment.db.PaymentDTO", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO", "<nulltype>", "com.sapienter.jbilling.server.user.db.AchDTO", "com.sapienter.jbilling.server.payment.PaymentInvoiceMapDTOEx", "java.util.List", "com.sapienter.jbilling.server.user.db.CreditCardDTO", "com.sapienter.jbilling.server.payment.PaymentDTOEx", "com.sapienter.jbilling.server.entity.AchDTO", "com.sapienter.jbilling.server.util.db.AbstractDAS"],
    "com.sapienter.jbilling.server.pluggableTask.PaymentTask": ["com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskException", "com.sapienter.jbilling.server.payment.PaymentDTOEx", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO", "com.sapienter.jbilling.server.pluggableTask.PaymentTask"],
    "com.sapienter.jbilling.server.process.BillingProcessDTOEx": ["com.sapienter.jbilling.server.process.BillingProcessRunDTOEx", "java.util.List", "com.sapienter.jbilling.server.process.db.BillingProcessDTO", "java.util.Date", "com.sapienter.jbilling.server.process.BillingProcessDTOEx", "<nulltype>"],
    "com.sapienter.jbilling.tools.DocumentationIndex": ["com.sapienter.jbilling.tools.DocumentationIndex", "java.util.ArrayList", "java.io.PrintStream", "java.util.Properties", "java.util.Iterator", "java.io.FileOutputStream", "java.io.IOException", "java.io.FileInputStream", "java.io.FileNotFoundException", "<nulltype>", "java.io.File", "java.util.List", "java.io.BufferedReader", "java.io.FileReader", "java.util.Collections"],
    "com.sapienter.jbilling.client.authentication.util.UsernameHelper": ["com.sapienter.jbilling.client.authentication.util.UsernameHelper"],
    "com.sapienter.jbilling.server.mediation.task.JDBCUtils": ["java.sql.Connection", "com.sapienter.jbilling.server.mediation.task.JDBCUtils", "java.sql.DatabaseMetaData", "<nulltype>", "java.util.ArrayList", "java.sql.SQLException", "java.util.List", "java.sql.ResultSet"],
    "com.sapienter.jbilling.server.process.db.BillingProcessDAS": ["org.hibernate.Criteria", "java.util.Iterator", "org.hibernate.ScrollableResults", "com.sapienter.jbilling.server.user.db.UserDTO", "org.hibernate.criterion.Restrictions", "java.util.Date", "com.sapienter.jbilling.server.process.db.BillingProcessDAS", "com.sapienter.jbilling.server.user.UserDTOEx", "org.hibernate.criterion.Projections", "com.sapienter.jbilling.server.process.db.PeriodUnitDAS", "com.sapienter.jbilling.server.process.db.BillingProcessDTO", "com.sapienter.jbilling.server.process.db.PeriodUnitDTO", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.user.db.CompanyDTO", "org.hibernate.Query", "com.sapienter.jbilling.server.util.Constants"],
    "com.sapienter.jbilling.server.user.CreditCardSQL": ["com.sapienter.jbilling.server.user.CreditCardSQL", "com.sapienter.jbilling.server.user.UserDTOEx"],
    "com.sapienter.jbilling.server.user.balance.ValidatorPrePaid": ["java.math.BigDecimal", "com.sapienter.jbilling.server.user.balance.ValidatorPrePaid", "com.sapienter.jbilling.server.util.Constants", "com.sapienter.jbilling.server.user.balance.IUserBalanceValidation", "com.sapienter.jbilling.server.user.db.CustomerDTO"],
    "com.sapienter.jbilling.client.authentication.StaticAuthenticationFilter": ["org.springframework.security.web.authentication.NullRememberMeServices", "javax.servlet.FilterChain", "javax.servlet.ServletException", "org.springframework.security.web.authentication.RememberMeServices", "com.sapienter.jbilling.client.authentication.StaticAuthenticationFilter", "javax.servlet.http.HttpServletRequest", "com.sapienter.jbilling.client.authentication.HttpAuthenticationEntryPoint", "org.springframework.web.filter.GenericFilterBean", "org.springframework.security.authentication.AuthenticationDetailsSource", "org.springframework.security.core.AuthenticationException", "org.springframework.security.core.context.SecurityContextHolder", "javax.servlet.ServletRequest", "org.springframework.security.authentication.AuthenticationManager", "org.springframework.security.web.AuthenticationEntryPoint", "javax.servlet.http.HttpServletResponse", "java.io.IOException", "<nulltype>", "org.springframework.security.web.authentication.WebAuthenticationDetailsSource", "javax.servlet.ServletResponse", "org.springframework.security.authentication.AnonymousAuthenticationToken", "org.springframework.security.authentication.UsernamePasswordAuthenticationToken", "org.springframework.security.core.Authentication"],
    "com.sapienter.jbilling.server.payment.PaymentEntityComparator": ["com.sapienter.jbilling.server.payment.db.PaymentDTO", "java.util.Comparator", "com.sapienter.jbilling.server.payment.PaymentEntityComparator"],
    "com.sapienter.jbilling.server.pluggableTask.IPluggableTaskSessionBean": ["com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDTO", "com.sapienter.jbilling.common.SessionInternalError", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDTO[]", "com.sapienter.jbilling.server.pluggableTask.IPluggableTaskSessionBean", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskParameterDTO"],
    "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDAS": ["com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDAS", "org.hibernate.Criteria", "org.hibernate.criterion.Restrictions", "java.util.Date", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.user.db.CompanyDTO", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO"],
    "com.sapienter.jbilling.server.util.api.validation.CreateValidationGroup": ["com.sapienter.jbilling.server.util.api.validation.CreateValidationGroup"],
    "com.sapienter.jbilling.server.item.event.AbstractItemEvent": ["com.sapienter.jbilling.server.item.db.ItemDTO", "com.sapienter.jbilling.server.item.event.AbstractItemEvent", "com.sapienter.jbilling.server.system.event.Event"],
    "com.sapienter.jbilling.server.pluggableTask.GSTTaxTask": ["com.sapienter.jbilling.server.order.OrderBL", "com.sapienter.jbilling.server.pluggableTask.PluggableTask", "com.sapienter.jbilling.server.pluggableTask.OrderProcessingTask", "com.sapienter.jbilling.server.order.db.OrderLineDTO", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription$Type", "com.sapienter.jbilling.server.pluggableTask.TaskException", "com.sapienter.jbilling.server.order.db.OrderDTO", "com.sapienter.jbilling.server.item.db.ItemDTO", "java.math.BigDecimal", "com.sapienter.jbilling.server.pluggableTask.GSTTaxTask", "java.util.List", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription", "com.sapienter.jbilling.common.SessionInternalError", "java.util.Map", "com.sapienter.jbilling.server.util.Constants"],
    "com.sapienter.jbilling.server.util.csv.Exporter": ["com.sapienter.jbilling.server.util.csv.Exportable", "java.util.List", "com.sapienter.jbilling.server.util.csv.Exporter"],
    "com.sapienter.jbilling.server.payment.db.PaymentInfoChequeDTO": ["javax.persistence.Entity", "javax.persistence.ManyToOne", "com.sapienter.jbilling.server.payment.db.PaymentDTO", "java.util.Date", "javax.persistence.JoinColumn", "org.hibernate.annotations.CacheConcurrencyStrategy", "org.hibernate.annotations.Cache", "java.io.Serializable", "javax.persistence.GenerationType", "javax.persistence.Column", "javax.persistence.Table", "javax.persistence.GeneratedValue", "javax.persistence.TableGenerator", "com.sapienter.jbilling.server.payment.db.PaymentInfoChequeDTO", "javax.persistence.FetchType", "javax.persistence.Version", "javax.persistence.Id"],
    "com.sapienter.jbilling.server.provisioning.task.mmsc.GetCustomerInfo": ["javax.xml.bind.annotation.XmlAccessorType", "javax.xml.bind.annotation.XmlType", "com.sapienter.jbilling.server.provisioning.task.mmsc.GetCustomerInfo", "com.sapienter.jbilling.server.provisioning.task.mmsc.GetCustomerRequest", "javax.xml.bind.annotation.XmlAccessType"],
    "com.sapienter.jbilling.server.notification.db.NotificationMessageLineDTO": ["javax.persistence.Entity", "javax.persistence.ManyToOne", "com.sapienter.jbilling.server.notification.db.NotificationMessageSectionDTO", "javax.persistence.JoinColumn", "org.hibernate.annotations.CacheConcurrencyStrategy", "org.hibernate.annotations.Cache", "java.io.Serializable", "javax.persistence.GenerationType", "javax.persistence.Column", "javax.persistence.Table", "javax.persistence.GeneratedValue", "javax.persistence.TableGenerator", "com.sapienter.jbilling.server.notification.db.NotificationMessageLineDTO", "javax.persistence.FetchType", "javax.persistence.Version", "javax.persistence.Id"],
    "com.sapienter.jbilling.server.customer.CustomerSQL": ["com.sapienter.jbilling.server.customer.CustomerSQL", "com.sapienter.jbilling.server.util.Constants"],
    "com.sapienter.jbilling.server.process.BillingProcessBL": ["com.sapienter.jbilling.server.util.PreferenceBL", "com.sapienter.jbilling.server.util.db.CurrencyDTO", "java.util.Enumeration", "com.sapienter.jbilling.server.util.Context", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO", "java.math.BigDecimal", "com.sapienter.jbilling.server.util.db.AbstractDescription", "com.sapienter.jbilling.server.process.db.BillingProcessDTO", "com.sapienter.jbilling.server.payment.db.PaymentMethodDTO", "java.sql.ResultSet", "javax.sql.rowset.CachedRowSet", "java.util.Map", "com.sapienter.jbilling.server.process.event.InvoicesGeneratedEvent", "com.sapienter.jbilling.server.order.OrderBL", "com.sapienter.jbilling.server.item.CurrencyBL", "java.util.GregorianCalendar", "com.sapienter.jbilling.server.process.db.ProcessRunStatusDAS", "java.util.Set", "com.sapienter.jbilling.server.order.event.OrderToInvoiceEvent", "com.sapienter.jbilling.server.order.db.OrderDTO", "com.sapienter.jbilling.server.pluggableTask.OrderFilterTask", "com.sapienter.jbilling.server.process.BillingProcessDTOEx", "com.sapienter.jbilling.server.order.TimePeriod", "com.sapienter.jbilling.server.process.db.BillingProcessDAS", "com.sapienter.jbilling.server.order.db.OrderProcessDAS", "java.util.ArrayList", "java.sql.SQLException", "java.util.Calendar", "com.sapienter.jbilling.server.process.ConfigurationBL", "com.sapienter.jbilling.common.Util", "com.sapienter.jbilling.server.list.ResultList", "javax.sql.RowSet", "com.sapienter.jbilling.server.invoice.db.InvoiceStatusDAS", "com.sapienter.jbilling.server.process.BillingProcessBL", "com.sapienter.jbilling.server.system.event.EventManager", "com.sapienter.jbilling.server.util.db.CurrencyDAS", "com.sapienter.jbilling.server.process.BillingProcessRunDTOEx", "java.util.Map$Entry", "com.sapienter.jbilling.server.payment.db.PaymentMethodDAS", "com.sapienter.jbilling.server.util.db.AbstractGenericStatusDAS", "com.sapienter.jbilling.server.order.db.OrderPeriodDTO", "com.sapienter.jbilling.common.SessionInternalError", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO[]", "com.sapienter.jbilling.server.pluggableTask.OrderPeriodTask", "java.sql.Connection", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskException", "java.util.Date", "com.sapienter.jbilling.server.process.db.ProcessRunUserDAS", "com.sapienter.jbilling.server.pluggableTask.TaskException", "com.sapienter.jbilling.server.user.db.CustomerDTO", "org.apache.log4j.Logger", "com.sapienter.jbilling.server.process.db.ProcessRunDAS", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskManager", "com.sapienter.jbilling.server.invoice.db.InvoiceDAS", "com.sapienter.jbilling.server.process.BillingProcessRunTotalDTOEx", "com.sapienter.jbilling.server.process.AgeingBL", "org.springframework.dao.EmptyResultDataAccessException", "org.apache.log4j.Category", "com.sapienter.jbilling.server.util.MapPeriodToCalendar", "com.sapienter.jbilling.server.user.db.UserDTO", "java.util.Collection", "com.sapienter.jbilling.server.util.audit.EventLogger", "com.sapienter.jbilling.server.util.Context$Name", "java.util.List", "com.sapienter.jbilling.server.process.ProcessSQL", "com.sapienter.jbilling.server.process.BillingProcessRunBL", "com.sapienter.jbilling.server.invoice.NewInvoiceDTO", "com.sapienter.jbilling.server.process.PeriodOfTime", "com.sapienter.jbilling.server.invoice.InvoiceBL", "com.sapienter.jbilling.server.pluggableTask.InvoiceCompositionTask", "com.sapienter.jbilling.server.process.db.ProcessRunDTO", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO", "java.util.Hashtable", "com.sapienter.jbilling.server.process.db.ProcessRunTotalDTO", "com.sapienter.jbilling.server.order.event.OrderAddedOnInvoiceEvent", "java.io.PrintStream", "java.util.Iterator", "com.sapienter.jbilling.server.payment.PaymentBL", "com.sapienter.jbilling.server.process.BillingProcessWS", "com.sapienter.jbilling.server.user.UserBL", "<nulltype>", "com.sapienter.jbilling.server.order.db.OrderProcessDTO", "com.sapienter.jbilling.server.process.db.PeriodUnitDTO", "com.sapienter.jbilling.server.pluggableTask.InvoiceFilterTask", "com.sapienter.jbilling.server.user.db.CompanyDTO", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.order.db.OrderDAS", "com.sapienter.jbilling.server.payment.IPaymentSessionBean", "com.sapienter.jbilling.server.util.Constants"],
    "com.sapienter.jbilling.server.system.event.EventManager": ["com.sapienter.jbilling.server.process.event.NoNewInvoiceEvent", "com.sapienter.jbilling.server.system.event.EventProcessor", "com.sapienter.jbilling.server.payment.event.PaymentSuccessfulEvent", "com.sapienter.jbilling.server.payment.event.PaymentProcessorUnavailableEvent", "com.sapienter.jbilling.server.system.event.InternalEventProcessor", "org.apache.log4j.Logger", "com.sapienter.jbilling.server.system.event.EventManager", "java.util.Hashtable", "org.apache.log4j.Category", "com.sapienter.jbilling.server.system.event.Event", "com.sapienter.jbilling.server.user.event.SubscriptionStatusEventProcessor", "com.sapienter.jbilling.server.order.event.NewActiveUntilEvent", "com.sapienter.jbilling.server.payment.event.EndProcessPaymentEvent", "com.sapienter.jbilling.server.payment.event.ProcessPaymentProcessor", "<nulltype>", "com.sapienter.jbilling.server.payment.event.GatewayAlarmEventProcessor", "com.sapienter.jbilling.common.SessionInternalError", "com.sapienter.jbilling.server.payment.event.PaymentFailedEvent", "com.sapienter.jbilling.server.payment.event.ProcessPaymentEvent"],
    "com.sapienter.jbilling.server.user.balance.IUserBalanceValidation": ["java.math.BigDecimal", "com.sapienter.jbilling.server.user.balance.IUserBalanceValidation", "com.sapienter.jbilling.server.user.db.CustomerDTO"],
    "com.sapienter.jbilling.server.util.db.CurrencyDAS": ["com.sapienter.jbilling.server.util.db.CurrencyDTO", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.util.db.CurrencyDAS"],
    "com.sapienter.jbilling.server.item.validator.ItemTypesValidator": ["javax.validation.ConstraintValidator", "javax.validation.ConstraintValidatorContext", "com.sapienter.jbilling.server.item.validator.ItemTypes", "<nulltype>", "java.io.Serializable", "com.sapienter.jbilling.server.item.validator.ItemTypesValidator"],
    "com.sapienter.jbilling.server.process.task.ProRateOrderPeriodTask": ["com.sapienter.jbilling.server.util.PreferenceBL", "com.sapienter.jbilling.server.process.task.ProRateOrderPeriodTask", "com.sapienter.jbilling.server.user.db.UserDTO", "java.util.Date", "com.sapienter.jbilling.server.pluggableTask.BasicOrderPeriodTask", "com.sapienter.jbilling.server.pluggableTask.TaskException", "<nulltype>", "com.sapienter.jbilling.server.order.db.OrderDTO", "com.sapienter.jbilling.common.Util", "com.sapienter.jbilling.server.user.db.CompanyDTO", "com.sapienter.jbilling.server.util.Constants", "org.springframework.dao.EmptyResultDataAccessException"],
    "com.sapienter.jbilling.server.user.contact.db.ContactFieldDTO": ["javax.persistence.Entity", "javax.persistence.ManyToOne", "com.sapienter.jbilling.server.user.contact.db.ContactFieldDTO", "javax.persistence.JoinColumn", "org.hibernate.annotations.CacheConcurrencyStrategy", "com.sapienter.jbilling.server.user.contact.db.ContactFieldTypeDTO", "com.sapienter.jbilling.server.user.contact.db.ContactDTO", "org.hibernate.annotations.Cache", "java.io.Serializable", "javax.persistence.GenerationType", "javax.persistence.Column", "javax.persistence.Table", "javax.persistence.GeneratedValue", "javax.persistence.TableGenerator", "javax.persistence.Transient", "javax.persistence.FetchType", "javax.persistence.Version", "javax.persistence.Id"],
    "com.sapienter.jbilling.server.provisioning.task.mmsc.DeleteCustomerRequest": ["javax.xml.bind.annotation.XmlAccessorType", "javax.xml.bind.annotation.XmlType", "com.sapienter.jbilling.server.provisioning.task.mmsc.DeleteCustomerRequest", "com.sapienter.jbilling.server.provisioning.task.mmsc.EfsBaseMSISDNRequest", "javax.xml.bind.annotation.XmlAccessType"],
    "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO": ["java.util.Date", "javax.persistence.Table", "javax.persistence.TableGenerator", "com.sapienter.jbilling.server.entity.PaymentAuthorizationDTO", "javax.persistence.Version", "javax.persistence.Id", "javax.persistence.Entity", "javax.persistence.ManyToOne", "com.sapienter.jbilling.server.payment.db.PaymentDTO", "javax.persistence.JoinColumn", "org.hibernate.annotations.CacheConcurrencyStrategy", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO", "<nulltype>", "org.hibernate.annotations.Cache", "java.io.Serializable", "javax.persistence.Column", "javax.persistence.GenerationType", "javax.persistence.GeneratedValue", "javax.persistence.Transient", "javax.persistence.FetchType"],
    "com.sapienter.jbilling.server.pluggableTask.PaperInvoiceNotificationTask": ["com.sapienter.jbilling.server.notification.MessageDTO", "java.util.HashMap", "com.sapienter.jbilling.server.pluggableTask.TaskException", "org.apache.log4j.Logger", "com.sapienter.jbilling.server.user.ContactDTOEx", "com.sapienter.jbilling.server.notification.MessageSection", "com.sapienter.jbilling.server.invoice.db.InvoiceDAS", "java.util.Map", "com.sapienter.jbilling.server.user.ContactBL", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO", "com.sapienter.jbilling.server.process.db.PaperInvoiceBatchDTO", "org.apache.log4j.Category", "com.sapienter.jbilling.server.util.db.LanguageDTO", "com.sapienter.jbilling.server.pluggableTask.PluggableTask", "com.sapienter.jbilling.server.user.db.UserDTO", "java.util.Set", "com.sapienter.jbilling.server.pluggableTask.PaperInvoiceNotificationTask", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription$Type", "com.sapienter.jbilling.server.pluggableTask.NotificationTask", "byte[]", "java.util.List", "com.sapienter.jbilling.server.invoice.PaperInvoiceBatchBL", "com.sapienter.jbilling.server.notification.NotificationBL", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription", "com.sapienter.jbilling.common.SessionInternalError", "com.sapienter.jbilling.server.user.db.CompanyDTO", "com.sapienter.jbilling.server.util.db.AbstractDAS"],
    "com.sapienter.jbilling.server.user.contact.db.ContactFieldTypeDTO": ["java.util.HashSet", "com.sapienter.jbilling.server.util.db.AbstractDescription", "javax.persistence.Table", "javax.persistence.TableGenerator", "javax.persistence.Version", "javax.persistence.Id", "javax.persistence.Entity", "javax.persistence.ManyToOne", "com.sapienter.jbilling.server.user.contact.db.ContactFieldDTO", "javax.persistence.CascadeType", "javax.persistence.JoinColumn", "javax.persistence.OneToMany", "java.util.Set", "org.hibernate.annotations.CacheConcurrencyStrategy", "com.sapienter.jbilling.server.user.contact.db.ContactFieldTypeDTO", "org.hibernate.annotations.Cache", "java.io.Serializable", "javax.persistence.Column", "javax.persistence.GenerationType", "javax.persistence.GeneratedValue", "javax.persistence.Transient", "javax.persistence.FetchType", "com.sapienter.jbilling.server.user.db.CompanyDTO", "com.sapienter.jbilling.server.util.Constants"],
    "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskParameterDTO": ["org.apache.log4j.Logger", "java.math.BigDecimal", "javax.persistence.Table", "javax.persistence.TableGenerator", "javax.persistence.Version", "javax.persistence.Id", "javax.persistence.Entity", "javax.persistence.ManyToOne", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDTO", "javax.persistence.JoinColumn", "org.hibernate.annotations.CacheConcurrencyStrategy", "<nulltype>", "org.hibernate.annotations.Cache", "java.io.Serializable", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskParameterDTO", "javax.persistence.Column", "javax.persistence.GenerationType", "javax.persistence.GeneratedValue", "javax.persistence.Transient"],
    "com.sapienter.jbilling.server.process.task.AbstractCronTask": ["com.sapienter.jbilling.server.process.task.IScheduledTask", "com.sapienter.jbilling.server.pluggableTask.PluggableTask", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskException", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription$Type", "org.quartz.Scheduler", "<nulltype>", "com.sapienter.jbilling.server.process.task.AbstractCronTask", "java.util.List", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription", "java.util.Map", "org.quartz.CronTrigger", "java.text.ParseException", "com.sapienter.jbilling.server.process.task.ScheduledTask"],
    "com.sapienter.jbilling.server.provisioning.IProvisioningProcessSessionBean": ["com.sapienter.jbilling.common.SessionInternalError", "javax.jms.Message", "com.sapienter.jbilling.server.provisioning.IProvisioningProcessSessionBean"],
    "com.sapienter.jbilling.server.notification.NotificationSQL": ["com.sapienter.jbilling.server.notification.NotificationSQL", "com.sapienter.jbilling.server.util.Constants"],
    "com.sapienter.jbilling.server.user.UserWS": ["com.sapienter.jbilling.server.user.partner.db.Partner", "javax.validation.constraints.Size", "java.util.Arrays", "java.util.Date", "com.sapienter.jbilling.server.user.db.CustomerDTO", "javax.validation.Valid", "java.math.BigDecimal", "com.sapienter.jbilling.server.util.api.validation.CreateValidationGroup", "com.sapienter.jbilling.server.security.WSSecured", "javax.validation.constraints.Digits", "javax.validation.constraints.Max", "com.sapienter.jbilling.server.user.db.UserDTO", "java.util.Set", "com.sapienter.jbilling.server.user.UserDTOEx", "javax.validation.constraints.Min", "javax.validation.constraints.NotNull", "<nulltype>", "java.io.Serializable", "com.sapienter.jbilling.server.util.api.validation.UpdateValidationGroup", "com.sapienter.jbilling.server.order.db.OrderDTO", "com.sapienter.jbilling.server.user.db.AchDTO", "java.util.List", "com.sapienter.jbilling.server.user.ContactWS", "com.sapienter.jbilling.server.user.db.CreditCardDTO", "com.sapienter.jbilling.server.entity.CreditCardDTO", "com.sapienter.jbilling.server.entity.AchDTO", "com.sapienter.jbilling.server.user.db.CompanyDTO", "com.sapienter.jbilling.server.order.db.OrderDAS", "com.sapienter.jbilling.server.user.UserWS"],
    "com.sapienter.jbilling.server.user.contact.db.ContactMapDTO": ["com.sapienter.jbilling.server.user.contact.db.ContactTypeDTO", "javax.persistence.Table", "javax.persistence.TableGenerator", "javax.persistence.Version", "javax.persistence.Id", "javax.persistence.Entity", "javax.persistence.ManyToOne", "javax.persistence.UniqueConstraint", "javax.persistence.JoinColumn", "org.hibernate.annotations.CacheConcurrencyStrategy", "com.sapienter.jbilling.server.user.contact.db.ContactDTO", "org.hibernate.annotations.Cache", "java.io.Serializable", "javax.persistence.Column", "javax.persistence.GenerationType", "javax.persistence.GeneratedValue", "javax.persistence.FetchType", "com.sapienter.jbilling.server.user.contact.db.ContactMapDTO", "com.sapienter.jbilling.server.util.db.JbillingTable"],
    "com.sapienter.jbilling.server.mediation.IMediationSessionBean": ["java.util.Date", "com.sapienter.jbilling.server.mediation.task.IMediationProcess", "com.sapienter.jbilling.server.mediation.Record", "com.sapienter.jbilling.server.mediation.db.MediationRecordLineDTO", "com.sapienter.jbilling.server.order.db.OrderLineDTO", "com.sapienter.jbilling.server.pluggableTask.TaskException", "com.sapienter.jbilling.server.mediation.db.MediationProcess", "com.sapienter.jbilling.common.InvalidArgumentException", "java.util.List", "com.sapienter.jbilling.server.mediation.db.MediationConfiguration", "java.util.Map", "com.sapienter.jbilling.server.mediation.db.MediationRecordStatusDTO", "com.sapienter.jbilling.server.mediation.IMediationSessionBean", "com.sapienter.jbilling.server.mediation.db.MediationRecordDTO"],
    "com.sapienter.jbilling.server.mediation.MediationProcessWS": ["java.util.Date", "com.sapienter.jbilling.server.mediation.db.MediationOrderMap", "java.util.Collection", "<nulltype>", "java.io.Serializable", "java.util.ArrayList", "com.sapienter.jbilling.server.mediation.db.MediationProcess", "java.util.List", "com.sapienter.jbilling.server.mediation.db.MediationConfiguration", "com.sapienter.jbilling.server.mediation.db.MediationRecordDTO", "com.sapienter.jbilling.server.mediation.MediationProcessWS"],
    "com.sapienter.jbilling.server.process.ProcessRunTotalWS": ["com.sapienter.jbilling.server.process.ProcessRunTotalWS", "com.sapienter.jbilling.server.util.db.CurrencyDTO", "<nulltype>", "java.io.Serializable", "java.math.BigDecimal", "com.sapienter.jbilling.server.process.db.ProcessRunDTO", "com.sapienter.jbilling.server.process.db.ProcessRunTotalDTO"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean": ["com.sapienter.jbilling.server.util.PreferenceBL", "com.sapienter.jbilling.server.item.db.ItemDTO", "com.sapienter.jbilling.server.payment.db.PaymentMethodDTO", "com.sapienter.jbilling.server.user.contact.ContactFieldTypeWS[]", "java.util.Map", "com.sapienter.jbilling.server.user.ContactTypeWS", "com.sapienter.jbilling.server.order.OrderBL", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskBL", "com.sapienter.jbilling.server.item.ItemBL", "com.sapienter.jbilling.server.order.db.OrderDTO", "com.sapienter.jbilling.server.user.ValidatePurchaseWS", "com.sapienter.jbilling.server.order.OrderWS[]", "com.sapienter.jbilling.server.entity.CreditCardDTO", "com.sapienter.jbilling.server.user.partner.PartnerWS", "com.sapienter.jbilling.server.util.db.PreferenceDTO", "java.util.Calendar", "com.sapienter.jbilling.server.mediation.MediationRecordBL", "com.sapienter.jbilling.common.Util", "com.sapienter.jbilling.server.order.db.OrderLineTypeDTO", "com.sapienter.jbilling.server.payment.db.PaymentMethodDAS", "com.sapienter.jbilling.server.item.db.ItemTypeDTO", "com.sapienter.jbilling.server.util.db.AbstractGenericStatusDAS", "com.sapienter.jbilling.server.user.IUserSessionBean", "com.sapienter.jbilling.server.order.db.OrderPeriodDTO", "com.sapienter.jbilling.server.item.ItemDTOEx[]", "byte[]", "com.sapienter.jbilling.server.invoice.IInvoiceSessionBean", "com.sapienter.jbilling.server.util.PreferenceWS[]", "com.sapienter.jbilling.common.SessionInternalError", "com.sapienter.jbilling.server.order.IOrderSessionBean", "com.sapienter.jbilling.server.order.OrderLineWS", "com.sapienter.jbilling.server.util.CurrencyWS", "com.sapienter.jbilling.server.user.UserTransitionResponseWS[]", "com.sapienter.jbilling.server.user.db.CompanyDAS", "com.sapienter.jbilling.server.user.contact.db.ContactTypeDAS", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskException", "com.sapienter.jbilling.server.payment.PaymentAuthorizationDTOEx", "java.util.Date", "com.sapienter.jbilling.server.order.db.OrderLineDTO", "com.sapienter.jbilling.server.pluggableTask.TaskException", "com.sapienter.jbilling.server.user.db.CustomerDTO", "com.sapienter.jbilling.server.util.db.PreferenceTypeDTO", "com.sapienter.jbilling.server.order.OrderProcessWS", "com.sapienter.jbilling.server.user.ContactBL", "org.springframework.dao.EmptyResultDataAccessException", "org.apache.log4j.Category", "com.sapienter.jbilling.server.item.IItemSessionBean", "com.sapienter.jbilling.server.user.db.UserDTO", "java.util.Collection", "com.sapienter.jbilling.server.util.Context$Name", "com.sapienter.jbilling.server.util.PreferenceWS", "com.sapienter.jbilling.server.user.contact.db.ContactFieldTypeDAS", "com.sapienter.jbilling.server.user.db.CustomerDAS", "com.sapienter.jbilling.server.invoice.InvoiceBL", "com.sapienter.jbilling.server.notification.INotificationSessionBean", "com.sapienter.jbilling.server.mediation.MediationRecordWS", "com.sapienter.jbilling.server.user.UserTransitionResponseWS", "com.sapienter.jbilling.server.mediation.db.MediationRecordDAS", "com.sapienter.jbilling.server.notification.MessageDTO", "com.sapienter.jbilling.server.user.contact.db.ContactTypeDTO", "org.springframework.transaction.annotation.Propagation", "grails.plugins.springsecurity.SpringSecurityService", "com.sapienter.jbilling.server.entity.PaymentAuthorizationDTO", "com.sapienter.jbilling.server.invoice.InvoiceWS[]", "java.util.LinkedList", "com.sapienter.jbilling.server.util.IWebServicesSessionBean", "com.sapienter.jbilling.server.mediation.MediationRecordLineWS", "com.sapienter.jbilling.server.user.CreditCardBL", "com.sapienter.jbilling.server.util.db.AbstractGenericStatus", "com.sapienter.jbilling.server.user.db.UserDAS", "com.sapienter.jbilling.server.mediation.RecordCountWS", "<nulltype>", "com.sapienter.jbilling.server.payment.db.PaymentDAS", "com.sapienter.jbilling.server.order.db.OrderProcessDTO", "com.sapienter.jbilling.server.user.db.CreditCardDTO", "com.sapienter.jbilling.server.mediation.db.MediationRecordLineDAS", "com.sapienter.jbilling.server.mediation.db.MediationRecordStatusDTO", "com.sapienter.jbilling.server.user.db.CompanyDTO", "com.sapienter.jbilling.server.mediation.MediationConfigurationWS", "com.sapienter.jbilling.server.util.Constants", "org.springframework.transaction.annotation.Transactional", "com.sapienter.jbilling.server.user.partner.db.Partner", "com.sapienter.jbilling.server.user.CompanyWS", "java.util.Arrays", "com.sapienter.jbilling.server.mediation.db.MediationRecordStatusDAS", "com.sapienter.jbilling.server.util.db.CurrencyDTO", "com.sapienter.jbilling.server.mediation.task.IMediationProcess", "com.sapienter.jbilling.server.item.PricingField", "com.sapienter.jbilling.server.process.AgeingWS", "com.sapienter.jbilling.server.util.Context", "com.sapienter.jbilling.server.mediation.db.MediationRecordLineDTO", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO", "com.sapienter.jbilling.server.user.ContactWS[]", "java.math.BigDecimal", "com.sapienter.jbilling.server.util.db.AbstractDescription", "com.sapienter.jbilling.server.process.db.BillingProcessDTO", "com.sapienter.jbilling.server.item.ItemTypeWS[]", "java.sql.ResultSet", "com.sapienter.jbilling.server.user.ContactDTOEx", "com.sapienter.jbilling.server.mediation.db.MediationConfiguration", "com.sapienter.jbilling.server.payment.PaymentWS", "javax.sql.rowset.CachedRowSet", "com.sapienter.jbilling.server.user.contact.ContactFieldTypeWS", "com.sapienter.jbilling.server.item.ItemDTOEx", "com.sapienter.jbilling.server.process.AgeingWS[]", "com.sapienter.jbilling.server.mediation.db.MediationRecordDTO", "java.io.PrintWriter", "com.sapienter.jbilling.server.item.CurrencyBL", "com.sapienter.jbilling.server.payment.db.PaymentDTO", "com.sapienter.jbilling.server.util.db.LanguageDAS", "java.util.Set", "com.sapienter.jbilling.server.user.db.CreditCardDAS", "com.sapienter.jbilling.server.user.AchBL", "com.sapienter.jbilling.server.payment.PaymentDTOEx", "com.sapienter.jbilling.server.process.BillingProcessDTOEx", "com.sapienter.jbilling.server.mediation.MediationConfigurationBL", "com.sapienter.jbilling.server.util.CurrencyWS[]", "com.sapienter.jbilling.server.mediation.Record", "com.sapienter.jbilling.server.order.OrderHelper", "java.util.ArrayList", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDAS", "com.sapienter.jbilling.server.user.EntityBL", "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean$1", "java.sql.SQLException", "com.sapienter.jbilling.server.process.ConfigurationBL", "com.sapienter.jbilling.server.process.BillingProcessBL", "com.sapienter.jbilling.server.util.db.PreferenceTypeDAS", "com.sapienter.jbilling.server.payment.db.PaymentResultDTO", "com.sapienter.jbilling.server.util.db.CurrencyDAS", "java.util.Map$Entry", "java.io.StringWriter", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO", "com.sapienter.jbilling.server.item.ItemTypeWS", "com.sapienter.jbilling.server.user.contact.db.ContactFieldTypeDTO", "com.sapienter.jbilling.server.provisioning.IProvisioningProcessSessionBean", "com.sapienter.jbilling.server.user.CreateResponseWS", "com.sapienter.jbilling.server.user.UserWS", "com.sapienter.jbilling.server.mediation.IMediationSessionBean", "com.sapienter.jbilling.server.mediation.MediationProcessWS", "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean", "com.sapienter.jbilling.server.process.IBillingProcessSessionBean", "javax.naming.NamingException", "com.sapienter.jbilling.server.order.OrderPeriodWS", "org.apache.log4j.Logger", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskManager", "com.sapienter.jbilling.server.invoice.db.InvoiceDAS", "com.sapienter.jbilling.server.process.AgeingBL", "com.sapienter.jbilling.server.item.ItemTypeBL", "com.sapienter.jbilling.server.util.audit.EventLogger", "com.sapienter.jbilling.server.util.InternationalDescriptionWS", "com.sapienter.jbilling.server.invoice.InvoiceWS", "com.sapienter.jbilling.server.order.OrderWS", "java.util.List", "com.sapienter.jbilling.server.order.OrderLineWS[]", "org.springframework.dao.DataAccessException", "com.sapienter.jbilling.server.process.AgeingDTOEx", "com.sapienter.jbilling.server.order.OrderLineBL", "com.sapienter.jbilling.server.mediation.db.MediationProcess", "com.sapienter.jbilling.server.order.OrderPeriodWS[]", "com.sapienter.jbilling.client.authentication.CompanyUserDetails", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskWS", "com.sapienter.jbilling.server.order.db.OrderPeriodDAS", "com.sapienter.jbilling.server.user.partner.PartnerBL", "com.sapienter.jbilling.server.process.BillingProcessConfigurationWS", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO", "com.sapienter.jbilling.server.util.db.LanguageDTO", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDTO", "java.util.Iterator", "com.sapienter.jbilling.server.payment.PaymentBL", "com.sapienter.jbilling.server.mediation.task.MediationResult", "com.sapienter.jbilling.server.process.BillingProcessWS", "com.sapienter.jbilling.server.user.UserDTOEx", "com.sapienter.jbilling.server.user.UserBL", "com.sapienter.jbilling.common.InvalidArgumentException", "com.sapienter.jbilling.server.user.db.AchDTO", "com.sapienter.jbilling.server.util.PreferenceTypeWS", "com.sapienter.jbilling.server.user.ContactWS", "com.sapienter.jbilling.server.notification.NotificationBL", "com.sapienter.jbilling.server.entity.AchDTO", "com.sapienter.jbilling.server.rule.task.IRulesGenerator", "com.sapienter.jbilling.server.order.db.OrderDAS", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.payment.IPaymentSessionBean", "java.util.Collections"],
    "com.sapienter.jbilling.server.provisioning.config.Field": ["com.sapienter.jbilling.server.provisioning.config.Field", "<nulltype>"],
    "com.sapienter.jbilling.server.util.db.InternationalDescriptionDAS": ["com.sapienter.jbilling.server.util.db.InternationalDescriptionDAS", "com.sapienter.jbilling.server.util.db.InternationalDescriptionId", "java.util.Collection", "<nulltype>", "com.sapienter.jbilling.server.util.db.AbstractDAS", "org.hibernate.Query", "com.sapienter.jbilling.server.util.db.JbillingTableDAS", "com.sapienter.jbilling.server.util.db.InternationalDescriptionDTO", "com.sapienter.jbilling.server.util.db.JbillingTable"],
    "com.sapienter.jbilling.server.order.UsageBL": ["com.sapienter.jbilling.server.pluggableTask.OrderPeriodTask", "com.sapienter.jbilling.server.order.UsageBL", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskException", "java.util.Date", "com.sapienter.jbilling.server.order.UsagePeriod", "com.sapienter.jbilling.server.util.Context", "com.sapienter.jbilling.server.order.db.OrderLineDTO", "com.sapienter.jbilling.server.pluggableTask.TaskException", "com.sapienter.jbilling.server.item.db.ItemDTO", "org.apache.log4j.Logger", "java.math.BigDecimal", "org.springmodules.cache.provider.CacheProviderFacade", "com.sapienter.jbilling.server.order.db.UsageDAS", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskManager", "org.apache.log4j.Category", "com.sapienter.jbilling.server.order.OrderBL", "com.sapienter.jbilling.server.user.db.UserDTO", "com.sapienter.jbilling.server.order.Usage", "com.sapienter.jbilling.server.item.ItemBL", "com.sapienter.jbilling.server.util.Context$Name", "<nulltype>", "org.springmodules.cache.FlushingModel", "com.sapienter.jbilling.server.order.db.OrderDTO", "java.util.List", "org.springmodules.cache.CachingModel", "com.sapienter.jbilling.common.SessionInternalError", "com.sapienter.jbilling.server.user.db.CompanyDTO", "org.joda.time.DateMidnight", "com.sapienter.jbilling.server.util.Constants", "com.sapienter.jbilling.server.process.PeriodOfTime"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentPaypalExternalTask": ["com.sapienter.jbilling.server.payment.IExternalCreditCardStorage", "com.sapienter.jbilling.server.payment.tasks.PaymentPaypalExternalTask", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskException", "java.util.Date", "com.sapienter.jbilling.server.payment.tasks.paypal.dto.PaymentAction", "org.apache.log4j.Logger", "java.math.BigDecimal", "com.sapienter.jbilling.server.payment.db.PaymentResultDAS", "com.sapienter.jbilling.common.Constants", "com.sapienter.jbilling.server.payment.tasks.paypal.dto.Payment", "com.sapienter.jbilling.server.payment.tasks.paypal.dto.CompleteType", "com.sapienter.jbilling.server.user.ContactBL", "com.sapienter.jbilling.server.payment.tasks.paypal.dto.CreditCardType", "java.text.DateFormat", "java.math.RoundingMode", "com.sapienter.jbilling.server.payment.tasks.paypal.dto.RefundType", "org.apache.log4j.Category", "com.sapienter.jbilling.common.CommonConstants", "com.sapienter.jbilling.server.pluggableTask.PluggableTask", "com.sapienter.jbilling.server.user.db.UserDTO", "com.sapienter.jbilling.server.payment.tasks.paypal.dto.CreditCard", "com.sapienter.jbilling.server.payment.db.PaymentDTO", "com.sapienter.jbilling.server.payment.PaymentAuthorizationBL", "java.util.Set", "com.sapienter.jbilling.server.pluggableTask.PaymentTaskWithTimeout", "java.util.List", "com.sapienter.jbilling.server.payment.PaymentDTOEx", "com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase$Result", "com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase", "java.text.SimpleDateFormat", "com.sapienter.jbilling.common.Util", "com.sapienter.jbilling.server.payment.tasks.paypal.PaypalApi", "com.paypal.sdk.exceptions.PayPalException", "com.sapienter.jbilling.server.payment.tasks.paypal.dto.PaypalResult", "com.sapienter.jbilling.server.payment.db.PaymentMethodDAS", "java.util.Iterator", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO", "com.sapienter.jbilling.server.user.contact.db.ContactDTO", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription$Type", "com.sapienter.jbilling.server.user.UserBL", "<nulltype>", "com.sapienter.jbilling.server.payment.db.PaymentDAS", "com.sapienter.jbilling.server.user.db.AchDTO", "com.sapienter.jbilling.server.user.db.CreditCardDTO", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.payment.tasks.paypal.dto.Payer", "com.sapienter.jbilling.server.util.Constants"],
    "com.sapienter.jbilling.server.provisioning.task.mmsc.GetCustomerRequest": ["javax.xml.bind.annotation.XmlAccessorType", "javax.xml.bind.annotation.XmlType", "com.sapienter.jbilling.server.provisioning.task.mmsc.GetCustomerRequest", "com.sapienter.jbilling.server.provisioning.task.mmsc.EfsBaseMSISDNRequest", "javax.xml.bind.annotation.XmlAccessType"],
    "com.sapienter.jbilling.server.process.BusinessDays": ["org.apache.commons.lang.StringUtils", "java.util.GregorianCalendar", "java.util.Date", "java.text.SimpleDateFormat", "java.io.IOException", "com.sapienter.jbilling.server.process.BusinessDays", "java.io.File", "<nulltype>", "java.util.ArrayList", "org.apache.log4j.Logger", "java.util.List", "java.util.Calendar", "java.io.FileReader", "org.joda.time.DateMidnight", "java.io.BufferedReader", "java.text.ParseException", "java.text.DateFormat", "org.apache.log4j.Category"],
    "com.sapienter.jbilling.server.invoice.task.NegativeBalanceInvoiceFilterTask": ["java.math.BigDecimal", "com.sapienter.jbilling.server.pluggableTask.PluggableTask", "com.sapienter.jbilling.server.process.db.BillingProcessDTO", "com.sapienter.jbilling.server.pluggableTask.InvoiceFilterTask", "com.sapienter.jbilling.server.invoice.task.NegativeBalanceInvoiceFilterTask", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO", "com.sapienter.jbilling.server.pluggableTask.TaskException"],
    "com.sapienter.jbilling.server.provisioning.ExternalProvisioning": ["com.sapienter.jbilling.server.provisioning.config.Provisioning", "com.sapienter.jbilling.server.provisioning.config.Field", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskException", "java.util.Enumeration", "com.sapienter.jbilling.server.provisioning.config.Command", "javax.jms.MapMessage", "java.util.HashMap", "com.sapienter.jbilling.server.util.Context", "com.sapienter.jbilling.server.provisioning.ExternalProvisioning", "org.apache.log4j.Logger", "javax.jms.Session", "com.sapienter.jbilling.server.provisioning.ExternalProvisioning$1", "java.util.Map", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskManager", "org.springframework.jms.core.JmsTemplate", "javax.jms.Message", "com.sapienter.jbilling.server.provisioning.task.IExternalProvisioning", "org.apache.log4j.Category", "java.io.PrintWriter", "java.util.Map$Entry", "com.sapienter.jbilling.server.provisioning.config.Request", "java.io.StringWriter", "java.util.Set", "javax.jms.JMSException", "com.sapienter.jbilling.server.util.Context$Name", "<nulltype>", "java.util.List", "org.springframework.jms.core.MessageCreator", "javax.jms.Destination", "com.sapienter.jbilling.common.SessionInternalError", "com.sapienter.jbilling.server.provisioning.config.Processor", "com.sapienter.jbilling.server.util.Constants", "java.util.Collections"],
    "com.sapienter.jbilling.server.process.db.ProcessRunDAS": ["java.util.Date", "java.util.Set", "com.sapienter.jbilling.server.process.db.ProcessRunDAS", "com.sapienter.jbilling.server.process.db.BillingProcessDTO", "com.sapienter.jbilling.server.process.db.ProcessRunStatusDTO", "java.util.Calendar", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.process.db.ProcessRunDTO", "org.hibernate.Query", "com.sapienter.jbilling.server.util.Constants"],
    "com.sapienter.jbilling.server.notification.task.TestNotificationTask": ["com.sapienter.jbilling.server.notification.MessageDTO", "com.sapienter.jbilling.server.pluggableTask.TaskException", "org.apache.log4j.Logger", "java.util.Calendar", "com.sapienter.jbilling.server.notification.task.TestNotificationTask", "com.sapienter.jbilling.common.Util", "com.sapienter.jbilling.server.notification.MessageSection", "com.sapienter.jbilling.server.user.ContactDTOEx", "java.util.Map", "java.io.OutputStreamWriter", "com.sapienter.jbilling.server.user.ContactBL", "org.apache.log4j.Category", "com.sapienter.jbilling.server.pluggableTask.PluggableTask", "com.sapienter.jbilling.server.user.db.UserDTO", "java.io.FileWriter", "com.sapienter.jbilling.server.user.contact.db.ContactDTO", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription$Type", "<nulltype>", "com.sapienter.jbilling.server.pluggableTask.NotificationTask", "java.util.List", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription", "java.io.Writer"],
    "com.sapienter.jbilling.server.invoice.db.InvoiceDAS": ["org.hibernate.Criteria", "org.hibernate.criterion.Restrictions", "java.util.Date", "com.sapienter.jbilling.server.process.db.BillingProcessDAS", "org.apache.log4j.Logger", "java.math.BigDecimal", "org.hibernate.criterion.Order", "com.sapienter.jbilling.server.process.db.BillingProcessDTO", "java.util.Calendar", "com.sapienter.jbilling.server.invoice.db.InvoiceDAS", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO", "com.sapienter.jbilling.server.user.db.UserDTO", "java.util.Collection", "org.hibernate.criterion.Projections", "com.sapienter.jbilling.server.user.db.UserDAS", "<nulltype>", "java.util.List", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.invoice.NewInvoiceDTO", "com.sapienter.jbilling.server.util.Constants"],
    "com.sapienter.jbilling.server.user.validator.CreditCardNumberValidator": ["javax.validation.ConstraintValidator", "javax.validation.ConstraintValidatorContext", "org.hibernate.validator.constraints.impl.LuhnValidator", "<nulltype>", "java.io.Serializable", "com.sapienter.jbilling.server.user.validator.CreditCardNumber", "com.sapienter.jbilling.server.user.validator.CreditCardNumberValidator"],
    "com.sapienter.jbilling.server.item.ItemTypeBL": ["com.sapienter.jbilling.server.item.db.ItemTypeDTO", "com.sapienter.jbilling.server.util.audit.EventLogger", "com.sapienter.jbilling.server.item.ItemTypeWS", "com.sapienter.jbilling.server.util.DescriptionBL", "<nulltype>", "org.apache.log4j.Logger", "java.util.List", "com.sapienter.jbilling.server.item.ItemTypeWS[]", "com.sapienter.jbilling.common.SessionInternalError", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.item.ItemTypeBL", "com.sapienter.jbilling.server.util.Constants", "com.sapienter.jbilling.server.item.db.ItemTypeDAS", "org.apache.log4j.Category"],
    "com.sapienter.jbilling.server.item.tasks.IItemPurchaseManager": ["com.sapienter.jbilling.server.order.db.OrderDTO", "java.math.BigDecimal", "com.sapienter.jbilling.server.item.tasks.IItemPurchaseManager", "java.util.List", "com.sapienter.jbilling.server.mediation.Record", "com.sapienter.jbilling.server.pluggableTask.TaskException"],
    "com.sapienter.jbilling.server.util.MapPeriodToCalendar": ["com.sapienter.jbilling.server.util.MapPeriodToCalendar", "java.util.GregorianCalendar", "com.sapienter.jbilling.common.SessionInternalError", "com.sapienter.jbilling.server.util.Constants", "<nulltype>"],
    "com.sapienter.jbilling.server.order.event.NewActiveUntilEvent": ["com.sapienter.jbilling.server.order.OrderBL", "com.sapienter.jbilling.server.system.event.Event", "com.sapienter.jbilling.server.user.db.UserDTO", "java.util.Date", "com.sapienter.jbilling.server.order.event.NewActiveUntilEvent", "com.sapienter.jbilling.server.order.db.OrderPeriodDTO", "com.sapienter.jbilling.server.order.db.OrderDTO", "org.apache.log4j.Logger", "com.sapienter.jbilling.server.user.db.CompanyDTO", "org.apache.log4j.Category"],
    "com.sapienter.jbilling.server.user.balance.DynamicBalanceManagerTask": ["com.sapienter.jbilling.server.payment.event.PaymentDeletedEvent", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskException", "com.sapienter.jbilling.server.order.event.NewOrderEvent", "com.sapienter.jbilling.server.payment.event.PaymentSuccessfulEvent", "com.sapienter.jbilling.server.order.db.OrderLineDTO", "com.sapienter.jbilling.server.user.db.CustomerDTO", "org.apache.log4j.Logger", "java.math.BigDecimal", "com.sapienter.jbilling.server.user.event.DynamicBalanceChangeEvent", "com.sapienter.jbilling.common.Constants", "com.sapienter.jbilling.server.order.event.NewQuantityEvent", "com.sapienter.jbilling.server.payment.event.AbstractPaymentEvent", "com.sapienter.jbilling.server.system.event.EventManager", "org.apache.log4j.Category", "com.sapienter.jbilling.server.order.event.OrderAddedOnInvoiceEvent", "com.sapienter.jbilling.server.pluggableTask.PluggableTask", "com.sapienter.jbilling.server.system.event.Event", "com.sapienter.jbilling.server.user.db.UserDTO", "com.sapienter.jbilling.server.payment.db.PaymentDTO", "com.sapienter.jbilling.server.user.balance.DynamicBalanceManagerTask", "com.sapienter.jbilling.server.system.event.task.IInternalEventsTask", "com.sapienter.jbilling.server.util.audit.EventLogger", "com.sapienter.jbilling.server.order.db.OrderPeriodDTO", "com.sapienter.jbilling.server.user.db.UserDAS", "<nulltype>", "com.sapienter.jbilling.server.order.db.OrderDTO", "com.sapienter.jbilling.server.order.event.OrderDeletedEvent", "com.sapienter.jbilling.server.payment.PaymentDTOEx", "com.sapienter.jbilling.server.user.db.CompanyDTO", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.order.db.OrderDAS", "com.sapienter.jbilling.server.util.Constants"],
    "com.sapienter.jbilling.server.customer.CustomerSessionBean": ["com.sapienter.jbilling.server.customer.CustomerSessionBean", "org.apache.log4j.Logger", "org.springframework.transaction.annotation.Propagation", "com.sapienter.jbilling.server.user.ContactDTOEx", "com.sapienter.jbilling.common.SessionInternalError", "com.sapienter.jbilling.server.user.ContactBL", "com.sapienter.jbilling.server.customer.ICustomerSessionBean", "org.apache.log4j.Category", "org.springframework.transaction.annotation.Transactional"],
    "com.sapienter.jbilling.server.util.audit.EventLogger": ["com.sapienter.jbilling.server.user.db.CompanyDAS", "com.sapienter.jbilling.server.util.audit.db.EventLogMessageDAS", "com.sapienter.jbilling.server.user.db.UserDTO", "java.util.Date", "com.sapienter.jbilling.server.util.audit.EventLogger", "com.sapienter.jbilling.server.util.Context", "com.sapienter.jbilling.server.user.db.UserDAS", "com.sapienter.jbilling.server.util.Context$Name", "<nulltype>", "com.sapienter.jbilling.server.util.audit.db.EventLogDTO", "com.sapienter.jbilling.server.util.audit.db.EventLogModuleDAS", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.util.db.JbillingTableDAS", "com.sapienter.jbilling.server.util.audit.db.EventLogDAS"],
    "com.sapienter.jbilling.server.util.InternationalDescriptionWS": ["com.sapienter.jbilling.server.util.db.InternationalDescriptionId", "com.sapienter.jbilling.server.util.db.InternationalDescriptionDTO", "com.sapienter.jbilling.server.util.InternationalDescriptionWS", "<nulltype>"],
    "com.sapienter.jbilling.server.process.OrderProcessIdComparator": ["com.sapienter.jbilling.server.process.OrderProcessIdComparator", "com.sapienter.jbilling.server.order.db.OrderProcessDTO", "java.util.Comparator"],
    "com.sapienter.jbilling.server.payment.tasks.AbstractPaymentRouterTask": ["com.sapienter.jbilling.server.pluggableTask.PluggableTask", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskException", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskBL", "<nulltype>", "org.apache.log4j.Logger", "com.sapienter.jbilling.server.payment.tasks.AbstractPaymentRouterTask", "java.util.Map", "com.sapienter.jbilling.server.payment.PaymentDTOEx", "com.sapienter.jbilling.server.pluggableTask.PaymentTask", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO", "org.apache.log4j.Category"],
    "com.sapienter.jbilling.server.user.permisson.db.PermissionDAS": ["com.sapienter.jbilling.server.user.permisson.db.PermissionDTO", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.user.permisson.db.PermissionDAS"],
    "com.sapienter.jbilling.server.user.permisson.db.RoleDAS": ["com.sapienter.jbilling.server.user.permisson.db.RoleDTO", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.user.permisson.db.RoleDAS"],
    "com.sapienter.jbilling.client.process.Trigger": ["com.sapienter.jbilling.server.process.IBillingProcessSessionBean", "java.util.Date", "java.text.SimpleDateFormat", "org.quartz.Job", "com.sapienter.jbilling.server.util.Context", "org.quartz.Scheduler", "org.apache.log4j.Logger", "java.util.Calendar", "org.quartz.SchedulerException", "com.sapienter.jbilling.common.Util", "org.quartz.SimpleTrigger", "java.text.ParseException", "java.text.DateFormat", "org.apache.log4j.Category", "org.quartz.JobDetail", "org.quartz.JobExecutionContext", "java.util.GregorianCalendar", "com.sapienter.jbilling.server.user.IUserSessionBean", "com.sapienter.jbilling.server.util.Context$Name", "<nulltype>", "com.sapienter.jbilling.server.provisioning.IProvisioningProcessSessionBean", "org.quartz.JobExecutionException", "com.sapienter.jbilling.server.invoice.IInvoiceSessionBean", "com.sapienter.jbilling.common.SessionInternalError", "com.sapienter.jbilling.client.process.JobScheduler", "com.sapienter.jbilling.server.order.IOrderSessionBean", "com.sapienter.jbilling.client.process.Trigger"],
    "com.sapienter.jbilling.server.order.OrderSessionBean": ["java.util.Date", "com.sapienter.jbilling.server.item.ItemDecimalsException", "com.sapienter.jbilling.server.order.db.OrderLineDTO", "com.sapienter.jbilling.server.order.OrderLineComparator", "org.apache.log4j.Logger", "java.math.BigDecimal", "com.sapienter.jbilling.server.order.db.OrderLineDAS", "org.springframework.transaction.annotation.Propagation", "org.apache.log4j.Category", "com.sapienter.jbilling.server.order.OrderBL", "com.sapienter.jbilling.server.order.db.OrderPeriodDTO", "com.sapienter.jbilling.server.order.db.OrderPeriodDTO[]", "<nulltype>", "com.sapienter.jbilling.server.order.db.OrderDTO", "com.sapienter.jbilling.common.SessionInternalError", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.order.db.OrderDAS", "com.sapienter.jbilling.server.order.IOrderSessionBean", "java.util.Collections", "com.sapienter.jbilling.server.order.OrderSessionBean", "org.springframework.transaction.annotation.Transactional"],
    "com.sapienter.jbilling.server.process.PeriodOfTime": ["java.util.Date", "org.joda.time.Days", "org.joda.time.DateMidnight", "<nulltype>", "java.io.Serializable", "com.sapienter.jbilling.server.process.PeriodOfTime"],
    "com.sapienter.jbilling.server.util.csv.Exportable": ["com.sapienter.jbilling.server.util.csv.Exportable"],
    "com.sapienter.jbilling.server.invoice.db.InvoiceLineDAS": ["com.sapienter.jbilling.server.item.db.ItemDTO", "java.math.BigDecimal", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDAS", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO", "com.sapienter.jbilling.server.invoice.db.InvoiceLineTypeDAS"],
    "com.sapienter.jbilling.common.JBCryptoImpl": ["com.sapienter.jbilling.common.JBCryptoImpl", "java.security.spec.InvalidKeySpecException", "com.sapienter.jbilling.common.JBCrypto", "javax.crypto.spec.PBEParameterSpec", "com.sapienter.jbilling.server.util.Util", "javax.crypto.Cipher", "<nulltype>", "org.apache.commons.codec.binary.Base64", "javax.crypto.SecretKeyFactory", "java.security.GeneralSecurityException", "java.nio.charset.Charset", "javax.crypto.NoSuchPaddingException", "javax.crypto.spec.PBEKeySpec", "java.security.NoSuchAlgorithmException", "javax.crypto.SecretKey"],
    "com.sapienter.jbilling.server.entity.PaymentInfoChequeDTO": ["java.util.Date", "com.sapienter.jbilling.server.entity.PaymentInfoChequeDTO", "javax.validation.constraints.NotNull", "<nulltype>", "java.io.Serializable", "javax.xml.bind.annotation.XmlType", "org.hibernate.validator.constraints.NotEmpty"],
    "com.sapienter.jbilling.server.process.AgeingDTOEx": ["com.sapienter.jbilling.server.process.db.AgeingEntityStepDTO", "com.sapienter.jbilling.server.process.AgeingDTOEx", "<nulltype>"],
    "com.sapienter.jbilling.server.item.validator.ItemTypes": ["com.sapienter.jbilling.server.item.validator.ItemTypes", "javax.validation.Payload", "javax.validation.Constraint", "com.sapienter.jbilling.server.item.validator.ItemTypesValidator"],
    "com.sapienter.jbilling.server.payment.event.PaymentProcessorUnavailableEvent": ["com.sapienter.jbilling.server.payment.PaymentDTOEx", "com.sapienter.jbilling.server.payment.event.PaymentProcessorUnavailableEvent", "com.sapienter.jbilling.server.payment.event.AbstractPaymentEvent"],
    "com.sapienter.jbilling.server.util.Util": ["com.sapienter.jbilling.server.util.db.InternationalDescriptionDAS", "java.text.Format", "com.sapienter.jbilling.server.util.db.CurrencyDTO", "java.util.Date", "java.text.SimpleDateFormat", "com.sapienter.jbilling.server.util.Util", "com.sapienter.jbilling.server.util.Context", "java.text.NumberFormat", "java.math.BigDecimal", "org.apache.log4j.Logger", "java.util.ResourceBundle", "java.util.Locale", "com.sapienter.jbilling.server.util.db.InternationalDescriptionDTO", "java.text.ParseException", "java.util.LinkedList", "java.text.DateFormat", "org.apache.log4j.Category", "com.sapienter.jbilling.server.item.CurrencyBL", "java.util.Iterator", "java.text.DecimalFormat", "com.sapienter.jbilling.server.util.Context$Name", "com.sapienter.jbilling.server.user.UserBL", "<nulltype>", "byte[]", "java.util.List", "com.sapienter.jbilling.common.SessionInternalError", "com.sapienter.jbilling.server.util.Constants"],
    "com.sapienter.jbilling.tools.UploadInvoices": ["com.sapienter.jbilling.server.util.db.CurrencyDTO", "com.sapienter.jbilling.server.invoice.db.InvoiceLineTypeDTO", "com.sapienter.jbilling.tools.UploadInvoices", "com.sapienter.jbilling.server.item.db.ItemDTO", "java.math.BigDecimal", "com.sapienter.jbilling.common.Util", "com.sapienter.jbilling.server.item.db.ItemDAS", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO", "com.sapienter.jbilling.server.util.db.CurrencyDAS", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO", "java.io.PrintStream", "java.util.Properties", "java.io.IOException", "java.io.FileInputStream", "java.io.FileNotFoundException", "<nulltype>", "com.sapienter.jbilling.server.invoice.IInvoiceSessionBean", "java.util.List", "com.sapienter.jbilling.server.invoice.NewInvoiceDTO", "com.sapienter.jbilling.server.util.db.AbstractDAS", "java.io.BufferedReader", "java.io.FileReader"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask": ["com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskException", "org.apache.commons.httpclient.methods.PostMethod", "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask$WorldPayParams$ForceParams", "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask$WorldPayResponse", "org.apache.log4j.Logger", "java.math.BigDecimal", "com.sapienter.jbilling.server.payment.db.PaymentResultDAS", "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask$WorldPayParams$General", "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask$NVPList", "java.math.RoundingMode", "org.apache.log4j.Category", "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask$WorldPayParams", "com.sapienter.jbilling.server.payment.db.PaymentDTO", "com.sapienter.jbilling.server.pluggableTask.PaymentTaskWithTimeout", "java.util.List", "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask$WorldPayResponseParser", "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask$TransactionStatus", "org.apache.commons.httpclient.HttpClient", "com.sapienter.jbilling.server.payment.PaymentDTOEx", "com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase$Result", "com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase", "java.text.SimpleDateFormat", "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask", "org.apache.commons.httpclient.NameValuePair", "java.util.LinkedList", "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask$SvcType", "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask$WorldPayParams$CreditCard", "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask$WorldPayAuthorization", "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask$WorldPayParams$ReAuthorize", "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask$WorldPayParams$SettleParams", "java.util.Iterator", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO", "java.io.IOException", "<nulltype>", "org.apache.commons.httpclient.methods.StringRequestEntity", "com.sapienter.jbilling.server.util.db.AbstractDAS", "org.apache.commons.httpclient.util.ParameterParser", "com.sapienter.jbilling.server.util.Constants"],
    "com.sapienter.jbilling.server.report.db.parameter.BooleanReportParameterDTO": ["javax.persistence.DiscriminatorValue", "javax.persistence.Entity", "javax.persistence.Transient", "com.sapienter.jbilling.server.report.db.parameter.BooleanReportParameterDTO", "com.sapienter.jbilling.server.report.db.ReportParameterDTO"],
    "com.sapienter.jbilling.server.order.OrderLineBL": ["com.sapienter.jbilling.server.order.db.OrderLineDTO", "com.sapienter.jbilling.server.order.OrderLineBL", "java.util.ArrayList", "com.sapienter.jbilling.server.order.OrderLineBL$1", "com.sapienter.jbilling.server.item.db.ItemDTO", "org.apache.log4j.Logger", "java.math.BigDecimal", "com.sapienter.jbilling.server.util.db.AbstractDescription", "com.sapienter.jbilling.server.order.OrderLineBL$2", "org.apache.log4j.Category", "com.sapienter.jbilling.server.order.OrderBL", "com.sapienter.jbilling.common.CommonConstants", "java.util.Iterator", "com.sapienter.jbilling.server.user.db.UserDTO", "com.sapienter.jbilling.server.item.db.ItemTypeDTO", "java.util.Set", "com.sapienter.jbilling.server.item.ItemBL", "com.sapienter.jbilling.server.user.UserBL", "<nulltype>", "com.sapienter.jbilling.server.order.db.OrderDTO", "java.util.List", "com.sapienter.jbilling.server.user.db.CompanyDTO", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.order.db.OrderDAS", "java.util.Comparator", "java.util.Collections"],
    "com.sapienter.jbilling.server.provisioning.task.mmsc.EfsBaseMSISDNRequest": ["javax.xml.bind.annotation.XmlAccessorType", "com.sapienter.jbilling.server.provisioning.task.mmsc.EfsBaseRequest", "com.sapienter.jbilling.server.provisioning.task.mmsc.AddCustomerRequest", "com.sapienter.jbilling.server.provisioning.task.mmsc.GetCustomerRequest", "com.sapienter.jbilling.server.provisioning.task.mmsc.DeleteCustomerRequest", "javax.xml.bind.annotation.XmlSeeAlso", "com.sapienter.jbilling.server.provisioning.task.mmsc.EfsBaseMSISDNRequest", "javax.xml.bind.annotation.XmlAccessType", "javax.xml.bind.annotation.XmlType", "com.sapienter.jbilling.server.provisioning.task.mmsc.ModifyCustomerRequest", "javax.xml.bind.annotation.XmlElement"],
    "com.sapienter.jbilling.client.authentication.CompanyUserDetails": ["org.codehaus.groovy.grails.plugins.springsecurity.GrailsUser", "com.sapienter.jbilling.server.user.db.UserDTO", "java.util.Collection", "org.springframework.security.core.GrantedAuthority", "com.sapienter.jbilling.client.authentication.CompanyUserDetails", "java.util.Locale"],
    "com.sapienter.jbilling.server.order.task.RulesItemManager2": ["com.sapienter.jbilling.server.item.tasks.BasicItemManager", "com.sapienter.jbilling.server.util.db.CurrencyDTO", "java.util.Date", "com.sapienter.jbilling.server.item.PricingField", "com.sapienter.jbilling.server.mediation.Record", "com.sapienter.jbilling.server.util.DTOFactory", "com.sapienter.jbilling.server.pluggableTask.TaskException", "com.sapienter.jbilling.server.rule.RulesBaseTask", "java.math.BigDecimal", "org.apache.log4j.Logger", "com.sapienter.jbilling.server.order.task.RulesItemManager2", "com.sapienter.jbilling.server.user.ContactDTOEx", "com.sapienter.jbilling.server.user.ContactBL", "com.sapienter.jbilling.server.util.db.CurrencyDAS", "java.util.Hashtable", "com.sapienter.jbilling.server.item.tasks.IItemPurchaseManager", "com.sapienter.jbilling.server.user.contact.db.ContactFieldDTO", "java.util.Collection", "com.sapienter.jbilling.server.user.UserDTOEx", "<nulltype>", "com.sapienter.jbilling.server.order.db.OrderDTO", "java.util.List", "com.sapienter.jbilling.server.util.db.AbstractDAS"],
    "com.sapienter.jbilling.server.rule.Result": ["com.sapienter.jbilling.server.rule.Result", "com.sapienter.jbilling.server.util.IdGenerator"],
    "com.sapienter.jbilling.server.order.db.UsageDAS": ["org.hibernate.transform.Transformers", "com.sapienter.jbilling.server.order.Usage", "java.util.Date", "org.hibernate.SessionFactory", "com.sapienter.jbilling.server.util.Context", "com.sapienter.jbilling.server.util.Context$Name", "<nulltype>", "org.springframework.orm.hibernate3.support.HibernateDaoSupport", "com.sapienter.jbilling.server.order.db.UsageDAS", "org.hibernate.Query"],
    "com.sapienter.jbilling.server.mediation.task.IMediationReader": ["java.util.List", "com.sapienter.jbilling.server.mediation.task.IMediationReader", "com.sapienter.jbilling.server.mediation.Record"],
    "com.sapienter.jbilling.server.order.task.RulesLineTotalTask2": ["com.sapienter.jbilling.server.order.db.OrderDTO", "com.sapienter.jbilling.server.order.task.RulesItemManager2", "com.sapienter.jbilling.server.user.db.UserDTO", "com.sapienter.jbilling.server.order.task.RulesLineTotalTask2", "com.sapienter.jbilling.server.pluggableTask.OrderProcessingTask", "com.sapienter.jbilling.server.pluggableTask.TaskException"],
    "com.sapienter.jbilling.server.util.audit.db.EventLogModuleDAS": ["com.sapienter.jbilling.server.util.audit.db.EventLogModuleDTO", "com.sapienter.jbilling.server.util.audit.db.EventLogModuleDAS", "com.sapienter.jbilling.server.util.db.AbstractDAS"],
    "com.sapienter.jbilling.common.PermissionConstants": ["com.sapienter.jbilling.common.PermissionConstants"],
    "com.sapienter.jbilling.server.notification.MessageSection": ["com.sapienter.jbilling.server.notification.MessageSection", "java.io.Serializable"],
    "com.sapienter.jbilling.server.notification.db.NotificationMessageDTO": ["java.util.HashSet", "com.sapienter.jbilling.server.notification.db.NotificationMessageTypeDTO", "javax.persistence.Table", "javax.persistence.TableGenerator", "org.hibernate.annotations.FetchMode", "com.sapienter.jbilling.server.notification.db.NotificationMessageDTO", "javax.persistence.Version", "javax.persistence.Id", "com.sapienter.jbilling.server.util.db.LanguageDTO", "javax.persistence.Entity", "javax.persistence.ManyToOne", "org.hibernate.annotations.Fetch", "javax.persistence.CascadeType", "com.sapienter.jbilling.server.notification.db.NotificationMessageSectionDTO", "javax.persistence.JoinColumn", "javax.persistence.OneToMany", "java.util.Set", "org.hibernate.annotations.CacheConcurrencyStrategy", "org.hibernate.annotations.Cache", "java.io.Serializable", "javax.persistence.Column", "javax.persistence.GenerationType", "javax.persistence.GeneratedValue", "javax.persistence.FetchType", "com.sapienter.jbilling.server.user.db.CompanyDTO", "org.hibernate.annotations.OrderBy"],
    "com.sapienter.jbilling.server.process.db.PaperInvoiceBatchDAS": ["com.sapienter.jbilling.server.process.db.PaperInvoiceBatchDAS", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.process.db.PaperInvoiceBatchDTO"],
    "com.sapienter.jbilling.server.order.db.OrderPeriodDAS": ["com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.order.db.OrderPeriodDAS", "com.sapienter.jbilling.server.order.db.OrderPeriodDTO"],
    "com.sapienter.jbilling.server.payment.tasks.DublicateProfileRecordException": ["com.sapienter.jbilling.server.payment.tasks.DublicateProfileRecordException"],
    "com.sapienter.jbilling.server.user.permisson.db.PermissionUserDAS": ["com.sapienter.jbilling.server.user.permisson.db.PermissionUserDTO", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.user.permisson.db.PermissionUserDAS"],
    "com.sapienter.jbilling.server.process.db.ProcessRunTotalPmDAS": ["java.math.BigDecimal", "org.hibernate.Criteria", "com.sapienter.jbilling.server.process.db.ProcessRunTotalPmDTO", "org.hibernate.criterion.Restrictions", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.process.db.ProcessRunTotalPmDAS", "com.sapienter.jbilling.server.process.db.ProcessRunTotalDTO"],
    "com.sapienter.jbilling.server.provisioning.TestExternalProvisioningMDB": ["javax.jms.MapMessage", "com.sapienter.jbilling.server.util.Context", "javax.jms.MessageListener", "com.sapienter.jbilling.server.util.Context$Name", "<nulltype>", "com.sapienter.jbilling.server.provisioning.IProvisioningProcessSessionBean", "org.apache.log4j.Logger", "com.sapienter.jbilling.server.util.Constants", "javax.jms.Message", "com.sapienter.jbilling.server.provisioning.TestExternalProvisioningMDB", "org.apache.log4j.Category"],
    "com.sapienter.jbilling.server.user.partner.PartnerBL": ["com.sapienter.jbilling.server.user.partner.db.Partner", "com.sapienter.jbilling.server.user.PartnerSQL", "java.sql.Connection", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskException", "com.sapienter.jbilling.server.util.db.CurrencyDTO", "java.util.Date", "com.sapienter.jbilling.server.util.Context", "javax.naming.NamingException", "com.sapienter.jbilling.server.pluggableTask.TaskException", "com.sapienter.jbilling.server.user.db.CustomerDTO", "org.apache.log4j.Logger", "java.math.BigDecimal", "com.sapienter.jbilling.server.payment.db.PaymentResultDAS", "java.sql.ResultSet", "javax.sql.rowset.CachedRowSet", "com.sapienter.jbilling.server.user.partner.db.PartnerRange[]", "org.apache.log4j.Category", "com.sapienter.jbilling.server.util.MapPeriodToCalendar", "com.sapienter.jbilling.common.CommonConstants", "com.sapienter.jbilling.server.item.CurrencyBL", "java.util.GregorianCalendar", "com.sapienter.jbilling.server.user.partner.db.PartnerDAS", "com.sapienter.jbilling.server.user.db.UserDTO", "com.sapienter.jbilling.server.payment.db.PaymentDTO", "com.sapienter.jbilling.server.util.audit.EventLogger", "java.util.Set", "com.sapienter.jbilling.server.user.partner.db.PartnerPayout", "java.sql.PreparedStatement", "com.sapienter.jbilling.server.util.Context$Name", "java.util.List", "com.sapienter.jbilling.server.payment.PaymentDTOEx", "com.sapienter.jbilling.server.user.PartnerRangeComparator", "com.sapienter.jbilling.server.notification.INotificationSessionBean", "com.sapienter.jbilling.server.notification.NotificationNotFoundException", "com.sapienter.jbilling.server.notification.MessageDTO", "com.sapienter.jbilling.server.user.partner.db.PartnerPayoutDAS", "com.sapienter.jbilling.server.user.partner.PartnerWS", "java.util.ArrayList", "java.sql.SQLException", "java.util.Calendar", "com.sapienter.jbilling.server.user.partner.db.PartnerRangeDAS", "com.sapienter.jbilling.server.list.ResultList", "javax.sql.RowSet", "javax.sql.DataSource", "com.sapienter.jbilling.server.payment.db.PaymentResultDTO", "com.sapienter.jbilling.server.user.partner.PartnerBL", "com.sapienter.jbilling.server.util.db.CurrencyDAS", "java.util.Iterator", "com.sapienter.jbilling.server.payment.PaymentBL", "com.sapienter.jbilling.server.user.db.UserDAS", "<nulltype>", "com.sapienter.jbilling.server.payment.db.PaymentDAS", "java.sql.Date", "com.sapienter.jbilling.server.process.db.PeriodUnitDTO", "com.sapienter.jbilling.server.notification.NotificationBL", "com.sapienter.jbilling.server.user.partner.db.PartnerRange", "com.sapienter.jbilling.common.SessionInternalError", "java.util.Date[]", "java.sql.Statement", "com.sapienter.jbilling.server.user.db.CompanyDTO", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.util.Constants", "java.util.Collections"],
    "com.sapienter.jbilling.server.process.BillingProcessConfigurationWS": ["java.util.Date", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO", "javax.validation.constraints.Min", "javax.validation.constraints.NotNull", "<nulltype>", "java.io.Serializable", "com.sapienter.jbilling.server.process.db.PeriodUnitDTO", "com.sapienter.jbilling.server.user.db.CompanyDTO", "com.sapienter.jbilling.server.process.BillingProcessConfigurationWS"],
    "com.sapienter.jbilling.server.order.event.OrderAddedOnInvoiceEvent": ["com.sapienter.jbilling.server.order.db.OrderDTO", "java.math.BigDecimal", "com.sapienter.jbilling.server.system.event.Event", "java.util.Date", "com.sapienter.jbilling.server.order.event.OrderAddedOnInvoiceEvent"],
    "com.sapienter.jbilling.server.util.db.LanguageDTO": ["javax.persistence.Entity", "com.sapienter.jbilling.server.util.db.LanguageDTO", "javax.persistence.CascadeType", "com.sapienter.jbilling.server.user.db.UserDTO", "javax.persistence.OneToMany", "java.util.Set", "org.hibernate.annotations.CacheConcurrencyStrategy", "org.hibernate.annotations.Cache", "java.io.Serializable", "java.util.HashSet", "javax.persistence.Column", "javax.persistence.Table", "com.sapienter.jbilling.server.notification.db.NotificationMessageDTO", "javax.persistence.FetchType", "com.sapienter.jbilling.server.user.db.CompanyDTO", "javax.persistence.Id"],
    "com.sapienter.jbilling.server.process.task.ScpUploadTask": ["java.io.FilenameFilter", "java.util.Arrays", "org.rev6.scf.ScpFile", "java.util.Date", "java.util.ArrayList", "org.apache.log4j.Logger", "java.util.Map", "java.io.OutputStreamWriter", "org.apache.log4j.Category", "org.quartz.JobExecutionContext", "com.sapienter.jbilling.server.process.task.ScpUploadTask", "com.sapienter.jbilling.server.pluggableTask.PluggableTask", "java.io.FileWriter", "java.io.IOException", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription$Type", "java.io.File", "<nulltype>", "com.sapienter.jbilling.server.process.task.AbstractCronTask", "org.quartz.JobExecutionException", "java.util.List", "org.rev6.scf.ScpFacade", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription", "java.io.Writer", "org.rev6.scf.ScpException", "com.sapienter.jbilling.server.process.task.ScpUploadTask$1", "com.sapienter.jbilling.server.process.task.ScheduledTask"],
    "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDTO": ["java.util.ArrayList", "org.apache.log4j.Logger", "javax.persistence.Table", "javax.persistence.TableGenerator", "org.hibernate.annotations.FetchMode", "java.util.Map", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskWS", "javax.persistence.Version", "javax.persistence.Id", "javax.persistence.Entity", "javax.persistence.ManyToOne", "org.hibernate.annotations.Fetch", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskTypeDAS", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDTO", "javax.persistence.CascadeType", "java.util.Collection", "javax.persistence.JoinColumn", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskTypeDTO", "javax.persistence.OneToMany", "org.hibernate.annotations.CacheConcurrencyStrategy", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskBL", "<nulltype>", "org.hibernate.annotations.Cache", "java.io.Serializable", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskParameterDTO", "javax.persistence.Column", "javax.persistence.GenerationType", "javax.persistence.GeneratedValue", "javax.persistence.FetchType", "com.sapienter.jbilling.server.util.db.AbstractDAS"],
    "com.sapienter.jbilling.server.system.event.Event": ["com.sapienter.jbilling.server.system.event.Event"],
    "com.sapienter.jbilling.server.payment.PaymentBL": ["com.sapienter.jbilling.server.payment.event.PaymentDeletedEvent", "com.sapienter.jbilling.server.invoice.InvoiceIdComparator", "java.sql.Connection", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskException", "com.sapienter.jbilling.server.util.db.CurrencyDTO", "com.sapienter.jbilling.server.payment.db.PaymentInvoiceMapDAS", "com.sapienter.jbilling.server.pluggableTask.PaymentInfoTask", "com.sapienter.jbilling.server.util.Context", "com.sapienter.jbilling.server.pluggableTask.TaskException", "org.apache.log4j.Logger", "java.math.BigDecimal", "com.sapienter.jbilling.server.util.db.AbstractDescription", "com.sapienter.jbilling.server.payment.db.PaymentMethodDTO", "com.sapienter.jbilling.server.payment.db.PaymentResultDAS", "java.sql.ResultSet", "javax.sql.rowset.CachedRowSet", "com.sapienter.jbilling.server.payment.PaymentWS", "com.sapienter.jbilling.server.invoice.db.InvoiceDAS", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskManager", "com.sapienter.jbilling.server.payment.event.AbstractPaymentEvent", "com.sapienter.jbilling.server.payment.db.PaymentInfoChequeDAS", "org.apache.log4j.Category", "org.springframework.dao.EmptyResultDataAccessException", "com.sapienter.jbilling.server.user.db.UserDTO", "com.sapienter.jbilling.server.payment.db.PaymentDTO", "java.util.Collection", "com.sapienter.jbilling.server.payment.PaymentAuthorizationBL", "com.sapienter.jbilling.server.util.audit.EventLogger", "java.util.Set", "com.sapienter.jbilling.server.user.partner.db.PartnerPayout", "com.sapienter.jbilling.server.user.db.CreditCardDAS", "com.sapienter.jbilling.server.util.Context$Name", "java.util.List", "com.sapienter.jbilling.server.entity.CreditCardDTO", "com.sapienter.jbilling.server.user.AchBL", "com.sapienter.jbilling.server.payment.PaymentDTOEx", "com.sapienter.jbilling.server.pluggableTask.PaymentTask", "com.sapienter.jbilling.server.notification.INotificationSessionBean", "com.sapienter.jbilling.server.entity.PaymentInfoChequeDTO", "com.sapienter.jbilling.server.notification.NotificationNotFoundException", "com.sapienter.jbilling.server.notification.MessageDTO", "com.sapienter.jbilling.server.payment.db.PaymentInvoiceMapDTO", "com.sapienter.jbilling.server.payment.PaymentEntityComparator", "java.util.ArrayList", "java.sql.SQLException", "com.sapienter.jbilling.server.payment.PaymentSQL", "java.util.Calendar", "com.sapienter.jbilling.server.payment.db.PaymentInfoChequeDTO", "com.sapienter.jbilling.server.entity.PaymentAuthorizationDTO", "com.sapienter.jbilling.server.list.ResultList", "javax.sql.RowSet", "javax.persistence.EntityNotFoundException", "com.sapienter.jbilling.server.payment.db.PaymentResultDTO", "com.sapienter.jbilling.server.system.event.EventManager", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO", "com.sapienter.jbilling.server.payment.db.PaymentMethodDAS", "com.sapienter.jbilling.server.user.CreditCardBL", "java.util.Iterator", "com.sapienter.jbilling.server.payment.PaymentBL", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO", "com.sapienter.jbilling.server.user.db.UserDAS", "<nulltype>", "com.sapienter.jbilling.server.payment.db.PaymentDAS", "com.sapienter.jbilling.server.payment.PaymentInvoiceMapDTOEx", "com.sapienter.jbilling.server.user.db.AchDTO", "com.sapienter.jbilling.server.notification.NotificationBL", "com.sapienter.jbilling.server.user.db.CreditCardDTO", "com.sapienter.jbilling.common.SessionInternalError", "com.sapienter.jbilling.server.entity.AchDTO", "com.sapienter.jbilling.server.user.db.CompanyDTO", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.payment.IPaymentSessionBean", "com.sapienter.jbilling.server.util.Constants", "java.util.Collections"],
    "com.sapienter.jbilling.server.process.task.AgeingProcessTask": ["com.sapienter.jbilling.server.process.task.AbstractBackwardSimpleScheduledTask", "org.quartz.JobExecutionContext", "com.sapienter.jbilling.server.process.IBillingProcessSessionBean", "com.sapienter.jbilling.server.pluggableTask.PluggableTask", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskException", "com.sapienter.jbilling.server.process.task.AgeingProcessTask", "java.util.Date", "com.sapienter.jbilling.server.process.task.AbstractSimpleScheduledTask", "com.sapienter.jbilling.server.util.Context", "com.sapienter.jbilling.server.util.Context$Name", "org.quartz.JobExecutionException", "org.apache.log4j.Logger", "com.sapienter.jbilling.common.Util", "org.quartz.SimpleTrigger", "org.apache.log4j.Category"],
    "com.sapienter.jbilling.server.mediation.task.MediationResult": ["java.util.Date", "com.sapienter.jbilling.server.mediation.task.MediationResult", "java.text.SimpleDateFormat", "com.sapienter.jbilling.server.order.db.OrderLineDTO", "<nulltype>", "java.util.ArrayList", "com.sapienter.jbilling.server.order.db.OrderDTO", "org.apache.log4j.Logger", "java.math.BigDecimal", "com.sapienter.jbilling.server.rule.Result", "java.util.List", "com.sapienter.jbilling.common.Constants", "java.text.ParseException", "java.text.DateFormat", "org.apache.log4j.Category"],
    "com.sapienter.jbilling.common.JBCrypto": ["com.sapienter.jbilling.common.JBCryptoImpl", "java.security.spec.InvalidKeySpecException", "java.security.MessageDigest", "com.sapienter.jbilling.server.util.Util", "org.apache.commons.codec.binary.Base64", "org.apache.log4j.Logger", "java.nio.charset.Charset", "com.sapienter.jbilling.common.Util", "org.apache.log4j.Category", "com.sapienter.jbilling.common.CommonConstants", "com.sapienter.jbilling.common.JBCrypto", "<nulltype>", "java.security.NoSuchAlgorithmException", "com.sapienter.jbilling.common.JBCrypto$1", "com.sapienter.jbilling.common.JBCrypto$2"],
    "com.sapienter.jbilling.server.item.tasks.RulesItemManager": ["com.sapienter.jbilling.server.item.tasks.BasicItemManager", "com.sapienter.jbilling.server.item.tasks.Subscription", "com.sapienter.jbilling.server.util.db.CurrencyDTO", "java.util.Date", "com.sapienter.jbilling.server.item.PricingField", "com.sapienter.jbilling.server.mediation.Record", "com.sapienter.jbilling.server.util.DTOFactory", "com.sapienter.jbilling.server.order.db.OrderLineDTO", "com.sapienter.jbilling.server.pluggableTask.TaskException", "java.util.ArrayList", "com.sapienter.jbilling.server.item.db.ItemDTO", "org.apache.log4j.Logger", "java.math.BigDecimal", "com.sapienter.jbilling.server.order.db.OrderLineDAS", "com.sapienter.jbilling.server.order.db.OrderStatusDAS", "com.sapienter.jbilling.common.Constants", "com.sapienter.jbilling.server.item.tasks.RulesItemManager$OrderManager", "com.sapienter.jbilling.server.user.ContactDTOEx", "com.sapienter.jbilling.server.user.ContactBL", "com.sapienter.jbilling.server.util.db.CurrencyDAS", "java.util.Hashtable", "org.apache.log4j.Category", "com.sapienter.jbilling.server.order.OrderBL", "com.sapienter.jbilling.server.pluggableTask.PluggableTask", "com.sapienter.jbilling.server.user.contact.db.ContactFieldDTO", "org.drools.runtime.rule.FactHandle", "com.sapienter.jbilling.server.user.db.UserDTO", "com.sapienter.jbilling.server.util.db.AbstractGenericStatusDAS", "java.util.Collection", "com.sapienter.jbilling.server.item.tasks.RulesItemManager", "com.sapienter.jbilling.server.user.UserDTOEx", "com.sapienter.jbilling.server.order.db.OrderPeriodDTO", "com.sapienter.jbilling.server.item.ItemBL", "<nulltype>", "com.sapienter.jbilling.server.order.db.OrderDTO", "java.util.List", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.order.db.OrderDAS", "org.drools.KnowledgeBase", "com.sapienter.jbilling.server.pluggableTask.StatefulKnowledgeSession"],
    "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDAS": ["org.hibernate.criterion.Criterion", "org.hibernate.Criteria", "org.hibernate.criterion.Restrictions", "java.util.Collection", "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDAS", "<nulltype>", "java.util.List", "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDTO", "com.sapienter.jbilling.server.util.db.AbstractDAS", "org.hibernate.Query"],
    "com.sapienter.jbilling.server.user.UserDTOEx": ["com.sapienter.jbilling.server.user.db.CompanyDAS", "com.sapienter.jbilling.server.user.permisson.db.PermissionDTO", "com.sapienter.jbilling.common.PermissionTypeIdComparator", "com.sapienter.jbilling.server.util.db.CurrencyDTO", "com.sapienter.jbilling.server.user.permisson.db.PermissionTypeDTO", "java.util.Date", "com.sapienter.jbilling.common.PermissionIdComparator", "java.util.ArrayList", "com.sapienter.jbilling.server.user.db.CustomerDTO", "java.math.BigDecimal", "com.sapienter.jbilling.common.Constants", "java.util.Locale", "com.sapienter.jbilling.server.util.db.CurrencyDAS", "com.sapienter.jbilling.server.util.db.LanguageDTO", "com.sapienter.jbilling.server.user.db.UserDTO", "com.sapienter.jbilling.server.util.db.LanguageDAS", "com.sapienter.jbilling.server.user.UserDTOEx", "<nulltype>", "com.sapienter.jbilling.server.user.db.AchDTO", "java.util.List", "com.sapienter.jbilling.server.user.db.CreditCardDTO", "com.sapienter.jbilling.server.user.db.CompanyDTO", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.user.UserWS", "java.util.Collections"],
    "com.sapienter.jbilling.server.mediation.task.RulesMediationTask": ["com.sapienter.jbilling.server.user.db.CompanyDAS", "com.sapienter.jbilling.server.pluggableTask.PluggableTask", "com.sapienter.jbilling.server.mediation.task.MediationResult", "com.sapienter.jbilling.server.mediation.task.IMediationProcess", "com.sapienter.jbilling.server.item.PricingField", "com.sapienter.jbilling.server.mediation.Record", "com.sapienter.jbilling.server.mediation.task.RulesMediationTask", "com.sapienter.jbilling.server.pluggableTask.TaskException", "<nulltype>", "com.sapienter.jbilling.server.rule.RulesBaseTask", "org.apache.log4j.Logger", "java.util.List", "com.sapienter.jbilling.server.rule.Result", "com.sapienter.jbilling.server.util.db.AbstractDAS"],
    "com.sapienter.jbilling.server.pluggableTask.NoInvoiceFilterTask": ["com.sapienter.jbilling.server.pluggableTask.PluggableTask", "com.sapienter.jbilling.server.process.db.BillingProcessDTO", "com.sapienter.jbilling.server.pluggableTask.InvoiceFilterTask", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO", "com.sapienter.jbilling.server.pluggableTask.TaskException", "com.sapienter.jbilling.server.pluggableTask.NoInvoiceFilterTask"],
    "com.sapienter.jbilling.common.InvalidArgumentException": ["com.sapienter.jbilling.common.InvalidArgumentException", "org.apache.log4j.Logger", "<nulltype>", "org.apache.log4j.Category"],
    "com.sapienter.jbilling.server.payment.event.ProcessPaymentMDB": ["com.sapienter.jbilling.server.process.IBillingProcessSessionBean", "javax.jms.MapMessage", "com.sapienter.jbilling.server.util.Context", "javax.jms.MessageListener", "com.sapienter.jbilling.server.util.Context$Name", "<nulltype>", "org.apache.log4j.Logger", "com.sapienter.jbilling.server.payment.event.ProcessPaymentMDB", "com.sapienter.jbilling.server.invoice.db.InvoiceDAS", "com.sapienter.jbilling.server.util.db.AbstractDAS", "javax.jms.Message", "org.apache.log4j.Category"],
    "com.sapienter.jbilling.server.user.db.AchDTO": ["java.util.HashSet", "javax.persistence.Table", "javax.persistence.TableGenerator", "javax.persistence.Version", "javax.persistence.Id", "javax.persistence.Entity", "javax.persistence.ManyToOne", "javax.persistence.CascadeType", "com.sapienter.jbilling.server.user.db.UserDTO", "com.sapienter.jbilling.server.payment.db.PaymentDTO", "javax.persistence.JoinColumn", "com.sapienter.jbilling.common.JBCrypto", "javax.persistence.OneToMany", "java.util.Set", "<nulltype>", "java.io.Serializable", "com.sapienter.jbilling.server.user.db.AchDTO", "javax.persistence.Column", "javax.persistence.GenerationType", "javax.persistence.GeneratedValue", "javax.persistence.Transient", "com.sapienter.jbilling.server.entity.AchDTO", "javax.persistence.FetchType"],
    "com.sapienter.jbilling.server.util.PreferenceTypeWS": ["com.sapienter.jbilling.server.util.db.PreferenceTypeDTO", "com.sapienter.jbilling.server.util.db.AbstractDescription", "com.sapienter.jbilling.server.util.PreferenceTypeWS", "java.io.Serializable"],
    "com.sapienter.jbilling.server.notification.NotificationBL": ["com.sapienter.jbilling.server.util.PreferenceBL", "com.sapienter.jbilling.server.user.partner.db.Partner", "com.sapienter.jbilling.server.util.db.CurrencyDTO", "com.sapienter.jbilling.server.notification.db.NotificationMessageLineDAS", "com.sapienter.jbilling.server.util.Context", "org.apache.velocity.tools.generic.SortTool", "org.apache.velocity.tools.generic.EscapeTool", "java.math.BigDecimal", "com.sapienter.jbilling.server.notification.MessageDTO[]", "com.sapienter.jbilling.server.user.ContactDTOEx", "java.sql.ResultSet", "javax.sql.rowset.CachedRowSet", "java.util.Map", "javax.mail.internet.MimeMultipart", "javax.mail.Transport", "com.sapienter.jbilling.server.payment.db.PaymentDTO", "java.util.Set", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskBL", "java.sql.PreparedStatement", "org.apache.velocity.VelocityContext", "org.apache.velocity.tools.generic.ValueParser", "org.apache.velocity.tools.generic.ResourceTool", "org.apache.velocity.tools.generic.NumberTool", "com.sapienter.jbilling.server.payment.PaymentDTOEx", "com.sapienter.jbilling.server.invoice.db.InvoiceDeliveryMethodDTO", "org.springframework.jdbc.datasource.DataSourceUtils", "net.sf.jasperreports.engine.JRException", "javax.mail.Part", "java.text.SimpleDateFormat", "javax.activation.DataHandler", "java.util.ArrayList", "javax.mail.internet.InternetAddress", "com.sapienter.jbilling.server.user.EntityBL", "java.sql.SQLException", "java.util.Calendar", "java.util.ResourceBundle", "com.sapienter.jbilling.common.Util", "com.sapienter.jbilling.server.list.ResultList", "javax.activation.FileDataSource", "com.sapienter.jbilling.server.notification.db.NotificationMessageLineDTO", "javax.sql.RowSet", "com.sapienter.jbilling.server.notification.db.NotificationMessageDAS", "java.util.Properties", "com.sapienter.jbilling.server.user.contact.db.ContactFieldDTO", "java.io.StringWriter", "java.io.IOException", "Message.RecipientType", "net.sf.jasperreports.engine.JasperFillManager", "javax.mail.internet.MimeMessage", "org.apache.velocity.tools.generic.ListTool", "org.apache.velocity.tools.generic.RenderTool", "com.sapienter.jbilling.server.pluggableTask.PaperInvoiceNotificationTask", "com.sapienter.jbilling.server.user.contact.db.ContactFieldTypeDTO", "net.sf.jasperreports.engine.data.JRBeanCollectionDataSource", "java.io.File", "byte[]", "org.hibernate.collection.PersistentSet", "com.sapienter.jbilling.common.SessionInternalError", "java.sql.Statement", "javax.mail.Session", "com.sapienter.jbilling.server.notification.NotificationSQL", "com.sapienter.jbilling.server.user.db.CompanyDAS", "javax.mail.Message", "java.sql.Connection", "java.util.Date", "javax.mail.MessagingException", "com.sapienter.jbilling.server.user.db.CustomerDTO", "org.apache.log4j.Logger", "org.apache.velocity.app.VelocityEngine", "java.util.Locale", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskManager", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO", "com.sapienter.jbilling.server.user.ContactBL", "java.text.DateFormat", "org.springframework.dao.EmptyResultDataAccessException", "org.apache.log4j.Category", "com.sapienter.jbilling.server.pluggableTask.PluggableTask", "com.sapienter.jbilling.server.user.db.UserDTO", "java.util.Collection", "net.sf.jasperreports.engine.JasperExportManager", "net.sf.jasperreports.engine.JRParameter", "java.io.FileNotFoundException", "com.sapienter.jbilling.server.util.Context$Name", "java.util.List", "org.apache.velocity.tools.generic.DateTool", "org.apache.velocity.tools.generic.MathTool", "com.sapienter.jbilling.server.notification.db.NotificationMessageSectionDAS", "com.sapienter.jbilling.server.invoice.InvoiceBL", "com.sapienter.jbilling.server.invoice.db.InvoiceLineTypeDTO", "javax.mail.internet.MimeBodyPart", "com.sapienter.jbilling.server.notification.NotificationNotFoundException", "com.sapienter.jbilling.server.notification.MessageDTO", "java.util.HashMap", "com.sapienter.jbilling.server.util.Util", "com.sapienter.jbilling.server.notification.NotificationLineEntityComparator", "com.sapienter.jbilling.server.notification.db.NotificationMessageTypeDTO", "com.sapienter.jbilling.server.notification.MessageSection", "com.sapienter.jbilling.server.notification.db.NotificationMessageDTO", "javax.sql.DataSource", "com.sapienter.jbilling.server.user.partner.PartnerBL", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO", "java.util.Hashtable", "net.sf.jasperreports.engine.JasperPrint", "com.sapienter.jbilling.server.util.db.LanguageDTO", "java.util.Iterator", "com.sapienter.jbilling.server.payment.PaymentBL", "com.sapienter.jbilling.server.notification.db.NotificationMessageSectionDTO", "java.io.FileInputStream", "com.sapienter.jbilling.server.user.contact.db.ContactDTO", "com.sapienter.jbilling.server.user.UserBL", "<nulltype>", "com.sapienter.jbilling.server.pluggableTask.NotificationTask", "com.sapienter.jbilling.server.user.db.CreditCardDTO", "com.sapienter.jbilling.server.notification.NotificationBL", "com.sapienter.jbilling.server.user.db.CompanyDTO", "com.sapienter.jbilling.server.util.db.AbstractDAS", "org.apache.velocity.tools.generic.AlternatorTool", "com.sapienter.jbilling.server.util.Constants", "org.apache.velocity.tools.generic.IteratorTool", "java.util.Collections"],
    "com.sapienter.jbilling.client.authentication.PermissionVoter": ["org.codehaus.groovy.grails.plugins.springsecurity.WebExpressionConfigAttribute", "java.util.Collection", "<nulltype>", "org.springframework.security.core.GrantedAuthority", "com.sapienter.jbilling.server.user.permisson.db.RoleDTO", "org.springframework.security.access.AccessDecisionVoter", "com.sapienter.jbilling.client.authentication.PermissionVoter", "org.springframework.security.core.Authentication", "org.springframework.security.access.ConfigAttribute"],
    "com.sapienter.jbilling.server.entity.AchDTO": ["javax.validation.constraints.NotNull", "<nulltype>", "java.io.Serializable", "javax.xml.bind.annotation.XmlType", "org.hibernate.validator.constraints.NotEmpty", "javax.validation.constraints.Digits", "com.sapienter.jbilling.server.entity.AchDTO"],
    "com.sapienter.jbilling.server.invoice.InvoiceSessionBean": ["com.sapienter.jbilling.server.invoice.InvoiceBL", "java.util.Date", "com.sapienter.jbilling.server.notification.MessageDTO", "com.sapienter.jbilling.server.payment.db.PaymentInvoiceMapDTO", "org.apache.log4j.Logger", "com.sapienter.jbilling.server.process.db.BillingProcessDTO", "com.sapienter.jbilling.common.Constants", "java.util.ResourceBundle", "org.springframework.transaction.annotation.Propagation", "java.util.Map", "com.sapienter.jbilling.server.invoice.db.InvoiceDAS", "javax.sql.rowset.CachedRowSet", "com.sapienter.jbilling.server.process.BillingProcessBL", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO", "org.apache.log4j.Category", "com.sapienter.jbilling.server.pluggableTask.PluggableTask", "java.util.Iterator", "com.sapienter.jbilling.server.user.db.UserDTO", "com.sapienter.jbilling.server.payment.db.PaymentDTO", "java.util.Set", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskBL", "com.sapienter.jbilling.server.pluggableTask.PaperInvoiceNotificationTask", "com.sapienter.jbilling.server.user.UserBL", "<nulltype>", "com.sapienter.jbilling.server.invoice.IInvoiceSessionBean", "byte[]", "com.sapienter.jbilling.server.order.db.OrderProcessDTO", "com.sapienter.jbilling.server.order.db.OrderDTO", "com.sapienter.jbilling.server.invoice.PaperInvoiceBatchBL", "com.sapienter.jbilling.server.notification.NotificationBL", "com.sapienter.jbilling.common.SessionInternalError", "com.sapienter.jbilling.server.invoice.InvoiceSessionBean", "com.sapienter.jbilling.server.invoice.NewInvoiceDTO", "com.sapienter.jbilling.server.user.db.CompanyDTO", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.util.Constants", "org.springframework.transaction.annotation.Transactional"],
    "com.sapienter.jbilling.server.pluggableTask.InvoiceFilterTask": ["com.sapienter.jbilling.server.process.db.BillingProcessDTO", "com.sapienter.jbilling.server.pluggableTask.InvoiceFilterTask", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO", "com.sapienter.jbilling.server.pluggableTask.TaskException"],
    "com.sapienter.jbilling.server.order.db.OrderDAS": ["org.hibernate.Criteria", "org.hibernate.criterion.Restrictions", "java.util.Date", "com.sapienter.jbilling.server.order.db.OrderLineDTO", "java.math.BigDecimal", "com.sapienter.jbilling.server.order.db.OrderLineDAS", "org.hibernate.criterion.Order", "org.hibernate.criterion.Expression", "com.sapienter.jbilling.common.Util", "org.hibernate.Query", "com.sapienter.jbilling.server.order.db.OrderPeriodDTO", "org.hibernate.criterion.Projections", "<nulltype>", "com.sapienter.jbilling.server.order.db.OrderDTO", "com.sapienter.jbilling.server.order.db.OrderProcessDTO", "java.util.List", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.order.db.OrderDAS", "com.sapienter.jbilling.server.util.Constants"],
    "com.sapienter.jbilling.server.util.db.AbstractDAS": ["org.hibernate.criterion.Criterion[]", "org.hibernate.Criteria", "org.hibernate.criterion.Restrictions", "com.sapienter.jbilling.server.util.Context", "org.springframework.orm.hibernate3.support.HibernateDaoSupport", "org.apache.log4j.Logger", "T", "org.hibernate.criterion.Example", "org.hibernate.criterion.Criterion", "org.hibernate.LockMode", "org.hibernate.SessionFactory", "org.hibernate.criterion.Projections", "com.sapienter.jbilling.server.util.Context$Name", "<nulltype>", "java.io.Serializable", "java.util.List", "com.sapienter.jbilling.common.SessionInternalError", "com.sapienter.jbilling.server.util.db.AbstractDAS"],
    "com.sapienter.jbilling.server.payment.IPaymentSessionBean": ["com.sapienter.jbilling.server.payment.db.PaymentDTO", "java.util.Date", "com.sapienter.jbilling.server.payment.blacklist.CsvProcessor$ParseException", "java.math.BigDecimal", "java.sql.SQLException", "com.sapienter.jbilling.server.payment.blacklist.CsvProcessor", "com.sapienter.jbilling.common.SessionInternalError", "com.sapienter.jbilling.server.payment.PaymentDTOEx", "com.sapienter.jbilling.server.payment.IPaymentSessionBean", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO", "org.springframework.dao.EmptyResultDataAccessException"],
    "com.sapienter.jbilling.server.util.db.JbillingTableDAS": ["org.hibernate.criterion.Restrictions", "<nulltype>", "org.apache.log4j.Logger", "org.springmodules.cache.provider.CacheProviderFacade", "org.springmodules.cache.CachingModel", "com.sapienter.jbilling.common.SessionInternalError", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.util.db.JbillingTableDAS", "com.sapienter.jbilling.server.util.db.JbillingTable", "org.apache.log4j.Category"],
    "com.sapienter.jbilling.server.provisioning.task.mmsc.ModifyCustomer": ["javax.xml.bind.annotation.XmlAccessorType", "javax.xml.bind.annotation.XmlType", "com.sapienter.jbilling.server.provisioning.task.mmsc.ModifyCustomerRequest", "com.sapienter.jbilling.server.provisioning.task.mmsc.ModifyCustomer", "javax.xml.bind.annotation.XmlAccessType"],
    "com.sapienter.jbilling.server.report.db.ReportDAS": ["com.sapienter.jbilling.server.report.db.ReportDTO", "com.sapienter.jbilling.server.util.db.AbstractDAS", "com.sapienter.jbilling.server.report.db.ReportDAS"],
    "com.sapienter.jbilling.server.mediation.task.JDBCReader": ["org.springframework.jdbc.core.BatchPreparedStatementSetter", "com.sapienter.jbilling.server.item.PricingField$Type", "java.util.Date", "com.sapienter.jbilling.server.item.PricingField", "com.sapienter.jbilling.server.mediation.Record", "com.sapienter.jbilling.server.mediation.task.JdbcTemplate", "org.apache.log4j.Logger", "java.sql.SQLException", "com.sapienter.jbilling.server.mediation.task.AbstractJDBCReader$MarkMethod", "org.apache.log4j.Category", "com.sapienter.jbilling.server.pluggableTask.PluggableTask", "java.util.Iterator", "com.sapienter.jbilling.server.mediation.task.JDBCReader$1", "com.sapienter.jbilling.server.mediation.task.AbstractJDBCReader", "java.sql.Timestamp", "int[]", "java.sql.PreparedStatement", "<nulltype>", "java.util.List", "com.sapienter.jbilling.common.SessionInternalError", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription", "com.sapienter.jbilling.server.mediation.task.JDBCReader"]
  },
  "methodDependencies": {
    "com.sapienter.jbilling.server.pluggableTask.BasicCompositionTask.apply(NewInvoiceDTO, Integer)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.invoice.NewInvoiceDTO.getInvoices()", "com.sapienter.jbilling.server.invoice.NewInvoiceDTO.addResultLine(com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getId()", "java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.order.db.OrderDTO.getNotes()", "java.lang.StringBuilder.append(java.lang.String)", "java.util.ResourceBundle.getString(java.lang.String)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getCustomerNotes()", "com.sapienter.jbilling.server.order.db.OrderLineTypeDTO.getId()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getDueDate()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getPrice()", "com.sapienter.jbilling.server.order.db.OrderDTO.getPeriodId()", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO.setOrderId(int)", "com.sapienter.jbilling.server.pluggableTask.BasicCompositionTask.composeDescription(com.sapienter.jbilling.server.order.db.OrderDTO,com.sapienter.jbilling.server.process.PeriodOfTime,java.lang.String)", "com.sapienter.jbilling.server.order.db.OrderDTO.getUser()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getBalance()", "com.sapienter.jbilling.server.pluggableTask.BasicCompositionTask.saveOrderTotalContributionToInvoice(java.lang.Integer,com.sapienter.jbilling.server.invoice.NewInvoiceDTO,java.math.BigDecimal)", "com.sapienter.jbilling.server.invoice.NewInvoiceDTO.getOrders()", "com.sapienter.jbilling.server.pluggableTask.BasicCompositionTask.getLocale(java.lang.Integer)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getOrderLineType()", "java.text.DateFormat.format(java.util.Date)", "java.util.List.get(int)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getPublicNumber()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.setCustomerNotes(java.lang.String)", "com.sapienter.jbilling.server.order.db.OrderDTO.getId()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getDeleted()", "java.util.ResourceBundle.getBundle(java.lang.String,java.util.Locale)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getQuantity()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getAmount()", "java.lang.StringBuilder.toString()", "com.sapienter.jbilling.server.invoice.InvoiceBL.getEntity()", "com.sapienter.jbilling.server.pluggableTask.BasicCompositionTask.getTaxLineIndex(java.util.List,java.lang.String)", "org.apache.commons.lang.StringUtils.isBlank(java.lang.String)", "com.sapienter.jbilling.server.pluggableTask.BasicCompositionTask.calculatePeriodAmount(java.math.BigDecimal,com.sapienter.jbilling.server.process.PeriodOfTime)", "com.sapienter.jbilling.server.invoice.NewInvoiceDTO.getPeriods()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getDescription()", "java.util.List.size()", "com.sapienter.jbilling.server.order.db.OrderDTO.getLines()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getItemId()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getUserId()", "com.sapienter.jbilling.server.user.db.UserDTO.getId()", "java.math.BigDecimal.add(java.math.BigDecimal)", "java.lang.Integer.valueOf(int)", "com.sapienter.jbilling.server.invoice.NewInvoiceDTO.getResultLines()", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO.setAmount(java.math.BigDecimal)", "com.sapienter.jbilling.server.order.db.OrderDTO.getNotesInInvoice()", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO.getAmount()"],
    "com.sapienter.jbilling.server.rule.task.test.Product.getItem()": ["java.util.List.isEmpty()", "com.sapienter.jbilling.server.item.db.ItemDAS.findItemsByInternalNumber(java.lang.String)", "java.util.List.get(int)"],
    "com.sapienter.jbilling.server.user.CreditCardBL.updateForUser(Integer, Integer, CreditCardDTO)": ["java.util.Set.add(java.lang.Object)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getId()", "java.util.Iterator.next()", "com.sapienter.jbilling.server.user.UserBL.getUserEntity(java.lang.Integer)", "java.util.Iterator.hasNext()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getBaseUsers()", "com.sapienter.jbilling.server.user.CreditCardBL.set(java.lang.Integer)", "java.util.Iterator.remove()", "com.sapienter.jbilling.server.user.CreditCardBL.create(com.sapienter.jbilling.server.user.db.CreditCardDTO)", "com.sapienter.jbilling.server.user.CreditCardBL.delete(java.lang.Integer)", "com.sapienter.jbilling.server.user.CreditCardBL.getEntity()", "com.sapienter.jbilling.server.user.db.UserDTO.getCreditCards()", "java.util.Set.iterator()", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)"],
    "com.sapienter.jbilling.server.item.ItemDTOEx.setPercentage(BigDecimal)": ["java.math.BigDecimal.toString()"],
    "com.sapienter.jbilling.client.authentication.util.UsernameHelper.buildUsernameToken(String, Integer)": ["java.lang.Integer.toString()", "com.sapienter.jbilling.client.authentication.util.UsernameHelper.buildUsernameToken(java.lang.String,java.lang.String)"],
    "com.sapienter.jbilling.server.notification.NotificationBL.getCreditCardMessage(Integer, Integer, Integer, CreditCardDTO)": ["com.sapienter.jbilling.server.notification.MessageDTO.setTypeId(java.lang.Integer)", "com.sapienter.jbilling.server.notification.MessageDTO.getTypeId()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getCcExpiry()", "com.sapienter.jbilling.server.notification.NotificationBL.setContent(com.sapienter.jbilling.server.notification.MessageDTO,java.lang.Integer,java.lang.Integer,java.lang.Integer)", "java.text.DateFormat.format(java.util.Date)", "com.sapienter.jbilling.server.notification.MessageDTO.addParameter(java.lang.String,java.lang.Object)", "com.sapienter.jbilling.server.notification.NotificationBL.initializeMessage(java.lang.Integer,java.lang.Integer)"],
    "com.sapienter.jbilling.server.pluggableTask.ProcessorEmailAlarmTask.initializeParamters(PluggableTaskDTO)": ["java.util.Map.get(java.lang.Object)", "com.sapienter.jbilling.server.pluggableTask.PluggableTask.initializeParamters(com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDTO)", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription.getName()", "java.lang.Integer.parseInt(java.lang.String)"],
    "com.sapienter.jbilling.server.item.ItemTypeBL.set(Integer)": ["com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)"],
    "com.sapienter.jbilling.server.util.db.AbstractDAS.findByCriteria(Criterion[])": ["org.hibernate.Criteria.list()", "org.hibernate.Criteria.add(org.hibernate.criterion.Criterion)", "createCriteria(java.lang.Class)", "com.sapienter.jbilling.server.util.db.AbstractDAS.getSession()", "com.sapienter.jbilling.server.util.db.AbstractDAS.getPersistentClass()", "org.hibernate.Criteria.setCacheable(boolean)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getAllInvoices(Integer)": ["com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getId()", "java.util.List.size()", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "java.util.List.add(java.lang.Object)", "java.util.Set.size()", "com.sapienter.jbilling.server.invoice.IInvoiceSessionBean.getAllInvoices(java.lang.Integer)", "java.util.List.toArray(java.lang.Object[])"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.updateUser(UserWS)": ["com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerCompanyId()", "org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.user.UserWS.getCreditCard()", "com.sapienter.jbilling.server.user.UserWS.getNotes()", "com.sapienter.jbilling.server.user.db.CustomerDTO.setNotes(java.lang.String)", "com.sapienter.jbilling.server.user.UserBL.getUserEntity(java.lang.Integer)", "com.sapienter.jbilling.server.user.ContactBL.createUpdatePrimaryForUser(com.sapienter.jbilling.server.user.ContactDTOEx,java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.user.db.CustomerDTO.setAutoPaymentType(java.lang.Integer)", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "com.sapienter.jbilling.server.user.db.UserDTO.getCustomer()", "com.sapienter.jbilling.server.user.ContactBL.setEntity(java.lang.Integer)", "com.sapienter.jbilling.server.user.UserWS.getUserId()", "com.sapienter.jbilling.server.user.UserWS.getAutomaticPaymentType()", "com.sapienter.jbilling.server.user.UserBL.update(java.lang.Integer,com.sapienter.jbilling.server.user.UserDTOEx)", "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerId()", "com.sapienter.jbilling.server.user.UserWS.getContact()", "com.sapienter.jbilling.server.user.IUserSessionBean.updateCreditCard(java.lang.Integer,java.lang.Integer,com.sapienter.jbilling.server.user.db.CreditCardDTO)", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)"],
    "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDAS.findByEntity(Integer)": ["org.hibernate.Criteria.list()", "createAlias(java.lang.String,java.lang.String)", "org.hibernate.criterion.Restrictions.eq(java.lang.String,java.lang.Integer)", "getSession()", "add()", "createCriteria(java.lang.Class)"],
    "com.sapienter.jbilling.server.provisioning.task.ProvisioningCommandsRulesTask.checkOrder(OrderDTO)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.order.db.OrderDTO.getActiveSince()", "java.util.Date.before(java.util.Date)", "com.sapienter.jbilling.server.order.db.OrderDTO.getActiveUntil()", "java.util.Date.after(java.util.Date)", "com.sapienter.jbilling.server.util.db.AbstractGenericStatus.getId()", "com.sapienter.jbilling.server.order.db.OrderDTO.getOrderStatus()"],
    "com.sapienter.jbilling.server.user.db.UserDTO.getLanguageIdField()": ["com.sapienter.jbilling.server.user.db.UserDTO.getLanguage()", "com.sapienter.jbilling.server.user.db.UserDTO.getEntity()", "com.sapienter.jbilling.server.util.db.LanguageDTO.getId()", "com.sapienter.jbilling.server.user.db.CompanyDTO.getLanguageId()"],
    "com.sapienter.jbilling.server.order.db.OrderLineDAS.findByUserItem(Integer, Integer)": ["org.hibernate.Query.list()", "getSession()", "org.hibernate.Query.setParameter(java.lang.String,java.lang.Integer)", "createQuery(java.lang.String)"],
    "com.sapienter.jbilling.server.mediation.task.MediationProcessTask.getTrigger()": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.process.task.AbstractBackwardSimpleScheduledTask.setTriggerFromProperties(org.quartz.SimpleTrigger)", "com.sapienter.jbilling.server.process.task.AbstractBackwardSimpleScheduledTask.useProperties()", "com.sapienter.jbilling.server.process.task.AbstractSimpleScheduledTask.getTrigger()"],
    "com.sapienter.jbilling.server.payment.tasks.AbstractPaymentRouterTask.preAuth(PaymentDTOEx)": ["com.sapienter.jbilling.server.payment.tasks.AbstractPaymentRouterTask.selectDelegate(com.sapienter.jbilling.server.payment.PaymentDTOEx)", "com.sapienter.jbilling.server.pluggableTask.PaymentTask.preAuth(com.sapienter.jbilling.server.payment.PaymentDTOEx)"],
    "com.sapienter.jbilling.server.provisioning.task.CAIProvisioningTask.parseResponse(String)": ["java.lang.String.indexOf(int,int)", "java.lang.String.indexOf(int)", "java.lang.String.substring(int,int)", "com.sapienter.jbilling.server.provisioning.task.CAIProvisioningTask.fieldSplitIndex(java.lang.String,int)", "java.util.Map.put(java.lang.Object,java.lang.Object)", "java.lang.String.equals(java.lang.Object)", "java.lang.String.length()"],
    "com.sapienter.jbilling.common.Util.getDigitsOnly(String)": ["java.lang.String.charAt(int)", "java.lang.StringBuffer.append(char)", "java.lang.StringBuffer.toString()", "java.lang.Character.isDigit(char)", "java.lang.String.length()"],
    "com.sapienter.jbilling.server.payment.tasks.SaveCreditCardExternallyTask.getExternalSavingPluginId()": ["java.util.Map.get(java.lang.Object)", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription.getName()", "java.lang.Integer.parseInt(java.lang.String)"],
    "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskParameterDTO.populateValue()": ["com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskParameterDTO.getFloatValue()", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskParameterDTO.getIntValue()", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskParameterDTO.getStrValue()", "java.lang.String.valueOf(java.lang.Object)"],
    "com.sapienter.jbilling.server.process.BillingProcessBL.generateInvoice(Integer, Integer)": ["java.util.Calendar.getInstance()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getId()", "com.sapienter.jbilling.server.process.BillingProcessBL.processOrderAddedOnInvoiceEvents(com.sapienter.jbilling.server.invoice.NewInvoiceDTO,java.lang.Integer)", "com.sapienter.jbilling.server.user.db.UserDTO.getEntity()", "java.util.List.add(java.lang.Object)", "com.sapienter.jbilling.server.invoice.NewInvoiceDTO.setDate(java.util.Date)", "org.apache.log4j.Category.warn(java.lang.Object,java.lang.Throwable)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getToProcess()", "com.sapienter.jbilling.server.invoice.InvoiceBL.update(com.sapienter.jbilling.server.invoice.NewInvoiceDTO)", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.setInvoiceStatus(com.sapienter.jbilling.server.invoice.db.InvoiceStatusDTO)", "com.sapienter.jbilling.server.order.db.OrderDTO.getUser()", "com.sapienter.jbilling.server.invoice.NewInvoiceDTO.getOrders()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getBaseUser()", "com.sapienter.jbilling.server.process.BillingProcessBL.addOrderToInvoice(java.lang.Integer,com.sapienter.jbilling.server.order.db.OrderDTO,com.sapienter.jbilling.server.invoice.NewInvoiceDTO,java.util.Date,int)", "com.sapienter.jbilling.server.system.event.EventManager.process(com.sapienter.jbilling.server.system.event.Event)", "com.sapienter.jbilling.server.process.ConfigurationBL.getEntity()", "com.sapienter.jbilling.server.process.AgeingBL.out(com.sapienter.jbilling.server.user.db.UserDTO,java.lang.Integer)", "com.sapienter.jbilling.server.invoice.NewInvoiceDTO.setDueDatePeriod(com.sapienter.jbilling.server.order.TimePeriod)", "com.sapienter.jbilling.server.invoice.InvoiceBL.getEntity()", "com.sapienter.jbilling.server.order.OrderBL.getEntity()", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.getAutoPaymentApplication()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.setIsReview(java.lang.Integer)", "com.sapienter.jbilling.server.payment.PaymentBL.automaticPaymentApplication(com.sapienter.jbilling.server.invoice.db.InvoiceDTO)", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.getMaximumPeriods()", "com.sapienter.jbilling.server.process.event.InvoicesGeneratedEvent.getInvoiceIds()", "com.sapienter.jbilling.server.order.OrderBL.getDueDate()", "com.sapienter.jbilling.server.process.BillingProcessBL.processOrderToInvoiceEvents(com.sapienter.jbilling.server.invoice.NewInvoiceDTO,java.lang.Integer)", "java.util.List.size()", "com.sapienter.jbilling.server.process.BillingProcessBL.composeInvoice(java.lang.Integer,java.lang.Integer,com.sapienter.jbilling.server.invoice.NewInvoiceDTO)", "com.sapienter.jbilling.common.Util.truncateDate(java.util.Date)", "java.util.Calendar.getTime()", "com.sapienter.jbilling.server.process.BillingProcessBL.generateDBInvoice(java.lang.Integer,com.sapienter.jbilling.server.invoice.NewInvoiceDTO,com.sapienter.jbilling.server.process.db.BillingProcessDTO,java.lang.Integer)", "com.sapienter.jbilling.server.process.BillingProcessBL.createOrderProcess(com.sapienter.jbilling.server.invoice.NewInvoiceDTO,com.sapienter.jbilling.server.invoice.db.InvoiceDTO,com.sapienter.jbilling.server.process.db.BillingProcessDTO,java.lang.Integer)", "com.sapienter.jbilling.server.util.audit.EventLogger.info(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.setCarriedBalance(java.math.BigDecimal)", "com.sapienter.jbilling.server.process.BillingProcessBL.findUserId(com.sapienter.jbilling.server.order.db.OrderDTO)", "com.sapienter.jbilling.server.util.db.AbstractGenericStatusDAS.find(java.io.Serializable)"],
    "com.sapienter.jbilling.server.item.ItemBL.update(Integer, ItemDTO, Integer)": ["com.sapienter.jbilling.server.item.db.ItemDTO.getPriceManual()", "com.sapienter.jbilling.server.item.db.ItemDTO.getPercentage()", "com.sapienter.jbilling.server.item.db.ItemDTO.setNumber(java.lang.String)", "com.sapienter.jbilling.server.item.db.ItemDTO.setPercentage(java.math.BigDecimal)", "com.sapienter.jbilling.server.system.event.EventManager.process(com.sapienter.jbilling.server.system.event.Event)", "com.sapienter.jbilling.server.item.ItemBL.updateTypes(com.sapienter.jbilling.server.item.db.ItemDTO)", "java.util.Set.clear()", "com.sapienter.jbilling.server.item.db.ItemDTO.getHasDecimals()", "com.sapienter.jbilling.server.item.db.ItemDTO.getNumber()", "com.sapienter.jbilling.server.item.ItemBL.updateExcludedTypes(com.sapienter.jbilling.server.item.db.ItemDTO)", "com.sapienter.jbilling.server.item.db.ItemDTO.getId()", "com.sapienter.jbilling.server.item.db.ItemDTO.getItemPrices()", "com.sapienter.jbilling.server.item.db.ItemDTO.setHasDecimals(java.lang.Integer)", "com.sapienter.jbilling.server.item.db.ItemDTO.setPriceManual(java.lang.Integer)", "com.sapienter.jbilling.server.util.audit.EventLogger.audit(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.util.Date)", "com.sapienter.jbilling.server.util.db.AbstractDescription.setDescription(java.lang.String,java.lang.Integer)", "com.sapienter.jbilling.server.util.db.AbstractDAS.delete(java.lang.Object)", "com.sapienter.jbilling.server.item.ItemBL.invalidateCache()", "com.sapienter.jbilling.server.util.db.AbstractDescription.getDescription()", "com.sapienter.jbilling.server.item.ItemBL.updateCurrencies(com.sapienter.jbilling.server.item.db.ItemDTO)", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)"],
    "com.sapienter.jbilling.server.item.ItemSessionBean.createType(ItemTypeDTO)": ["com.sapienter.jbilling.server.item.ItemTypeBL.getEntity()", "com.sapienter.jbilling.server.item.ItemTypeBL.create(com.sapienter.jbilling.server.item.db.ItemTypeDTO)", "com.sapienter.jbilling.server.item.db.ItemTypeDTO.getId()"],
    "com.sapienter.jbilling.server.pluggableTask.PaymentFakeTask.toString()": ["java.lang.System.identityHashCode(java.lang.Object)", "com.sapienter.jbilling.server.pluggableTask.PaymentFakeTask.getFakeCode1()", "java.lang.Object.toString()"],
    "com.sapienter.jbilling.server.user.partner.PartnerBL.getDTO()": ["com.sapienter.jbilling.server.user.partner.db.Partner.setRelatedClerkUserId(java.lang.Integer)", "com.sapienter.jbilling.server.user.partner.db.Partner.getBaseUserByRelatedClerk()", "com.sapienter.jbilling.server.user.db.UserDTO.getId()"],
    "com.sapienter.jbilling.server.process.BillingProcessBL.getList(Integer)": ["java.sql.Connection.close()", "javax.sql.RowSet.setInt(int,int)", "com.sapienter.jbilling.server.list.ResultList.execute()", "com.sapienter.jbilling.server.list.ResultList.prepareStatement(java.lang.String)", "java.lang.Integer.intValue()"],
    "com.sapienter.jbilling.server.util.DTOFactory.getUserDTOEx(Integer)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.util.DTOFactory.getUserDTOEx(com.sapienter.jbilling.server.user.db.UserDTO)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)"],
    "com.sapienter.jbilling.server.user.permisson.db.PermissionDTO.initializeAuthority()": ["com.sapienter.jbilling.server.user.permisson.db.PermissionTypeDTO.getDescription()", "java.lang.String.trim()", "java.lang.String.toUpperCase()", "java.lang.String.replaceAll(java.lang.String,java.lang.String)", "com.sapienter.jbilling.server.user.permisson.db.PermissionDTO.getPermissionType()", "com.sapienter.jbilling.server.user.permisson.db.PermissionDTO.getId()"],
    "com.sapienter.jbilling.server.system.event.EventManager.process(Event)": ["org.apache.log4j.Category.debug(java.lang.Object)", "java.lang.Class.newInstance()", "java.util.Hashtable.get(java.lang.Object)", "org.apache.log4j.Category.info(java.lang.Object)", "java.lang.Object.getClass()", "com.sapienter.jbilling.server.system.event.EventProcessor.process(com.sapienter.jbilling.server.system.event.Event)", "com.sapienter.jbilling.server.system.event.InternalEventProcessor.process(com.sapienter.jbilling.server.system.event.Event)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.updateCompany(CompanyWS)": ["com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerCompanyId()", "com.sapienter.jbilling.server.user.EntityBL.updateEntityAndContact(com.sapienter.jbilling.server.user.CompanyWS,java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerId()"],
    "com.sapienter.jbilling.server.mediation.task.MediationResult.addLine(Integer, BigDecimal)": ["com.sapienter.jbilling.server.order.db.OrderLineDTO.setQuantity(java.math.BigDecimal)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setItemId(java.lang.Integer)", "java.util.List.add(java.lang.Object)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setDefaults()"],
    "com.sapienter.jbilling.server.item.CurrencyBL.set(Integer)": ["com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)"],
    "com.sapienter.jbilling.common.JBCrypto.loadCreditCardCrypto()": ["java.lang.Boolean.parseBoolean(java.lang.String)", "com.sapienter.jbilling.common.Util.getSysProp(java.lang.String)", "org.apache.log4j.Logger.getLogger(java.lang.Class)", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)", "java.lang.String.length()"],
    "com.sapienter.jbilling.server.payment.PaymentBL.removeInvoiceLink(Integer)": ["com.sapienter.jbilling.server.payment.db.PaymentInvoiceMapDTO.getPayment()", "com.sapienter.jbilling.server.payment.db.PaymentInvoiceMapDTO.getInvoiceEntity()", "com.sapienter.jbilling.server.user.db.UserDTO.getEntity()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.setBalance(java.math.BigDecimal)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getBalance()", "java.math.BigDecimal.compareTo(java.math.BigDecimal)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.setToProcess(java.lang.Integer)", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getBaseUser()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setBalance(java.math.BigDecimal)", "com.sapienter.jbilling.server.payment.db.PaymentInvoiceMapDTO.getAmount()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getBalance()", "com.sapienter.jbilling.server.util.db.AbstractDAS.delete(java.lang.Object)", "java.math.BigDecimal.add(java.math.BigDecimal)", "com.sapienter.jbilling.server.user.db.UserDTO.getId()", "com.sapienter.jbilling.server.util.audit.EventLogger.info(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String)", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getBaseUser()"],
    "com.sapienter.jbilling.server.user.partner.PartnerBL.getLastPayout(Integer)": ["java.sql.Connection.prepareStatement(java.lang.String)", "org.apache.log4j.Category.debug(java.lang.Object)", "java.sql.ResultSet.next()", "java.sql.PreparedStatement.setInt(int,int)", "java.sql.Statement.close()", "java.sql.Connection.close()", "java.sql.ResultSet.getInt(int)", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "java.sql.PreparedStatement.executeQuery()", "java.lang.Integer.intValue()", "java.sql.ResultSet.close()", "javax.sql.DataSource.getConnection()"],
    "com.sapienter.jbilling.server.invoice.InvoiceBL.getLastByUserAndItemType(Integer, Integer)": ["java.sql.ResultSet.wasNull()", "java.sql.ResultSet.next()", "java.sql.Connection.close()", "javax.sql.RowSet.setInt(int,int)", "java.sql.ResultSet.getInt(int)", "com.sapienter.jbilling.server.list.ResultList.execute()", "com.sapienter.jbilling.server.list.ResultList.prepareStatement(java.lang.String)", "java.lang.Integer.intValue()", "java.sql.ResultSet.close()"],
    "com.sapienter.jbilling.server.mediation.task.SaveToFileMediationErrorHandler.getFileName(Date)": ["java.util.Map.get(java.lang.Object)", "java.lang.Boolean.equals(java.lang.Object)", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription.getName()", "java.lang.Boolean.valueOf(java.lang.String)", "java.text.DateFormat.format(java.util.Date)"],
    "com.sapienter.jbilling.server.provisioning.task.MMSCProvisioningTask.sendRequest(String, String)": ["com.sapienter.jbilling.server.provisioning.task.MMSCProvisioningTask.sendCommand(java.lang.String,java.lang.String)", "com.sapienter.jbilling.server.provisioning.task.MMSCProvisioningTask.parseResponse(com.sapienter.jbilling.server.provisioning.task.mmsc.MmscFacadeHandlerResponse)"],
    "com.sapienter.jbilling.server.pluggableTask.PaymentTaskWithTimeout.initializeParamters(PluggableTaskDTO)": ["com.sapienter.jbilling.server.pluggableTask.PluggableTask.initializeParamters(com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDTO)", "com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase.getOptionalParameter(java.lang.String,java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentPaypalExternalTask.process(PaymentDTOEx)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.payment.tasks.PaymentPaypalExternalTask.prepareExternalPayment(com.sapienter.jbilling.server.payment.PaymentDTOEx)", "com.sapienter.jbilling.server.payment.tasks.PaymentPaypalExternalTask.getProcessorName()", "com.sapienter.jbilling.server.payment.tasks.PaymentPaypalExternalTask.isApplicable(com.sapienter.jbilling.server.payment.PaymentDTOEx)", "com.sapienter.jbilling.server.payment.tasks.PaymentPaypalExternalTask.doProcess(com.sapienter.jbilling.server.payment.PaymentDTOEx,com.sapienter.jbilling.server.payment.tasks.paypal.dto.PaymentAction,boolean)", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getPayoutId()", "com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase$Result.shouldCallOtherProcessors()"],
    "com.sapienter.jbilling.server.user.partner.PartnerBL.applyPayout(PartnerPayout)": ["com.sapienter.jbilling.server.process.db.PeriodUnitDTO.getId()", "com.sapienter.jbilling.server.user.partner.db.Partner.getPeriodUnit()", "java.util.GregorianCalendar.add(int,int)", "com.sapienter.jbilling.server.user.partner.db.Partner.getPeriodValue()", "com.sapienter.jbilling.server.user.partner.db.Partner.setNextPayoutDate(java.util.Date)", "com.sapienter.jbilling.server.util.MapPeriodToCalendar.map(java.lang.Integer)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getAmount()", "java.math.BigDecimal.subtract(java.math.BigDecimal)", "java.util.Calendar.setTime(java.util.Date)", "com.sapienter.jbilling.server.user.partner.db.Partner.getNextPayoutDate()", "com.sapienter.jbilling.server.user.partner.db.Partner.getBalance()", "com.sapienter.jbilling.server.user.partner.db.Partner.setBalance(java.math.BigDecimal)", "com.sapienter.jbilling.server.user.partner.db.PartnerPayout.getPayment()", "java.math.BigDecimal.add(java.math.BigDecimal)", "com.sapienter.jbilling.server.user.partner.db.Partner.setTotalPayouts(java.math.BigDecimal)", "java.util.Calendar.getTime()", "com.sapienter.jbilling.server.user.partner.db.Partner.getTotalPayouts()"],
    "com.sapienter.jbilling.server.mediation.task.JDBCReader.recordRead(Record, int[])": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.mediation.Record.getFields()", "com.sapienter.jbilling.server.item.PricingField.getIntValue()", "com.sapienter.jbilling.server.mediation.task.AbstractJDBCReader.setLastId(java.lang.Integer)", "com.sapienter.jbilling.server.mediation.task.AbstractJDBCReader.getMarkMethod()", "java.util.List.get(int)", "com.sapienter.jbilling.server.mediation.task.JDBCReader.buildTimestampUpdateSql(com.sapienter.jbilling.server.mediation.Record,int[])"],
    "com.sapienter.jbilling.server.order.db.OrderDAS.findToActivateOrders()": ["org.hibernate.criterion.Expression.isNull(java.lang.String)", "org.hibernate.Criteria.list()", "org.hibernate.criterion.Restrictions.or()", "getSession()", "com.sapienter.jbilling.common.Util.truncateDate(java.util.Date)", "org.hibernate.Criteria.add()", "createCriteria(java.lang.Class)", "org.hibernate.criterion.Expression.gt(java.lang.String,java.util.Date)", "org.hibernate.criterion.Restrictions.eq(java.lang.String,int)", "org.hibernate.criterion.Expression.le(java.lang.String,java.util.Date)"],
    "com.sapienter.jbilling.server.pluggableTask.BasicEmailNotificationTask.init()": ["java.util.Map.get(java.lang.Object)", "java.lang.Integer.valueOf(java.lang.String)", "java.lang.String.trim()", "java.lang.Boolean.parseBoolean(java.lang.String)", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription.getName()", "com.sapienter.jbilling.common.Util.getSysProp(java.lang.String)", "java.lang.Integer.intValue()", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)", "java.lang.String.length()", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.String.valueOf(java.lang.Object)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getLastBillingProcess()": ["com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerCompanyId()", "com.sapienter.jbilling.server.process.IBillingProcessSessionBean.getLast(java.lang.Integer)", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)"],
    "com.sapienter.jbilling.server.notification.db.NotificationMessageSectionDAS.create(Integer)": ["com.sapienter.jbilling.server.notification.db.NotificationMessageSectionDTO.setSection(java.lang.Integer)", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)"],
    "com.sapienter.jbilling.server.mediation.task.AbstractJDBCReader.readLastId()": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.pluggableTask.PluggableTask.getEntityId()", "com.sapienter.jbilling.server.util.PreferenceBL.set(java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.util.PreferenceBL.getInt()"],
    "com.sapienter.jbilling.server.order.OrderLineBL.addLine(OrderDTO, OrderLineDTO, boolean)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.order.db.OrderDTO.getId()", "com.sapienter.jbilling.server.user.UserBL.getLanguage()", "com.sapienter.jbilling.server.order.db.OrderDTO.getLine(java.lang.Integer)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getQuantity()", "com.sapienter.jbilling.server.user.db.UserDTO.getEntity()", "java.util.List.add(java.lang.Object)", "com.sapienter.jbilling.server.user.UserBL.getEntity()", "com.sapienter.jbilling.server.order.OrderBL.checkOrderLineQuantities(java.util.List,java.util.List,java.lang.Integer,java.lang.Integer,boolean)", "com.sapienter.jbilling.server.order.db.OrderDTO.getCurrencyId()", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.order.OrderLineBL.addItem(java.lang.Integer,java.math.BigDecimal,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,com.sapienter.jbilling.server.order.db.OrderDTO,com.sapienter.jbilling.server.order.db.OrderLineDTO,boolean)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getItemId()", "com.sapienter.jbilling.server.order.db.OrderDTO.getUserId()"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.updateLineProvisioningStatus(Integer, Integer)": ["com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "com.sapienter.jbilling.server.provisioning.IProvisioningProcessSessionBean.updateProvisioningStatus(java.lang.Integer,java.lang.Integer)"],
    "com.sapienter.jbilling.server.mediation.MediationRecordBL.getWS(Collection)": ["java.util.List.add(java.lang.Object)", "java.util.Collection.size()", "com.sapienter.jbilling.server.mediation.MediationRecordBL.getWS(com.sapienter.jbilling.server.mediation.db.MediationRecordLineDTO)"],
    "com.sapienter.jbilling.server.payment.PaymentWS.setAmount(BigDecimal)": ["java.math.BigDecimal.toString()"],
    "com.sapienter.jbilling.server.user.UserSessionBean.createCreditCard(Integer, CreditCardDTO)": ["java.util.Set.add(java.lang.Object)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getId()", "com.sapienter.jbilling.server.user.CreditCardBL.getEntity()", "com.sapienter.jbilling.server.user.db.UserDTO.getCreditCards()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getBaseUsers()", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.user.CreditCardBL.create(com.sapienter.jbilling.server.user.db.CreditCardDTO)", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)"],
    "com.sapienter.jbilling.server.user.UserWS.setCreditLimitAsDecimal(BigDecimal)": ["com.sapienter.jbilling.server.user.UserWS.setCreditLimit(java.math.BigDecimal)"],
    "com.sapienter.jbilling.server.user.permisson.db.RoleDTO.toString()": ["com.sapienter.jbilling.server.user.permisson.db.RoleDTO.getAuthority()"],
    "com.sapienter.jbilling.server.order.OrderBL.getMainOrderId(Integer)": ["com.sapienter.jbilling.server.user.db.UserDTO.getCustomer()", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.user.db.CustomerDTO.getCurrentOrderId()"],
    "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDAS.create(CompanyDTO, Date, Integer)": ["com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.setNextRunDate(java.util.Date)", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.setGenerateReport(java.lang.Integer)", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.setEntity(com.sapienter.jbilling.server.user.db.CompanyDTO)"],
    "com.sapienter.jbilling.server.user.UserSessionBean.updateACH(Integer, Integer, AchDTO)": ["com.sapienter.jbilling.server.user.UserBL.updateAch(com.sapienter.jbilling.server.user.db.AchDTO,java.lang.Integer)"],
    "com.sapienter.jbilling.server.user.balance.DynamicBalanceManagerTask.process(Event)": ["com.sapienter.jbilling.server.user.balance.DynamicBalanceManagerTask.determineUserId(com.sapienter.jbilling.server.system.event.Event)", "com.sapienter.jbilling.server.user.balance.DynamicBalanceManagerTask.determineAmount(com.sapienter.jbilling.server.system.event.Event)", "com.sapienter.jbilling.server.user.balance.DynamicBalanceManagerTask.updateDynamicBalance(java.lang.Integer,java.lang.Integer,java.math.BigDecimal)", "com.sapienter.jbilling.server.system.event.Event.getEntityId()"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentsGatewayTask.callPG(String)": ["org.apache.log4j.Category.debug(java.lang.Object)", "javax.net.SocketFactory.createSocket(java.lang.String,int)", "javax.net.ssl.SSLSession.getCipherSuite()", "com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase.ensureGetParameter(java.lang.String)", "javax.net.ssl.SSLSocketFactory.getDefault()", "javax.net.ssl.SSLSocket.setEnabledCipherSuites(java.lang.String[])", "java.io.DataOutputStream.writeBytes(java.lang.String)", "java.net.Socket.getInputStream()", "java.lang.Integer.intValue()", "java.io.DataOutputStream.flush()", "java.lang.Integer.valueOf(java.lang.String)", "javax.net.ssl.SSLSocket.getSession()", "java.net.Socket.getOutputStream()", "java.security.Security.addProvider(java.security.Provider)", "com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase.getOptionalParameter(java.lang.String,java.lang.String)", "java.lang.String.equals(java.lang.Object)", "javax.net.ssl.SSLSocket.getSupportedCipherSuites()", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)"],
    "com.sapienter.jbilling.server.item.ItemBL.create(ItemDTO, Integer)": ["com.sapienter.jbilling.server.system.event.EventManager.process(com.sapienter.jbilling.server.system.event.Event)", "com.sapienter.jbilling.server.item.ItemBL.updateTypes(com.sapienter.jbilling.server.item.db.ItemDTO)", "com.sapienter.jbilling.server.item.db.ItemDTO.getEntityId()", "com.sapienter.jbilling.server.item.db.ItemDTO.getHasDecimals()", "com.sapienter.jbilling.server.item.ItemBL.updateExcludedTypes(com.sapienter.jbilling.server.item.db.ItemDTO)", "com.sapienter.jbilling.server.item.db.ItemDTO.getId()", "com.sapienter.jbilling.server.user.EntityBL.getEntity()", "com.sapienter.jbilling.server.item.db.ItemDTO.setHasDecimals(java.lang.Integer)", "com.sapienter.jbilling.server.util.db.AbstractDescription.setDescription(java.lang.String,java.lang.Integer)", "com.sapienter.jbilling.server.user.db.CompanyDTO.getLanguageId()", "com.sapienter.jbilling.server.util.db.AbstractDescription.getDescription()", "com.sapienter.jbilling.server.item.db.ItemDTO.setDeleted(java.lang.Integer)", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)", "com.sapienter.jbilling.server.item.ItemBL.updateCurrencies(com.sapienter.jbilling.server.item.db.ItemDTO)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.createPayment(PaymentWS)": ["com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.applyPayment(com.sapienter.jbilling.server.payment.PaymentWS,java.lang.Integer)"],
    "com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.deletePaymentProfile(CustomerProfileData)": ["com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.sendViaXML(java.lang.String)", "com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.buildDeleteCustomerPaymentProfileRequest(com.sapienter.jbilling.server.payment.tasks.CustomerProfileData)", "com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.parseSimpleResponse(java.lang.String,java.lang.String)"],
    "com.sapienter.jbilling.server.process.db.ProcessRunStatusDTO.toString()": ["java.lang.StringBuilder.append(int)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.toString()", "com.sapienter.jbilling.server.util.db.AbstractGenericStatus.getId()", "com.sapienter.jbilling.server.util.db.AbstractDescription.getDescription()"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getAuthPaymentType(Integer)": ["com.sapienter.jbilling.server.user.IUserSessionBean.getAuthPaymentType(java.lang.Integer)", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentPaypalExternalTask.doPaymentWithoutStoredCreditCard(PaymentDTOEx, PaymentAction, boolean)": ["com.sapienter.jbilling.server.payment.tasks.paypal.PaypalApi.doDirectPayment(com.sapienter.jbilling.server.payment.tasks.paypal.dto.PaymentAction,com.sapienter.jbilling.server.payment.tasks.paypal.dto.Payer,com.sapienter.jbilling.server.payment.tasks.paypal.dto.CreditCard,com.sapienter.jbilling.server.payment.tasks.paypal.dto.Payment)", "com.sapienter.jbilling.server.payment.tasks.PaymentPaypalExternalTask.convertCreditCard(com.sapienter.jbilling.server.payment.PaymentDTOEx)", "com.sapienter.jbilling.server.payment.tasks.PaymentPaypalExternalTask.formatDollarAmount(java.math.BigDecimal)", "com.sapienter.jbilling.server.payment.tasks.PaymentPaypalExternalTask.convertPayer(com.sapienter.jbilling.server.payment.PaymentDTOEx)", "com.sapienter.jbilling.server.payment.tasks.PaymentPaypalExternalTask.buildPaymentAuthorization(com.sapienter.jbilling.server.payment.tasks.paypal.dto.PaypalResult)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setPaymentResult(com.sapienter.jbilling.server.payment.db.PaymentResultDTO)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)", "com.sapienter.jbilling.server.payment.tasks.PaymentPaypalExternalTask.getApi()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getAmount()", "com.sapienter.jbilling.server.payment.tasks.PaymentPaypalExternalTask.storePaypalResult(com.sapienter.jbilling.server.payment.tasks.paypal.dto.PaypalResult,com.sapienter.jbilling.server.payment.PaymentDTOEx,com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO,boolean)"],
    "com.sapienter.jbilling.common.Util.parseDate(Date)": ["java.util.Calendar.setTime(java.util.Date)", "java.util.Calendar.get(int)"],
    "com.sapienter.jbilling.server.order.db.OrderDTO.getUserId()": ["com.sapienter.jbilling.server.user.db.UserDTO.getId()", "com.sapienter.jbilling.server.order.db.OrderDTO.getBaseUserByUserId()"],
    "com.sapienter.jbilling.server.item.ItemBL.getPrice(Integer, Integer, BigDecimal, Integer)": ["com.sapienter.jbilling.server.item.ItemBL.getPrice(java.lang.Integer,java.lang.Integer,java.math.BigDecimal,java.lang.Integer,com.sapienter.jbilling.server.order.db.OrderDTO)"],
    "com.sapienter.jbilling.server.order.db.OrderPeriodDTO.touch()": ["com.sapienter.jbilling.server.order.db.OrderPeriodDTO.getUnitId()"],
    "com.sapienter.jbilling.server.system.event.task.InternalEventsRulesTask.getLog()": ["org.apache.log4j.Logger.getLogger(java.lang.Class)"],
    "com.sapienter.jbilling.server.order.task.RefundOnCancelTask.process(Event)": ["com.sapienter.jbilling.server.order.db.OrderDTO.setIsCurrent(java.lang.Integer)", "com.sapienter.jbilling.server.order.db.OrderDTO.getNotes()", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.user.UserBL.getEntity()", "com.sapienter.jbilling.server.system.event.Event.getEntityId()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setQuantity(java.lang.Integer)", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.user.db.UserDTO.getLanguageIdField()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setDeleted(int)", "com.sapienter.jbilling.server.order.db.OrderDTO.setId(java.lang.Integer)", "com.sapienter.jbilling.server.util.audit.EventLogger.auditBySystem(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.util.Date)", "com.sapienter.jbilling.server.order.db.OrderDTO.setVersionNum(java.lang.Integer)", "com.sapienter.jbilling.server.order.event.NewQuantityEvent.getOldQuantity()", "com.sapienter.jbilling.server.order.db.OrderDTO.getId()", "com.sapienter.jbilling.server.order.event.NewQuantityEvent.getNewQuantity()", "java.util.Map.get(java.lang.Object)", "java.util.ResourceBundle.getBundle(java.lang.String,java.util.Locale)", "com.sapienter.jbilling.server.order.db.OrderDTO.setActiveSince(java.util.Date)", "java.util.Set.clear()", "java.lang.String.startsWith(java.lang.String)", "org.apache.log4j.Category.warn(java.lang.Object)", "com.sapienter.jbilling.server.util.db.AbstractDescription.getDescription(java.lang.Integer)", "com.sapienter.jbilling.server.order.OrderBL.recalculate(java.lang.Integer)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setId(int)", "com.sapienter.jbilling.server.order.db.OrderDTO.getOrderProcesses()", "com.sapienter.jbilling.server.order.db.OrderDTO.getActiveUntil()", "com.sapienter.jbilling.server.order.db.OrderDTO.setActiveUntil(java.util.Date)", "com.sapienter.jbilling.server.item.ItemBL.getPrice(java.lang.Integer,java.math.BigDecimal,java.lang.Integer)", "com.sapienter.jbilling.server.user.db.UserDTO.getUserId()", "java.math.BigDecimal.negate()", "com.sapienter.jbilling.server.util.db.AbstractGenericStatusDAS.find(java.io.Serializable)", "org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.order.OrderBL.isDateInvoiced(java.util.Date)", "com.sapienter.jbilling.server.order.db.OrderDTO.setNotesInInvoice(java.lang.Integer)", "com.sapienter.jbilling.server.util.db.AbstractDAS.findNow(java.io.Serializable)", "com.sapienter.jbilling.server.order.db.OrderDTO.setNotes(java.lang.String)", "java.util.List.add(java.lang.Object)", "java.util.ResourceBundle.getString(java.lang.String)", "java.math.BigDecimal.compareTo(java.math.BigDecimal)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setDescription(java.lang.String)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setOrderLineType(com.sapienter.jbilling.server.order.db.OrderLineTypeDTO)", "com.sapienter.jbilling.server.order.db.OrderDTO.setOrderStatus(com.sapienter.jbilling.server.order.db.OrderStatusDTO)", "com.sapienter.jbilling.server.item.db.ItemDTO.getEntity()", "com.sapienter.jbilling.server.user.UserBL.getLocale()", "com.sapienter.jbilling.server.order.db.OrderDTO.getBaseUserByUserId()", "com.sapienter.jbilling.server.order.db.OrderDTO.setNextBillableDay(java.util.Date)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setQuantity(java.math.BigDecimal)", "com.sapienter.jbilling.server.order.event.NewQuantityEvent.getOrderLine()", "java.util.List.clear()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getQuantity()", "java.util.Map.keySet()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setItem(com.sapienter.jbilling.server.item.db.ItemDTO)", "com.sapienter.jbilling.server.order.event.PeriodCancelledEvent.getOrder()", "java.math.BigDecimal.subtract(java.math.BigDecimal)", "com.sapienter.jbilling.server.order.OrderBL.create(java.lang.Integer,java.lang.Integer,com.sapienter.jbilling.server.order.db.OrderDTO)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setVersionNum(java.lang.Integer)", "com.sapienter.jbilling.server.order.db.OrderDTO.getLines()", "com.sapienter.jbilling.server.order.db.OrderDTO.getNextBillableDay()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setPurchaseOrder(com.sapienter.jbilling.server.order.db.OrderDTO)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setPrice(java.math.BigDecimal)", "com.sapienter.jbilling.server.order.event.NewQuantityEvent.getOrderId()", "org.apache.log4j.Category.error(java.lang.Object)", "java.lang.Integer.parseInt(java.lang.String)"],
    "com.sapienter.jbilling.server.user.partner.PartnerBL.calculatePayoutDates()": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.user.partner.db.PartnerPayout.getEndingDate()", "com.sapienter.jbilling.server.process.db.PeriodUnitDTO.getId()", "com.sapienter.jbilling.server.user.partner.db.Partner.getPeriodUnit()", "com.sapienter.jbilling.server.user.partner.PartnerBL.getLastPayout(java.lang.Integer)", "java.util.GregorianCalendar.add(int,int)", "com.sapienter.jbilling.server.user.partner.db.Partner.getPeriodValue()", "com.sapienter.jbilling.server.user.partner.db.Partner.getUser()", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.user.db.UserDTO.getCreateDatetime()", "com.sapienter.jbilling.server.user.partner.db.Partner.getId()", "com.sapienter.jbilling.server.util.MapPeriodToCalendar.map(java.lang.Integer)", "java.lang.Integer.intValue()", "java.util.Calendar.setTime(java.util.Date)", "java.util.Calendar.getTime()"],
    "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDAS.findByEntityType(Integer, Integer)": ["org.hibernate.Criteria.list()", "createAlias(java.lang.String,java.lang.String)", "org.hibernate.criterion.Restrictions.eq(java.lang.String,java.lang.Integer)", "getSession()", "add()", "createCriteria(java.lang.Class)"],
    "com.sapienter.jbilling.server.billing.task.BillingProcessTask.getTrigger()": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.process.task.AbstractBackwardSimpleScheduledTask.setTriggerFromProperties(org.quartz.SimpleTrigger)", "com.sapienter.jbilling.server.process.task.AbstractBackwardSimpleScheduledTask.useProperties()", "com.sapienter.jbilling.server.process.task.AbstractSimpleScheduledTask.getTrigger()"],
    "com.sapienter.jbilling.server.process.task.BasicAgeingTask.ageUser(Set, UserDTO, Date, Integer)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.util.audit.EventLogger.warning(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String)", "java.lang.Integer.equals(java.lang.Object)", "org.apache.log4j.Category.warn(java.lang.Object)", "com.sapienter.jbilling.server.user.db.UserDTO.getEntity()", "com.sapienter.jbilling.server.user.db.UserDTO.getStatus()", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.process.task.BasicAgeingTask.getNextAgeingStep(java.util.Set,java.lang.Integer)", "com.sapienter.jbilling.server.process.task.BasicAgeingTask.getStatusDescription(com.sapienter.jbilling.server.user.db.UserStatusDTO)", "com.sapienter.jbilling.server.process.task.BasicAgeingTask.setUserStatus(com.sapienter.jbilling.server.user.db.UserDTO,com.sapienter.jbilling.server.user.db.UserStatusDTO,java.util.Date,java.lang.Integer)", "com.sapienter.jbilling.server.user.db.UserDTO.getId()", "com.sapienter.jbilling.server.util.db.AbstractGenericStatus.getId()", "com.sapienter.jbilling.server.process.task.BasicAgeingTask.isAgeingRequired(com.sapienter.jbilling.server.user.db.UserDTO,com.sapienter.jbilling.server.process.db.AgeingEntityStepDTO,java.util.Date)", "com.sapienter.jbilling.server.process.db.AgeingEntityStepDAS.findStep(java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.user.db.UserDTO.getUserId()"],
    "com.sapienter.jbilling.server.user.partner.db.Partner.getUser()": ["com.sapienter.jbilling.server.user.partner.db.Partner.getBaseUser()"],
    "com.sapienter.jbilling.server.provisioning.task.CAIProvisioningTask.removeValueIndex(StringBuilder, String)": ["java.lang.StringBuilder.indexOf(java.lang.String)"],
    "com.sapienter.jbilling.server.order.OrderBL.reviewNotifications(Date)": ["java.util.Calendar.getInstance()", "java.util.Calendar.add(int,int)", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "java.util.Calendar.clear()", "com.sapienter.jbilling.server.util.PreferenceBL.isNull()", "com.sapienter.jbilling.server.user.ContactBL.set(java.lang.Integer)", "com.sapienter.jbilling.server.user.UserBL.getEntity()", "com.sapienter.jbilling.server.notification.NotificationBL.getOrderNotification(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.util.Date,java.util.Date,java.lang.Integer,java.math.BigDecimal,java.lang.Integer)", "java.lang.Integer.intValue()", "com.sapienter.jbilling.server.util.PreferenceBL.getInt()", "org.springframework.jdbc.support.rowset.SqlRowSet.getDate(int)", "java.util.Date.compareTo(java.util.Date)", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.user.db.UserDTO.getLanguageIdField()", "com.sapienter.jbilling.server.util.PreferenceBL.set(java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.order.OrderBL.set(java.lang.Integer)", "com.sapienter.jbilling.server.order.db.OrderDTO.getBaseUserByUserId()", "org.springframework.jdbc.core.JdbcTemplate.queryForRowSet(java.lang.String,java.lang.Object[])", "com.sapienter.jbilling.server.order.db.OrderDTO.setNotify(java.lang.Integer)", "org.apache.log4j.Category.warn(java.lang.Object)", "org.springframework.jdbc.support.rowset.SqlRowSet.getInt(int)", "com.sapienter.jbilling.server.order.db.OrderDTO.setNotificationStep(java.lang.Integer)", "com.sapienter.jbilling.server.notification.INotificationSessionBean.notify(com.sapienter.jbilling.server.user.db.UserDTO,com.sapienter.jbilling.server.notification.MessageDTO)", "com.sapienter.jbilling.server.order.db.OrderDTO.getTotal()", "com.sapienter.jbilling.server.user.db.CompanyDAS.findEntities()", "java.util.Calendar.setTime(java.util.Date)", "com.sapienter.jbilling.server.order.db.OrderDTO.getCurrencyId()", "com.sapienter.jbilling.server.order.db.OrderDTO.setLastNotified(java.util.Date)", "com.sapienter.jbilling.server.order.db.OrderDTO.getActiveSince()", "com.sapienter.jbilling.server.order.db.OrderDTO.getActiveUntil()", "org.springframework.jdbc.support.rowset.SqlRowSet.next()", "com.sapienter.jbilling.server.user.db.UserDTO.getId()", "java.util.Date.getTime()", "java.util.Calendar.getTime()", "java.lang.Boolean.booleanValue()", "com.sapienter.jbilling.server.user.db.UserDTO.getUserId()"],
    "com.sapienter.jbilling.server.invoice.InvoiceBL.create(Integer, NewInvoiceDTO, BillingProcessDTO)": ["com.sapienter.jbilling.server.util.PreferenceBL.createUpdateForEntity(java.lang.Integer,java.lang.Integer,java.lang.String)", "com.sapienter.jbilling.server.invoice.NewInvoiceDTO.getInvoices()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getId()", "com.sapienter.jbilling.server.util.PreferenceBL.createUpdateForEntity(java.lang.Integer,java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.user.ContactBL.getDTO()", "com.sapienter.jbilling.common.Util.parseDate(java.lang.String)", "com.sapienter.jbilling.server.user.db.UserDTO.getCustomer()", "java.util.ResourceBundle.getString(java.lang.String)", "com.sapienter.jbilling.server.user.ContactBL.set(java.lang.Integer)", "java.util.Date.after(java.util.Date)", "com.sapienter.jbilling.server.user.UserBL.getEntity()", "com.sapienter.jbilling.server.user.UserBL.getEntityId(java.lang.Integer)", "java.lang.Integer.intValue()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getCustomerNotes()", "com.sapienter.jbilling.server.util.PreferenceBL.getInt()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getDueDate()", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.setInvoice(com.sapienter.jbilling.server.invoice.db.InvoiceDTO)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getBalance()", "com.sapienter.jbilling.server.user.EntityBL.getLocale()", "com.sapienter.jbilling.server.util.PreferenceBL.set(java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getTotal()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.setPublicNumber(java.lang.String)", "com.sapienter.jbilling.server.util.audit.EventLogger.auditBySystem(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.util.Date)", "com.sapienter.jbilling.server.user.db.CustomerDTO.getNotes()", "java.lang.String.length()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getPublicNumber()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.setCustomerNotes(java.lang.String)", "java.util.ResourceBundle.getBundle(java.lang.String,java.util.Locale)", "com.sapienter.jbilling.server.process.db.BillingProcessDTO.getEntity()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.setBalance(java.math.BigDecimal)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getIsReview()", "com.sapienter.jbilling.server.invoice.db.InvoiceDAS.create(java.lang.Integer,com.sapienter.jbilling.server.invoice.NewInvoiceDTO,com.sapienter.jbilling.server.process.db.BillingProcessDTO)", "com.sapienter.jbilling.common.Util.parseDate(java.util.Date)", "com.sapienter.jbilling.server.user.ContactBL.createForInvoice(com.sapienter.jbilling.server.user.ContactDTOEx,java.lang.Integer)", "com.sapienter.jbilling.server.util.PreferenceBL.getString()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.setTotal(java.math.BigDecimal)", "com.sapienter.jbilling.server.invoice.NewInvoiceDTO.setBillingDate(java.util.Date)", "java.math.BigDecimal.setScale(int,int)", "java.util.Date.before(java.util.Date)", "com.sapienter.jbilling.server.invoice.NewInvoiceDTO.getBillingDate()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.setDueDate(java.util.Date)"],
    "com.sapienter.jbilling.server.mediation.MediationConfigurationBL.getWS(List)": ["java.util.List.size()", "com.sapienter.jbilling.server.mediation.MediationConfigurationBL.getWS(com.sapienter.jbilling.server.mediation.db.MediationConfiguration)", "java.util.List.add(java.lang.Object)"],
    "com.sapienter.jbilling.server.process.task.BillableUsersBillingProcessFilterTask.findUsersToProcess(Integer, Date)": ["com.sapienter.jbilling.server.process.db.BillingProcessDAS.findBillableUsersToProcess(int,java.util.Date)"],
    "com.sapienter.jbilling.server.user.UserSessionBean.isPasswordExpired(Integer)": ["com.sapienter.jbilling.server.user.UserBL.isPasswordExpired()"],
    "com.sapienter.jbilling.tools.RulesGenerator.generateRules(String, String)": ["java.lang.String.lastIndexOf(java.lang.String)", "java.lang.String.substring(int,int)", "java.io.File.getParent()", "com.sapienter.jbilling.tools.RulesGenerator.generateRules(java.io.File,java.io.File,char,java.io.File)", "java.io.File.getName()"],
    "com.sapienter.jbilling.server.order.db.OrderDTO.setCurrencyId(Integer)": ["com.sapienter.jbilling.server.order.db.OrderDTO.setCurrency(com.sapienter.jbilling.server.util.db.CurrencyDTO)"],
    "com.sapienter.jbilling.server.invoice.InvoiceWS.setTotal(BigDecimal)": ["java.math.BigDecimal.toString()"],
    "com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.performTransaction(BigDecimal, CustomerProfileData, String, String)": ["com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.sendViaXML(java.lang.String)", "com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.parseCustomerProfileTransactionResponse(java.lang.String)", "com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.buildCustomerProfileTransactionRequest(java.math.BigDecimal,com.sapienter.jbilling.server.payment.tasks.CustomerProfileData,java.lang.String,java.lang.String)"],
    "com.sapienter.jbilling.server.order.event.NewQuantityEvent.toString()": ["com.sapienter.jbilling.server.order.event.NewQuantityEvent.getName()"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentAtlasTask.getData(PaymentDTOEx)": ["com.sapienter.jbilling.server.user.db.CreditCardDTO.getSecurityCode()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getName()", "com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase.ensureGetParameter(java.lang.String)", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription.getName()", "java.util.Map.put(java.lang.Object,java.lang.Object)", "com.sapienter.jbilling.server.user.CreditCardBL.get4digitExpiry(com.sapienter.jbilling.server.user.db.CreditCardDTO)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getId()", "java.math.BigDecimal.multiply(java.math.BigDecimal)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getAmount()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getNumber()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getUserId()", "java.math.BigDecimal.intValue()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getCreditCard()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getPaymentDate()", "java.lang.String.valueOf(java.lang.Object)"],
    "com.sapienter.jbilling.server.user.ContactBL.updatePrimaryForUser(ContactDTOEx, Integer)": ["com.sapienter.jbilling.server.user.ContactBL.update(com.sapienter.jbilling.server.user.ContactDTOEx)", "com.sapienter.jbilling.server.user.contact.db.ContactDAS.findPrimaryContact(java.lang.Integer)"],
    "com.sapienter.jbilling.server.user.db.AchDTO.setBankAccount(String)": ["java.lang.String.trim()", "com.sapienter.jbilling.common.JBCrypto.getCreditCardCrypto()", "java.lang.String.equals(java.lang.Object)", "com.sapienter.jbilling.common.JBCrypto.encrypt(java.lang.String)", "com.sapienter.jbilling.server.user.db.AchDTO.setRawBankAccount(java.lang.String)"],
    "com.sapienter.jbilling.server.order.db.OrderLineDTO.setDefaults()": ["com.sapienter.jbilling.server.order.db.OrderLineDTO.getCreateDatetime()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setCreateDatetime(java.util.Date)", "java.util.Calendar.getInstance()", "java.util.Calendar.getTime()"],
    "com.sapienter.jbilling.server.mediation.task.JDBCUtils.getAllTableNames(Connection)": ["java.sql.ResultSet.next()", "java.sql.Connection.getMetaData()", "java.util.List.add(java.lang.Object)", "java.sql.DatabaseMetaData.getTables(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])", "java.sql.ResultSet.getString(int)", "java.sql.ResultSet.close()"],
    "com.sapienter.jbilling.server.process.BusinessDays.isEqual(Date, Date)": ["org.joda.time.DateMidnight.equals(org.joda.time.DateMidnight)"],
    "com.sapienter.jbilling.server.mediation.db.MediationConfigurationDAS.findAllByEntity(Integer)": ["org.hibernate.Query.list()", "getSession()", "org.hibernate.Query.setParameter(java.lang.String,java.lang.Integer)", "createQuery(java.lang.String)"],
    "com.sapienter.jbilling.server.user.db.CreditCardDTO.setExpiry(Date)": ["com.sapienter.jbilling.server.user.db.CreditCardDTO.setCcExpiry(java.util.Date)"],
    "com.sapienter.jbilling.server.item.ItemSessionBean.getType(Integer)": ["com.sapienter.jbilling.server.item.db.ItemTypeDTO.getDescription()", "com.sapienter.jbilling.server.item.db.ItemTypeDTO.setDescription(java.lang.String)", "com.sapienter.jbilling.server.item.db.ItemTypeDTO.getOrderLineTypeId()", "com.sapienter.jbilling.server.item.db.ItemTypeDTO.getEntity()", "com.sapienter.jbilling.server.item.db.ItemTypeDTO.getId()", "com.sapienter.jbilling.server.item.db.ItemTypeDTO.setEntity(com.sapienter.jbilling.server.user.db.CompanyDTO)", "com.sapienter.jbilling.server.item.db.ItemTypeDTO.setOrderLineTypeId(int)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.item.db.ItemTypeDTO.setId(int)"],
    "com.sapienter.jbilling.server.process.BillingProcessBL.findUserId(OrderDTO)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.order.db.OrderDTO.getUser()", "com.sapienter.jbilling.server.user.db.CustomerDTO.getInvoiceChild()", "com.sapienter.jbilling.server.user.db.CustomerDTO.getBaseUser()", "com.sapienter.jbilling.server.user.db.UserDTO.getCustomer()", "com.sapienter.jbilling.server.user.db.CustomerDTO.getParent()", "com.sapienter.jbilling.server.user.db.UserDTO.getUserId()"],
    "com.sapienter.jbilling.server.user.partner.db.PartnerPayout.getTotal()": ["com.sapienter.jbilling.server.user.partner.db.PartnerPayout.getPayment()", "com.sapienter.jbilling.server.user.partner.db.PartnerPayout.getBalanceLeft()", "java.math.BigDecimal.add(java.math.BigDecimal)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getAmount()"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentSageTask.isAch(PaymentDTOEx)": ["com.sapienter.jbilling.server.payment.PaymentDTOEx.getAch()"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.deletePlugin(Integer)": ["com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskBL.delete(java.lang.Integer)", "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerId()"],
    "com.sapienter.jbilling.server.user.ContactBL.init()": ["com.sapienter.jbilling.server.util.audit.EventLogger.getInstance()", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)"],
    "com.sapienter.jbilling.server.notification.barcode.BarcodeFactory.datamatrix(TextPlacement)": ["org.krysalis.barcode4j.impl.datamatrix.DataMatrixBean.setMsgPosition(org.krysalis.barcode4j.HumanReadablePlacement)", "com.sapienter.jbilling.server.notification.barcode.BarcodeFactory.getPlacement(com.sapienter.jbilling.server.notification.barcode.TextPlacement)"],
    "com.sapienter.jbilling.server.order.db.OrderDTO.getLine(Integer)": ["com.sapienter.jbilling.server.order.db.OrderLineDTO.getDeleted()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getItem()", "com.sapienter.jbilling.server.item.db.ItemDTO.getId()"],
    "com.sapienter.jbilling.server.payment.PaymentWS.setAmountAsDecimal(BigDecimal)": ["com.sapienter.jbilling.server.payment.PaymentWS.setAmount(java.math.BigDecimal)"],
    "com.sapienter.jbilling.server.invoice.InvoiceBL.update(NewInvoiceDTO)": ["com.sapienter.jbilling.server.invoice.InvoiceBL.createLines(com.sapienter.jbilling.server.invoice.NewInvoiceDTO)", "com.sapienter.jbilling.server.invoice.InvoiceBL.calculateTotal()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getBalance()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getTotal()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.setBalance(java.math.BigDecimal)", "com.sapienter.jbilling.server.invoice.NewInvoiceDTO.calculateTotal()", "java.math.BigDecimal.add(java.math.BigDecimal)", "java.math.BigDecimal.compareTo(java.math.BigDecimal)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.setTotal(java.math.BigDecimal)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.setToProcess(java.lang.Integer)"],
    "com.sapienter.jbilling.server.order.task.RulesItemManager2.processRules(OrderDTO, Integer)": ["com.sapienter.jbilling.server.util.DTOFactory.getUserDTOEx(java.lang.Integer)", "java.util.Hashtable.values()", "com.sapienter.jbilling.server.order.db.OrderDTO.setCreateDate(java.util.Date)", "com.sapienter.jbilling.server.user.ContactBL.getDTO()", "java.util.List.add(java.lang.Object)", "com.sapienter.jbilling.server.order.db.OrderDTO.getCurrency()", "com.sapienter.jbilling.server.user.ContactBL.set(java.lang.Integer)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.order.db.OrderDTO.getCreateDate()", "com.sapienter.jbilling.server.order.db.OrderDTO.setCurrency(com.sapienter.jbilling.server.util.db.CurrencyDTO)", "com.sapienter.jbilling.server.order.db.OrderDTO.getPricingFields()", "com.sapienter.jbilling.server.user.ContactDTOEx.getFieldsTable()", "com.sapienter.jbilling.server.util.db.CurrencyDTO.getId()", "com.sapienter.jbilling.server.rule.RulesBaseTask.executeRules()"],
    "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskTypeDTO.toString()": ["com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskTypeDTO.getMinParameters()", "java.lang.StringBuffer.append(char)", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskTypeDTO.getPk()", "java.lang.StringBuffer.toString()", "java.lang.Object.getClass()", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskTypeDTO.getClassName()", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskTypeDTO.getCategory()", "java.lang.Class.getName()", "java.lang.StringBuffer.append(java.lang.String)"],
    "com.sapienter.jbilling.server.rule.task.test.Product.getItemId()": ["com.sapienter.jbilling.server.rule.task.test.Product.getItem()", "com.sapienter.jbilling.server.item.db.ItemDTO.getId()"],
    "com.sapienter.jbilling.server.user.ContactBL.append(ContactDTOEx, Integer)": ["com.sapienter.jbilling.server.user.contact.db.ContactTypeDTO.getId()", "com.sapienter.jbilling.server.user.db.CompanyDTO.getContactTypes()", "com.sapienter.jbilling.server.user.ContactBL.set(java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.user.db.UserDTO.getEntity()", "com.sapienter.jbilling.server.user.UserBL.getEntity()", "com.sapienter.jbilling.server.user.ContactBL.createForUser(com.sapienter.jbilling.server.user.ContactDTOEx,java.lang.Integer,java.lang.Integer)"],
    "com.sapienter.jbilling.server.payment.blacklist.UserIdFilter.checkPayment(PaymentDTOEx)": ["com.sapienter.jbilling.server.payment.PaymentDTOEx.getUserId()", "com.sapienter.jbilling.server.payment.blacklist.UserIdFilter.checkUser(java.lang.Integer)"],
    "com.sapienter.jbilling.server.provisioning.task.MMSCProvisioningTask.getParameters(String, String)": ["java.util.Map.get(java.lang.Object)", "java.util.Map.putAll(java.util.Map)", "com.sapienter.jbilling.server.provisioning.task.MMSCProvisioningTask.parseCommand(java.lang.String)", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription.getName()", "java.util.Map.put(java.lang.Object,java.lang.Object)"],
    "com.sapienter.jbilling.server.payment.blacklist.BlacklistBL.isBlacklistEnabled(Integer)": ["com.sapienter.jbilling.server.payment.blacklist.BlacklistBL.getBlacklistPluginId(java.lang.Integer)"],
    "com.sapienter.jbilling.server.process.BillingProcessBL.addRuntimeStatistic(Integer, Integer, BillingProcessRunDTOEx)": ["com.sapienter.jbilling.server.process.db.ProcessRunTotalDTO.setTotalPaid(java.math.BigDecimal)", "com.sapienter.jbilling.server.process.BillingProcessRunTotalDTOEx.setPmTotals(java.util.Hashtable)", "com.sapienter.jbilling.server.process.db.BillingProcessDAS.getSuccessfulProcessCurrencyMethodAndSum(java.lang.Integer)", "com.sapienter.jbilling.server.process.db.BillingProcessDAS.getCountAndSum(java.lang.Integer)", "com.sapienter.jbilling.server.process.db.ProcessRunTotalDTO.setProcessRun(com.sapienter.jbilling.server.process.db.ProcessRunDTO)", "java.util.List.add(java.lang.Object)", "java.util.Iterator.hasNext()", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.process.db.ProcessRunTotalDTO.getTotalPaid()", "com.sapienter.jbilling.server.process.db.ProcessRunTotalDTO.setId(int)", "java.lang.Long.intValue()", "com.sapienter.jbilling.server.process.db.ProcessRunDTO.setInvoicesGenerated(java.lang.Integer)", "com.sapienter.jbilling.server.process.db.ProcessRunTotalDTO.getCurrency()", "com.sapienter.jbilling.server.util.db.CurrencyDTO.getId()", "com.sapienter.jbilling.server.process.db.ProcessRunDTO.getInvoicesGenerated()", "com.sapienter.jbilling.server.process.db.ProcessRunTotalDTO.setTotalNotPaid(java.math.BigDecimal)", "com.sapienter.jbilling.server.process.db.ProcessRunTotalDTO.setCurrency(com.sapienter.jbilling.server.util.db.CurrencyDTO)", "com.sapienter.jbilling.server.process.db.BillingProcessDAS.getFailedProcessCurrencyAndSum(java.lang.Integer)", "com.sapienter.jbilling.server.process.BillingProcessRunTotalDTOEx.setCurrencyName(java.lang.String)", "java.util.Iterator.next()", "java.lang.Object.equals(java.lang.Object)", "com.sapienter.jbilling.server.util.db.AbstractDescription.getDescription(java.lang.Integer)", "com.sapienter.jbilling.server.process.BillingProcessRunDTOEx.getTotals()", "java.util.Hashtable.put(java.lang.Object,java.lang.Object)", "com.sapienter.jbilling.server.process.db.ProcessRunTotalDTO.getTotalNotPaid()", "java.math.BigDecimal.add(java.math.BigDecimal)", "com.sapienter.jbilling.server.process.db.ProcessRunTotalDTO.setTotalInvoiced(java.math.BigDecimal)"],
    "com.sapienter.jbilling.server.user.UserSessionBean.getCurrency(Integer)": ["com.sapienter.jbilling.server.user.db.UserDTO.getCurrency()", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)"],
    "com.sapienter.jbilling.server.provisioning.task.TestMMSCCommunication.pause(long)": ["org.apache.log4j.Category.debug(java.lang.Object)", "java.lang.Thread.sleep(long)"],
    "com.sapienter.jbilling.server.order.db.OrderLineDTO.toString()": ["com.sapienter.jbilling.server.order.db.OrderDTO.getId()", "com.sapienter.jbilling.server.item.db.ItemDTO.getId()", "com.sapienter.jbilling.server.order.db.OrderLineTypeDTO.getId()"],
    "com.sapienter.jbilling.server.user.UserDTOEx.isGranted(Integer, Integer)": ["java.util.Collections.binarySearch(java.util.List,java.lang.Object,java.util.Comparator)", "java.util.Collections.sort(java.util.List,java.util.Comparator)", "java.util.List.addAll(java.util.Collection)"],
    "com.sapienter.jbilling.server.util.Util.stringToBinary(String)": ["java.lang.String.substring(int,int)", "java.lang.Integer.parseInt(java.lang.String,int)", "java.lang.String.length()"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.createOrder(OrderWS)": ["com.sapienter.jbilling.server.order.OrderWS.getId()", "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.doCreateOrder(com.sapienter.jbilling.server.order.OrderWS,boolean)"],
    "com.sapienter.jbilling.server.user.UserSessionBean.setPrimaryContact(ContactDTOEx, Integer)": ["com.sapienter.jbilling.server.user.ContactBL.updatePrimaryForUser(com.sapienter.jbilling.server.user.ContactDTOEx,java.lang.Integer)"],
    "com.sapienter.jbilling.server.invoice.db.InvoiceDAS.findWithBalanceByUser(UserDTO)": ["org.hibernate.Criteria.list()", "org.hibernate.criterion.Restrictions.ne(java.lang.String,java.math.BigDecimal)", "getSession()", "org.hibernate.Criteria.add()", "createCriteria(java.lang.Class)", "org.hibernate.criterion.Restrictions.eq(java.lang.String,int)", "org.hibernate.criterion.Restrictions.eq(java.lang.String,com.sapienter.jbilling.server.user.db.UserDTO)"],
    "com.sapienter.jbilling.server.pluggableTask.PaymentFakeTask.createAuthorizationDTO(boolean, String)": ["com.sapienter.jbilling.server.pluggableTask.PaymentFakeTask.getFakeProcessorName()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.setTransactionId(java.lang.String)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.setCode1(java.lang.String)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.setResponseMessage(java.lang.String)", "com.sapienter.jbilling.server.pluggableTask.PaymentFakeTask.getFakeCode1()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.setProcessor(java.lang.String)"],
    "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskManager.getInstance(String, String, PluggableTaskDTO)": ["com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskManager.getInstance(java.lang.String,java.lang.String)", "com.sapienter.jbilling.server.pluggableTask.PluggableTask.initializeParamters(com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDTO)"],
    "com.sapienter.jbilling.server.order.OrderBL.updatePeriods(Integer, OrderPeriodDTO[])": ["java.util.Set.add(java.lang.Object)", "com.sapienter.jbilling.server.util.db.AbstractDescription.setDescription(java.lang.String,java.lang.Integer)", "com.sapienter.jbilling.server.util.db.AbstractDescription.getDescription()", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)", "com.sapienter.jbilling.server.order.db.OrderPeriodDTO.getCompany()", "com.sapienter.jbilling.server.user.db.CompanyDTO.getOrderPeriods()"],
    "com.sapienter.jbilling.server.pluggableTask.PluggableTask.getParameter(String, String)": ["java.util.Map.get(java.lang.Object)", "org.apache.commons.lang.StringUtils.isNotBlank(java.lang.String)"],
    "com.sapienter.jbilling.server.pluggableTask.BasicPenaltyTask.calculatePenaltyFee(InvoiceDTO, ItemBL)": ["com.sapienter.jbilling.server.item.db.ItemDTO.getPercentage()", "com.sapienter.jbilling.server.user.db.UserDTO.getEntity()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getCurrency()", "java.math.BigDecimal.compareTo(java.math.BigDecimal)", "java.math.BigDecimal.multiply(java.math.BigDecimal)", "java.math.BigDecimal.divide(java.math.BigDecimal,int,int)", "com.sapienter.jbilling.server.item.ItemBL.getPrice(java.lang.Integer,java.lang.Integer,java.math.BigDecimal,java.lang.Integer)", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.user.UserBL.getBalance(java.lang.Integer)", "com.sapienter.jbilling.server.item.ItemBL.getEntity()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getUserId()", "com.sapienter.jbilling.server.user.db.UserDTO.getId()", "com.sapienter.jbilling.server.util.db.CurrencyDTO.getId()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getBaseUser()"],
    "com.sapienter.jbilling.server.invoice.db.InvoiceDAS.addItemCriteria(Criteria, Integer)": ["org.hibernate.criterion.Restrictions.eq(java.lang.String,java.lang.Integer)", "add()", "org.hibernate.Criteria.createAlias(java.lang.String,java.lang.String)"],
    "com.sapienter.jbilling.client.authentication.CompanyUserDetailsService.loadUserByUsername(String)": ["com.sapienter.jbilling.server.user.permisson.db.PermissionDTO.initializeAuthority()", "com.sapienter.jbilling.server.user.permisson.db.RoleDTO.initializeAuthority()", "java.lang.String.split(java.lang.String)", "com.sapienter.jbilling.server.user.db.UserDTO.getUserName()", "com.sapienter.jbilling.server.user.db.UserDTO.getLanguage()", "com.sapienter.jbilling.server.user.UserBL.getMainRole()", "com.sapienter.jbilling.server.user.db.UserDTO.getEntity()", "com.sapienter.jbilling.server.user.UserBL.getEntity()", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "java.util.Collection.isEmpty()", "com.sapienter.jbilling.server.user.UserBL.getLocale(com.sapienter.jbilling.server.user.db.UserDTO)", "com.sapienter.jbilling.server.util.db.CurrencyDTO.getId()", "com.sapienter.jbilling.server.user.db.UserDTO.isEnabled()", "java.util.Collection.add(com.sapienter.jbilling.server.user.permisson.db.RoleDTO)", "com.sapienter.jbilling.client.authentication.util.UsernameHelper.buildUsernameToken(java.lang.String,java.lang.Integer)", "com.sapienter.jbilling.server.user.db.UserDTO.getCurrency()", "com.sapienter.jbilling.server.user.UserBL.getPermissions()", "java.util.Collection.add(com.sapienter.jbilling.server.user.permisson.db.PermissionDTO)", "java.lang.Integer.valueOf(java.lang.String)", "com.sapienter.jbilling.server.user.db.UserDTO.getPassword()", "com.sapienter.jbilling.server.user.db.UserDTO.isAccountExpired()", "com.sapienter.jbilling.server.user.db.UserDTO.isAccountLocked()", "com.sapienter.jbilling.server.user.db.UserDTO.getRoles()", "com.sapienter.jbilling.server.util.db.LanguageDTO.getId()", "com.sapienter.jbilling.server.user.db.UserDTO.getId()", "com.sapienter.jbilling.server.user.db.UserDTO.isPasswordExpired()"],
    "com.sapienter.jbilling.server.invoice.InvoiceBL.getUserInvoicesByDate(Integer, Date, Date)": ["java.util.Calendar.setTime(java.util.Date)", "java.util.GregorianCalendar.add(int,int)", "java.util.List.size()", "java.util.Calendar.getTime()", "com.sapienter.jbilling.server.invoice.db.InvoiceDAS.findIdsByUserAndDate(java.lang.Integer,java.util.Date,java.util.Date)", "java.util.List.toArray(java.lang.Object[])"],
    "com.sapienter.jbilling.server.pluggableTask.BasicCompositionTask.getLocale(Integer)": ["com.sapienter.jbilling.server.user.UserBL.getLocale()"],
    "com.sapienter.jbilling.server.notification.barcode.BarcodeFactory.interleaved2of5(Checksum, boolean, TextPlacement)": ["com.sapienter.jbilling.server.notification.barcode.BarcodeFactory.getPlacement(com.sapienter.jbilling.server.notification.barcode.TextPlacement)", "org.krysalis.barcode4j.impl.int2of5.Interleaved2Of5Bean.setChecksumMode(org.krysalis.barcode4j.ChecksumMode)", "com.sapienter.jbilling.server.notification.barcode.BarcodeFactory.getChecksum(com.sapienter.jbilling.server.notification.barcode.Checksum)", "org.krysalis.barcode4j.impl.int2of5.Interleaved2Of5Bean.setMsgPosition(org.krysalis.barcode4j.HumanReadablePlacement)"],
    "com.sapienter.jbilling.server.process.event.InvoicesGeneratedEvent.toString()": ["java.util.Arrays.toString(java.lang.Object[])", "java.util.List.toArray()"],
    "com.sapienter.jbilling.server.user.UserBL.getByStatus(Integer, Integer, boolean)": ["java.sql.Connection.close()", "javax.sql.RowSet.setInt(int,int)", "com.sapienter.jbilling.server.list.ResultList.execute()", "com.sapienter.jbilling.server.list.ResultList.prepareStatement(java.lang.String)", "java.lang.Integer.intValue()"],
    "com.sapienter.jbilling.server.process.PeriodOfTime.getStart()": ["org.joda.time.DateMidnight.toDate()"],
    "com.sapienter.jbilling.server.util.CurrencyWS.setSysRate(BigDecimal)": ["java.math.BigDecimal.toString()"],
    "com.sapienter.jbilling.server.order.OrderBL.getOrdersByProcess(Integer)": ["java.sql.Connection.prepareStatement(java.lang.String)", "java.sql.ResultSet.next()", "java.sql.PreparedStatement.setInt(int,int)", "java.sql.Connection.close()", "java.sql.ResultSet.getInt(int)", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "java.util.List.add(java.lang.Object)", "java.sql.PreparedStatement.executeQuery()", "java.lang.Integer.intValue()", "java.sql.ResultSet.close()", "javax.sql.DataSource.getConnection()"],
    "com.sapienter.jbilling.server.payment.blacklist.CsvProcessor.createPhoneRecord(BlacklistDTO)": ["com.sapienter.jbilling.server.payment.blacklist.CsvProcessor.getInt(com.sapienter.jbilling.server.payment.blacklist.CsvProcessor$Column)", "com.sapienter.jbilling.server.payment.blacklist.CsvProcessor.checkForEmptyRecord(java.lang.String,com.sapienter.jbilling.server.payment.blacklist.CsvProcessor$Column[])", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.setDeleted(int)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.setPhoneNumber(java.lang.String)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.setPhoneCountryCode(java.lang.Integer)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.setPhoneAreaCode(java.lang.Integer)", "com.sapienter.jbilling.server.payment.blacklist.CsvProcessor.getString(com.sapienter.jbilling.server.payment.blacklist.CsvProcessor$Column)", "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDTO.setContact(com.sapienter.jbilling.server.user.contact.db.ContactDTO)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.setCreateDate(java.util.Date)"],
    "com.sapienter.jbilling.server.pluggableTask.BasicOrderPeriodTask.calculateEnd(OrderDTO, Date, int, Date)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.process.PeriodOfTime.getDaysInPeriod()", "com.sapienter.jbilling.server.order.db.OrderDTO.getStatusId()", "java.lang.Integer.equals(java.lang.Object)", "java.util.List.add(java.lang.Object)", "java.util.Date.after(java.util.Date)", "com.sapienter.jbilling.server.util.MapPeriodToCalendar.map(java.lang.Integer)", "com.sapienter.jbilling.server.order.db.OrderDTO.getOrderPeriod()", "java.lang.Integer.intValue()", "java.util.List.remove(java.lang.Object)", "com.sapienter.jbilling.server.order.db.OrderDTO.setOrderStatus(com.sapienter.jbilling.server.order.db.OrderStatusDTO)", "com.sapienter.jbilling.server.process.PeriodOfTime.getDaysInCycle()", "java.util.Date.compareTo(java.util.Date)", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.pluggableTask.BasicOrderPeriodTask.verifyEndOfMonthDay(com.sapienter.jbilling.server.order.db.OrderDTO,java.util.Date)", "com.sapienter.jbilling.server.user.db.UserDTO.getCompany()", "com.sapienter.jbilling.server.order.db.OrderDTO.getBaseUserByUserId()", "java.util.List.get(int)", "com.sapienter.jbilling.server.pluggableTask.BasicOrderPeriodTask.getViewLimit(com.sapienter.jbilling.server.order.db.OrderPeriodDTO,java.util.Date)", "com.sapienter.jbilling.server.order.db.OrderDTO.getId()", "com.sapienter.jbilling.server.util.audit.EventLogger.error(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String)", "java.util.List.clear()", "java.util.GregorianCalendar.add(int,int)", "com.sapienter.jbilling.server.order.db.OrderPeriodDTO.getValue()", "org.apache.log4j.Category.warn(java.lang.Object)", "com.sapienter.jbilling.server.process.PeriodOfTime.getStart()", "com.sapienter.jbilling.server.order.db.OrderPeriodDTO.getUnitId()", "java.lang.Integer.compareTo(java.lang.Integer)", "com.sapienter.jbilling.server.order.db.OrderPeriodDTO.getId()", "com.sapienter.jbilling.server.pluggableTask.BasicOrderPeriodTask.calculateStart(com.sapienter.jbilling.server.order.db.OrderDTO)", "java.util.Calendar.setTime(java.util.Date)", "com.sapienter.jbilling.server.order.db.OrderDTO.getActiveUntil()", "java.util.Date.before(java.util.Date)", "java.util.List.size()", "com.sapienter.jbilling.server.order.db.OrderDTO.getBillingTypeId()", "com.sapienter.jbilling.server.user.db.UserDTO.getId()", "java.util.Calendar.getTime()", "com.sapienter.jbilling.server.util.db.AbstractGenericStatusDAS.find(java.io.Serializable)"],
    "com.sapienter.jbilling.server.item.ItemDTOEx.getOwningEntityId()": ["com.sapienter.jbilling.server.item.ItemDTOEx.getEntityId()"],
    "com.sapienter.jbilling.server.process.BillingProcessBL.purgeReview(Integer, boolean)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.process.db.BillingProcessDTO.getId()", "com.sapienter.jbilling.server.util.audit.EventLogger.warning(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String)", "com.sapienter.jbilling.server.process.db.ProcessRunDTO.getId()", "java.util.Set.clear()", "java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.getId()", "com.sapienter.jbilling.server.process.ConfigurationBL.getEntity()", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.process.db.BillingProcessDTO.getProcessRuns()", "java.lang.Integer.intValue()", "com.sapienter.jbilling.server.process.BillingProcessBL.getHome()", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.getReviewStatus()", "com.sapienter.jbilling.server.process.db.ProcessRunUserDAS.removeProcessRunUsersForProcessRun(java.lang.Integer)", "com.sapienter.jbilling.server.process.db.BillingProcessDTO.getOrderProcesses()", "com.sapienter.jbilling.server.process.db.BillingProcessDAS.findReview(java.lang.Integer)", "com.sapienter.jbilling.server.util.db.AbstractDAS.delete(java.lang.Object)", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.getGenerateReport()"],
    "com.sapienter.jbilling.server.user.balance.DynamicBalanceManagerTask.determineUserId(Event)": ["com.sapienter.jbilling.server.payment.event.AbstractPaymentEvent.getPayment()", "com.sapienter.jbilling.server.payment.event.PaymentDeletedEvent.getPayment()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getBaseUser()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getUserId()", "com.sapienter.jbilling.server.order.event.OrderAddedOnInvoiceEvent.getOrder()", "com.sapienter.jbilling.server.order.event.OrderDeletedEvent.getOrder()", "com.sapienter.jbilling.server.user.db.UserDTO.getId()", "com.sapienter.jbilling.server.order.event.NewOrderEvent.getOrder()", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.order.event.NewQuantityEvent.getOrderId()", "com.sapienter.jbilling.server.order.db.OrderDTO.getBaseUserByUserId()", "org.apache.log4j.Category.error(java.lang.Object)"],
    "com.sapienter.jbilling.server.invoice.NewInvoiceDTO.addInvoice(InvoiceDTO)": ["java.util.Set.add(java.lang.Object)"],
    "com.sapienter.jbilling.server.process.db.ProcessRunUserDAS.removeProcessRunUsersForProcessRun(Integer)": ["org.hibernate.Query.executeUpdate()", "getSession()", "org.hibernate.Query.setParameter(java.lang.String,java.lang.Integer)", "java.lang.Class.getSimpleName()", "createQuery(java.lang.String)"],
    "com.sapienter.jbilling.server.user.AchBL.update(Integer, AchDTO)": ["com.sapienter.jbilling.server.user.db.AchDTO.setAbaRouting(java.lang.String)", "org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.system.event.EventManager.process(com.sapienter.jbilling.server.system.event.Event)", "com.sapienter.jbilling.server.user.db.AchDTO.setBankName(java.lang.String)", "com.sapienter.jbilling.server.user.db.AchDTO.getAbaRouting()", "com.sapienter.jbilling.server.user.db.AchDTO.getBaseUser()", "com.sapienter.jbilling.server.user.db.AchDTO.setAccountType(int)", "com.sapienter.jbilling.server.user.db.AchDTO.setBankAccount(java.lang.String)", "com.sapienter.jbilling.server.user.db.AchDTO.getId()", "com.sapienter.jbilling.server.user.db.AchDTO.setGatewayKey(java.lang.String)", "com.sapienter.jbilling.server.user.db.AchDTO.getBankAccount()", "com.sapienter.jbilling.server.user.db.AchDTO.getBankName()", "com.sapienter.jbilling.server.user.db.AchDTO.setAccountName(java.lang.String)", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.util.audit.EventLogger.audit(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.util.Date)", "com.sapienter.jbilling.server.user.db.UserDTO.getCompany()", "com.sapienter.jbilling.server.user.db.AchDTO.getAccountName()", "com.sapienter.jbilling.server.user.db.UserDTO.getId()", "com.sapienter.jbilling.server.user.db.AchDTO.getAccountType()", "com.sapienter.jbilling.server.user.db.AchDTO.getGatewayKey()"],
    "com.sapienter.jbilling.server.process.task.AbstractBackwardSimpleScheduledTask.useProperties()": ["java.util.Map.get(java.lang.Object)", "org.apache.commons.lang.StringUtils.isBlank(java.lang.String)", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription.getName()"],
    "com.sapienter.jbilling.server.item.ItemBL.getPrice(Integer, Integer, BigDecimal, Integer, OrderDTO)": ["com.sapienter.jbilling.server.item.ItemBL.getPriceByCurrency(com.sapienter.jbilling.server.item.db.ItemDTO,java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.util.db.CurrencyDTO.getSymbol()", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskManager.getNextClass()", "com.sapienter.jbilling.server.item.CurrencyBL.getEntity()", "com.sapienter.jbilling.server.item.tasks.IPricing.getPrice(java.lang.Integer,java.math.BigDecimal,java.lang.Integer,java.lang.Integer,java.util.List,java.math.BigDecimal,com.sapienter.jbilling.server.order.db.OrderDTO)", "com.sapienter.jbilling.server.item.db.ItemDTO.getId()"],
    "com.sapienter.jbilling.server.item.tasks.PricingManager.setPrice(double)": ["org.apache.log4j.Category.debug(java.lang.Object)"],
    "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDAS.findByEntityCategoryOrder(Integer, Integer, Integer)": ["org.hibernate.Query.setCacheable(boolean)", "org.hibernate.Query.uniqueResult()", "getSession()", "org.hibernate.Query.setComment(java.lang.String)", "org.hibernate.Query.setParameter(java.lang.String,java.lang.Integer)", "createQuery(java.lang.String)"],
    "com.sapienter.jbilling.server.order.OrderHelper.merge(OrderDTO, OrderDTO)": ["com.sapienter.jbilling.server.order.db.OrderDTO.getOrderBillingType()", "com.sapienter.jbilling.server.order.db.OrderDTO.setNotesInInvoice(java.lang.Integer)", "com.sapienter.jbilling.server.order.db.OrderDTO.setDueDateValue(java.lang.Integer)", "com.sapienter.jbilling.server.order.db.OrderDTO.setIsCurrent(java.lang.Integer)", "com.sapienter.jbilling.server.order.db.OrderDTO.setCreateDate(java.util.Date)", "com.sapienter.jbilling.server.order.db.OrderDTO.getNotes()", "com.sapienter.jbilling.server.order.db.OrderDTO.getAnticipatePeriods()", "com.sapienter.jbilling.server.order.db.OrderDTO.setNotes(java.lang.String)", "com.sapienter.jbilling.server.order.db.OrderDTO.getCycleStarts()", "com.sapienter.jbilling.server.order.db.OrderDTO.getOrderPeriod()", "com.sapienter.jbilling.server.order.db.OrderDTO.setBaseUserByUserId(com.sapienter.jbilling.server.user.db.UserDTO)", "com.sapienter.jbilling.server.order.db.OrderDTO.setOrderStatus(com.sapienter.jbilling.server.order.db.OrderStatusDTO)", "com.sapienter.jbilling.server.order.db.OrderDTO.setOwnInvoice(java.lang.Integer)", "com.sapienter.jbilling.server.order.db.OrderDTO.setCurrency(com.sapienter.jbilling.server.util.db.CurrencyDTO)", "com.sapienter.jbilling.server.order.db.OrderDTO.setAnticipatePeriods(java.lang.Integer)", "com.sapienter.jbilling.server.order.db.OrderDTO.setId(java.lang.Integer)", "com.sapienter.jbilling.server.order.db.OrderDTO.getLastNotified()", "com.sapienter.jbilling.server.order.db.OrderDTO.getBaseUserByUserId()", "com.sapienter.jbilling.server.order.db.OrderDTO.setNextBillableDay(java.util.Date)", "com.sapienter.jbilling.server.order.db.OrderDTO.getIsCurrent()", "com.sapienter.jbilling.server.order.db.OrderDTO.getOrderStatus()", "com.sapienter.jbilling.server.order.db.OrderDTO.setDfFm(java.lang.Integer)", "com.sapienter.jbilling.server.order.db.OrderDTO.setActiveSince(java.util.Date)", "java.util.Set.clear()", "java.util.List.addAll(java.util.Collection)", "com.sapienter.jbilling.server.order.db.OrderDTO.getNotificationStep()", "com.sapienter.jbilling.server.order.db.OrderDTO.setNotificationStep(java.lang.Integer)", "com.sapienter.jbilling.server.order.db.OrderDTO.getCurrency()", "com.sapienter.jbilling.server.order.db.OrderDTO.setCycleStarts(java.util.Date)", "com.sapienter.jbilling.server.order.db.OrderDTO.getCreateDate()", "com.sapienter.jbilling.server.order.db.OrderDTO.setDueDateUnitId(java.lang.Integer)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setId(int)", "com.sapienter.jbilling.server.order.db.OrderDTO.setLastNotified(java.util.Date)", "com.sapienter.jbilling.server.order.db.OrderDTO.getActiveSince()", "com.sapienter.jbilling.server.order.db.OrderDTO.getActiveUntil()", "com.sapienter.jbilling.server.order.db.OrderDTO.getOrderProcesses()", "com.sapienter.jbilling.server.order.db.OrderDTO.setOrderBillingType(com.sapienter.jbilling.server.order.db.OrderBillingTypeDTO)", "com.sapienter.jbilling.server.order.db.OrderDTO.setActiveUntil(java.util.Date)", "com.sapienter.jbilling.server.order.db.OrderDTO.getOwnInvoice()", "com.sapienter.jbilling.server.order.db.OrderDTO.getNextBillableDay()", "com.sapienter.jbilling.server.order.db.OrderDTO.setDeleted(int)", "com.sapienter.jbilling.server.order.db.OrderDTO.getLines()", "com.sapienter.jbilling.server.order.db.OrderDTO.getDfFm()", "com.sapienter.jbilling.server.order.db.OrderDTO.getDueDateUnitId()", "com.sapienter.jbilling.server.order.OrderHelper.flatten(com.sapienter.jbilling.server.order.db.OrderDTO)", "com.sapienter.jbilling.server.order.db.OrderDTO.getDueDateValue()", "com.sapienter.jbilling.server.order.db.OrderDTO.setOrderPeriod(com.sapienter.jbilling.server.order.db.OrderPeriodDTO)", "com.sapienter.jbilling.server.order.db.OrderDTO.getNotesInInvoice()"],
    "com.sapienter.jbilling.server.order.OrderBL.setMainSubscription(Integer)": ["com.sapienter.jbilling.server.order.db.OrderDTO.getId()", "com.sapienter.jbilling.server.user.db.CustomerDTO.setCurrentOrderId(java.lang.Integer)", "com.sapienter.jbilling.server.util.audit.EventLogger.audit(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.util.Date)", "com.sapienter.jbilling.server.order.db.OrderDTO.setIsCurrent(java.lang.Integer)", "com.sapienter.jbilling.server.order.db.OrderDTO.getUser()", "java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.util.db.AbstractDAS.findNow(java.io.Serializable)", "com.sapienter.jbilling.server.user.db.UserDTO.getCustomer()", "com.sapienter.jbilling.server.user.db.UserDTO.getId()", "com.sapienter.jbilling.server.order.db.OrderDTO.getBaseUserByUserId()", "org.apache.log4j.Category.error(java.lang.Object)", "com.sapienter.jbilling.server.user.db.CustomerDTO.getCurrentOrderId()"],
    "com.sapienter.jbilling.server.invoice.task.NegativeBalanceInvoiceFilterTask.isApplicable(InvoiceDTO, BillingProcessDTO)": ["com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getBalance()", "java.math.BigDecimal.compareTo(java.math.BigDecimal)"],
    "com.sapienter.jbilling.server.notification.NotificationBL.getPayoutMessage(Integer, Integer, BigDecimal, Date, Date, boolean, Integer)": ["com.sapienter.jbilling.server.notification.MessageDTO.setTypeId(java.lang.Integer)", "java.util.Calendar.getInstance()", "com.sapienter.jbilling.server.notification.MessageDTO.getTypeId()", "com.sapienter.jbilling.server.user.partner.db.Partner.getUser()", "com.sapienter.jbilling.server.notification.NotificationBL.setContent(com.sapienter.jbilling.server.notification.MessageDTO,java.lang.Integer,java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.user.db.CompanyDTO.getDescription()", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.notification.MessageDTO.addParameter(java.lang.String,java.lang.Object)", "java.lang.Integer.toString()", "com.sapienter.jbilling.server.util.Util.formatDate(java.util.Date,java.lang.Integer)", "java.util.Calendar.setTime(java.util.Date)", "com.sapienter.jbilling.server.user.partner.PartnerBL.getEntity()", "com.sapienter.jbilling.server.user.EntityBL.getLocale()", "com.sapienter.jbilling.server.util.Util.decimal2string(java.math.BigDecimal,java.util.Locale)", "java.util.Calendar.getTime()", "com.sapienter.jbilling.server.user.db.UserDTO.getUserId()"],
    "com.sapienter.jbilling.server.process.BillingProcessSessionBean.updateProcessRunFinished(Integer, Integer)": ["com.sapienter.jbilling.server.process.db.ProcessRunDTO.getId()", "com.sapienter.jbilling.server.process.BillingProcessRunBL.getEntity()", "com.sapienter.jbilling.server.process.BillingProcessRunBL.setProcess(java.lang.Integer)", "com.sapienter.jbilling.server.process.BillingProcessRunBL.updateFinished(java.lang.Integer)"],
    "com.sapienter.jbilling.server.pluggableTask.PluggableTask.initializeParamters(PluggableTaskDTO)": ["com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskTypeDTO.getMinParameters()", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskParameterDTO.getIntValue()", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDTO.getParameters()", "java.util.Map.put(java.lang.Object,java.lang.Object)", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskParameterDTO.getStrValue()", "java.util.Collection.size()", "java.lang.Integer.intValue()", "java.lang.Object.toString()", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDTO.getEntityId()", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskParameterDTO.getFloatValue()", "java.util.Collection.isEmpty()", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskTypeDTO.getClassName()", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskParameterDTO.getName()", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDTO.getType()"],
    "com.sapienter.jbilling.server.payment.PaymentSessionBean.applyPayment(PaymentDTOEx, Integer)": ["java.util.List.isEmpty()", "com.sapienter.jbilling.server.system.event.EventManager.process(com.sapienter.jbilling.server.system.event.Event)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setAttempt(java.lang.Integer)", "com.sapienter.jbilling.server.payment.PaymentBL.automaticPaymentApplication()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setId(int)", "com.sapienter.jbilling.server.user.db.UserDTO.getEntity()", "com.sapienter.jbilling.server.payment.PaymentBL.getEntity()", "com.sapienter.jbilling.server.invoice.InvoiceBL.getEntity()", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getId()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getPayment()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getInvoiceIds()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getAmount()", "com.sapienter.jbilling.server.payment.PaymentBL.create(com.sapienter.jbilling.server.payment.PaymentDTOEx)", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getBaseUser()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setBalance(java.math.BigDecimal)", "com.sapienter.jbilling.server.payment.PaymentSessionBean.applyPayment(com.sapienter.jbilling.server.payment.db.PaymentDTO,com.sapienter.jbilling.server.invoice.db.InvoiceDTO,boolean)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setPaymentResult(com.sapienter.jbilling.server.payment.db.PaymentResultDTO)", "com.sapienter.jbilling.server.payment.PaymentBL.createMap(com.sapienter.jbilling.server.invoice.db.InvoiceDTO,java.math.BigDecimal)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getPaymentAttempts()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getIsRefund()", "java.util.List.get(int)"],
    "com.sapienter.jbilling.server.item.CurrencyBL.convertToPivot(Integer, BigDecimal, Integer)": ["java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.util.db.CurrencyExchangeDTO.getRate()", "com.sapienter.jbilling.server.item.CurrencyBL.findExchange(java.lang.Integer,java.lang.Integer)", "java.math.BigDecimal.divide(java.math.BigDecimal,int,int)"],
    "com.sapienter.jbilling.server.process.task.SimpleTaxCompositionTask.apply(NewInvoiceDTO, Integer)": ["org.apache.log4j.Category.debug(java.lang.Object)", "java.math.BigDecimal.valueOf(long)", "com.sapienter.jbilling.server.invoice.NewInvoiceDTO.addResultLine(com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO)", "com.sapienter.jbilling.server.invoice.NewInvoiceDTO.calculateTotal()", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "java.math.BigDecimal.compareTo(java.math.BigDecimal)", "com.sapienter.jbilling.server.pluggableTask.PluggableTask.getParameter(java.lang.String,java.lang.String)", "com.sapienter.jbilling.server.item.db.ItemDTO.getId()", "java.math.BigDecimal.multiply(java.math.BigDecimal)", "java.math.BigDecimal.divide(java.math.BigDecimal,int,int)", "java.lang.String.trim()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getTotal()", "java.lang.String.equals(java.lang.Object)", "com.sapienter.jbilling.server.util.db.CurrencyDTO.getId()", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)", "java.util.List.get(int)", "com.sapienter.jbilling.server.item.db.ItemDTO.getPercentage()", "com.sapienter.jbilling.server.item.db.ItemDTO.getItemTypes()", "com.sapienter.jbilling.server.item.ItemBL.getPriceByCurrency(com.sapienter.jbilling.server.item.db.ItemDTO,java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getCarriedBalance()", "com.sapienter.jbilling.server.item.db.ItemTypeDTO.getId()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getCurrency()", "java.math.BigDecimal.subtract(java.math.BigDecimal)", "com.sapienter.jbilling.server.process.task.SimpleTaxCompositionTask.isTaxCalculationNeeded(java.lang.Integer,java.lang.Integer)", "java.util.List.size()", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO.getItem()", "com.sapienter.jbilling.server.invoice.NewInvoiceDTO.getResultLines()", "com.sapienter.jbilling.server.util.db.AbstractDescription.getDescription()", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO.getAmount()"],
    "com.sapienter.jbilling.server.user.UserDTOEx.setUserId(Integer)": ["com.sapienter.jbilling.server.user.db.UserDTO.setId(int)"],
    "com.sapienter.jbilling.server.item.ItemPriceDTOEx.equals(Object)": ["java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.item.ItemPriceDTOEx.isIdentical(java.lang.Object)"],
    "com.sapienter.jbilling.server.util.db.AbstractDAS.findByExampleSingle(T, String[])": ["org.hibernate.criterion.Example.create(java.lang.Object)", "org.hibernate.criterion.Example.excludeProperty(java.lang.String)", "createCriteria(java.lang.Class)", "com.sapienter.jbilling.server.util.db.AbstractDAS.getSession()", "com.sapienter.jbilling.server.util.db.AbstractDAS.getPersistentClass()", "org.hibernate.Criteria.add(org.hibernate.criterion.Example)", "org.hibernate.Criteria.uniqueResult()", "org.hibernate.Criteria.setCacheable(boolean)"],
    "com.sapienter.jbilling.server.user.UserBL.getLocale()": ["com.sapienter.jbilling.server.user.UserBL.getLocale(com.sapienter.jbilling.server.user.db.UserDTO)"],
    "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO.getTypeId()": ["com.sapienter.jbilling.server.invoice.db.InvoiceLineTypeDTO.getId()", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO.getInvoiceLineType()"],
    "com.sapienter.jbilling.server.order.OrderEntityComparator.compare(Object, Object)": ["java.lang.Integer.compareTo(java.lang.Integer)", "com.sapienter.jbilling.server.order.db.OrderDTO.getId()"],
    "com.sapienter.jbilling.server.order.UsageBL.invalidateCache()": ["org.springmodules.cache.provider.CacheProviderFacade.flushCache(org.springmodules.cache.FlushingModel)"],
    "com.sapienter.jbilling.server.order.db.OrderLineDTO.compareTo(Object)": ["java.lang.Integer.compareTo(java.lang.Integer)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getItem()", "com.sapienter.jbilling.server.item.db.ItemDTO.getId()"],
    "com.sapienter.jbilling.server.payment.tasks.NoAsyncParameters.addParameters(MapMessage)": ["javax.jms.MapMessage.setStringProperty(java.lang.String,java.lang.String)"],
    "com.sapienter.jbilling.server.user.ValidatePurchaseWS.setQuantity(BigDecimal)": ["java.math.BigDecimal.toString()"],
    "com.sapienter.jbilling.server.provisioning.task.ProvisioningCommandsMDB.pause(long)": ["org.apache.log4j.Category.debug(java.lang.Object)", "java.lang.Thread.sleep(long)"],
    "com.sapienter.jbilling.server.mediation.task.SaveToJDBCMediationErrorHandler.getConnection()": ["java.util.Map.get(java.lang.Object)", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription.getName()", "java.lang.Class.forName(java.lang.String)", "com.sapienter.jbilling.server.pluggableTask.PluggableTask.getParameter(java.lang.String,java.lang.String)", "java.sql.DriverManager.getConnection(java.lang.String,java.lang.String,java.lang.String)"],
    "com.sapienter.jbilling.server.user.AchBL.delete(Integer)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.system.event.EventManager.process(com.sapienter.jbilling.server.system.event.Event)", "java.util.Set.remove(java.lang.Object)", "com.sapienter.jbilling.server.util.audit.EventLogger.audit(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.util.Date)", "com.sapienter.jbilling.server.user.db.UserDTO.getCompany()", "com.sapienter.jbilling.server.user.db.UserDTO.getAchs()", "com.sapienter.jbilling.server.util.db.AbstractDAS.delete(java.lang.Object)", "com.sapienter.jbilling.server.user.db.AchDTO.getBaseUser()", "com.sapienter.jbilling.server.user.db.UserDTO.getId()", "com.sapienter.jbilling.server.user.db.AchDTO.getId()"],
    "com.sapienter.jbilling.server.notification.NotificationBL.generatePaperInvoiceAsFile(String, boolean, InvoiceDTO, ContactDTOEx, ContactDTOEx, String, String, Integer, String, String)": ["net.sf.jasperreports.engine.JasperExportManager.exportReportToPdfFile(net.sf.jasperreports.engine.JasperPrint,java.lang.String)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getId()", "com.sapienter.jbilling.server.notification.NotificationBL.generatePaperInvoice(java.lang.String,boolean,com.sapienter.jbilling.server.invoice.db.InvoiceDTO,com.sapienter.jbilling.server.user.ContactDTOEx,com.sapienter.jbilling.server.user.ContactDTOEx,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String)", "com.sapienter.jbilling.common.Util.getSysProp(java.lang.String)", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)"],
    "com.sapienter.jbilling.server.payment.PaymentSessionBean.processCsvBlacklist(String, boolean, Integer)": ["com.sapienter.jbilling.server.payment.blacklist.CsvProcessor.process(java.lang.String,boolean,java.lang.Integer)"],
    "com.sapienter.jbilling.server.mediation.FormatField.setLength(String)": ["java.lang.Integer.valueOf(java.lang.String)"],
    "com.sapienter.jbilling.server.invoice.db.InvoiceDAS.findQuantityForPeriodByItemCategory(Integer, Integer, Date, Date)": ["com.sapienter.jbilling.server.invoice.db.InvoiceDAS.addUserCriteria(org.hibernate.Criteria,java.lang.Integer)", "com.sapienter.jbilling.server.invoice.db.InvoiceDAS.addPeriodCriteria(org.hibernate.Criteria,java.util.Date,java.util.Date)", "org.hibernate.criterion.Projections.sum(java.lang.String)", "getSession()", "createCriteria(java.lang.Class)", "com.sapienter.jbilling.server.invoice.db.InvoiceDAS.addItemCategoryCriteria(org.hibernate.Criteria,java.lang.Integer)", "org.hibernate.Criteria.uniqueResult()", "org.hibernate.Criteria.setProjection()"],
    "com.sapienter.jbilling.server.user.UserWS.setCreditLimit(BigDecimal)": ["java.math.BigDecimal.toString()"],
    "com.sapienter.jbilling.server.notification.NotificationBL.sendSapienterEmail(Integer, String, String, String[])": ["com.sapienter.jbilling.server.user.contact.db.ContactDTO.getEmail()", "org.apache.log4j.Category.warn(java.lang.Object)", "com.sapienter.jbilling.server.user.ContactBL.getEntity()", "com.sapienter.jbilling.server.user.ContactBL.setEntity(java.lang.Integer)", "com.sapienter.jbilling.server.notification.NotificationBL.sendSapienterEmail(java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String[])"],
    "com.sapienter.jbilling.server.user.event.SubscriptionStatusEventProcessor.process(Event)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.system.event.EventProcessor.getPluggableTask(java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.user.tasks.ISubscriptionStatusManager.paymentFailed(java.lang.Integer,com.sapienter.jbilling.server.payment.PaymentDTOEx)", "com.sapienter.jbilling.server.order.event.NewActiveUntilEvent.getStatusId()", "java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.payment.event.AbstractPaymentEvent.getEntityId()", "com.sapienter.jbilling.server.order.event.NewActiveUntilEvent.getOldActiveUntil()", "com.sapienter.jbilling.server.order.event.NewActiveUntilEvent.getOrderType()", "com.sapienter.jbilling.server.user.tasks.ISubscriptionStatusManager.subscriptionEnds(java.lang.Integer,java.util.Date,java.util.Date)", "com.sapienter.jbilling.server.order.event.NewActiveUntilEvent.getNewActiveUntil()", "com.sapienter.jbilling.server.system.event.Event.getEntityId()", "com.sapienter.jbilling.server.payment.event.AbstractPaymentEvent.getPayment()", "com.sapienter.jbilling.server.user.tasks.ISubscriptionStatusManager.subscriptionEnds(java.lang.Integer,java.util.Date)", "com.sapienter.jbilling.server.process.event.NoNewInvoiceEvent.getUserId()", "com.sapienter.jbilling.server.process.event.NoNewInvoiceEvent.getBillingProcess()", "com.sapienter.jbilling.server.order.event.NewActiveUntilEvent.getUserId()", "com.sapienter.jbilling.server.process.event.NoNewInvoiceEvent.getSubscriberStatus()", "com.sapienter.jbilling.server.user.tasks.ISubscriptionStatusManager.paymentSuccessful(java.lang.Integer,com.sapienter.jbilling.server.payment.PaymentDTOEx)"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentPaypalExternalTask.doVoid(PaymentDTOEx)": ["com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getTransactionId()", "com.sapienter.jbilling.server.payment.tasks.paypal.PaypalApi.doVoid(java.lang.String)", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getAuthorization()", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)", "com.sapienter.jbilling.server.payment.tasks.PaymentPaypalExternalTask.getApi()"],
    "com.sapienter.jbilling.server.user.UserSessionBean.getPartnerPayoutDTO(Integer)": ["com.sapienter.jbilling.server.user.partner.PartnerBL.getPayoutDTO()", "com.sapienter.jbilling.server.user.partner.PartnerBL.setPayout(java.lang.Integer)"],
    "com.sapienter.jbilling.server.payment.tasks.SaveACHExternallyTask.updateAch(AchDTO, String)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.user.db.AchDTO.obscureBankAccount()", "com.sapienter.jbilling.server.util.db.AbstractDAS.makePersistent(java.lang.Object)", "org.apache.log4j.Category.warn(java.lang.Object)", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription.getName()", "com.sapienter.jbilling.server.user.db.AchDTO.setGatewayKey(java.lang.String)", "com.sapienter.jbilling.server.pluggableTask.PluggableTask.getParameter(java.lang.String,java.lang.Boolean)"],
    "com.sapienter.jbilling.client.authentication.CompanyUserAuthenticationFilter.obtainUsername(HttpServletRequest)": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)", "com.sapienter.jbilling.client.authentication.CompanyUserAuthenticationFilter.getClientIdParameter()", "javax.servlet.http.HttpServletRequest.getParameter()", "getUsernameParameter()", "com.sapienter.jbilling.client.authentication.util.UsernameHelper.buildUsernameToken(java.lang.String,java.lang.String)"],
    "com.sapienter.jbilling.server.item.db.ItemDTO.toString()": ["com.sapienter.jbilling.server.item.db.ItemDTO.getId()"],
    "com.sapienter.jbilling.server.order.OrderHelper.flatten(OrderDTO)": ["com.sapienter.jbilling.server.order.OrderHelper.merge(com.sapienter.jbilling.server.order.db.OrderLineDTO,com.sapienter.jbilling.server.order.db.OrderLineDTO)", "java.util.Iterator.next()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getDeleted()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getQuantity()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getAmount()", "java.util.List.add(java.lang.Object)", "java.util.Iterator.hasNext()", "java.util.Iterator.remove()", "java.math.BigDecimal.compareTo(java.math.BigDecimal)", "java.util.List.remove(java.lang.Object)", "com.sapienter.jbilling.server.order.OrderHelper.find(java.util.Collection,java.lang.Integer,java.math.BigDecimal)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getPrice()", "com.sapienter.jbilling.server.order.db.OrderDTO.getLines()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getItemId()", "java.util.List.iterator()", "com.sapienter.jbilling.server.order.db.OrderDTO.setLines(java.util.List)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.updateCurrentOrder(Integer, OrderLineWS[], String, Date, String)": ["com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerCompanyId()", "com.sapienter.jbilling.server.mediation.task.IMediationProcess.process(java.util.List,java.util.List,java.lang.String)", "org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.order.OrderLineBL.diffOrderLines(java.util.List,java.util.List)", "com.sapienter.jbilling.server.order.OrderBL.addItem(java.lang.Integer,java.math.BigDecimal,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.util.List)", "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.processLines(com.sapienter.jbilling.server.order.db.OrderDTO,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String)", "java.util.List.add(java.lang.Object)", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "com.sapienter.jbilling.server.user.db.UserDTO.getCustomer()", "com.sapienter.jbilling.server.user.UserBL.getEntity()", "com.sapienter.jbilling.server.order.OrderLineWS.getQuantityAsDecimal()", "com.sapienter.jbilling.server.order.OrderLineWS.getItemId()", "com.sapienter.jbilling.server.order.OrderBL.checkOrderLineQuantities(java.util.List,java.util.List,java.lang.Integer,java.lang.Integer,boolean)", "com.sapienter.jbilling.server.mediation.task.MediationResult.setUserId(java.lang.Integer)", "com.sapienter.jbilling.server.mediation.task.MediationResult.getCurrentOrder()", "com.sapienter.jbilling.server.user.db.UserDTO.getLanguageIdField()", "com.sapienter.jbilling.server.order.OrderBL.set(com.sapienter.jbilling.server.order.db.OrderDTO)", "com.sapienter.jbilling.server.user.UserBL.getCurrencyId()", "java.util.Arrays.toString(java.lang.Object[])", "java.util.ArrayList.add(java.lang.Object)", "java.lang.String.valueOf(long)", "com.sapienter.jbilling.server.mediation.task.MediationResult.getDiffLines()", "com.sapienter.jbilling.server.order.OrderBL.getWS(java.lang.Integer)", "com.sapienter.jbilling.server.item.PricingField.getPricingFieldsValue(java.lang.String)", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)", "com.sapienter.jbilling.server.mediation.Record.addField(com.sapienter.jbilling.server.item.PricingField,boolean)", "com.sapienter.jbilling.server.user.db.CustomerDTO.getCurrentOrderId()", "com.sapienter.jbilling.server.order.db.OrderDTO.getId()", "com.sapienter.jbilling.server.order.OrderBL.getDTO()", "com.sapienter.jbilling.server.mediation.task.MediationResult.getCurrencyId()", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskManager.getNextClass()", "com.sapienter.jbilling.server.order.OrderBL.getEntity()", "com.sapienter.jbilling.server.order.OrderLineBL.copy(java.util.List)", "com.sapienter.jbilling.server.mediation.IMediationSessionBean.saveEventRecordLines(java.util.List,com.sapienter.jbilling.server.mediation.db.MediationRecordDTO,java.util.Date,java.lang.String)", "com.sapienter.jbilling.server.mediation.task.MediationResult.setEventDate(java.util.Date)", "com.sapienter.jbilling.server.order.OrderBL.getOrCreateCurrentOrder(java.lang.Integer,java.util.Date,java.lang.Integer,boolean)", "com.sapienter.jbilling.server.order.db.OrderDTO.getLines()", "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerId()", "java.util.Date.getTime()", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)", "com.sapienter.jbilling.server.user.UserBL.set(java.lang.Integer)", "com.sapienter.jbilling.server.util.db.AbstractGenericStatusDAS.find(java.io.Serializable)"],
    "com.sapienter.jbilling.server.mediation.task.SeparatorFileReader.splitFields(String)": ["java.lang.String.split(java.lang.String,int)"],
    "com.sapienter.jbilling.server.pluggableTask.PaymentFakeTask.getProcessResultId(CreditCardDTO)": ["java.lang.String.charAt(int)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getNumber()", "java.lang.String.length()"],
    "com.sapienter.jbilling.server.item.db.ItemDAS.findItemsByCategoryPrefix(String)": ["org.hibernate.Criteria.list()", "createAlias(java.lang.String,java.lang.String)", "getSession()", "add()", "createCriteria(java.lang.Class)", "com.sapienter.jbilling.server.util.db.AbstractDAS.getPersistentClass()", "org.hibernate.criterion.Restrictions.like(java.lang.String,java.lang.String)"],
    "com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.createCustomerProfile(CustomerProfileData)": ["com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.sendViaXML(java.lang.String)", "com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.parseCreateCustomerProfileResponse(java.lang.String)", "com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.buildCreateCustomerProfileRequest(com.sapienter.jbilling.server.payment.tasks.CustomerProfileData)"],
    "com.sapienter.jbilling.server.item.CurrencyBL.getEntityCurrency(Integer)": ["com.sapienter.jbilling.server.user.db.CompanyDTO.getCurrencyId()", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)"],
    "com.sapienter.jbilling.server.notification.NotificationBL.getEmails(String, Integer)": ["java.sql.ResultSet.next()", "java.lang.StringBuffer.toString()", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "java.sql.PreparedStatement.executeQuery()", "java.lang.Integer.intValue()", "java.sql.ResultSet.getString(int)", "java.lang.StringBuffer.append(java.lang.String)", "java.sql.Connection.prepareStatement(java.lang.String)", "java.sql.PreparedStatement.setInt(int,int)", "java.sql.Statement.close()", "java.sql.Connection.close()", "java.sql.ResultSet.close()", "javax.sql.DataSource.getConnection()"],
    "com.sapienter.jbilling.server.process.db.ProcessRunUserDAS.findUserIdsByStatus(Integer, Integer)": ["org.hibernate.Criteria.list()", "org.hibernate.criterion.Restrictions.eq(java.lang.String,java.lang.Integer)", "org.hibernate.criterion.Projections.property(java.lang.String)", "setProjection()", "getSession()", "add()", "createCriteria(java.lang.Class)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCurrencies()": ["com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerCompanyId()", "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerLanguageId()", "com.sapienter.jbilling.server.item.CurrencyBL.getCurrencies(java.lang.Integer,java.lang.Integer)", "java.util.List.size()", "java.util.List.add(java.lang.Object)", "com.sapienter.jbilling.server.item.CurrencyBL.getEntityCurrency(java.lang.Integer)", "com.sapienter.jbilling.server.util.db.CurrencyDTO.getId()", "java.util.List.toArray(java.lang.Object[])"],
    "com.sapienter.jbilling.server.invoice.db.InvoiceDAS.findByProcess(BillingProcessDTO)": ["org.hibernate.Criteria.list()", "org.hibernate.criterion.Restrictions.eq(java.lang.String,com.sapienter.jbilling.server.process.db.BillingProcessDTO)", "getSession()", "org.hibernate.Criteria.add()", "createCriteria(java.lang.Class)"],
    "com.sapienter.jbilling.common.Util.isLuhnNum(String)": ["java.lang.String.charAt(int)", "java.lang.Character.isDigit(char)", "java.lang.String.length()"],
    "com.sapienter.jbilling.server.order.db.OrderLineTypeDTO.getTitle(Integer)": ["com.sapienter.jbilling.server.util.db.AbstractDescription.getDescription(java.lang.Integer,java.lang.String)"],
    "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDAS.filterByCcNumbers(Integer, Collection)": ["org.hibernate.Criteria.list()", "createAlias(java.lang.String,java.lang.String)", "org.hibernate.criterion.Restrictions.eq(java.lang.String,java.lang.Integer)", "org.hibernate.criterion.Restrictions.in(java.lang.String,java.util.Collection)", "getSession()", "add()", "createCriteria(java.lang.Class)"],
    "com.sapienter.jbilling.server.user.db.AchDTO.getAccountName()": ["com.sapienter.jbilling.common.JBCrypto.getCreditCardCrypto()", "com.sapienter.jbilling.common.JBCrypto.decrypt(java.lang.String)", "com.sapienter.jbilling.server.user.db.AchDTO.getRawAccountName()"],
    "com.sapienter.jbilling.server.process.ConfigurationBL.getDTO(BillingProcessConfigurationWS)": ["com.sapienter.jbilling.server.process.BillingProcessConfigurationWS.getEntityId()", "com.sapienter.jbilling.server.process.BillingProcessConfigurationWS.getPeriodUnitId()", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.user.EntityBL.getEntity()"],
    "com.sapienter.jbilling.client.authentication.SafeWebExpressionVoter.vote(Authentication, Object, Collection)": ["org.codehaus.groovy.grails.plugins.springsecurity.WebExpressionVoter.vote(org.springframework.security.core.Authentication,java.lang.Object,java.util.Collection)"],
    "com.sapienter.jbilling.server.order.OrderBL.updateNextBillableDay(Integer, Date)": ["com.sapienter.jbilling.server.order.db.OrderDTO.getId()", "com.sapienter.jbilling.server.order.OrderBL.updateEndOfOrderProcess(java.util.Date)", "com.sapienter.jbilling.server.util.audit.EventLogger.audit(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.util.Date)", "org.apache.log4j.Category.info(java.lang.Object)", "com.sapienter.jbilling.server.order.db.OrderDTO.getNextBillableDay()", "java.util.Date.after(java.util.Date)", "com.sapienter.jbilling.server.user.db.UserDTO.getId()", "com.sapienter.jbilling.server.order.db.OrderDTO.getBaseUserByUserId()", "com.sapienter.jbilling.server.order.db.OrderDTO.setNextBillableDay(java.util.Date)"],
    "com.sapienter.jbilling.server.payment.PaymentBL.applyPaymentToInvoice(InvoiceDTO)": ["com.sapienter.jbilling.server.payment.PaymentDTOEx.setUserId(java.lang.Integer)", "com.sapienter.jbilling.server.user.db.UserDTO.getEntity()", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.payment.PaymentBL.sendNotification(com.sapienter.jbilling.server.payment.PaymentDTOEx,java.lang.Integer)", "com.sapienter.jbilling.server.payment.PaymentBL.getDTO()", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getBaseUser()", "com.sapienter.jbilling.server.payment.IPaymentSessionBean.applyPayment(com.sapienter.jbilling.server.payment.db.PaymentDTO,com.sapienter.jbilling.server.invoice.db.InvoiceDTO,boolean)", "com.sapienter.jbilling.server.payment.PaymentBL.createMap(com.sapienter.jbilling.server.invoice.db.InvoiceDTO,java.math.BigDecimal)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setPaymentResult(com.sapienter.jbilling.server.payment.db.PaymentResultDTO)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getBaseUser()", "com.sapienter.jbilling.server.user.db.UserDTO.getUserId()"],
    "com.sapienter.jbilling.server.user.UserSessionBean.getPartnerPayoutDates(Integer)": ["com.sapienter.jbilling.server.user.partner.PartnerBL.calculatePayoutDates()"],
    "com.sapienter.jbilling.server.pluggableTask.BasicLineTotalTask.getTotal(List)": ["com.sapienter.jbilling.server.order.db.OrderLineDTO.getDeleted()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getAmount()", "java.math.BigDecimal.add(java.math.BigDecimal)"],
    "com.sapienter.jbilling.server.user.RoleBL.update(RoleDTO)": ["com.sapienter.jbilling.server.user.permisson.db.RoleDTO.getPermissions()", "com.sapienter.jbilling.server.user.RoleBL.setPermissions(java.util.Set)"],
    "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getCompleteFaxNumber()": ["java.lang.StringBuilder.append(java.lang.Object)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.toString()"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask.getPassword()": ["com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase.getOptionalParameter(java.lang.String,java.lang.String)"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentRouterCCFTask.getProcessorName(Integer)": ["java.util.Map.get(java.lang.Object)", "java.util.Hashtable.get(java.lang.Object)", "org.apache.log4j.Category.warn(java.lang.Object)", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription.getName()", "com.sapienter.jbilling.server.user.contact.db.ContactFieldDTO.getContent()", "com.sapienter.jbilling.server.user.ContactBL.getDTO()", "com.sapienter.jbilling.server.user.ContactBL.set(java.lang.Integer)", "com.sapienter.jbilling.server.user.ContactDTOEx.getFieldsTable()"],
    "com.sapienter.jbilling.server.process.ProcessRunTotalWS.setTotalPaid(BigDecimal)": ["java.math.BigDecimal.toString()"],
    "com.sapienter.jbilling.server.process.BillingProcessBL.getDtoEx(Integer)": ["java.util.Enumeration.hasMoreElements()", "com.sapienter.jbilling.server.process.BillingProcessDTOEx.setRuns(java.util.List)", "com.sapienter.jbilling.server.process.BillingProcessDTOEx.setGrandTotal(com.sapienter.jbilling.server.process.BillingProcessRunDTOEx)", "java.util.Iterator.hasNext()", "com.sapienter.jbilling.server.process.BillingProcessRunBL.getDTO(java.lang.Integer)", "java.util.Hashtable.size()", "com.sapienter.jbilling.server.process.db.ProcessRunDTO.setInvoicesGenerated(java.lang.Integer)", "com.sapienter.jbilling.server.process.db.BillingProcessDTO.getOrderProcesses()", "com.sapienter.jbilling.server.process.db.BillingProcessDTO.setPeriodUnit(com.sapienter.jbilling.server.process.db.PeriodUnitDTO)", "com.sapienter.jbilling.server.process.db.BillingProcessDTO.getIsReview()", "com.sapienter.jbilling.server.process.BillingProcessBL.getEndOfProcessPeriod(com.sapienter.jbilling.server.process.db.BillingProcessDTO)", "com.sapienter.jbilling.server.process.db.ProcessRunTotalDTO.setTotalNotPaid(java.math.BigDecimal)", "com.sapienter.jbilling.server.process.db.BillingProcessDTO.setId(int)", "com.sapienter.jbilling.server.process.db.ProcessRunTotalDTO.getTotalInvoiced()", "com.sapienter.jbilling.server.process.db.BillingProcessDTO.getId()", "com.sapienter.jbilling.server.process.BillingProcessRunTotalDTOEx.setCurrencyName(java.lang.String)", "java.util.Hashtable.keys()", "com.sapienter.jbilling.server.util.db.AbstractDescription.getDescription(java.lang.Integer)", "com.sapienter.jbilling.server.process.BillingProcessRunDTOEx.getTotals()", "java.util.Hashtable.put(java.lang.Object,java.lang.Object)", "java.math.BigDecimal.floatValue()", "com.sapienter.jbilling.server.process.db.BillingProcessDTO.getPeriodUnit()", "java.lang.Object.toString()", "com.sapienter.jbilling.server.process.db.ProcessRunDTO.getPaymentFinished()", "com.sapienter.jbilling.server.process.db.BillingProcessDTO.setBillingDate(java.util.Date)", "java.util.Set.iterator()", "org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.process.db.BillingProcessDTO.setIsReview(int)", "com.sapienter.jbilling.server.process.BillingProcessBL.addRuntimeStatistic(java.lang.Integer,java.lang.Integer,com.sapienter.jbilling.server.process.BillingProcessRunDTOEx)", "com.sapienter.jbilling.server.process.db.ProcessRunTotalDTO.setTotalPaid(java.math.BigDecimal)", "com.sapienter.jbilling.server.process.db.BillingProcessDTO.getBillingDate()", "com.sapienter.jbilling.server.process.BillingProcessDTOEx.setRetries(java.lang.Integer)", "java.util.List.add(java.lang.Object)", "com.sapienter.jbilling.server.item.CurrencyBL.getEntity()", "com.sapienter.jbilling.server.process.db.ProcessRunTotalDTO.getTotalPaid()", "com.sapienter.jbilling.server.process.db.BillingProcessDTO.setEntity(com.sapienter.jbilling.server.user.db.CompanyDTO)", "java.lang.Float.toString()", "com.sapienter.jbilling.server.process.BillingProcessRunTotalDTOEx.getCurrencyName()", "java.util.List.iterator()", "com.sapienter.jbilling.server.process.db.ProcessRunTotalDTO.getCurrency()", "com.sapienter.jbilling.server.process.BillingProcessBL.getTotal(com.sapienter.jbilling.server.util.db.CurrencyDTO,java.util.List)", "com.sapienter.jbilling.server.util.db.CurrencyDTO.getId()", "com.sapienter.jbilling.server.process.db.ProcessRunDTO.getInvoicesGenerated()", "com.sapienter.jbilling.server.process.db.ProcessRunDTO.getProcessRunTotals()", "java.util.Enumeration.nextElement()", "com.sapienter.jbilling.server.process.db.BillingProcessDTO.getPeriodValue()", "java.util.Iterator.next()", "com.sapienter.jbilling.server.process.db.ProcessRunDTO.getId()", "com.sapienter.jbilling.server.process.db.BillingProcessDTO.getEntity()", "java.util.Hashtable.get(java.lang.Object)", "java.util.Hashtable.containsKey(java.lang.Object)", "com.sapienter.jbilling.server.process.BillingProcessDTOEx.setOrdersProcessed(java.lang.Integer)", "com.sapienter.jbilling.server.process.BillingProcessDTOEx.setBillingDateEnd(java.util.Date)", "java.util.Set.size()", "com.sapienter.jbilling.server.process.db.BillingProcessDTO.getProcessRuns()", "java.math.BigDecimal.subtract(java.math.BigDecimal)", "com.sapienter.jbilling.server.process.db.ProcessRunDTO.getBillingProcess()", "java.util.List.size()", "java.math.BigDecimal.add(java.math.BigDecimal)", "com.sapienter.jbilling.server.process.db.BillingProcessDTO.setPeriodValue(int)", "com.sapienter.jbilling.server.process.db.ProcessRunTotalDTO.setTotalInvoiced(java.math.BigDecimal)", "com.sapienter.jbilling.server.process.BillingProcessRunTotalDTOEx.getPmTotals()"],
    "com.sapienter.jbilling.server.provisioning.task.TestMMSCCommunication.getResponse(String)": ["com.sapienter.jbilling.server.provisioning.task.mmsc.EfsBaseResponse.setStatusMessage(java.lang.String)", "com.sapienter.jbilling.server.provisioning.task.mmsc.EfsBaseResponse.setTransactionId(java.lang.String)", "com.sapienter.jbilling.server.provisioning.task.mmsc.EfsBaseResponse.setStatusCode(int)"],
    "com.sapienter.jbilling.server.util.Util.csvSplitLine(String, char)": ["java.lang.String.charAt(int)", "java.util.LinkedList.add(java.lang.Object)", "java.util.LinkedList.toArray(java.lang.Object[])", "java.lang.String.length()"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.doCreateInvoice(Integer)": ["com.sapienter.jbilling.server.process.BillingProcessBL.generateInvoice(java.lang.Integer,java.lang.Integer)", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)"],
    "com.sapienter.jbilling.server.user.ContactBL.getAll(Integer)": ["com.sapienter.jbilling.server.user.contact.db.ContactTypeDTO.getId()", "com.sapienter.jbilling.server.user.ContactDTOEx.setType(java.lang.Integer)", "com.sapienter.jbilling.server.user.db.CompanyDTO.getContactTypes()", "com.sapienter.jbilling.server.user.db.UserDTO.getEntity()", "com.sapienter.jbilling.server.user.ContactBL.getDTO()", "java.util.List.add(java.lang.Object)", "com.sapienter.jbilling.server.user.UserBL.getEntity()", "com.sapienter.jbilling.server.user.UserBL.getEntityId(java.lang.Integer)", "com.sapienter.jbilling.server.user.contact.db.ContactDAS.findContact(java.lang.Integer,java.lang.Integer)"],
    "com.sapienter.jbilling.server.mediation.task.AbstractFileReader.validate(List)": ["org.apache.log4j.Category.debug(java.lang.Object)", "java.lang.Throwable.getMessage()", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription.getName()", "java.util.List.add(java.lang.Object)", "com.sapienter.jbilling.server.mediation.task.AbstractReader.validate(java.util.List)", "com.sapienter.jbilling.server.pluggableTask.PluggableTask.getParameter(java.lang.String,java.lang.Integer)", "java.text.SimpleDateFormat.toPattern()", "com.sapienter.jbilling.common.Util.getSysProp(java.lang.String)", "com.sapienter.jbilling.server.pluggableTask.PluggableTask.getParameter(java.lang.String,java.lang.String)", "com.sapienter.jbilling.server.pluggableTask.PluggableTask.getParameter(java.lang.String,java.lang.Boolean)"],
    "com.sapienter.jbilling.server.process.BillingProcessSessionBean.getDto(Integer, Integer)": ["com.sapienter.jbilling.server.process.BillingProcessBL.getDtoEx(java.lang.Integer)", "com.sapienter.jbilling.server.process.BillingProcessDTOEx.toString()"],
    "com.sapienter.jbilling.server.payment.PaymentBL.getDTOEx(Integer)": ["com.sapienter.jbilling.server.payment.PaymentDTOEx.setResultStr(java.lang.String)", "com.sapienter.jbilling.server.payment.db.PaymentInfoChequeDTO.setId(int)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getGatewayKey()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getId()", "com.sapienter.jbilling.server.payment.db.PaymentInfoChequeDTO.getDate()", "java.util.Iterator.hasNext()", "com.sapienter.jbilling.server.payment.PaymentAuthorizationBL.getDTO()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getPaymentNotes()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getInvoicesMap()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getInvoiceIds()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.setCreditCard(com.sapienter.jbilling.server.user.db.CreditCardDTO)", "com.sapienter.jbilling.server.user.partner.db.PartnerPayout.getId()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getNumber()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getAch()", "com.sapienter.jbilling.server.payment.db.PaymentInfoChequeDTO.setBank(java.lang.String)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.setCcExpiry(java.util.Date)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.setGatewayKey(java.lang.String)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getPayment()", "com.sapienter.jbilling.server.payment.PaymentBL.getDTOEx(java.lang.Integer)", "com.sapienter.jbilling.server.payment.PaymentDTOEx.setPayoutId(java.lang.Integer)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.setCcType(java.lang.Integer)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.setName(java.lang.String)", "com.sapienter.jbilling.server.payment.db.PaymentInvoiceMapDTO.getInvoiceEntity()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setPaymentNotes(java.lang.String)", "com.sapienter.jbilling.server.payment.PaymentDTOEx.setUserId(java.lang.Integer)", "com.sapienter.jbilling.server.util.db.AbstractDescription.getDescription(java.lang.Integer)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getCcType()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getId()", "java.util.Set.isEmpty()", "com.sapienter.jbilling.server.payment.db.PaymentInvoiceMapDTO.getId()", "com.sapienter.jbilling.server.payment.db.PaymentInfoChequeDTO.setDate(java.util.Date)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setIsRefund(int)", "com.sapienter.jbilling.server.payment.db.PaymentInfoChequeDTO.getBank()", "com.sapienter.jbilling.server.user.AchBL.getDTO()", "java.util.Set.iterator()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.setAuthorization(com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO)", "com.sapienter.jbilling.server.user.db.UserDTO.getUserId()", "com.sapienter.jbilling.server.payment.db.PaymentInfoChequeDTO.getNumber()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.setNumber(java.lang.String)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getPaymentMethod()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getCcExpiry()", "java.util.List.add(java.lang.Object)", "com.sapienter.jbilling.server.payment.PaymentBL.getMapDTO(java.lang.Integer)", "com.sapienter.jbilling.server.payment.PaymentDTOEx.setAch(com.sapienter.jbilling.server.user.db.AchDTO)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getPaymentAuthorizations()", "com.sapienter.jbilling.server.payment.PaymentBL.getDTO()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getBaseUser()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.setCheque(com.sapienter.jbilling.server.payment.db.PaymentInfoChequeDTO)", "java.util.Set.toArray()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setPaymentPeriod(java.lang.Integer)", "com.sapienter.jbilling.server.payment.PaymentDTOEx.addPaymentMap(com.sapienter.jbilling.server.payment.PaymentInvoiceMapDTOEx)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getIsRefund()", "java.util.Iterator.next()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getName()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.setMethod(java.lang.String)", "com.sapienter.jbilling.server.payment.db.PaymentInfoChequeDTO.getId()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getPaymentResult()", "java.util.Set.size()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getPaymentPeriod()", "com.sapienter.jbilling.server.payment.db.PaymentInfoChequeDTO.setNumber(java.lang.String)", "com.sapienter.jbilling.server.payment.PaymentDTOEx.setPayment(com.sapienter.jbilling.server.payment.PaymentDTOEx)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getPartnerPayouts()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getPaymentInfoCheque()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getCreditCard()"],
    "com.sapienter.jbilling.server.pluggableTask.BasicCompositionTask.appendOrderId(Integer)": ["com.sapienter.jbilling.server.util.PreferenceBL.set(java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.util.PreferenceBL.getInt()"],
    "com.sapienter.jbilling.server.item.db.ItemTypeDTO.hashCode()": ["java.lang.String.hashCode()", "java.lang.Object.hashCode()"],
    "com.sapienter.jbilling.server.util.PreferenceBL.getFloat()": ["java.lang.Float.valueOf(java.lang.String)", "com.sapienter.jbilling.server.util.PreferenceBL.getString()"],
    "com.sapienter.jbilling.server.order.db.OrderDTO.getBillingTypeId()": ["com.sapienter.jbilling.server.order.db.OrderDTO.getOrderBillingType()", "com.sapienter.jbilling.server.order.db.OrderBillingTypeDTO.getId()"],
    "com.sapienter.jbilling.server.util.db.AbstractDAS.refresh(T)": ["refresh(java.lang.Object)", "com.sapienter.jbilling.server.util.db.AbstractDAS.getHibernateTemplate()"],
    "com.sapienter.jbilling.server.provisioning.task.CAIProvisioningTask.sendCommand(String)": ["java.util.Map.get(java.lang.Object)", "com.sapienter.jbilling.server.provisioning.task.IExternalCommunication.send(java.lang.String)", "org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.provisioning.task.IExternalCommunication.close()", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription.getName()", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "com.sapienter.jbilling.server.provisioning.task.IExternalCommunication.connect(java.util.Map)", "java.lang.String.equals(java.lang.Object)", "org.apache.log4j.Category.error(java.lang.Object)"],
    "com.sapienter.jbilling.server.user.CreditCardBL.cleanUpNumber(String)": ["java.lang.String.trim()", "java.lang.String.replaceAll(java.lang.String,java.lang.String)"],
    "com.sapienter.jbilling.common.Util.getPaymentMethod(String)": ["java.lang.String.charAt(int)", "java.lang.String.contains(java.lang.CharSequence)"],
    "com.sapienter.jbilling.server.process.BillingProcessSessionBean.isBillingRunning()": ["java.util.concurrent.atomic.AtomicBoolean.get()"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getBillingProcessConfiguration()": ["com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerCompanyId()", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "com.sapienter.jbilling.server.process.IBillingProcessSessionBean.getConfigurationDto(java.lang.Integer)", "com.sapienter.jbilling.server.process.ConfigurationBL.getWS(com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO)"],
    "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDAS.filterByAddress(Integer, String, String, String, String, String, String)": ["org.hibernate.Criteria.list()", "createAlias(java.lang.String,java.lang.String)", "org.hibernate.criterion.Restrictions.eq(java.lang.String,java.lang.Integer)", "getSession()", "add()", "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDAS.equals(java.lang.String,java.lang.Object)", "createCriteria(java.lang.Class)", "add(org.hibernate.criterion.Criterion)"],
    "com.sapienter.jbilling.common.PermissionTypeIdComparator.compare(PermissionDTO, PermissionDTO)": ["com.sapienter.jbilling.server.user.permisson.db.PermissionTypeDTO.getId()", "java.lang.Integer.compareTo(java.lang.Integer)", "java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.user.permisson.db.PermissionDTO.getPermissionType()", "com.sapienter.jbilling.server.user.permisson.db.PermissionDTO.getForeignId()"],
    "com.sapienter.jbilling.server.order.UsagePeriod.toString()": ["com.sapienter.jbilling.server.order.db.OrderDTO.getId()", "java.util.List.size()"],
    "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getNumber()": ["com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getPublicNumber()"],
    "com.sapienter.jbilling.server.util.csv.CsvExporter.convertToString(Object[])": ["org.apache.commons.beanutils.ConvertUtils.lookup(java.lang.Class)", "org.apache.commons.beanutils.Converter.convert(java.lang.Class,java.lang.Object)", "toString()", "java.lang.Object.getClass()"],
    "com.sapienter.jbilling.server.user.UserSessionBean.getWelcomeMessage(Integer, Integer, Integer)": ["org.apache.log4j.Category.debug(java.lang.Object)", "org.apache.log4j.Category.warn(java.lang.Object)", "com.sapienter.jbilling.server.process.AgeingBL.getWelcome(java.lang.Integer,java.lang.Integer,java.lang.Integer)"],
    "com.sapienter.jbilling.server.entity.PaymentAuthorizationDTO.hashCode()": ["java.lang.String.hashCode()", "java.util.Date.hashCode()", "java.lang.Integer.hashCode()"],
    "com.sapienter.jbilling.server.payment.db.PaymentDAS.findTotalBalanceByUser(Integer)": ["createAlias(java.lang.String,java.lang.String)", "org.hibernate.criterion.Restrictions.eq(java.lang.String,java.lang.Integer)", "org.hibernate.criterion.Projections.sum(java.lang.String)", "getSession()", "add()", "org.hibernate.Criteria.add()", "createCriteria(java.lang.Class)", "org.hibernate.Criteria.setComment(java.lang.String)", "org.hibernate.Criteria.uniqueResult()", "org.hibernate.criterion.Restrictions.eq(java.lang.String,int)", "org.hibernate.Criteria.setProjection()"],
    "com.sapienter.jbilling.server.item.PricingField.getIntValue()": ["java.lang.Integer.valueOf(java.lang.String)"],
    "com.sapienter.jbilling.client.api.ExternalCallbackServlet.doPost(HttpServletRequest, HttpServletResponse)": ["org.apache.log4j.Category.debug(java.lang.Object)", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)", "java.util.Enumeration.nextElement()", "java.io.PrintWriter.close()", "equals(java.lang.String)", "java.util.Enumeration.hasMoreElements()", "java.io.BufferedReader.close()", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "com.sapienter.jbilling.client.api.ExternalCallbackServlet.getInt(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.net.URLConnection.getInputStream()", "java.io.BufferedReader.readLine()", "com.sapienter.jbilling.client.api.ExternalCallbackServlet.verifyTransactionType(java.lang.String)", "javax.servlet.http.HttpServletRequest.getParameterNames()", "java.net.URLConnection.setRequestProperty(java.lang.String,java.lang.String)", "java.net.URLEncoder.encode(java.lang.String)", "java.net.URLConnection.getOutputStream()", "java.io.PrintWriter.println(java.lang.String)", "java.net.URLConnection.setDoOutput(boolean)", "com.sapienter.jbilling.server.payment.IPaymentSessionBean.processPaypalPayment(java.lang.Integer,java.lang.String,java.math.BigDecimal,java.lang.String,java.lang.Integer,java.lang.String)", "java.lang.String.equals(java.lang.Object)", "java.net.URL.openConnection()", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)"],
    "com.sapienter.jbilling.server.entity.PaymentAuthorizationDTO.setPrimaryKey(Integer)": ["com.sapienter.jbilling.server.entity.PaymentAuthorizationDTO.setId(java.lang.Integer)"],
    "com.sapienter.jbilling.tools.ConvertToBinHexa.updateCCRow(int, String, String)": ["java.sql.Connection.prepareStatement(java.lang.String)", "java.sql.PreparedStatement.setString(int,java.lang.String)", "java.sql.PreparedStatement.setInt(int,int)", "java.sql.PreparedStatement.executeUpdate()"],
    "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO.setQuantity(Integer)": ["com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO.setQuantity(java.math.BigDecimal)"],
    "com.sapienter.jbilling.server.payment.PaymentBL.automaticPaymentApplication()": ["com.sapienter.jbilling.server.payment.db.PaymentDTO.getBaseUser()", "java.util.Collections.sort(java.util.List,java.util.Comparator)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getBalance()", "java.math.BigDecimal.compareTo(java.math.BigDecimal)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getBalance()", "com.sapienter.jbilling.server.payment.PaymentBL.applyPaymentToInvoice(com.sapienter.jbilling.server.invoice.db.InvoiceDTO)", "com.sapienter.jbilling.server.invoice.db.InvoiceDAS.findWithBalanceByUser(com.sapienter.jbilling.server.user.db.UserDTO)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getAgeingConfiguration(Integer)": ["com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerCompanyId()", "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerLanguageId()", "com.sapienter.jbilling.server.process.AgeingBL.getWS(com.sapienter.jbilling.server.process.AgeingDTOEx)", "com.sapienter.jbilling.server.process.IBillingProcessSessionBean.getAgeingSteps(java.lang.Integer,java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)"],
    "com.sapienter.jbilling.server.util.csv.CsvExporter.export(List)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.util.csv.Exportable.getFieldNames()", "java.lang.Class.newInstance()", "java.io.StringWriter.close()", "au.com.bytecode.opencsv.CSVWriter.writeNext(java.lang.String[])", "com.sapienter.jbilling.server.util.csv.Exportable.getFieldValues()", "java.lang.Class.getSimpleName()", "au.com.bytecode.opencsv.CSVWriter.close()", "com.sapienter.jbilling.server.util.csv.CsvExporter.convertToString(java.lang.Object[])", "java.io.StringWriter.toString()"],
    "com.sapienter.jbilling.server.user.partner.PartnerPayoutWS.setPaymentsAmount(BigDecimal)": ["java.math.BigDecimal.toString()"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentMethodRouterTask.selectDelegate(PaymentDTOEx)": ["java.util.Map.get(java.lang.Object)", "org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.payment.tasks.AbstractPaymentRouterTask.instantiateTask(java.lang.Integer)", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getAch()", "org.apache.log4j.Category.warn(java.lang.Object)", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getCreditCard()"],
    "com.sapienter.jbilling.server.item.ItemBL.getAllItemsByType(Integer)": ["com.sapienter.jbilling.server.item.db.ItemDAS.findAllByItemType(java.lang.Integer)", "java.util.List.size()", "com.sapienter.jbilling.server.item.ItemBL.getWS(com.sapienter.jbilling.server.item.db.ItemDTO)"],
    "com.sapienter.jbilling.server.util.db.AbstractDAS.find(Serializable)": ["load(java.lang.Class,java.io.Serializable)", "com.sapienter.jbilling.server.util.db.AbstractDAS.getPersistentClass()", "com.sapienter.jbilling.server.util.db.AbstractDAS.getHibernateTemplate()"],
    "com.sapienter.jbilling.server.user.db.AchDTO.setAccountName(String)": ["java.lang.String.trim()", "com.sapienter.jbilling.common.JBCrypto.getCreditCardCrypto()", "java.lang.String.equals(java.lang.Object)", "com.sapienter.jbilling.server.user.db.AchDTO.setRawAccountName(java.lang.String)", "com.sapienter.jbilling.common.JBCrypto.encrypt(java.lang.String)"],
    "com.sapienter.jbilling.server.user.db.CreditCardDTO.obscureNumber()": ["com.sapienter.jbilling.server.user.db.CreditCardDTO.setNumber(java.lang.String)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getRawNumber()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getCcNumberPlain()"],
    "com.sapienter.jbilling.server.order.OrderHelper.collect(OrderDTO, Integer)": ["com.sapienter.jbilling.server.order.db.OrderLineDTO.getDeleted()", "java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.order.db.OrderDTO.getLines()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getItemId()", "java.util.List.add(java.lang.Object)"],
    "com.sapienter.jbilling.server.item.db.ItemDTO.getTypes()": ["com.sapienter.jbilling.server.item.db.ItemTypeDTO.getId()", "java.util.Set.size()", "com.sapienter.jbilling.server.item.db.ItemDTO.setTypes(java.lang.Integer[])"],
    "com.sapienter.jbilling.server.process.AgeingBL.set(Integer)": ["com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.updateOrderAndLineProvisioningStatus(Integer, Integer, String)": ["com.sapienter.jbilling.server.provisioning.IProvisioningProcessSessionBean.updateProvisioningStatus(java.lang.Integer,java.lang.Integer,java.lang.String)", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)"],
    "com.sapienter.jbilling.common.Util.parseDate(String)": ["java.lang.String.charAt(int)", "com.sapienter.jbilling.common.Util.getDay(java.lang.String)", "com.sapienter.jbilling.common.Util.getMonth(java.lang.String)", "java.lang.String.lastIndexOf(int)", "com.sapienter.jbilling.common.Util.getDate(java.lang.Integer,java.lang.Integer,java.lang.Integer)", "java.lang.String.length()", "com.sapienter.jbilling.common.Util.getYear(java.lang.String)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.processPartnerPayouts(Date)": ["com.sapienter.jbilling.server.user.IUserSessionBean.processPayouts(java.util.Date)", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)"],
    "com.sapienter.jbilling.server.pluggableTask.BasicLineTotalTask.clearLineTotals(List)": ["com.sapienter.jbilling.server.order.db.OrderLineDTO.setAmount(java.math.BigDecimal)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getDeleted()"],
    "com.sapienter.jbilling.server.user.ContactBL.set(Integer)": ["com.sapienter.jbilling.server.user.ContactBL.setEntityFromUser(java.lang.Integer)", "com.sapienter.jbilling.server.user.contact.db.ContactDAS.findPrimaryContact(java.lang.Integer)"],
    "com.sapienter.jbilling.server.invoice.db.InvoiceDAS.findAllApplicableInvoicesByUser(Integer)": ["org.hibernate.criterion.Order.desc(java.lang.String)", "org.hibernate.Criteria.list()", "org.hibernate.criterion.Restrictions.eq(java.lang.String,java.lang.Integer)", "addOrder()", "getSession()", "org.hibernate.Criteria.add()", "createCriteria(java.lang.Class)", "org.hibernate.criterion.Projections.id()", "org.hibernate.criterion.Restrictions.eq(java.lang.String,int)", "org.hibernate.Criteria.setProjection()"],
    "com.sapienter.jbilling.server.process.BillingProcessBL.addOrderToInvoice(Integer, OrderDTO, NewInvoiceDTO, Date, int)": ["com.sapienter.jbilling.server.order.db.OrderDTO.getId()", "com.sapienter.jbilling.server.util.audit.EventLogger.warning(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String)", "org.apache.log4j.Category.warn(java.lang.Object)", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskManager.getNextClass()", "com.sapienter.jbilling.server.pluggableTask.OrderPeriodTask.calculateStart(com.sapienter.jbilling.server.order.db.OrderDTO)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getCurrency()", "com.sapienter.jbilling.server.order.db.OrderDTO.getCurrency()", "java.util.Date.after(java.util.Date)", "com.sapienter.jbilling.server.pluggableTask.OrderPeriodTask.getPeriods()", "java.lang.Integer.compareTo(java.lang.Integer)", "com.sapienter.jbilling.server.pluggableTask.OrderPeriodTask.calculateEnd(com.sapienter.jbilling.server.order.db.OrderDTO,java.util.Date,int,java.util.Date)", "com.sapienter.jbilling.server.invoice.NewInvoiceDTO.addOrder(com.sapienter.jbilling.server.order.db.OrderDTO,java.util.Date,java.util.Date,java.util.List)", "java.util.List.size()", "com.sapienter.jbilling.server.order.db.OrderDTO.getBillingTypeId()", "com.sapienter.jbilling.server.user.db.UserDTO.getId()", "com.sapienter.jbilling.server.util.db.CurrencyDTO.getId()", "com.sapienter.jbilling.server.order.db.OrderDTO.getBaseUserByUserId()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.setCurrency(com.sapienter.jbilling.server.util.db.CurrencyDTO)"],
    "com.sapienter.jbilling.server.process.db.AgeingEntityStepDTO.getFailedLoginMessage(Integer)": ["com.sapienter.jbilling.server.util.db.AbstractDescription.getDescription(java.lang.Integer,java.lang.String)"],
    "com.sapienter.jbilling.server.invoice.db.InvoiceDAS.isReleatedToItemType(Integer, Integer)": ["org.hibernate.criterion.Restrictions.eq(java.lang.String,java.lang.Integer)", "getSession()", "add()", "org.hibernate.Criteria.add()", "createCriteria(java.lang.Class)", "com.sapienter.jbilling.server.invoice.db.InvoiceDAS.addItemCategoryCriteria(org.hibernate.Criteria,java.lang.Integer)", "org.hibernate.Criteria.uniqueResult()", "org.hibernate.criterion.Restrictions.eq(java.lang.String,int)"],
    "com.sapienter.jbilling.server.util.PreferenceBL.getValueAsString()": ["com.sapienter.jbilling.server.util.PreferenceBL.getString()"],
    "com.sapienter.jbilling.server.process.ConfigurationBL.createUpdate(Integer, BillingProcessConfigurationDTO)": ["com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.setDaysForReport(java.lang.Integer)", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.setReviewStatus(int)", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.getPeriodUnit()", "java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.getId()", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.getPeriodValue()", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.setPeriodValue(int)", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.setNextRunDate(java.util.Date)", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.setInvoiceDateProcess(java.lang.Integer)", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.getNextRunDate()", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDAS.create(com.sapienter.jbilling.server.user.db.CompanyDTO,java.util.Date,java.lang.Integer)", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.setDaysForRetry(java.lang.Integer)", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.getDaysForRetry()", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.setDfFm(java.lang.Integer)", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDAS.findByEntity(com.sapienter.jbilling.server.user.db.CompanyDTO)", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.getDueDateUnitId()", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.getOnlyRecurring()", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.setGenerateReport(java.lang.Integer)", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.setAutoPayment(java.lang.Integer)", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.setPeriodUnit(com.sapienter.jbilling.server.process.db.PeriodUnitDTO)", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.getAutoPayment()", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.setAutoPaymentApplication(int)", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.getDaysForReport()", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.setDueDateValue(int)", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.setOnlyRecurring(java.lang.Integer)", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.setRetries(java.lang.Integer)", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.getDfFm()", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.setDueDateUnitId(int)", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.getInvoiceDateProcess()", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.getEntity()", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.getAutoPaymentApplication()", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.getMaximumPeriods()", "com.sapienter.jbilling.server.util.audit.EventLogger.audit(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.util.Date)", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.getRetries()", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.getDueDateValue()", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.setMaximumPeriods(int)", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.getGenerateReport()"],
    "com.sapienter.jbilling.server.order.OrderPeriodWS.getDescription(Integer)": ["java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.util.InternationalDescriptionWS.getLanguageId()"],
    "com.sapienter.jbilling.server.notification.NotificationBL.getInvoiceMessages(Integer, Integer, Integer, InvoiceDTO)": ["com.sapienter.jbilling.server.invoice.db.InvoiceDeliveryMethodDTO.getId()", "com.sapienter.jbilling.server.user.db.CustomerDTO.getInvoiceDeliveryMethod()", "com.sapienter.jbilling.server.notification.NotificationBL.getInvoicePaperMessage(java.lang.Integer,java.lang.Integer,java.lang.Integer,com.sapienter.jbilling.server.invoice.db.InvoiceDTO)", "org.apache.log4j.Category.warn(java.lang.Object)", "java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.user.db.UserDTO.getCustomer()", "com.sapienter.jbilling.server.notification.NotificationBL.getInvoiceEmailMessage(java.lang.Integer,java.lang.Integer,com.sapienter.jbilling.server.invoice.db.InvoiceDTO)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getBaseUser()", "com.sapienter.jbilling.server.user.db.UserDTO.getUserId()"],
    "com.sapienter.jbilling.server.notification.db.NotificationMessageDAS.findIt(Integer, Integer, Integer)": ["getSession()", "add()", "org.hibernate.Criteria.createAlias(java.lang.String,java.lang.String)", "createCriteria(java.lang.Class)", "java.lang.Integer.intValue()", "org.hibernate.Criteria.uniqueResult()", "org.hibernate.criterion.Restrictions.eq(java.lang.String,int)"],
    "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskBL.delete(Integer)": ["com.sapienter.jbilling.server.util.audit.EventLogger.audit(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.util.Date)", "com.sapienter.jbilling.server.util.db.AbstractDAS.delete(java.lang.Object)", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDTO.getId()", "com.sapienter.jbilling.server.pluggableTask.PluggableTask.invalidateRuleCache(java.lang.Integer)"],
    "com.sapienter.jbilling.server.notification.NotificationBL.set(Integer, Integer, Integer)": ["com.sapienter.jbilling.server.notification.db.NotificationMessageDAS.findIt(java.lang.Integer,java.lang.Integer,java.lang.Integer)"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask.getTerminalId()": ["com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase.ensureGetParameter(java.lang.String)"],
    "com.sapienter.jbilling.server.mediation.MediationSessionBean.updateProcessRecord(MediationProcess, Date)": ["com.sapienter.jbilling.server.mediation.db.MediationProcess.setEndDatetime(java.util.Date)", "com.sapienter.jbilling.server.util.db.AbstractDAS.reattach(java.lang.Object)"],
    "com.sapienter.jbilling.server.payment.PaymentSessionBean.processPayments(Integer)": ["java.lang.Integer.intValue()"],
    "com.sapienter.jbilling.server.user.EntityBL.init()": ["com.sapienter.jbilling.server.util.audit.EventLogger.getInstance()"],
    "com.sapienter.jbilling.server.user.UserSessionBean.getEntityPreference(Integer, Integer)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.util.PreferenceBL.getValueAsString()", "com.sapienter.jbilling.server.util.PreferenceBL.getDefaultValue(java.lang.Integer)", "java.lang.String.trim()", "org.apache.log4j.Category.warn(java.lang.Object)", "com.sapienter.jbilling.server.util.PreferenceBL.set(java.lang.Integer,java.lang.Integer)", "java.lang.String.length()"],
    "com.sapienter.jbilling.server.user.CreditCardBL.validate()": ["java.util.Date.before(java.util.Date)", "java.util.Calendar.getInstance()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getNumber()", "com.sapienter.jbilling.common.Util.getPaymentMethod(java.lang.String)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getCcExpiry()", "java.util.Calendar.getTime()"],
    "com.sapienter.jbilling.server.process.task.BusinessDayAgeingTask.getBusinessDaysHelper()": ["com.sapienter.jbilling.common.Util.getSysProp(java.lang.String)", "com.sapienter.jbilling.server.pluggableTask.PluggableTask.getParameter(java.lang.String,java.lang.String)"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentAuthorizeNetCIMTask.updateProfile(ContactDTO, CreditCardDTO, AchDTO, String, AuthorizeNetCIMApi)": ["com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.updateCustomerProfile(com.sapienter.jbilling.server.payment.tasks.CustomerProfileData)", "com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.getCustomerProfile(java.lang.String)", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.fillWith(com.sapienter.jbilling.server.user.contact.db.ContactDTO,com.sapienter.jbilling.server.user.db.CreditCardDTO,com.sapienter.jbilling.server.user.db.AchDTO)"],
    "com.sapienter.jbilling.server.user.UserBL.setRoot(String)": ["com.sapienter.jbilling.server.user.db.UserDAS.findRoot(java.lang.String)"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentPaypalExternalTask.doProcess(PaymentDTOEx, PaymentAction, boolean)": ["com.sapienter.jbilling.server.payment.tasks.PaymentPaypalExternalTask.isRefund(com.sapienter.jbilling.server.payment.PaymentDTOEx)", "com.sapienter.jbilling.server.payment.tasks.PaymentPaypalExternalTask.isCreditCardStored(com.sapienter.jbilling.server.payment.PaymentDTOEx)", "com.sapienter.jbilling.server.payment.tasks.PaymentPaypalExternalTask.doRefund(com.sapienter.jbilling.server.payment.PaymentDTOEx)", "com.sapienter.jbilling.server.payment.tasks.PaymentPaypalExternalTask.doPaymentWithStoredCreditCard(com.sapienter.jbilling.server.payment.PaymentDTOEx,com.sapienter.jbilling.server.payment.tasks.paypal.dto.PaymentAction)", "com.sapienter.jbilling.server.payment.tasks.PaymentPaypalExternalTask.doPaymentWithoutStoredCreditCard(com.sapienter.jbilling.server.payment.PaymentDTOEx,com.sapienter.jbilling.server.payment.tasks.paypal.dto.PaymentAction,boolean)", "com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase$Result.shouldCallOtherProcessors()"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentsGatewayTask.confirmPreAuth(PaymentAuthorizationDTO, PaymentDTOEx)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.setTransactionId(java.lang.String)", "java.lang.String.substring(int)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.setCode1(java.lang.String)", "java.lang.String.substring(int,int)", "com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase.ensureGetParameter(java.lang.String)", "java.io.BufferedReader.close()", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "java.io.BufferedReader.readLine()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.setCode2(java.lang.String)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getApprovalCode()", "java.lang.String.indexOf(int)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getTransactionId()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.setApprovalCode(java.lang.String)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getCode1()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getAch()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.setResponseMessage(java.lang.String)", "com.sapienter.jbilling.server.payment.tasks.PaymentsGatewayTask.callPG(java.lang.String)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setPaymentResult(com.sapienter.jbilling.server.payment.db.PaymentResultDTO)", "java.lang.String.equals(java.lang.Object)", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getCreditCard()", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)", "org.apache.log4j.Category.error(java.lang.Object)"],
    "com.sapienter.jbilling.server.order.db.OrderDAS.findByUser_Status(Integer, Integer)": ["org.hibernate.Criteria.list()", "createAlias(java.lang.String,java.lang.String)", "org.hibernate.criterion.Restrictions.eq(java.lang.String,java.lang.Integer)", "getSession()", "add()", "createCriteria(java.lang.Class)", "org.hibernate.criterion.Restrictions.eq(java.lang.String,int)"],
    "com.sapienter.jbilling.server.util.api.validation.APIValidator.validateObject(Method, String, Object)": ["java.lang.reflect.Method.getName()", "java.lang.String.startsWith(java.lang.String)", "java.util.Set.addAll()", "javax.validation.Validator.validate(java.lang.Object)", "com.sapienter.jbilling.server.util.api.validation.APIValidator.getErrorMessages(java.util.Set,java.lang.String)", "javax.validation.Validator.validate(java.lang.Object,java.lang.Class)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getPluginWS(Integer)": ["com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskBL.getDTO()"],
    "com.sapienter.jbilling.server.item.db.ItemDTO.getCategoryCode(String)": ["com.sapienter.jbilling.server.item.db.ItemTypeDTO.getDescription()", "com.sapienter.jbilling.server.item.db.ItemDTO.getItemTypes()", "java.lang.String.startsWith(java.lang.String)", "java.lang.String.replaceAll(java.lang.String,java.lang.String)"],
    "com.sapienter.jbilling.server.order.db.OrderDAS.findOneTimersByDate(Integer, Date)": ["org.hibernate.Query.list()", "getSession()", "setDate(java.lang.String,java.util.Date)", "createQuery(java.lang.String)", "setInteger(java.lang.String,java.lang.Integer)"],
    "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getOldDTO()": ["com.sapienter.jbilling.server.entity.PaymentAuthorizationDTO.setApprovalCode(java.lang.String)", "com.sapienter.jbilling.server.entity.PaymentAuthorizationDTO.setAVS(java.lang.String)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getCardCode()", "com.sapienter.jbilling.server.entity.PaymentAuthorizationDTO.setCode3(java.lang.String)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getAvs()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getCode2()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getCode3()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getTransactionId()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getCode1()", "com.sapienter.jbilling.server.entity.PaymentAuthorizationDTO.setMD5(java.lang.String)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getId()", "com.sapienter.jbilling.server.entity.PaymentAuthorizationDTO.setCardCode(java.lang.String)", "com.sapienter.jbilling.server.entity.PaymentAuthorizationDTO.setTransactionId(java.lang.String)", "com.sapienter.jbilling.server.entity.PaymentAuthorizationDTO.setId(java.lang.Integer)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getProcessor()", "com.sapienter.jbilling.server.entity.PaymentAuthorizationDTO.setPaymentId(java.lang.Integer)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getResponseMessage()", "com.sapienter.jbilling.server.entity.PaymentAuthorizationDTO.setCreateDate(java.util.Date)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getId()", "com.sapienter.jbilling.server.entity.PaymentAuthorizationDTO.setCode1(java.lang.String)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getApprovalCode()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getCreateDate()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getMD5()", "com.sapienter.jbilling.server.entity.PaymentAuthorizationDTO.setResponseMessage(java.lang.String)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getPayment()", "com.sapienter.jbilling.server.entity.PaymentAuthorizationDTO.setCode2(java.lang.String)", "com.sapienter.jbilling.server.entity.PaymentAuthorizationDTO.setProcessor(java.lang.String)"],
    "com.sapienter.jbilling.server.payment.blacklist.CreditCardFilter.checkUser(Integer)": ["com.sapienter.jbilling.server.payment.blacklist.CreditCardFilter.checkCreditCard(java.lang.Integer,java.util.Collection)", "com.sapienter.jbilling.server.user.db.UserDTO.getCreditCards()", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerId()": ["com.sapienter.jbilling.client.authentication.CompanyUserDetails.getUserId()", "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getSpringSecurityService()", "grails.plugins.springsecurity.SpringSecurityService.getPrincipal()"],
    "com.sapienter.jbilling.server.rule.task.test.Bundle.addReplacementProduct(Product)": ["java.util.List.add(java.lang.Object)"],
    "com.sapienter.jbilling.server.item.db.ItemDTO.getStrTypes()": ["java.util.Collection.add(java.lang.Object)", "com.sapienter.jbilling.server.item.db.ItemTypeDTO.getId()", "java.util.Set.size()", "java.lang.String.valueOf(int)"],
    "com.sapienter.jbilling.server.user.ContactBL.createForInvoice(ContactDTOEx, Integer)": ["com.sapienter.jbilling.server.user.ContactBL.create(com.sapienter.jbilling.server.user.ContactDTOEx,java.lang.String,java.lang.Integer,java.lang.Integer)"],
    "com.sapienter.jbilling.server.util.db.PreferenceTypeDTO.getInstructions(Integer)": ["com.sapienter.jbilling.server.util.db.AbstractDescription.getDescription(java.lang.Integer,java.lang.String)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.applyPayment(PaymentWS, Integer)": ["com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.validatePayment(com.sapienter.jbilling.server.payment.PaymentWS)", "com.sapienter.jbilling.server.payment.PaymentWS.setIsRefund(java.lang.Integer)", "com.sapienter.jbilling.server.payment.PaymentWS.getMethodId()", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "com.sapienter.jbilling.server.payment.IPaymentSessionBean.applyPayment(com.sapienter.jbilling.server.payment.PaymentDTOEx,java.lang.Integer)"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentFilterTask.callFilters(PaymentDTOEx)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.setCode1(java.lang.String)", "com.sapienter.jbilling.server.payment.tasks.PaymentFilterTask.getEnabledFilters()", "com.sapienter.jbilling.server.payment.blacklist.BlacklistFilter$Result.isBlacklisted()", "com.sapienter.jbilling.server.payment.blacklist.BlacklistFilter.getName()", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.payment.blacklist.BlacklistFilter$Result.getMessage()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.setResponseMessage(java.lang.String)", "com.sapienter.jbilling.server.payment.blacklist.BlacklistFilter.checkPayment(com.sapienter.jbilling.server.payment.PaymentDTOEx)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setPaymentResult(com.sapienter.jbilling.server.payment.db.PaymentResultDTO)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.setProcessor(java.lang.String)", "com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase.storeProcessedAuthorization(com.sapienter.jbilling.server.payment.PaymentDTOEx,com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO)", "com.sapienter.jbilling.server.payment.PaymentDTOEx.setAuthorization(com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO)", "com.sapienter.jbilling.server.payment.db.PaymentResultDTO.setId(int)"],
    "com.sapienter.jbilling.server.order.OrderBL.getPeriod(Integer, Integer)": ["com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getLatestPayment(Integer)": ["com.sapienter.jbilling.server.user.db.UserDTO.getLanguageIdField()", "com.sapienter.jbilling.server.payment.PaymentBL.getLatest(java.lang.Integer)", "com.sapienter.jbilling.server.payment.PaymentBL.getWS(com.sapienter.jbilling.server.payment.PaymentDTOEx)", "com.sapienter.jbilling.server.payment.PaymentBL.getDTOEx(java.lang.Integer)", "com.sapienter.jbilling.server.user.UserBL.getEntity()", "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerId()", "com.sapienter.jbilling.server.payment.PaymentBL.set(java.lang.Integer)"],
    "com.sapienter.jbilling.server.mediation.task.StatelessJDBCReader.recordRead(Record, int[])": ["com.sapienter.jbilling.server.mediation.Record.getFields()", "com.sapienter.jbilling.server.item.PricingField.getIntValue()", "com.sapienter.jbilling.server.mediation.task.StatelessJDBCReader.setLastId(java.lang.Integer)", "java.util.List.get(int)"],
    "com.sapienter.jbilling.server.order.UsageBL._init()": ["com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)"],
    "com.sapienter.jbilling.server.payment.PaymentBL.sendNotification(PaymentDTOEx, Integer)": ["java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.notification.INotificationSessionBean.notify(java.lang.Integer,com.sapienter.jbilling.server.notification.MessageDTO)", "org.apache.log4j.Category.warn(java.lang.Object)", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getUserId()", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getPaymentResult()", "com.sapienter.jbilling.server.payment.db.PaymentResultDTO.getId()", "com.sapienter.jbilling.server.notification.NotificationBL.getPaymentMessage(java.lang.Integer,com.sapienter.jbilling.server.payment.PaymentDTOEx,boolean)"],
    "com.sapienter.jbilling.server.process.BillingProcessBL.processOrderAddedOnInvoiceEvents(NewInvoiceDTO, Integer)": ["java.util.Map.get(java.lang.Object)", "com.sapienter.jbilling.server.order.db.OrderDTO.getId()", "java.util.Map.size()", "com.sapienter.jbilling.server.system.event.EventManager.process(com.sapienter.jbilling.server.system.event.Event)", "org.apache.log4j.Category.info(java.lang.Object)", "com.sapienter.jbilling.server.order.event.OrderAddedOnInvoiceEvent.setStart(java.util.Date)", "com.sapienter.jbilling.server.process.PeriodOfTime.getStart()", "com.sapienter.jbilling.server.order.event.OrderAddedOnInvoiceEvent.setEnd(java.util.Date)", "com.sapienter.jbilling.server.invoice.NewInvoiceDTO.getPeriods()", "com.sapienter.jbilling.server.invoice.NewInvoiceDTO.getOrderTotalContributions()", "java.util.List.size()", "com.sapienter.jbilling.server.invoice.NewInvoiceDTO.getOrders()", "java.util.List.get(int)", "com.sapienter.jbilling.server.process.PeriodOfTime.getEnd()", "com.sapienter.jbilling.server.process.BillingProcessBL.findUserId(com.sapienter.jbilling.server.order.db.OrderDTO)"],
    "com.sapienter.jbilling.server.user.validator.CreditCardNumberValidator.isValid(String, ConstraintValidatorContext)": ["java.lang.String.startsWith(java.lang.String)", "org.hibernate.validator.constraints.impl.LuhnValidator.passesLuhnTest(java.lang.String)"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayExternalTask.process(PaymentDTOEx)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getResultId()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.useGatewayKey()", "java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayExternalTask.getProcessorName()", "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask.doProcess(com.sapienter.jbilling.server.payment.PaymentDTOEx,com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask$SvcType,com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO)", "java.math.BigDecimal.compareTo(java.math.BigDecimal)", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getPayoutId()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getAmount()", "com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase$Result.shouldCallOtherProcessors()", "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayExternalTask.prepareExternalPayment(com.sapienter.jbilling.server.payment.PaymentDTOEx)", "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayExternalTask.updateGatewayKey(com.sapienter.jbilling.server.payment.PaymentDTOEx)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getIsRefund()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getCreditCard()"],
    "com.sapienter.jbilling.client.authentication.JBillingPasswordEncoder.encodePassword(String, Object)": ["com.sapienter.jbilling.common.JBCrypto.getPasswordCrypto(java.lang.Integer)", "com.sapienter.jbilling.common.JBCrypto.encrypt(java.lang.String)"],
    "com.sapienter.jbilling.server.item.ItemTypeBL.isInUse()": ["com.sapienter.jbilling.server.item.db.ItemTypeDTO.getId()", "com.sapienter.jbilling.server.item.db.ItemTypeDAS.isInUse(java.lang.Integer)"],
    "com.sapienter.jbilling.server.pluggableTask.PluggableTask.validate()": ["com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription.isRequired()", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription.getName()", "com.sapienter.jbilling.server.pluggableTask.PluggableTask.getParameterDescriptions()", "java.util.Map.containsKey(java.lang.Object)"],
    "com.sapienter.jbilling.server.user.db.AchDTO.isBankAccountObscured()": ["com.sapienter.jbilling.server.user.db.AchDTO.getRawBankAccount()", "java.lang.String.contains(java.lang.CharSequence)", "com.sapienter.jbilling.server.user.db.AchDTO.getBankAccount()"],
    "com.sapienter.jbilling.server.user.partner.db.Partner.touch()": ["com.sapienter.jbilling.server.user.partner.db.PartnerPayout.touch()", "com.sapienter.jbilling.server.user.partner.db.Partner.getBalance()", "java.util.Set.size()", "com.sapienter.jbilling.server.user.partner.db.Partner.getRanges()", "com.sapienter.jbilling.server.user.partner.db.Partner.getPartnerPayouts()"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.deleteOrder(Integer)": ["com.sapienter.jbilling.server.order.OrderBL.delete(java.lang.Integer)", "com.sapienter.jbilling.server.order.OrderBL.setForUpdate(java.lang.Integer)", "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerId()"],
    "com.sapienter.jbilling.server.user.contact.db.ContactDAS.findInvoiceContact(Integer)": ["org.hibernate.Query.setParameter(java.lang.String,java.lang.String)", "org.hibernate.Query.uniqueResult()", "getSession()", "org.hibernate.Query.setParameter(java.lang.String,java.lang.Integer)", "createQuery(java.lang.String)"],
    "com.sapienter.jbilling.server.process.db.BillingProcessDAS.getSuccessfulProcessCurrencyMethodAndSum(Integer)": ["getSession()", "org.hibernate.Query.iterate()", "org.hibernate.Query.setParameter(java.lang.String,java.lang.Integer)", "createQuery(java.lang.String)"],
    "com.sapienter.jbilling.server.process.task.AbstractCronTask.getCronExpression()": ["com.sapienter.jbilling.server.process.task.AbstractCronTask.getParameter(java.lang.String,java.lang.String)", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription.getName()"],
    "com.sapienter.jbilling.server.util.Util.escapeStringForCsvFormat(String, String)": ["java.lang.String.indexOf(int)", "java.lang.String.charAt(int)", "java.lang.StringBuilder.toString()", "java.lang.StringBuilder.append(char)", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.length()"],
    "com.sapienter.jbilling.server.util.Bootstrap.init()": ["com.sapienter.jbilling.server.util.Bootstrap.scheduleBatchJobs()", "org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.util.Bootstrap.schedulePluggableTasks()", "com.sapienter.jbilling.client.process.JobScheduler.start()", "com.sapienter.jbilling.client.process.JobScheduler.getInstance()"],
    "com.sapienter.jbilling.tools.UploadData.main(String[])": ["com.sapienter.jbilling.server.user.ContactDTOEx.setFieldsTable(java.util.Hashtable)", "java.lang.String.substring(int,int)", "com.sapienter.jbilling.server.user.db.CustomerDTO.setNotes(java.lang.String)", "com.sapienter.jbilling.server.order.IOrderSessionBean.addItem(java.lang.Integer,java.math.BigDecimal,com.sapienter.jbilling.server.order.db.OrderDTO,java.lang.Integer,java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.item.db.ItemTypeDTO.setDescription(java.lang.String)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.setPhoneNumber(java.lang.String)", "com.sapienter.jbilling.common.Util.parseDate(java.lang.String)", "com.sapienter.jbilling.server.util.db.AbstractDescription.setDescription(java.lang.String)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.setPhoneAreaCode(java.lang.Integer)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getNumber()", "java.util.Date.setMonth(int)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.setCcExpiry(java.util.Date)", "com.sapienter.jbilling.server.user.db.UserDTO.setPassword(java.lang.String)", "com.sapienter.jbilling.server.user.contact.db.ContactFieldDTO.setContent(java.lang.String)", "com.sapienter.jbilling.server.user.contact.db.ContactFieldDTO.setType(com.sapienter.jbilling.server.user.contact.db.ContactFieldTypeDTO)", "java.lang.String.replaceAll(java.lang.String,java.lang.String)", "com.sapienter.jbilling.server.user.db.CustomerDTO.getNotes()", "com.sapienter.jbilling.server.item.db.ItemDTO.setTypes(java.lang.Integer[])", "com.sapienter.jbilling.server.user.db.CreditCardDTO.setName(java.lang.String)", "com.sapienter.jbilling.server.item.db.ItemDTO.getPercentage()", "java.util.Properties.getProperty(java.lang.String)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.setCity(java.lang.String)", "com.sapienter.jbilling.server.user.db.UserDTO.setUserName(java.lang.String)", "com.sapienter.jbilling.server.order.db.OrderDTO.setActiveSince(java.util.Date)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.setAddress2(java.lang.String)", "com.sapienter.jbilling.server.item.db.ItemTypeDTO.setEntity(com.sapienter.jbilling.server.user.db.CompanyDTO)", "java.util.Hashtable.put(java.lang.Object,java.lang.Object)", "com.sapienter.jbilling.server.item.db.ItemTypeDTO.getDescription()", "java.lang.String.charAt(int)", "java.util.Properties.getProperty(java.lang.String,java.lang.String)", "java.lang.Integer.valueOf(java.lang.String)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.setInclude(java.lang.Integer)", "com.sapienter.jbilling.server.order.db.OrderDTO.setActiveUntil(java.util.Date)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.setFirstName(java.lang.String)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.setOrganizationName(java.lang.String)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.setAddress1(java.lang.String)", "com.sapienter.jbilling.server.item.db.ItemDTO.setDeleted(java.lang.Integer)", "com.sapienter.jbilling.server.item.db.ItemDTO.setCurrencyId(java.lang.Integer)", "java.io.PrintStream.println(java.lang.String)", "java.lang.String.split(java.lang.String)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.setNumber(java.lang.String)", "com.sapienter.jbilling.server.item.db.ItemDTO.setNumber(java.lang.String)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.setLastName(java.lang.String)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.setEmail(java.lang.String)", "com.sapienter.jbilling.server.user.db.UserDTO.getUserName()", "com.sapienter.jbilling.server.order.db.OrderDTO.getLine(java.lang.Integer)", "java.io.BufferedReader.close()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getCcExpiry()", "com.sapienter.jbilling.server.item.IItemSessionBean.create(com.sapienter.jbilling.server.item.db.ItemDTO,java.lang.Integer)", "java.io.PrintStream.print(java.lang.String)", "java.lang.Integer.intValue()", "java.io.BufferedReader.readLine()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setDescription(java.lang.String)", "com.sapienter.jbilling.server.user.IUserSessionBean.addContact(com.sapienter.jbilling.server.user.ContactDTOEx,java.lang.String,java.lang.Integer)", "com.sapienter.jbilling.server.item.IItemSessionBean.createType(com.sapienter.jbilling.server.item.db.ItemTypeDTO)", "com.sapienter.jbilling.server.order.IOrderSessionBean.recalculate(com.sapienter.jbilling.server.order.db.OrderDTO,java.lang.Integer)", "com.sapienter.jbilling.tools.UploadData.readLine(java.io.BufferedReader)", "java.lang.String.trim()", "com.sapienter.jbilling.server.item.db.ItemDTO.setEntity(com.sapienter.jbilling.server.user.db.CompanyDTO)", "com.sapienter.jbilling.server.user.IUserSessionBean.setCustomerNotes(java.lang.Integer,java.lang.String)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.setPostalCode(java.lang.String)", "java.lang.String.equals(java.lang.Object)", "com.sapienter.jbilling.server.user.IUserSessionBean.create(com.sapienter.jbilling.server.user.UserDTOEx,com.sapienter.jbilling.server.user.ContactDTOEx)", "java.util.Date.setDate(int)", "java.lang.String.length()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getLastName()", "java.util.Set.add(java.lang.Object)", "com.sapienter.jbilling.server.order.IOrderSessionBean.createUpdate(java.lang.Integer,java.lang.Integer,com.sapienter.jbilling.server.order.db.OrderDTO,java.lang.Integer)", "com.sapienter.jbilling.server.item.db.ItemDTO.setPercentage(java.math.BigDecimal)", "com.sapienter.jbilling.server.user.db.UserDTO.setCustomer(com.sapienter.jbilling.server.user.db.CustomerDTO)", "java.util.Hashtable.get(java.lang.Object)", "java.lang.Boolean.valueOf(java.lang.String)", "java.util.Date.setYear(int)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "com.sapienter.jbilling.server.user.UserDTOEx.setEntityId(java.lang.Integer)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.setCountryCode(java.lang.String)", "java.util.Properties.get(java.lang.Object)", "com.sapienter.jbilling.server.user.UserDTOEx.setStatusId(java.lang.Integer)", "com.sapienter.jbilling.server.item.db.ItemDTO.setPrice(java.math.BigDecimal)", "com.sapienter.jbilling.server.user.IUserSessionBean.createCreditCard(java.lang.Integer,com.sapienter.jbilling.server.user.db.CreditCardDTO)", "java.lang.Throwable.getMessage()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getFirstName()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.setStateProvince(java.lang.String)", "java.util.Properties.load(java.io.InputStream)", "com.sapienter.jbilling.server.user.db.UserDTO.getRoles()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setPrice(java.math.BigDecimal)", "java.lang.Float.valueOf(java.lang.String)", "java.lang.Boolean.booleanValue()", "java.lang.Throwable.printStackTrace()"],
    "com.sapienter.jbilling.server.item.PricingField.setPricingFieldsValue(PricingField[])": ["java.lang.StringBuffer.toString()", "java.lang.StringBuffer.append(java.lang.String)", "com.sapienter.jbilling.server.item.PricingField.encode(com.sapienter.jbilling.server.item.PricingField)"],
    "com.sapienter.jbilling.server.notification.task.TestNotificationTask.deliver(UserDTO, MessageDTO)": ["java.util.Map.get(java.lang.Object)", "java.io.Writer.write(java.lang.String)", "org.apache.log4j.Category.debug(java.lang.Object)", "java.util.Calendar.getInstance()", "com.sapienter.jbilling.server.user.ContactBL.getAll(java.lang.Integer)", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription.getName()", "com.sapienter.jbilling.server.notification.MessageDTO.getAttachmentFile()", "com.sapienter.jbilling.server.notification.MessageDTO.getContent()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getEmail()", "java.lang.Throwable.getMessage()", "java.io.OutputStreamWriter.close()", "java.util.List.size()", "com.sapienter.jbilling.common.Util.getSysProp(java.lang.String)", "java.util.Calendar.getTime()", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)", "java.util.List.get(int)", "com.sapienter.jbilling.server.user.db.UserDTO.getUserId()", "java.lang.String.length()", "com.sapienter.jbilling.server.notification.MessageSection.getContent()"],
    "com.sapienter.jbilling.server.pluggableTask.PaperInvoiceNotificationTask.init(UserDTO, MessageDTO)": ["java.util.Map.get(java.lang.Object)", "java.util.HashMap.get(java.lang.Object)", "com.sapienter.jbilling.server.user.ContactBL.setInvoice(java.lang.Integer)", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getId()", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription.getName()", "com.sapienter.jbilling.server.user.db.UserDTO.getEntity()", "java.lang.Boolean.valueOf(java.lang.String)", "com.sapienter.jbilling.server.user.ContactBL.getDTO()", "com.sapienter.jbilling.server.notification.MessageDTO.getParameters()", "com.sapienter.jbilling.server.user.ContactBL.setEntity(java.lang.Integer)"],
    "com.sapienter.jbilling.server.process.db.AgeingEntityStepDAS.findStep(Integer, Integer)": ["org.hibernate.Query.uniqueResult()", "getSession()", "org.hibernate.Query.setParameter(java.lang.String,java.lang.Integer)", "createQuery(java.lang.String)"],
    "com.sapienter.jbilling.server.item.ItemDTOEx.setPercentageAsDecimal(BigDecimal)": ["com.sapienter.jbilling.server.item.ItemDTOEx.setPercentage(java.math.BigDecimal)"],
    "com.sapienter.jbilling.server.pluggableTask.ProcessorEmailAlarm.fail(int, int, int)": ["com.sapienter.jbilling.server.pluggableTask.ProcessorEmailAlarm.canSendEmail(int)", "java.util.Queue.offer(java.lang.Object)", "java.util.Queue.remove()", "java.util.Collection.size()", "java.util.Date.getTime()", "java.lang.Long.longValue()", "java.util.Queue.peek()"],
    "com.sapienter.jbilling.server.user.db.CompanyDTO.getCurrencyId()": ["com.sapienter.jbilling.server.util.db.CurrencyDTO.getId()"],
    "com.sapienter.jbilling.server.util.db.AbstractDescription.getDescriptionDTO(Integer, String)": ["com.sapienter.jbilling.server.util.db.JbillingTableDAS.findByName(java.lang.String)", "com.sapienter.jbilling.server.util.db.JbillingTable.getId()", "com.sapienter.jbilling.server.util.db.AbstractDescription.getId()", "com.sapienter.jbilling.server.util.db.AbstractDAS.findNow(java.io.Serializable)", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "com.sapienter.jbilling.server.util.db.AbstractDescription.getTable()"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayExternalTask.buildRequest(PaymentDTOEx, SvcType)": ["com.sapienter.jbilling.server.user.db.CreditCardDTO.getSecurityCode()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.useGatewayKey()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getGatewayKey()", "java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getCcExpiry()", "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask.getMerchantId()", "com.sapienter.jbilling.server.user.ContactBL.set(java.lang.Integer)", "com.sapienter.jbilling.server.user.ContactBL.getEntity()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getAmount()", "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask.getStoreId()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getNumber()", "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask.getSellerId()", "com.sapienter.jbilling.common.Util.getPaymentMethod(java.lang.String)", "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask$NVPList.add(java.lang.String,java.lang.String)", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getUserId()", "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask.getTerminalId()", "java.text.DateFormat.format(java.util.Date)", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getCreditCard()", "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask.getPassword()", "java.lang.Enum.equals(java.lang.Object)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getLastName()", "java.lang.String.valueOf(java.lang.Object)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getStateProvince()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getCity()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getCountryCode()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getFirstName()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getPostalCode()", "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask$SvcType.getCode()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getAddress1()", "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask.formatDollarAmount(java.math.BigDecimal)"],
    "com.sapienter.jbilling.server.entity.InvoiceLineDTO.isIdentical(Object)": ["java.lang.Integer.equals(java.lang.Object)", "java.math.BigDecimal.equals(java.lang.Object)", "java.lang.String.equals(java.lang.Object)"],
    "com.sapienter.jbilling.server.item.CurrencyBL.getSymbols()": ["java.util.List.size()", "com.sapienter.jbilling.server.util.db.AbstractDAS.findAll()", "java.util.List.toArray(java.lang.Object[])"],
    "com.sapienter.jbilling.server.pluggableTask.PaymentAuthorizeNetTask.getChargeData(String, String, boolean, BigDecimal, String, String, String, boolean, Integer)": ["java.math.BigDecimal.toString()", "java.lang.Integer.toString()"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getUserWS(Integer)": ["com.sapienter.jbilling.server.user.UserBL.getUserWS()"],
    "com.sapienter.jbilling.tools.DocumentationIndex.getText(String)": ["java.lang.String.substring(int,int)", "java.lang.String.lastIndexOf(int)", "java.lang.String.indexOf(java.lang.String)", "java.io.BufferedReader.readLine()"],
    "com.sapienter.jbilling.server.user.AchBL.getUser()": ["com.sapienter.jbilling.server.user.AchBL.getUser(com.sapienter.jbilling.server.user.db.AchDTO)"],
    "com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.sendViaXML(String)": ["org.apache.log4j.Category.debug(java.lang.Object)", "java.lang.StringBuffer.append(char)", "java.lang.StringBuffer.toString()", "java.net.URLConnection.getInputStream()", "java.net.URLConnection.setRequestProperty(java.lang.String,java.lang.String)", "java.io.OutputStream.close()", "java.lang.String.getBytes()", "java.io.InputStream.read()", "java.lang.StringBuffer.replace(int,int,java.lang.String)", "java.io.InputStream.close()", "java.net.URLConnection.getOutputStream()", "java.net.URLConnection.setConnectTimeout(int)", "java.net.URLConnection.setDoOutput(boolean)", "java.net.URL.openConnection()", "java.io.OutputStream.write(byte[])", "org.apache.log4j.Category.error(java.lang.Object)"],
    "com.sapienter.jbilling.server.item.ItemTypeWS.hashCode()": ["java.lang.String.hashCode()", "java.lang.Integer.hashCode()"],
    "com.sapienter.jbilling.server.user.UserSessionBean.setUserStatus(Integer, Integer, Integer)": ["java.util.Calendar.getInstance()", "com.sapienter.jbilling.server.process.AgeingBL.setUserStatus(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.util.Date)", "java.util.Calendar.getTime()"],
    "com.sapienter.jbilling.server.order.db.OrderDTO.getFieldValues()": ["com.sapienter.jbilling.server.order.db.OrderLineDTO.getDeleted()", "com.sapienter.jbilling.server.user.db.UserDTO.getUserName()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getQuantity()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getAmount()", "java.util.List.add(java.lang.Object)", "com.sapienter.jbilling.server.order.db.OrderDTO.getTotal()", "com.sapienter.jbilling.server.item.db.ItemDTO.getId()", "com.sapienter.jbilling.server.item.db.ItemDTO.getInternalNumber()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getPrice()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getDescription()", "java.util.List.size()", "com.sapienter.jbilling.server.user.db.UserDTO.getId()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getItem()", "com.sapienter.jbilling.server.util.db.AbstractDescription.getDescription()", "java.util.List.toArray(java.lang.Object[])"],
    "com.sapienter.jbilling.server.payment.PaymentBL.getPaymentsWithBalance(Integer)": ["java.util.Collections.sort(java.util.List,java.util.Comparator)", "java.util.Collections.reverse(java.util.List)", "com.sapienter.jbilling.server.payment.db.PaymentDAS.findWithBalance(java.lang.Integer)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getMediationEventsForOrder(Integer)": ["com.sapienter.jbilling.server.mediation.IMediationSessionBean.getEventsForOrder(java.lang.Integer)", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "com.sapienter.jbilling.server.mediation.MediationRecordBL.getWS(java.util.Collection)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.deleteItemCategory(Integer)": ["com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerId()", "com.sapienter.jbilling.server.item.ItemTypeBL.delete(java.lang.Integer)"],
    "com.sapienter.jbilling.server.order.db.OrderLineDTO.setQuantity(Double)": ["java.math.BigDecimal.setScale(int,int)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setQuantity(java.math.BigDecimal)"],
    "com.sapienter.jbilling.server.payment.PaymentBL.validate(PaymentInfoChequeDTO)": ["com.sapienter.jbilling.server.payment.db.PaymentInfoChequeDTO.getDate()", "com.sapienter.jbilling.server.payment.db.PaymentInfoChequeDTO.getNumber()"],
    "com.sapienter.jbilling.server.order.OrderBL.getList(Integer, Integer, Integer)": ["java.sql.Connection.close()", "javax.sql.RowSet.setInt(int,int)", "java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.list.ResultList.execute()", "com.sapienter.jbilling.server.list.ResultList.prepareStatement(java.lang.String)", "java.lang.Integer.intValue()"],
    "com.sapienter.jbilling.server.invoice.InvoiceBL.getLastByUser(Integer)": ["java.sql.ResultSet.wasNull()", "java.sql.ResultSet.next()", "java.sql.Connection.close()", "javax.sql.RowSet.setInt(int,int)", "java.sql.ResultSet.getInt(int)", "com.sapienter.jbilling.server.list.ResultList.execute()", "com.sapienter.jbilling.server.list.ResultList.prepareStatement(java.lang.String)", "java.lang.Integer.intValue()"],
    "com.sapienter.jbilling.server.user.UserBL.create(Integer, String, String, Integer, List, Integer, Integer, Integer)": ["java.util.HashSet.add(java.lang.Object)", "com.sapienter.jbilling.server.user.db.UserDTO.setUserName(java.lang.String)", "com.sapienter.jbilling.server.user.db.UserDTO.setCurrency(com.sapienter.jbilling.server.util.db.CurrencyDTO)", "com.sapienter.jbilling.server.user.db.UserDTO.setUserStatus(com.sapienter.jbilling.server.user.db.UserStatusDTO)", "java.util.Calendar.getInstance()", "com.sapienter.jbilling.server.user.db.CompanyDTO.getCurrencyId()", "com.sapienter.jbilling.server.user.db.UserDTO.setFailedAttempts(int)", "com.sapienter.jbilling.server.user.db.UserDTO.setLanguage(com.sapienter.jbilling.server.util.db.LanguageDTO)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.user.db.UserDTO.setSubscriberStatus(com.sapienter.jbilling.server.user.db.SubscriberStatusDTO)", "com.sapienter.jbilling.server.user.EntityBL.getEntity()", "com.sapienter.jbilling.server.user.UserBL.updateRoles(java.util.Set,java.lang.Integer)", "com.sapienter.jbilling.server.user.db.UserDTO.setCreateDatetime(java.util.Date)", "com.sapienter.jbilling.server.user.db.UserDTO.setCompany(com.sapienter.jbilling.server.user.db.CompanyDTO)", "com.sapienter.jbilling.server.user.db.UserDTO.setDeleted(int)", "com.sapienter.jbilling.server.user.db.UserDTO.setPassword(java.lang.String)", "com.sapienter.jbilling.server.util.audit.EventLogger.auditBySystem(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.util.Date)", "com.sapienter.jbilling.server.user.db.UserDTO.getId()", "com.sapienter.jbilling.server.user.db.CompanyDTO.getLanguageId()", "java.util.Calendar.getTime()", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)", "com.sapienter.jbilling.server.util.db.AbstractGenericStatusDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.user.db.UserDTO.getUserId()"],
    "com.sapienter.jbilling.server.mediation.db.MediationRecordStatusDAS.touch(List)": ["com.sapienter.jbilling.server.mediation.db.MediationRecordStatusDAS.initialize(com.sapienter.jbilling.server.mediation.db.MediationRecordStatusDTO)"],
    "com.sapienter.jbilling.server.pluggableTask.ProcessorEmailAlarm.unavailable(int)": ["com.sapienter.jbilling.server.pluggableTask.ProcessorEmailAlarm.canSendEmail(int)", "java.util.Date.getTime()"],
    "com.sapienter.jbilling.common.Util.truncateString(String, int)": ["java.lang.String.substring(int,int)", "java.lang.String.length()"],
    "com.sapienter.jbilling.server.process.db.BillingProcessDAS.findUsersToProcess(int)": ["createAlias(java.lang.String,java.lang.String)", "org.hibernate.criterion.Restrictions.lt(java.lang.String,java.lang.Integer)", "org.hibernate.Criteria.scroll()", "setProjection()", "getSession()", "add()", "createCriteria(java.lang.Class)", "org.hibernate.criterion.Projections.id()", "org.hibernate.criterion.Restrictions.eq(java.lang.String,int)", "setComment(java.lang.String)"],
    "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDAS.findAllByEntity(Integer)": ["org.hibernate.Query.setCacheable(boolean)", "org.hibernate.Query.list()", "getSession()", "org.hibernate.Query.setComment(java.lang.String)", "org.hibernate.Query.setParameter(java.lang.String,java.lang.Integer)", "createQuery(java.lang.String)"],
    "com.sapienter.jbilling.server.user.ContactBL.updateCreateFields(Hashtable, boolean)": ["java.util.Iterator.next()", "java.util.Hashtable.get(java.lang.Object)", "java.util.Iterator.hasNext()", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.user.ContactBL.createContactField(java.lang.Integer,java.lang.String)", "java.lang.Integer.valueOf(java.lang.String)", "com.sapienter.jbilling.server.user.contact.db.ContactFieldDAS.findByType(java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.user.contact.db.ContactFieldDTO.getContent()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getId()", "com.sapienter.jbilling.server.user.contact.db.ContactFieldDTO.setContent(java.lang.String)", "java.util.Hashtable.keySet()", "java.util.Set.iterator()", "com.sapienter.jbilling.server.user.contact.db.ContactFieldDTO.getId()"],
    "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskBL.set(Integer, Integer)": ["com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDAS.findByEntityType(java.lang.Integer,java.lang.Integer)"],
    "com.sapienter.jbilling.server.item.event.AbstractItemEvent.toString()": ["com.sapienter.jbilling.server.system.event.Event.getName()", "com.sapienter.jbilling.server.item.db.ItemDTO.getId()"],
    "com.sapienter.jbilling.server.invoice.task.FileInvoiceExportTask.composeLine(InvoiceDTO, InvoiceLineDTO, Integer)": ["org.apache.log4j.Category.debug(java.lang.Object)", "java.lang.StringBuffer.toString()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getCreateDatetime()", "com.sapienter.jbilling.server.invoice.task.FileInvoiceExportTask.emptyIfNull(java.lang.String)", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO.getDescription()", "com.sapienter.jbilling.server.user.ContactBL.set(java.lang.Integer)", "com.sapienter.jbilling.server.user.ContactBL.getEntity()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getOrganizationName()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getNumber()", "java.lang.StringBuffer.append(java.lang.String)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getStateProvince()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getCity()", "java.math.BigDecimal.round(java.math.MathContext)", "com.sapienter.jbilling.server.user.UserBL.getBalance(java.lang.Integer)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getPostalCode()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getAddress1()", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO.getQuantity()", "java.text.DateFormat.format(java.util.Date)", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO.getAmount()"],
    "com.sapienter.jbilling.server.pluggableTask.PluggableTaskSessionBean.update(Integer, PluggableTaskDTO)": ["com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskBL.update(java.lang.Integer,com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDTO)"],
    "com.sapienter.jbilling.server.pluggableTask.PaymentFakeTask.process(PaymentDTOEx)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.pluggableTask.PaymentFakeTask.doFakeAuthorization(com.sapienter.jbilling.server.payment.PaymentDTOEx,java.lang.String)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getNumber()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getCreditCard()", "com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase$Result.shouldCallOtherProcessors()"],
    "com.sapienter.jbilling.server.order.event.OrderAddedOnInvoiceEvent.toString()": ["com.sapienter.jbilling.server.order.event.OrderAddedOnInvoiceEvent.getName()"],
    "com.sapienter.jbilling.server.user.permisson.db.PermissionDTO.hashCode()": ["java.lang.Integer.hashCode()", "com.sapienter.jbilling.server.user.permisson.db.PermissionTypeDTO.hashCode()"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.isBillingRunning()": ["com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "com.sapienter.jbilling.server.process.IBillingProcessSessionBean.isBillingRunning()"],
    "com.sapienter.jbilling.server.user.AchBL.getDTO()": ["com.sapienter.jbilling.server.user.db.AchDTO.setAbaRouting(java.lang.String)", "com.sapienter.jbilling.server.user.db.AchDTO.setId(int)", "com.sapienter.jbilling.server.user.db.AchDTO.setBankName(java.lang.String)", "com.sapienter.jbilling.server.user.db.AchDTO.getAbaRouting()", "com.sapienter.jbilling.server.user.db.AchDTO.setAccountType(int)", "com.sapienter.jbilling.server.user.db.AchDTO.setBankAccount(java.lang.String)", "com.sapienter.jbilling.server.user.db.AchDTO.getId()", "com.sapienter.jbilling.server.user.db.AchDTO.setGatewayKey(java.lang.String)", "com.sapienter.jbilling.server.user.db.AchDTO.getBankAccount()", "com.sapienter.jbilling.server.user.db.AchDTO.getBankName()", "com.sapienter.jbilling.server.user.db.AchDTO.setAccountName(java.lang.String)", "com.sapienter.jbilling.server.user.db.AchDTO.getAccountName()", "com.sapienter.jbilling.server.user.db.AchDTO.getAccountType()", "com.sapienter.jbilling.server.user.db.AchDTO.getGatewayKey()"],
    "com.sapienter.jbilling.server.user.CreditCardBL.getPaymentMethod()": ["com.sapienter.jbilling.server.user.db.CreditCardDTO.getNumber()", "com.sapienter.jbilling.common.Util.getPaymentMethod(java.lang.String)"],
    "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskBL.createParameter(Integer, PluggableTaskParameterDTO)": ["java.util.Collection.add(java.lang.Object)", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDTO.getParameters()", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.pluggableTask.PluggableTask.invalidateRuleCache(java.lang.Integer)", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskParameterDTO.setTask(com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDTO)", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)"],
    "com.sapienter.jbilling.server.user.UserDTOEx.getLanguageId()": ["com.sapienter.jbilling.server.user.db.UserDTO.getLanguage()", "com.sapienter.jbilling.server.util.db.LanguageDTO.getId()"],
    "com.sapienter.jbilling.server.payment.PaymentBL.getList(Integer, Integer, Integer, Integer, boolean)": ["java.sql.Connection.close()", "javax.sql.RowSet.setInt(int,int)", "java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.list.ResultList.execute()", "com.sapienter.jbilling.server.list.ResultList.prepareStatement(java.lang.String)", "java.lang.Integer.intValue()"],
    "com.sapienter.jbilling.server.payment.PaymentBL.getMapDTO(Integer)": ["com.sapienter.jbilling.server.payment.PaymentInvoiceMapDTOEx.setCurrencyId(java.lang.Integer)", "com.sapienter.jbilling.server.payment.db.PaymentInvoiceMapDTO.getPayment()", "com.sapienter.jbilling.server.payment.db.PaymentInvoiceMapDTO.getInvoiceEntity()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getId()", "com.sapienter.jbilling.server.payment.PaymentInvoiceMapDTOEx.setPaymentId(java.lang.Integer)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getId()", "com.sapienter.jbilling.server.payment.db.PaymentInvoiceMapDTO.getId()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getCurrency()", "com.sapienter.jbilling.server.payment.db.PaymentInvoiceMapDTO.getCreateDatetime()", "com.sapienter.jbilling.server.payment.db.PaymentInvoiceMapDTO.getAmount()", "com.sapienter.jbilling.server.payment.PaymentInvoiceMapDTOEx.setInvoiceId(java.lang.Integer)", "com.sapienter.jbilling.server.util.db.CurrencyDTO.getId()"],
    "com.sapienter.jbilling.server.provisioning.ProvisioningProcessBL.deActivateOrders()": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.provisioning.ProvisioningProcessBL.deActivateOrder(com.sapienter.jbilling.server.order.db.OrderDTO)", "java.util.Iterator.next()", "java.util.List.iterator()", "java.util.Iterator.hasNext()", "com.sapienter.jbilling.server.order.db.OrderDAS.findToDeActiveOrders()"],
    "com.sapienter.jbilling.server.user.UserSessionBean.setContact(ContactDTOEx, Integer, Integer)": ["com.sapienter.jbilling.server.user.ContactBL.updateForUser(com.sapienter.jbilling.server.user.ContactDTOEx,java.lang.Integer,java.lang.Integer)"],
    "com.sapienter.jbilling.server.payment.db.PaymentDTO.setPaymentInfoCheque(PaymentInfoChequeDTO)": ["com.sapienter.jbilling.server.payment.db.PaymentInfoChequeDAS.findByPayment(com.sapienter.jbilling.server.payment.db.PaymentDTO)", "com.sapienter.jbilling.server.util.db.AbstractDAS.delete(java.lang.Object)", "com.sapienter.jbilling.server.payment.db.PaymentInfoChequeDTO.setPayment(com.sapienter.jbilling.server.payment.db.PaymentDTO)", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)"],
    "com.sapienter.jbilling.server.user.tasks.BasicSubscriptionStatusManagerTask.isLastRetry()": ["com.sapienter.jbilling.server.payment.db.PaymentDTO.getAttempt()", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.getRetries()", "com.sapienter.jbilling.server.process.ConfigurationBL.getEntity()", "java.lang.Integer.intValue()"],
    "com.sapienter.jbilling.server.report.db.ReportDTO.getParameterMap()": ["com.sapienter.jbilling.server.report.db.ReportParameterDTO.getName()", "com.sapienter.jbilling.server.report.db.ReportParameterDTO.getValue()", "java.util.Map.put(java.lang.Object,java.lang.Object)"],
    "com.sapienter.jbilling.server.process.AgeingBL.setSteps(Integer, Integer, AgeingDTOEx[])": ["com.sapienter.jbilling.server.process.AgeingDTOEx.getInUse()", "com.sapienter.jbilling.server.process.AgeingDTOEx.getStatusId()", "com.sapienter.jbilling.server.process.db.AgeingEntityStepDAS.create(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String,java.lang.Integer,int)", "com.sapienter.jbilling.server.process.db.AgeingEntityStepDTO.setFailedLoginMessage(java.lang.Integer,java.lang.String)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.process.AgeingDTOEx.getFailedLoginMessage()", "com.sapienter.jbilling.server.process.db.AgeingEntityStepDTO.getDays()", "com.sapienter.jbilling.server.process.db.AgeingEntityStepDTO.setWelcomeMessage(java.lang.Integer,java.lang.String)", "com.sapienter.jbilling.server.process.AgeingDTOEx.getWelcomeMessage()", "com.sapienter.jbilling.server.process.db.AgeingEntityStepDTO.getId()", "com.sapienter.jbilling.server.util.db.AbstractDAS.delete(java.lang.Object)", "com.sapienter.jbilling.server.process.db.AgeingEntityStepDTO.setDays(int)", "com.sapienter.jbilling.server.process.db.AgeingEntityStepDAS.findStep(java.lang.Integer,java.lang.Integer)"],
    "com.sapienter.jbilling.server.item.ItemBL.set(Integer)": ["com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)"],
    "com.sapienter.jbilling.server.mediation.task.SaveToFileMediationErrorHandler.getDirectory()": ["java.util.Map.get(java.lang.Object)", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription.getName()", "com.sapienter.jbilling.common.Util.getSysProp(java.lang.String)"],
    "com.sapienter.jbilling.server.user.tasks.BasicSubscriptionStatusManagerTask.paymentSuccessful(Integer, PaymentDTOEx)": ["com.sapienter.jbilling.server.user.UserBL.updateSubscriptionStatus(java.lang.Integer)", "com.sapienter.jbilling.server.user.tasks.BasicSubscriptionStatusManagerTask.getUser(java.lang.Integer)", "com.sapienter.jbilling.server.user.tasks.BasicSubscriptionStatusManagerTask.isPaymentApplicable(boolean)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.deleteUser(Integer)": ["com.sapienter.jbilling.server.user.UserBL.delete(java.lang.Integer)", "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerId()", "com.sapienter.jbilling.server.user.UserBL.set(java.lang.Integer)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.updateCurrencies(CurrencyWS[])": ["com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.updateCurrency(com.sapienter.jbilling.server.util.CurrencyWS)"],
    "com.sapienter.jbilling.server.order.db.OrderDTO.getCreatedBy()": ["com.sapienter.jbilling.server.order.db.OrderDTO.getBaseUserByCreatedBy()", "com.sapienter.jbilling.server.user.db.UserDTO.getId()"],
    "com.sapienter.jbilling.server.provisioning.ExternalProvisioning.postResults(Map, String)": ["java.util.Enumeration.nextElement()", "javax.jms.MapMessage.getPropertyNames()", "java.util.Enumeration.hasMoreElements()", "javax.jms.Session.createMapMessage()", "java.util.Map.entrySet()", "java.util.Map$Entry.getValue()", "org.springframework.jms.core.JmsTemplate.send(javax.jms.Destination,com.sapienter.jbilling.server.provisioning.ExternalProvisioning$1)", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "javax.jms.MapMessage.setObjectProperty(java.lang.String,java.lang.Object)", "javax.jms.MapMessage.getObjectProperty(java.lang.String)", "java.util.Map$Entry.getKey()", "javax.jms.MapMessage.setStringProperty(java.lang.String,java.lang.String)"],
    "com.sapienter.jbilling.server.invoice.db.InvoiceDAS.findQuantityForPeriodByItem(Integer, Integer, Date, Date)": ["com.sapienter.jbilling.server.invoice.db.InvoiceDAS.addItemCriteria(org.hibernate.Criteria,java.lang.Integer)", "com.sapienter.jbilling.server.invoice.db.InvoiceDAS.addUserCriteria(org.hibernate.Criteria,java.lang.Integer)", "com.sapienter.jbilling.server.invoice.db.InvoiceDAS.addPeriodCriteria(org.hibernate.Criteria,java.util.Date,java.util.Date)", "org.hibernate.criterion.Projections.sum(java.lang.String)", "getSession()", "createCriteria(java.lang.Class)", "org.hibernate.Criteria.uniqueResult()", "org.hibernate.Criteria.setProjection()"],
    "com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.buildCustomerProfileTransactionRequest(BigDecimal, CustomerProfileData, String, String)": ["com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.getMerchantAuthenticationXML()", "java.math.BigDecimal.toString()", "com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.endTag(java.lang.StringBuffer,java.lang.String)", "java.lang.StringBuffer.toString()", "com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.buildTag(java.lang.StringBuffer,java.lang.String,java.lang.String)", "com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.beginTag(java.lang.StringBuffer,java.lang.String)", "java.lang.String.equals(java.lang.Object)", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.getCustomerPaymentProfileId()", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.getCustomerProfileId()", "java.lang.StringBuffer.append(java.lang.String)"],
    "com.sapienter.jbilling.server.order.OrderBL.getPeriods(Integer, Integer)": ["com.sapienter.jbilling.server.util.db.AbstractDescription.getDescription(java.lang.Integer)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "java.util.Set.size()", "com.sapienter.jbilling.server.util.db.AbstractDescription.setDescription(java.lang.String)", "com.sapienter.jbilling.server.user.db.CompanyDTO.getOrderPeriods()"],
    "com.sapienter.jbilling.server.user.UserBL.convertEntitiesToWS(Collection)": ["java.util.Iterator.next()", "com.sapienter.jbilling.server.user.UserBL.entity2WS()", "java.util.Iterator.hasNext()", "java.util.Collection.size()", "java.util.Collection.iterator()"],
    "com.sapienter.jbilling.server.util.Util.string2float(String, Locale)": ["java.text.NumberFormat.getInstance(java.util.Locale)", "java.text.NumberFormat.parse(java.lang.String)", "java.lang.Number.floatValue()"],
    "com.sapienter.jbilling.tools.UploadData.readLine(BufferedReader)": ["java.lang.StringBuffer.append(char)", "java.lang.StringBuffer.toString()", "java.io.BufferedReader.read()", "java.lang.StringBuffer.length()"],
    "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDAS.filterByPhone(Integer, Integer, Integer, String)": ["org.hibernate.Criteria.list()", "createAlias(java.lang.String,java.lang.String)", "org.hibernate.criterion.Restrictions.eq(java.lang.String,java.lang.Integer)", "getSession()", "add()", "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDAS.equals(java.lang.String,java.lang.Object)", "createCriteria(java.lang.Class)", "add(org.hibernate.criterion.Criterion)"],
    "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO.getOrderPosition()": ["com.sapienter.jbilling.server.invoice.db.InvoiceLineTypeDTO.getOrderPosition()", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO.getInvoiceLineType()"],
    "com.sapienter.jbilling.server.util.Util.round(double, int)": ["java.lang.Math.round(double)", "java.lang.Math.pow(double,double)"],
    "com.sapienter.jbilling.server.notification.NotificationBL.parseParameters(String, HashMap)": ["com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "org.apache.velocity.app.VelocityEngine.evaluate(org.apache.velocity.VelocityContext,java.io.StringWriter,java.lang.String,java.lang.String)", "java.io.StringWriter.toString()"],
    "com.sapienter.jbilling.server.mediation.MediationSessionBean.getAllConfigurations(Integer)": ["com.sapienter.jbilling.server.mediation.db.MediationConfigurationDAS.findAllByEntity(java.lang.Integer)"],
    "com.sapienter.jbilling.server.notification.NotificationBL.initializeMessage(Integer, Integer)": ["com.sapienter.jbilling.server.user.db.UserDTO.getUserName()", "com.sapienter.jbilling.server.user.ContactBL.getAll(java.lang.Integer)", "com.sapienter.jbilling.server.user.ContactBL.set(java.lang.Integer)", "com.sapienter.jbilling.server.user.ContactBL.getEntity()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getOrganizationName()", "java.util.Map.values()", "java.util.Iterator.hasNext()", "com.sapienter.jbilling.server.user.UserBL.getEntity()", "com.sapienter.jbilling.server.notification.MessageDTO.addParameter(java.lang.String,java.lang.Object)", "java.lang.Integer.toString()", "com.sapienter.jbilling.server.user.contact.db.ContactFieldDTO.getContent()", "com.sapienter.jbilling.server.user.UserBL.getCreditCard()", "com.sapienter.jbilling.server.user.ContactDTOEx.getFieldsTable()", "java.util.List.get(int)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getLastName()", "java.util.Iterator.next()", "com.sapienter.jbilling.server.user.ContactBL.setEntity(java.lang.Integer)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getStateProvince()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getCity()", "com.sapienter.jbilling.server.user.db.UserDTO.getPassword()", "com.sapienter.jbilling.server.user.contact.db.ContactFieldDTO.getType()", "com.sapienter.jbilling.server.user.contact.db.ContactFieldTypeDTO.getPromptKey()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getFirstName()", "java.util.List.size()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getAddress2()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getPostalCode()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getAddress1()", "com.sapienter.jbilling.server.user.db.UserDTO.getUserId()", "java.util.Collection.iterator()"],
    "com.sapienter.jbilling.server.util.Util.formatMoney(BigDecimal, Integer, Integer, boolean)": ["java.lang.String.substring(int)", "java.text.NumberFormat.format(double)", "java.lang.String.substring(int,int)", "java.util.ResourceBundle.getBundle(java.lang.String,java.util.Locale)", "com.sapienter.jbilling.server.util.db.CurrencyDTO.getSymbol()", "java.lang.Character.toString()", "java.util.ResourceBundle.getString(java.lang.String)", "com.sapienter.jbilling.server.item.CurrencyBL.getEntity()", "java.lang.Integer.intValue()", "com.sapienter.jbilling.server.util.db.CurrencyDTO.getCode()", "java.lang.String.charAt(int)", "java.text.NumberFormat.getNumberInstance(java.util.Locale)", "java.lang.Integer.valueOf(java.lang.String)", "java.text.DecimalFormat.applyPattern(java.lang.String)", "java.math.BigDecimal.doubleValue()", "com.sapienter.jbilling.server.user.UserBL.getLocale()", "java.lang.String.length()"],
    "com.sapienter.jbilling.server.user.UserSessionBean.updateCreditCard(Integer, Integer, CreditCardDTO)": ["com.sapienter.jbilling.server.user.UserSessionBean.updateCreditCard(com.sapienter.jbilling.server.user.db.UserDTO,com.sapienter.jbilling.server.user.db.CreditCardDTO,java.lang.Integer)", "com.sapienter.jbilling.server.user.UserBL.getEntity()"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentsGatewayTask.preAuth(PaymentDTOEx)": ["com.sapienter.jbilling.server.payment.PaymentDTOEx.getAch()", "com.sapienter.jbilling.server.payment.tasks.PaymentsGatewayTask.getChargeData(com.sapienter.jbilling.server.payment.PaymentDTOEx,int,boolean)", "com.sapienter.jbilling.server.payment.PaymentAuthorizationBL.create(com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO,java.lang.Integer)", "com.sapienter.jbilling.server.payment.tasks.PaymentsGatewayTask.validateParameters()", "com.sapienter.jbilling.server.payment.tasks.PaymentsGatewayTask.processPGRequest(java.lang.String)", "org.apache.log4j.Logger.getLogger(java.lang.Class)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getId()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getCreditCard()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.setAuthorization(com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO)", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)", "org.apache.log4j.Category.error(java.lang.Object)", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getCheque()"],
    "com.sapienter.jbilling.server.process.db.ProcessRunUserDAS.getUser(Integer, Integer)": ["org.hibernate.criterion.Restrictions.eq(java.lang.String,java.lang.Integer)", "getSession()", "add()", "createCriteria(java.lang.Class)", "org.hibernate.Criteria.uniqueResult()"],
    "com.sapienter.jbilling.server.util.Bootstrap.schedulePluggableTasks()": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.client.process.Scheduler.scheduleJob(com.sapienter.jbilling.server.process.task.JobDetail,com.sapienter.jbilling.client.process.Trigger)", "org.apache.log4j.Category.warn(java.lang.Object)", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskManager.getNextClass()", "com.sapienter.jbilling.client.process.JobScheduler.getScheduler()", "com.sapienter.jbilling.server.user.db.CompanyDAS.findEntities()", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskManager.getAllTasks()", "com.sapienter.jbilling.server.process.task.IScheduledTask.getTrigger()", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.process.task.IScheduledTask.getTaskName()", "java.util.List.size()", "com.sapienter.jbilling.server.process.task.IScheduledTask.getJobDetail()", "com.sapienter.jbilling.client.process.JobScheduler.getInstance()", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentPaypalExternalTask.formatDollarAmount(BigDecimal)": ["java.math.BigDecimal.setScale(int,java.math.RoundingMode)", "java.math.BigDecimal.abs()", "java.math.BigDecimal.toPlainString()"],
    "com.sapienter.jbilling.server.user.tasks.RulesValidatePurchaseTask.validate(CustomerDTO, List, List, ValidatePurchaseWS, List)": ["com.sapienter.jbilling.server.pluggableTask.PluggableTask.readKnowledgeBase()", "java.util.List.isEmpty()", "java.util.Hashtable.values()", "com.sapienter.jbilling.server.user.ValidatePurchaseWS.getMessage()", "org.drools.runtime.StatelessKnowledgeSession.setGlobal(java.lang.String,com.sapienter.jbilling.server.user.tasks.RulesValidatePurchaseTask$ValidatePurchase)", "java.util.List.addAll(java.util.Collection)", "com.sapienter.jbilling.server.user.ContactBL.getDTO()", "java.util.List.add(java.lang.Object)", "com.sapienter.jbilling.server.user.ContactBL.set(java.lang.Integer)", "com.sapienter.jbilling.server.user.ValidatePurchaseWS.setMessage(java.lang.String[])", "com.sapienter.jbilling.server.order.OrderBL.getActiveRecurringByUser(java.lang.Integer)", "com.sapienter.jbilling.server.user.tasks.RulesValidatePurchaseTask$ValidatePurchase.getMessages()", "org.drools.runtime.StatelessKnowledgeSession.execute(java.util.List)", "com.sapienter.jbilling.server.order.db.OrderDTO.getLines()", "java.util.List.size()", "com.sapienter.jbilling.server.user.db.CustomerDTO.getBaseUser()", "com.sapienter.jbilling.server.user.ContactDTOEx.getFieldsTable()", "com.sapienter.jbilling.server.order.OrderBL.getCurrentOrder(java.lang.Integer,java.util.Date)", "java.math.BigDecimal.add(java.math.BigDecimal)", "com.sapienter.jbilling.server.user.db.UserDTO.getId()", "org.drools.KnowledgeBase.newStatelessKnowledgeSession()", "com.sapienter.jbilling.server.user.ValidatePurchaseWS.getAuthorized()", "java.util.Arrays.copyOf(java.lang.Object[],int)", "java.util.List.toArray(java.lang.Object[])"],
    "com.sapienter.jbilling.server.util.PreferenceBL.init()": ["com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)"],
    "com.sapienter.jbilling.server.item.ItemBL.updateExcludedTypes(ItemDTO)": ["com.sapienter.jbilling.server.item.db.ItemDTO.getExcludedTypes()", "com.sapienter.jbilling.server.item.db.ItemDTO.getExcludedTypeIds()", "java.util.Set.add(java.lang.Object)", "com.sapienter.jbilling.server.item.ItemTypeBL.getEntity()", "java.util.Set.clear()", "com.sapienter.jbilling.server.item.ItemTypeBL.set(java.lang.Integer)"],
    "com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.buildUpdateCustomerPaymentProfileRequest(CustomerProfileData)": ["com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.getMerchantAuthenticationXML()", "com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.endTag(java.lang.StringBuffer,java.lang.String)", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.getCreditCardNumber()", "java.lang.StringBuffer.toString()", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.getPaymentType()", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.getAccountType()", "com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.buildTag(java.lang.StringBuffer,java.lang.String,java.lang.String)", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.getLastName()", "java.lang.StringBuffer.append(java.lang.String)", "com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.buildTagIfNotEmpty(java.lang.StringBuffer,java.lang.String,java.lang.String)", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.getFirstName()", "com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.beginTag(java.lang.StringBuffer,java.lang.String)", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.getRoutingNumber()", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.getCustomerProfileId()", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.getCountry()", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.getPhoneNumber()", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.getState()", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.getCreditCardCode()", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.getAccountName()", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.getCity()", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.getFaxNumber()", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.getCreditCardExpirationDate()", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.getCompany()", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.getAccountNumber()", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.getBankName()", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.getCustomerPaymentProfileId()", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.getAddress()"],
    "com.sapienter.jbilling.server.user.ContactBL.update(ContactDTOEx)": ["com.sapienter.jbilling.server.user.contact.db.ContactDTO.getFaxAreaCode()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.setEmail(java.lang.String)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.setFaxAreaCode(java.lang.Integer)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.setLastName(java.lang.String)", "com.sapienter.jbilling.server.user.ContactBL.setEntityFromUser(java.lang.Integer)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getInitial()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.setPhoneNumber(java.lang.String)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getUserId()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getFaxNumber()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getOrganizationName()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getInclude()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.setPhoneAreaCode(java.lang.Integer)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getEmail()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.setPostalCode(java.lang.String)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getTitle()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getId()", "com.sapienter.jbilling.server.user.ContactDTOEx.getFieldsTable()", "com.sapienter.jbilling.server.util.audit.EventLogger.auditBySystem(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.util.Date)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getFaxCountryCode()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.setFaxNumber(java.lang.String)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getLastName()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.setCity(java.lang.String)", "com.sapienter.jbilling.server.system.event.EventManager.process(com.sapienter.jbilling.server.system.event.Event)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.setAddress2(java.lang.String)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getPhoneCountryCode()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getPhoneNumber()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.setPhoneCountryCode(java.lang.Integer)", "com.sapienter.jbilling.server.user.ContactBL.updateCreateFields(java.util.Hashtable,boolean)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.setCountryCode(java.lang.String)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.setInitial(java.lang.String)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getStateProvince()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getCity()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getPhoneAreaCode()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getCountryCode()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.setInclude(java.lang.Integer)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getFirstName()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.setStateProvince(java.lang.String)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getAddress2()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.setFirstName(java.lang.String)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getPostalCode()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getAddress1()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.setOrganizationName(java.lang.String)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.setAddress1(java.lang.String)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.setFaxCountryCode(java.lang.Integer)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.setTitle(java.lang.String)"],
    "com.sapienter.jbilling.server.notification.barcode.BarcodeFactory.upcE(Checksum, TextPlacement)": ["org.krysalis.barcode4j.impl.upcean.UPCEBean.setMsgPosition(org.krysalis.barcode4j.HumanReadablePlacement)", "org.krysalis.barcode4j.impl.upcean.UPCEBean.setChecksumMode(org.krysalis.barcode4j.ChecksumMode)", "com.sapienter.jbilling.server.notification.barcode.BarcodeFactory.getPlacement(com.sapienter.jbilling.server.notification.barcode.TextPlacement)", "com.sapienter.jbilling.server.notification.barcode.BarcodeFactory.getChecksum(com.sapienter.jbilling.server.notification.barcode.Checksum)"],
    "com.sapienter.jbilling.server.item.ItemDTOEx.equals(Object)": ["com.sapienter.jbilling.server.item.ItemDTOEx.isIdentical(java.lang.Object)", "java.lang.Integer.equals(java.lang.Object)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.createOrderPreAuthorize(OrderWS)": ["com.sapienter.jbilling.server.order.db.OrderDTO.getCurrencyId()", "com.sapienter.jbilling.server.user.CreditCardBL.validatePreAuthorization(java.lang.Integer,java.lang.Integer,com.sapienter.jbilling.server.user.db.CreditCardDTO,java.math.BigDecimal,java.lang.Integer)", "com.sapienter.jbilling.server.order.OrderWS.getUserId()", "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCreditCard(java.lang.Integer)", "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.createOrder(com.sapienter.jbilling.server.order.OrderWS)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.user.UserBL.getEntityId(java.lang.Integer)", "com.sapienter.jbilling.server.order.db.OrderDTO.getTotal()"],
    "com.sapienter.jbilling.server.order.OrderSessionBean.getOrderEx(Integer, Integer)": ["com.sapienter.jbilling.server.order.db.OrderDTO.touch()", "java.util.Collections.sort(java.util.List,java.util.Comparator)", "com.sapienter.jbilling.server.order.db.OrderDTO.addExtraFields(java.lang.Integer)", "com.sapienter.jbilling.server.order.db.OrderDTO.getLines()", "com.sapienter.jbilling.server.util.db.AbstractDAS.detach(java.lang.Object)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)"],
    "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskWS.getOwningEntityId()": ["com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskWS.getId()", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDTO.getEntityId()", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskBL.getDTO()"],
    "com.sapienter.jbilling.server.user.partner.PartnerBL.update(Integer, Partner)": ["com.sapienter.jbilling.server.user.partner.PartnerBL.setRelatedClerk(com.sapienter.jbilling.server.user.partner.db.Partner,java.lang.Integer)", "com.sapienter.jbilling.server.user.partner.db.Partner.getRelatedClerkUserId()", "com.sapienter.jbilling.server.util.audit.EventLogger.audit(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.util.Date)", "com.sapienter.jbilling.server.user.partner.db.Partner.getBaseUser()", "com.sapienter.jbilling.server.user.db.UserDTO.getId()", "com.sapienter.jbilling.server.user.partner.db.Partner.getId()", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)"],
    "com.sapienter.jbilling.server.mediation.MediationSessionBean.handleMediationErrors(Record, List, Integer, MediationConfiguration)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.mediation.task.IMediationErrorHandler.process(com.sapienter.jbilling.server.mediation.Record,java.util.List,java.util.Date,com.sapienter.jbilling.server.mediation.db.MediationConfiguration)", "org.springframework.util.StopWatch.start()", "java.util.List.size()", "org.springframework.util.StopWatch.stop()", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskManager.getNextClass()", "org.springframework.util.StopWatch.getTotalTimeMillis()", "org.apache.log4j.Category.error(java.lang.Object)"],
    "com.sapienter.jbilling.server.util.db.InternationalDescriptionDAS.create(String, Integer, String, Integer, String)": ["com.sapienter.jbilling.server.util.db.JbillingTable.getId()", "com.sapienter.jbilling.server.util.db.JbillingTableDAS.findByName(java.lang.String)", "com.sapienter.jbilling.server.util.db.InternationalDescriptionDTO.setId(com.sapienter.jbilling.server.util.db.InternationalDescriptionId)", "com.sapienter.jbilling.server.util.db.InternationalDescriptionDTO.setContent(java.lang.String)", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)"],
    "com.sapienter.jbilling.server.user.RoleBL.setDescription(Integer, String)": ["com.sapienter.jbilling.server.util.db.AbstractDescription.setDescription(java.lang.String,java.lang.Integer,java.lang.String)"],
    "com.sapienter.jbilling.server.mediation.Record.toString()": ["java.lang.StringBuilder.append(java.lang.Object)", "java.lang.StringBuilder.append(int)", "java.lang.StringBuilder.append(java.lang.StringBuffer)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.toString()", "java.lang.StringBuilder.append(char)"],
    "com.sapienter.jbilling.server.notification.NotificationBL.generatePaperInvoiceAsFile(InvoiceDTO)": ["com.sapienter.jbilling.server.pluggableTask.PluggableTask.initializeParamters(com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDTO)", "com.sapienter.jbilling.server.pluggableTask.PaperInvoiceNotificationTask.getPDFFile(com.sapienter.jbilling.server.user.db.UserDTO,com.sapienter.jbilling.server.notification.MessageDTO)", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.user.db.UserDTO.getLanguageIdField()", "com.sapienter.jbilling.server.notification.NotificationBL.getInvoicePaperMessage(java.lang.Integer,java.lang.Integer,java.lang.Integer,com.sapienter.jbilling.server.invoice.db.InvoiceDTO)", "com.sapienter.jbilling.server.user.db.UserDTO.getEntity()", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskBL.set(java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getBaseUser()", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskBL.getDTO()"],
    "com.sapienter.jbilling.server.process.db.BillingProcessDAS.findBillableUsersWithOrdersToProcess(int, Date)": ["getSession()", "org.hibernate.Query.setParameter(java.lang.String,java.lang.Integer)", "org.hibernate.Query.setParameter(java.lang.String,int)", "createQuery(java.lang.String)", "org.hibernate.Query.scroll()", "org.hibernate.Query.setParameter(java.lang.String,java.util.Date)"],
    "com.sapienter.jbilling.server.order.OrderBL.addItem(Integer, Integer, Integer, Integer, Integer, Integer, List)": ["com.sapienter.jbilling.server.order.OrderBL.addItem(java.lang.Integer,java.math.BigDecimal,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.util.List)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getUserInvoicesByDate(Integer, String, String)": ["com.sapienter.jbilling.common.Util.parseDate(java.lang.String)", "com.sapienter.jbilling.server.invoice.InvoiceBL.getUserInvoicesByDate(java.lang.Integer,java.util.Date,java.util.Date)"],
    "com.sapienter.jbilling.server.payment.PaymentSessionBean.deletePayment(Integer)": ["com.sapienter.jbilling.server.payment.PaymentBL.delete()", "org.apache.log4j.Category.warn(java.lang.Object,java.lang.Throwable)"],
    "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskParameterDTO.getValue()": ["com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskParameterDTO.populateValue()"],
    "com.sapienter.jbilling.server.pluggableTask.PaymentFakeTask.initializeParamters(PluggableTaskDTO)": ["java.util.Map.get(java.lang.Object)", "com.sapienter.jbilling.server.pluggableTask.PluggableTask.initializeParamters(com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDTO)", "com.sapienter.jbilling.server.pluggableTask.PaymentFakeTask.createFilter(java.lang.String)", "java.lang.Boolean.parseBoolean(java.lang.String)", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription.getName()"],
    "com.sapienter.jbilling.server.pluggableTask.PluggableTask.getParameter(String, Date)": ["java.util.Map.get(java.lang.Object)", "org.apache.commons.lang.StringUtils.isNotBlank(java.lang.String)", "java.text.DateFormat.parse(java.lang.String)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.createMediationConfiguration(MediationConfigurationWS)": ["com.sapienter.jbilling.server.mediation.MediationConfigurationBL.getDTO(com.sapienter.jbilling.server.mediation.MediationConfigurationWS)", "com.sapienter.jbilling.server.mediation.IMediationSessionBean.createConfiguration(com.sapienter.jbilling.server.mediation.db.MediationConfiguration)", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)"],
    "com.sapienter.jbilling.server.user.db.CompanyDTO.getLanguageId()": ["com.sapienter.jbilling.server.util.db.LanguageDTO.getId()"],
    "com.sapienter.jbilling.server.item.PricingField.getPricingFieldsValue(String)": ["java.lang.String.split(java.lang.String)", "java.util.List.add(java.lang.Object)", "java.lang.String.equals(java.lang.Object)", "java.util.List.toArray(java.lang.Object[])"],
    "com.sapienter.jbilling.server.util.Util.formatDate(Date, Integer)": ["java.util.ResourceBundle.getBundle(java.lang.String,java.util.Locale)", "java.util.ResourceBundle.getString(java.lang.String)", "java.text.DateFormat.format(java.util.Date)", "com.sapienter.jbilling.server.user.UserBL.getLocale()"],
    "com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.parseCreateCustomerPaymentProfileResponse(String)": ["com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.throwDuplicateProfileError(java.lang.String,java.lang.String)", "javax.xml.parsers.DocumentBuilder.parse(org.xml.sax.InputSource)", "org.xml.sax.InputSource.setCharacterStream(java.io.Reader)", "org.w3c.dom.Node.normalize()", "javax.xml.parsers.DocumentBuilderFactory.newInstance()", "org.w3c.dom.Document.getDocumentElement()", "java.lang.String.format(java.lang.String,java.lang.Object[])", "org.w3c.dom.NodeList.item(int)", "org.w3c.dom.Node.getChildNodes()", "org.w3c.dom.Node.getNodeValue()", "java.lang.String.equals(java.lang.Object)", "javax.xml.parsers.DocumentBuilderFactory.newDocumentBuilder()", "org.apache.log4j.Category.error(java.lang.Object)"],
    "com.sapienter.jbilling.server.invoice.db.InvoiceDAS.addUserCriteria(Criteria, Integer)": ["createAlias(java.lang.String,java.lang.String)", "org.hibernate.criterion.Restrictions.eq(java.lang.String,java.lang.Integer)", "add()", "org.hibernate.Criteria.add()", "org.hibernate.criterion.Restrictions.eq(java.lang.String,int)"],
    "com.sapienter.jbilling.server.order.db.OrderLineDTO.getEditable()": ["com.sapienter.jbilling.server.order.db.OrderLineTypeDTO.getEditable()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getOrderLineType()"],
    "com.sapienter.jbilling.server.user.partner.PartnerPayoutWS.setBalanceLeft(BigDecimal)": ["java.math.BigDecimal.toString()"],
    "com.sapienter.jbilling.server.user.UserBL.getPermissions()": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.user.permisson.db.PermissionUserDTO.isGranted()", "com.sapienter.jbilling.server.user.db.UserDTO.getPermissions()", "java.util.Collections.sort(java.util.List,java.util.Comparator)", "java.util.List.contains(java.lang.Object)", "java.util.List.addAll(java.util.Collection)", "com.sapienter.jbilling.server.user.db.UserDTO.getRoles()", "com.sapienter.jbilling.server.user.permisson.db.PermissionUserDTO.getPermission()", "java.util.List.add(java.lang.Object)", "com.sapienter.jbilling.server.user.permisson.db.RoleDTO.getPermissions()", "java.util.List.remove(java.lang.Object)", "com.sapienter.jbilling.server.user.db.UserDTO.getUserId()"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.updateAch(Integer, AchDTO)": ["com.sapienter.jbilling.server.entity.AchDTO.getAbaRouting()", "com.sapienter.jbilling.server.entity.AchDTO.getBankAccount()", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "com.sapienter.jbilling.server.user.IUserSessionBean.updateACH(java.lang.Integer,java.lang.Integer,com.sapienter.jbilling.server.user.db.AchDTO)", "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerId()"],
    "com.sapienter.jbilling.server.invoice.InvoiceEntityComparator.compare(Object, Object)": ["java.lang.Integer.compareTo(java.lang.Integer)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getId()"],
    "com.sapienter.jbilling.server.user.UserBL.sendLostPassword(Integer, Integer, Integer)": ["com.sapienter.jbilling.server.notification.INotificationSessionBean.notify(java.lang.Integer,com.sapienter.jbilling.server.notification.MessageDTO)", "com.sapienter.jbilling.server.notification.NotificationBL.getForgetPasswordEmailMessage(java.lang.Integer,java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getNumberOfMediationRecordsByStatuses()": ["com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerCompanyId()", "java.util.Map.size()", "java.util.Map.entrySet()", "java.util.Map$Entry.getValue()", "com.sapienter.jbilling.server.mediation.IMediationSessionBean.getNumberOfRecordsByStatuses(java.lang.Integer)", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "java.util.List.add(java.lang.Object)", "com.sapienter.jbilling.server.util.db.AbstractGenericStatus.getId()", "java.util.Map$Entry.getKey()"],
    "com.sapienter.jbilling.server.notification.MessageDTO.validate()": ["java.util.List.isEmpty()"],
    "com.sapienter.jbilling.server.process.db.BillingProcessDAS.reset()": ["getSession()", "flush()", "clear()"],
    "com.sapienter.jbilling.server.order.db.OrderLineDTO.setDescription(String)": ["java.lang.String.substring(int,int)", "org.apache.log4j.Category.warn(java.lang.Object)", "java.lang.String.length()"],
    "com.sapienter.jbilling.server.item.tasks.RulesPricingTask.getPrice(Integer, BigDecimal, Integer, Integer, List, BigDecimal, OrderDTO)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.item.tasks.PricingManager.getPrice()", "com.sapienter.jbilling.server.util.DTOFactory.getUserDTOEx(java.lang.Integer)", "com.sapienter.jbilling.server.pluggableTask.PluggableTask.readKnowledgeBase()", "java.util.List.isEmpty()", "java.util.Hashtable.values()", "java.util.List.addAll(java.util.Collection)", "com.sapienter.jbilling.server.user.ContactBL.getDTO()", "java.util.List.add(java.lang.Object)", "com.sapienter.jbilling.server.user.ContactBL.set(java.lang.Integer)", "com.sapienter.jbilling.server.order.OrderBL.getActiveRecurringByUser(java.lang.Integer)", "org.drools.runtime.StatelessKnowledgeSession.setGlobal(java.lang.String,com.sapienter.jbilling.server.item.tasks.PricingManager)", "org.drools.runtime.StatelessKnowledgeSession.execute(java.util.List)", "com.sapienter.jbilling.server.order.db.OrderDTO.getLines()", "com.sapienter.jbilling.server.user.ContactDTOEx.getFieldsTable()", "org.drools.KnowledgeBase.newStatelessKnowledgeSession()"],
    "com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.updateCustomerProfile(CustomerProfileData)": ["com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.sendViaXML(java.lang.String)", "com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.buildUpdateCustomerPaymentProfileRequest(com.sapienter.jbilling.server.payment.tasks.CustomerProfileData)", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.setCustomerPaymentProfileId(java.lang.String)", "org.apache.log4j.Category.warn(java.lang.Object)", "com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.parseCreateCustomerPaymentProfileResponse(java.lang.String)", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.getCustomerPaymentProfileId()", "com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.buildUpdateCustomerProfileRequest(com.sapienter.jbilling.server.payment.tasks.CustomerProfileData)", "com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.buildCreateCustomerPaymentProfileRequest(com.sapienter.jbilling.server.payment.tasks.CustomerProfileData)", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.getCustomerProfileId()", "com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.parseSimpleResponse(java.lang.String,java.lang.String)"],
    "com.sapienter.jbilling.common.Util.getSysPropBooleanTrue(String)": ["java.lang.Boolean.parseBoolean(java.lang.String)", "com.sapienter.jbilling.common.SystemProperties.getPropertiesFile()", "java.io.File.getPath()", "com.sapienter.jbilling.common.SystemProperties.get(java.lang.String,java.lang.String)", "com.sapienter.jbilling.common.SystemProperties.getSystemProperties()", "org.apache.log4j.Category.error(java.lang.Object)"],
    "com.sapienter.jbilling.server.customer.CustomerBL.getSubAccountsList(Integer)": ["java.sql.Connection.close()", "javax.sql.RowSet.setInt(int,int)", "com.sapienter.jbilling.server.user.db.CustomerDTO.getId()", "com.sapienter.jbilling.server.list.ResultList.execute()", "com.sapienter.jbilling.server.list.ResultList.prepareStatement(java.lang.String)", "com.sapienter.jbilling.server.user.db.UserDTO.getCustomer()", "com.sapienter.jbilling.server.user.UserBL.getEntity()"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask.getMerchantId()": ["com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase.ensureGetParameter(java.lang.String)"],
    "com.sapienter.jbilling.server.item.ItemDTOEx.getStrTypes()": ["java.util.List.add(java.lang.Object)", "java.lang.Integer.toString()"],
    "com.sapienter.jbilling.server.pluggableTask.PaymentFakeTask.isPreAuthTransactionId(String)": ["java.lang.String.startsWith(java.lang.String)"],
    "com.sapienter.jbilling.server.user.UserBL.getUserTransitionsById(Integer, Integer, Date)": ["java.sql.ResultSet.next()", "java.util.Iterator.next()", "javax.sql.RowSet.setInt(int,int)", "com.sapienter.jbilling.server.user.UserTransitionResponseWS.setId(java.lang.Integer)", "com.sapienter.jbilling.server.user.UserTransitionResponseWS.setTransitionDate(java.util.Date)", "org.apache.log4j.Category.info(java.lang.Object)", "java.sql.ResultSet.getInt(int)", "com.sapienter.jbilling.server.list.ResultList.execute()", "java.util.List.add(java.lang.Object)", "com.sapienter.jbilling.server.list.ResultList.prepareStatement(java.lang.String)", "java.util.Iterator.hasNext()", "java.lang.Integer.intValue()", "java.sql.ResultSet.getString(int)", "com.sapienter.jbilling.server.user.UserTransitionResponseWS.setUserId(java.lang.Integer)", "java.sql.ResultSet.getDate(int)", "com.sapienter.jbilling.server.user.UserTransitionResponseWS.setToStatusId(java.lang.Integer)", "java.sql.Connection.close()", "java.util.List.size()", "javax.sql.RowSet.setDate(int,java.sql.Date)", "java.util.List.iterator()", "com.sapienter.jbilling.server.user.UserTransitionResponseWS.setFromStatusId(java.lang.Integer)", "java.util.Date.getTime()", "java.lang.Integer.parseInt(java.lang.String)"],
    "com.sapienter.jbilling.server.process.BillingProcessBL.create(BillingProcessDTO)": ["com.sapienter.jbilling.server.process.db.BillingProcessDTO.getId()", "com.sapienter.jbilling.server.process.db.PeriodUnitDTO.getId()", "com.sapienter.jbilling.server.process.db.BillingProcessDTO.getPeriodValue()", "com.sapienter.jbilling.server.process.db.BillingProcessDTO.setIsReview(int)", "com.sapienter.jbilling.server.process.db.BillingProcessDTO.getEntity()", "com.sapienter.jbilling.server.process.db.BillingProcessDTO.getBillingDate()", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.setReviewStatus(int)", "com.sapienter.jbilling.server.process.db.BillingProcessDTO.getRetriesToDo()", "com.sapienter.jbilling.server.process.ConfigurationBL.getEntity()", "com.sapienter.jbilling.server.process.db.ProcessRunDAS.create(com.sapienter.jbilling.server.process.db.BillingProcessDTO,java.util.Date,java.lang.Integer,com.sapienter.jbilling.server.process.db.ProcessRunStatusDTO)", "com.sapienter.jbilling.server.process.db.BillingProcessDTO.getPeriodUnit()", "com.sapienter.jbilling.server.process.db.BillingProcessDAS.create(com.sapienter.jbilling.server.user.db.CompanyDTO,java.util.Date,java.lang.Integer,java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.process.db.BillingProcessDTO.getIsReview()", "com.sapienter.jbilling.server.util.db.AbstractGenericStatusDAS.find(java.io.Serializable)"],
    "com.sapienter.jbilling.server.user.partner.PartnerWS.setTotalPayouts(BigDecimal)": ["java.math.BigDecimal.toString()"],
    "com.sapienter.jbilling.server.item.ItemTypeBL.delete(Integer)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.util.db.AbstractDAS.clear()", "com.sapienter.jbilling.server.util.DescriptionBL.delete(java.lang.String,java.lang.Integer)", "com.sapienter.jbilling.server.util.audit.EventLogger.audit(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.util.Date)", "com.sapienter.jbilling.server.item.db.ItemTypeDTO.getId()", "com.sapienter.jbilling.server.util.db.AbstractDAS.flush()", "com.sapienter.jbilling.server.util.db.AbstractDAS.delete(java.lang.Object)", "com.sapienter.jbilling.server.item.ItemTypeBL.isInUse()"],
    "com.sapienter.jbilling.server.user.UserSessionBean.getPartnerLastPayoutDTO(Integer)": ["com.sapienter.jbilling.server.user.partner.PartnerBL.getLastPayoutDTO(java.lang.Integer)"],
    "com.sapienter.jbilling.server.order.OrderHelper.purge(OrderDTO, Integer)": ["java.util.Iterator.next()", "java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.order.db.OrderDTO.getLines()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getItemId()", "java.util.List.iterator()", "java.util.Iterator.hasNext()", "java.util.Iterator.remove()"],
    "com.sapienter.jbilling.server.report.ReportBL.renderHtml(HttpServletResponse, HttpSession, String)": ["com.sapienter.jbilling.server.report.ReportBL.run()", "net.sf.jasperreports.engine.export.JRHtmlExporter.setParameter(net.sf.jasperreports.engine.JasperPrint)", "javax.servlet.http.HttpServletResponse.getWriter()", "net.sf.jasperreports.engine.export.JRHtmlExporter.setParameter(java.lang.String)", "net.sf.jasperreports.engine.export.JRHtmlExporter.exportReport()", "javax.servlet.http.HttpSession.setAttribute(java.lang.String,java.util.Map)", "javax.servlet.http.HttpServletResponse.setContentType(java.lang.String)", "net.sf.jasperreports.engine.export.JRHtmlExporter.setParameter(java.util.Map)", "net.sf.jasperreports.engine.export.JRHtmlExporter.setParameter(java.io.PrintWriter)", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)"],
    "com.sapienter.jbilling.server.entity.CreditCardDTO.equals(Object)": ["com.sapienter.jbilling.server.entity.CreditCardDTO.hasIdentity()", "com.sapienter.jbilling.server.entity.CreditCardDTO.isIdentical(java.lang.Object)", "java.lang.Integer.equals(java.lang.Object)"],
    "com.sapienter.jbilling.server.user.UserBL.validateUserBelongs(String, Integer)": ["com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.user.db.UserDTO.getEntity()", "com.sapienter.jbilling.server.user.db.UserDTO.getDeleted()", "com.sapienter.jbilling.server.user.UserBL.getMainRole()", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.user.UserBL.set(java.lang.String,java.lang.Integer)"],
    "com.sapienter.jbilling.server.report.ReportBL.run(String, File, String, Map, Locale, Integer)": ["org.apache.log4j.Category.debug(java.lang.Object)", "java.io.FileInputStream.close()", "org.springframework.jdbc.datasource.DataSourceUtils.releaseConnection(java.sql.Connection,javax.sql.DataSource)", "net.sf.jasperreports.engine.JasperPrint.setName(java.lang.String)", "org.springframework.jdbc.datasource.DataSourceUtils.getConnection(javax.sql.DataSource)", "java.util.Map.put(java.lang.Object,java.lang.Object)", "java.io.File.getPath()", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "net.sf.jasperreports.engine.JasperFillManager.fillReport(java.io.FileInputStream,java.util.Map,java.sql.Connection)", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)", "java.lang.Object.toString()"],
    "com.sapienter.jbilling.server.item.ItemBL.init()": ["com.sapienter.jbilling.server.util.audit.EventLogger.getInstance()", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)"],
    "com.sapienter.jbilling.common.JBCryptoImpl.getCipher()": ["javax.crypto.Cipher.getInstance(java.lang.String)"],
    "com.sapienter.jbilling.server.item.PricingField.getValue()": ["com.sapienter.jbilling.server.item.PricingField.getDateValue()", "com.sapienter.jbilling.server.item.PricingField.getDecimalValue()", "com.sapienter.jbilling.server.item.PricingField.getIntValue()", "com.sapienter.jbilling.server.item.PricingField.getBooleanValue()"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.deleteCreditCard(Integer)": ["com.sapienter.jbilling.server.user.IUserSessionBean.deleteCreditCard(java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerId()"],
    "com.sapienter.jbilling.server.payment.tasks.SaveCreditCardExternallyTask.process(Event)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getContactMap()", "com.sapienter.jbilling.server.user.event.NewContactEvent.getContactDto()", "org.apache.log4j.Category.warn(java.lang.Object)", "com.sapienter.jbilling.server.payment.tasks.SaveCreditCardExternallyTask.getExternalSavingPluginId()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getUserId()", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskBL.instantiateTask()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getBaseUsers()", "com.sapienter.jbilling.server.user.contact.db.ContactMapDTO.getContactType()", "java.util.Set.isEmpty()", "com.sapienter.jbilling.server.user.event.NewCreditCardEvent.getCreditCard()", "com.sapienter.jbilling.server.payment.tasks.SaveCreditCardExternallyTask.getContactType()", "com.sapienter.jbilling.server.user.contact.db.ContactTypeDTO.getId()", "com.sapienter.jbilling.server.user.UserBL.getCreditCard()", "com.sapienter.jbilling.server.payment.tasks.SaveCreditCardExternallyTask.updateCreditCard(com.sapienter.jbilling.server.user.db.CreditCardDTO,java.lang.String)", "com.sapienter.jbilling.server.payment.IExternalCreditCardStorage.storeCreditCard(com.sapienter.jbilling.server.user.contact.db.ContactDTO,com.sapienter.jbilling.server.user.db.CreditCardDTO,com.sapienter.jbilling.server.user.db.AchDTO)"],
    "com.sapienter.jbilling.server.pluggableTask.BasicPenaltyTask.getPenaltyItemId()": ["java.util.Map.get(java.lang.Object)", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription.getName()", "java.lang.Integer.parseInt(java.lang.String)"],
    "com.sapienter.jbilling.server.user.UserBL.successLoginAttempt()": ["java.util.Calendar.getInstance()", "com.sapienter.jbilling.server.user.db.UserDTO.setFailedAttempts(int)", "java.util.Calendar.getTime()", "com.sapienter.jbilling.server.user.db.UserDTO.setLastLogin(java.util.Date)"],
    "com.sapienter.jbilling.server.order.validator.DateRangeValidator.initialize(DateRange)": ["com.sapienter.jbilling.server.order.validator.DateRange.start()", "com.sapienter.jbilling.server.order.validator.DateRange.end()"],
    "com.sapienter.jbilling.server.process.event.InvoicesGeneratedEvent.addInvoiceIds(Integer[])": ["com.sapienter.jbilling.server.process.event.InvoicesGeneratedEvent.getInvoiceIds()", "java.util.List.addAll(java.util.Collection)", "java.util.Arrays.asList(java.lang.Object[])"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.rateOrders(OrderWS[])": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.doCreateOrder(com.sapienter.jbilling.server.order.OrderWS,boolean)"],
    "com.sapienter.jbilling.server.rule.task.AbstractGeneratorTask.unmarshal(String)": ["java.util.Map.get(java.lang.Object)", "org.apache.log4j.Category.debug(java.lang.Object)", "org.apache.commons.digester.xmlrules.DigesterLoader.createDigester(java.net.URL)", "java.lang.Throwable.toString()", "org.apache.commons.digester.Digester.setUseContextClassLoader(boolean)", "org.xml.sax.SAXException.toString()", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription.getName()", "com.sapienter.jbilling.server.rule.task.AbstractGeneratorTask.getAbsolutePath(java.lang.String)", "org.apache.commons.digester.Digester.parse(java.io.StringReader)", "org.apache.log4j.Category.error(java.lang.Object)"],
    "com.sapienter.jbilling.server.user.UserBL.isPasswordExpired()": ["java.sql.ResultSet.next()", "javax.sql.RowSet.setInt(int,int)", "java.util.Calendar.getInstance()", "com.sapienter.jbilling.server.user.db.UserDTO.getEntity()", "com.sapienter.jbilling.server.list.ResultList.execute()", "com.sapienter.jbilling.server.list.ResultList.prepareStatement(java.lang.String)", "com.sapienter.jbilling.server.user.db.UserDTO.getCreateDatetime()", "com.sapienter.jbilling.server.util.PreferenceBL.getInt()", "java.sql.ResultSet.getDate(int)", "java.sql.Connection.close()", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "java.util.Calendar.getTimeInMillis()", "com.sapienter.jbilling.server.util.PreferenceBL.set(java.lang.Integer,java.lang.Integer)", "java.util.Date.getTime()", "com.sapienter.jbilling.server.user.db.UserDTO.getUserId()"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.createUpdateNofications(Integer, MessageDTO)": ["com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerCompanyId()", "com.sapienter.jbilling.server.notification.NotificationBL.createUpdate(java.lang.Integer,com.sapienter.jbilling.server.notification.MessageDTO)"],
    "com.sapienter.jbilling.server.entity.PaymentInfoChequeDTO.toString()": ["com.sapienter.jbilling.server.entity.PaymentInfoChequeDTO.getNumber()", "java.lang.StringBuffer.append(char)", "com.sapienter.jbilling.server.entity.PaymentInfoChequeDTO.getBank()", "java.lang.StringBuffer.toString()", "com.sapienter.jbilling.server.entity.PaymentInfoChequeDTO.getId()", "com.sapienter.jbilling.server.entity.PaymentInfoChequeDTO.getDate()", "java.lang.StringBuffer.append(java.lang.String)"],
    "com.sapienter.jbilling.server.process.BillingProcessSessionBean.setAgeingSteps(Integer, Integer, AgeingDTOEx[])": ["com.sapienter.jbilling.server.process.AgeingBL.setSteps(java.lang.Integer,java.lang.Integer,com.sapienter.jbilling.server.process.AgeingDTOEx[])"],
    "com.sapienter.jbilling.server.process.task.BasicBillingProcessFilterTask.findUsersToProcess(Integer, Date)": ["com.sapienter.jbilling.server.process.db.BillingProcessDAS.findUsersToProcess(int)"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentPaypalExternalTask.doRefund(PaymentDTOEx)": ["com.sapienter.jbilling.server.payment.tasks.PaymentPaypalExternalTask.formatDollarAmount(java.math.BigDecimal)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getTransactionId()", "com.sapienter.jbilling.server.payment.tasks.PaymentPaypalExternalTask.buildPaymentAuthorization(com.sapienter.jbilling.server.payment.tasks.paypal.dto.PaypalResult)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setPaymentResult(com.sapienter.jbilling.server.payment.db.PaymentResultDTO)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getAuthorization()", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)", "com.sapienter.jbilling.server.payment.tasks.PaymentPaypalExternalTask.getApi()", "com.sapienter.jbilling.server.payment.tasks.paypal.PaypalApi.refundTransaction(java.lang.String,java.lang.String,com.sapienter.jbilling.server.payment.tasks.paypal.dto.RefundType)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getAmount()", "com.sapienter.jbilling.server.payment.tasks.PaymentPaypalExternalTask.storePaypalResult(com.sapienter.jbilling.server.payment.tasks.paypal.dto.PaypalResult,com.sapienter.jbilling.server.payment.PaymentDTOEx,com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO,boolean)"],
    "com.sapienter.jbilling.server.notification.NotificationBL.generatePaperInvoiceAsStream(String, boolean, InvoiceDTO, ContactDTOEx, ContactDTOEx, String, String, Integer, String, String)": ["net.sf.jasperreports.engine.JasperExportManager.exportReportToPdf(net.sf.jasperreports.engine.JasperPrint)", "com.sapienter.jbilling.server.notification.NotificationBL.generatePaperInvoice(java.lang.String,boolean,com.sapienter.jbilling.server.invoice.db.InvoiceDTO,com.sapienter.jbilling.server.user.ContactDTOEx,com.sapienter.jbilling.server.user.ContactDTOEx,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String)", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)"],
    "com.sapienter.jbilling.server.order.OrderSessionBean.getPeriods(Integer, Integer)": ["com.sapienter.jbilling.server.order.OrderBL.getPeriods(java.lang.Integer,java.lang.Integer)"],
    "com.sapienter.jbilling.server.mediation.task.MediationProcessTask.getTaskName()": ["com.sapienter.jbilling.server.process.task.AbstractBackwardSimpleScheduledTask.getScheduleString()"],
    "com.sapienter.jbilling.server.notification.MessageDTO.toString()": ["java.util.List.size()", "java.util.List.get(int)"],
    "com.sapienter.jbilling.server.user.CreditCardBL.set(Integer)": ["com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)"],
    "com.sapienter.jbilling.server.mediation.db.MediationProcessDAS.isProcessing(Integer)": ["org.hibernate.Query.list()", "isEmpty()", "getSession()", "org.hibernate.Query.setParameter(java.lang.String,java.lang.Integer)", "createQuery(java.lang.String)"],
    "com.sapienter.jbilling.server.pluggableTask.PluggableTask.startRulesScannerIfNeeded()": ["java.util.concurrent.atomic.AtomicBoolean.getAndSet(boolean)", "configure(org.drools.io.ResourceChangeScannerConfiguration)", "org.drools.io.ResourceFactory.getResourceChangeNotifierService()", "start()", "com.sapienter.jbilling.common.Util.getSysProp(java.lang.String)", "newResourceChangeScannerConfiguration()", "org.drools.io.ResourceFactory.getResourceChangeScannerService()", "org.drools.io.ResourceChangeScannerConfiguration.setProperty(java.lang.String,java.lang.String)"],
    "com.sapienter.jbilling.server.item.PricingField.setDateValue(Date)": ["java.lang.String.valueOf(long)", "java.util.Date.getTime()"],
    "com.sapienter.jbilling.server.order.task.RulesItemManager2.getLog()": ["org.apache.log4j.Logger.getLogger(java.lang.Class)"],
    "com.sapienter.jbilling.server.payment.PaymentDTOEx.validate()": ["com.sapienter.jbilling.server.payment.db.PaymentDTO.getPaymentMethod()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getPaymentResult()"],
    "com.sapienter.jbilling.server.order.OrderSessionBean.addItem(Integer, BigDecimal, OrderDTO, Integer, Integer, Integer)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.order.OrderBL.addItem(java.lang.Integer,java.math.BigDecimal,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.order.db.OrderDTO.getCurrencyId()"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getItemByCategory(Integer)": ["com.sapienter.jbilling.server.item.ItemBL.getAllItemsByType(java.lang.Integer)"],
    "com.sapienter.jbilling.server.order.OrderBL.lookUpEditable(Integer)": ["com.sapienter.jbilling.server.order.db.OrderLineTypeDTO.getEditable()", "org.apache.log4j.Category.fatal(java.lang.Object,java.lang.Throwable)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "java.lang.Integer.intValue()"],
    "com.sapienter.jbilling.server.process.AgeingBL.getDTOEx(AgeingWS)": ["com.sapienter.jbilling.server.process.AgeingDTOEx.setStatusStr(java.lang.String)", "com.sapienter.jbilling.server.process.AgeingDTOEx.setInUse(java.lang.Boolean)", "com.sapienter.jbilling.server.process.AgeingDTOEx.setFailedLoginMessage(java.lang.String)", "com.sapienter.jbilling.server.process.AgeingDTOEx.setWelcomeMessage(java.lang.String)", "com.sapienter.jbilling.server.process.AgeingDTOEx.setStatusId(java.lang.Integer)", "com.sapienter.jbilling.server.process.AgeingWS.getStatusId()", "java.lang.Integer.intValue()", "com.sapienter.jbilling.server.process.AgeingWS.getStatusStr()", "com.sapienter.jbilling.server.process.AgeingWS.getInUse()", "com.sapienter.jbilling.server.process.AgeingWS.getDays()", "com.sapienter.jbilling.server.process.AgeingWS.getFailedLoginMessage()", "com.sapienter.jbilling.server.process.db.AgeingEntityStepDTO.setDays(int)", "com.sapienter.jbilling.server.process.AgeingWS.getWelcomeMessage()"],
    "com.sapienter.jbilling.server.process.BillingProcessSessionBean.createUpdateConfiguration(Integer, BillingProcessConfigurationDTO)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.process.ConfigurationBL.createUpdate(java.lang.Integer,com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO)"],
    "com.sapienter.jbilling.server.payment.tasks.AbstractPaymentRouterTask.instantiateTask(Integer)": ["com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskBL.instantiateTask()"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentPaypalExternalTask.getApi()": ["com.sapienter.jbilling.server.payment.tasks.PaymentPaypalExternalTask.getSubject()", "com.sapienter.jbilling.server.payment.tasks.PaymentPaypalExternalTask.getEnvironment()", "com.sapienter.jbilling.server.payment.tasks.PaymentPaypalExternalTask.getPassword()", "com.sapienter.jbilling.server.pluggableTask.PaymentTaskWithTimeout.getTimeoutSeconds()", "com.sapienter.jbilling.server.payment.tasks.PaymentPaypalExternalTask.getSignature()", "com.sapienter.jbilling.server.payment.tasks.PaymentPaypalExternalTask.getUserId()"],
    "com.sapienter.jbilling.server.util.InternationalDescriptionWS.getLabel()": ["com.sapienter.jbilling.server.util.InternationalDescriptionWS.getPsudoColumn()"],
    "com.sapienter.jbilling.server.process.BillingProcessSessionBean.getGeneratedInvoices(Integer)": ["com.sapienter.jbilling.server.order.db.OrderProcessDTO.getId()", "com.sapienter.jbilling.server.invoice.db.InvoiceDAS.findByProcess(com.sapienter.jbilling.server.process.db.BillingProcessDTO)", "java.util.Iterator.next()", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "java.util.Set.iterator()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getOrderProcesses()"],
    "com.sapienter.jbilling.server.item.tasks.RulesPricingTask2.getPrice(Integer, BigDecimal, Integer, Integer, List, BigDecimal, OrderDTO)": ["com.sapienter.jbilling.server.util.DTOFactory.getUserDTOEx(java.lang.Integer)", "java.util.List.isEmpty()", "java.util.Hashtable.values()", "java.util.List.addAll(java.util.Collection)", "com.sapienter.jbilling.server.user.ContactBL.getDTO()", "java.util.List.add(java.lang.Object)", "com.sapienter.jbilling.server.user.ContactBL.set(java.lang.Integer)", "com.sapienter.jbilling.server.item.tasks.PricingResult.setPricingFieldsResultId(long)", "com.sapienter.jbilling.server.rule.Result.getId()", "com.sapienter.jbilling.server.item.tasks.PricingResult.setPrice(java.math.BigDecimal)", "com.sapienter.jbilling.server.user.ContactDTOEx.getFieldsTable()", "com.sapienter.jbilling.server.item.PricingField.setResultId(long)", "com.sapienter.jbilling.server.rule.RulesBaseTask.executeRules()", "com.sapienter.jbilling.server.item.tasks.PricingResult.getPrice()"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask.doProcess(PaymentDTOEx, SvcType, PaymentAuthorizationDTO)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask$WorldPayAuthorization.getJBResultId()", "java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask.isApplicable(com.sapienter.jbilling.server.payment.PaymentDTOEx)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask$WorldPayAuthorization.isCommunicationProblem()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getPayment()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getAuthorization()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getApprovalCode()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getTransactionId()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getAch()", "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask.post(com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask$NVPList)", "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask$NVPList.add(java.lang.String,java.lang.String)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setPaymentResult(com.sapienter.jbilling.server.payment.db.PaymentResultDTO)", "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask$WorldPayAuthorization.getDTO()", "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask.buildRequest(com.sapienter.jbilling.server.payment.PaymentDTOEx,com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask$SvcType)", "com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase.storeProcessedAuthorization(com.sapienter.jbilling.server.payment.PaymentDTOEx,com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getIsRefund()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getCreditCard()", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)", "org.apache.log4j.Category.error(java.lang.Object)", "java.lang.Enum.equals(java.lang.Object)"],
    "com.sapienter.jbilling.server.util.db.AbstractDescription.getDescription()": ["com.sapienter.jbilling.server.util.db.AbstractDescription.getDescription(java.lang.Integer)"],
    "com.sapienter.jbilling.server.mediation.task.SaveToFileMediationErrorHandler.process(Record, List, Date, MediationConfiguration)": ["java.util.Map.get(java.lang.Object)", "org.apache.log4j.Category.debug(java.lang.Object)", "java.io.File.getAbsolutePath()", "java.io.Writer.write(java.lang.String)", "java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.util.Util.concatCsvLine(java.util.List,java.lang.String)", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription.getName()", "com.sapienter.jbilling.server.mediation.db.MediationConfiguration.getId()", "java.util.List.add(java.lang.Object)", "com.sapienter.jbilling.server.mediation.Record.getFields()", "java.io.OutputStreamWriter.close()", "com.sapienter.jbilling.server.mediation.task.SaveToFileMediationErrorHandler.getFileForDate(java.util.Date)", "com.sapienter.jbilling.server.util.Util.join(java.util.List,java.lang.String)", "java.text.DateFormat.format(java.util.Date)", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)", "com.sapienter.jbilling.server.item.PricingField.encode(com.sapienter.jbilling.server.item.PricingField)", "org.apache.log4j.Category.error(java.lang.Object)", "java.lang.Integer.parseInt(java.lang.String)"],
    "com.sapienter.jbilling.server.payment.tasks.SaveACHExternallyTask.process(Event)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.user.event.AchDeleteEvent.getAch()", "com.sapienter.jbilling.server.payment.tasks.SaveACHExternallyTask.deleteAch(com.sapienter.jbilling.server.user.db.AchDTO,java.lang.String)", "com.sapienter.jbilling.server.user.event.AchUpdateEvent.getAch()", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskBL.instantiateTask()", "com.sapienter.jbilling.server.payment.IExternalCreditCardStorage.deleteCreditCard(com.sapienter.jbilling.server.user.contact.db.ContactDTO,com.sapienter.jbilling.server.user.db.CreditCardDTO,com.sapienter.jbilling.server.user.db.AchDTO)", "com.sapienter.jbilling.server.payment.tasks.SaveACHExternallyTask.getExternalSavingPluginId()", "com.sapienter.jbilling.server.payment.IExternalCreditCardStorage.storeCreditCard(com.sapienter.jbilling.server.user.contact.db.ContactDTO,com.sapienter.jbilling.server.user.db.CreditCardDTO,com.sapienter.jbilling.server.user.db.AchDTO)", "com.sapienter.jbilling.server.payment.tasks.SaveACHExternallyTask.updateAch(com.sapienter.jbilling.server.user.db.AchDTO,java.lang.String)"],
    "com.sapienter.jbilling.server.payment.blacklist.AddressFilter.checkPayment(PaymentDTOEx)": ["com.sapienter.jbilling.server.payment.blacklist.AddressFilter.checkUser(java.lang.Integer)", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getUserId()"],
    "com.sapienter.jbilling.server.provisioning.ProvisioningProcessSessionBean.externalProvisioning(Message)": ["com.sapienter.jbilling.server.provisioning.ExternalProvisioning.onMessage(javax.jms.Message)"],
    "com.sapienter.jbilling.common.JBCryptoImpl.decrypt(String)": ["java.lang.String.getBytes()", "javax.crypto.Cipher.doFinal(byte[])", "com.sapienter.jbilling.common.JBCryptoImpl.getCipher()", "com.sapienter.jbilling.server.util.Util.stringToBinary(java.lang.String)", "org.apache.commons.codec.binary.Base64.decodeBase64(byte[])", "javax.crypto.Cipher.init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)"],
    "com.sapienter.jbilling.client.authentication.CompanyUserRememberMeFilter.onSuccessfulAuthentication(HttpServletRequest, HttpServletResponse, Authentication)": ["org.springframework.security.core.Authentication.getPrincipal()", "com.sapienter.jbilling.client.authentication.util.SecuritySession.setAttributes(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.sapienter.jbilling.client.authentication.CompanyUserDetails)", "org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.onSuccessfulAuthentication(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.security.core.Authentication)"],
    "com.sapienter.jbilling.server.notification.barcode.BarcodeFactory.pdf417(TextPlacement)": ["org.krysalis.barcode4j.impl.pdf417.PDF417Bean.setMsgPosition(org.krysalis.barcode4j.HumanReadablePlacement)", "com.sapienter.jbilling.server.notification.barcode.BarcodeFactory.getPlacement(com.sapienter.jbilling.server.notification.barcode.TextPlacement)"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask.formatDollarAmount(BigDecimal)": ["java.math.BigDecimal.setScale(int,java.math.RoundingMode)", "java.math.BigDecimal.abs()", "java.math.BigDecimal.toPlainString()"],
    "com.sapienter.jbilling.server.order.OrderSessionBean.addPeriod(Integer, Integer)": ["com.sapienter.jbilling.server.order.OrderBL.addPeriod(java.lang.Integer,java.lang.Integer)"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentsGatewayTask.getTransType(PaymentDTOEx, int, boolean)": ["com.sapienter.jbilling.server.payment.db.PaymentDTO.getIsRefund()", "java.math.BigDecimal.compareTo(java.math.BigDecimal)", "org.apache.log4j.Category.error(java.lang.Object)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getAmount()"],
    "com.sapienter.jbilling.server.payment.PaymentAuthorizationBL.getPreAuthorization(Integer)": ["org.apache.log4j.Category.debug(java.lang.Object)", "java.util.Collection.isEmpty()", "org.apache.log4j.Category.warn(java.lang.Object)", "com.sapienter.jbilling.server.payment.db.PaymentDAS.findPreauth(java.lang.Integer)", "com.sapienter.jbilling.server.payment.PaymentAuthorizationBL.getDTO()", "java.util.Collection.toArray()", "org.apache.log4j.Category.warn(java.lang.Object,java.lang.Throwable)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getPaymentAuthorizations()"],
    "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskBL.create(Integer, PluggableTaskDTO)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskBL.validate(com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDTO)", "com.sapienter.jbilling.server.util.audit.EventLogger.audit(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.util.Date)", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDTO.getId()", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)"],
    "com.sapienter.jbilling.server.user.UserBL.exists(String, Integer)": ["com.sapienter.jbilling.server.user.db.UserDAS.findByUserName(java.lang.String,java.lang.Integer)", "org.apache.log4j.Category.error(java.lang.Object)"],
    "com.sapienter.jbilling.client.authentication.PermissionVoter.getAttributeValue(ConfigAttribute)": ["getAuthorizeExpression()", "org.springframework.security.access.ConfigAttribute.getAttribute()", "getExpressionString()"],
    "com.sapienter.jbilling.server.invoice.db.InvoiceDAS.findTotalForPeriod(Integer, Date, Date)": ["com.sapienter.jbilling.server.invoice.db.InvoiceDAS.addUserCriteria(org.hibernate.Criteria,java.lang.Integer)", "com.sapienter.jbilling.server.invoice.db.InvoiceDAS.addPeriodCriteria(org.hibernate.Criteria,java.util.Date,java.util.Date)", "org.hibernate.criterion.Projections.sum(java.lang.String)", "getSession()", "createCriteria(java.lang.Class)", "org.hibernate.Criteria.uniqueResult()", "org.hibernate.Criteria.setProjection()"],
    "com.sapienter.jbilling.server.pluggableTask.PaymentAuthorizeNetTask.makeCall(NameValuePair[])": ["org.apache.log4j.Category.debug(java.lang.Object)", "org.apache.commons.httpclient.HttpClient.setConnectionTimeout(int)", "org.apache.commons.httpclient.HttpClient.getState()", "org.apache.commons.httpclient.methods.PostMethod.getResponseBodyAsString()", "org.apache.commons.httpclient.methods.PostMethod.setRequestBody(org.apache.commons.httpclient.NameValuePair[])", "org.apache.commons.httpclient.methods.PostMethod.releaseConnection()", "org.apache.commons.httpclient.HttpClient.executeMethod(org.apache.commons.httpclient.methods.PostMethod)", "setCredentials(<unknown>,<unknown>,org.apache.commons.httpclient.Credentials)", "org.apache.commons.httpclient.methods.PostMethod.recycle()"],
    "com.sapienter.jbilling.server.provisioning.task.TelnetCommunication.readUntil(String)": ["java.lang.String.charAt(int)", "java.io.InputStream.read()", "java.lang.String.substring(int,int)", "java.lang.String.endsWith(java.lang.String)", "java.lang.StringBuilder.toString()", "java.lang.StringBuilder.append(char)", "java.lang.String.length()"],
    "com.sapienter.jbilling.server.entity.CreditCardDTO.hashCode()": ["java.lang.String.hashCode()", "java.util.Date.hashCode()", "java.lang.Integer.hashCode()"],
    "com.sapienter.jbilling.server.user.partner.PartnerBL.getLastPayoutDTO(Integer)": ["com.sapienter.jbilling.server.user.partner.PartnerBL.getLastPayout(java.lang.Integer)", "com.sapienter.jbilling.server.user.partner.PartnerBL.getPayoutDTO()", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "java.lang.Integer.intValue()"],
    "com.sapienter.jbilling.server.user.tasks.AutoRechargeTask.process(Event)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.user.db.UserDTO.getCurrency()", "com.sapienter.jbilling.server.payment.IPaymentSessionBean.processAndUpdateInvoice(com.sapienter.jbilling.server.payment.PaymentDTOEx,java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setAttempt(java.lang.Integer)", "com.sapienter.jbilling.server.user.tasks.AutoRechargeTask.isEventProcessable(java.math.BigDecimal,com.sapienter.jbilling.server.user.db.UserDTO,com.sapienter.jbilling.server.user.db.CustomerDTO)", "com.sapienter.jbilling.server.payment.PaymentDTOEx.setUserId(java.lang.Integer)", "com.sapienter.jbilling.server.user.db.UserDTO.getCustomer()", "com.sapienter.jbilling.server.user.event.DynamicBalanceChangeEvent.getNewBalance()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setAmount(java.math.BigDecimal)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setPaymentDate(java.util.Date)", "com.sapienter.jbilling.server.system.event.Event.getEntityId()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setCurrency(com.sapienter.jbilling.server.util.db.CurrencyDTO)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getAmount()", "com.sapienter.jbilling.server.user.event.DynamicBalanceChangeEvent.getUserId()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setIsRefund(int)", "com.sapienter.jbilling.server.user.event.DynamicBalanceChangeEvent.getEntityId()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getUserId()", "com.sapienter.jbilling.server.payment.PaymentBL.findPaymentInstrument(java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.user.db.UserDTO.getId()", "com.sapienter.jbilling.server.user.UserBL.getDto()", "com.sapienter.jbilling.server.user.db.CustomerDTO.getAutoRecharge()"],
    "com.sapienter.jbilling.server.user.CompanyWS.getDTO()": ["com.sapienter.jbilling.server.user.db.CompanyDTO.setLanguage(com.sapienter.jbilling.server.util.db.LanguageDTO)", "com.sapienter.jbilling.server.user.db.CompanyDTO.setDescription(java.lang.String)", "com.sapienter.jbilling.server.user.db.CompanyDTO.setCurrency(com.sapienter.jbilling.server.util.db.CurrencyDTO)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)"],
    "com.sapienter.jbilling.server.payment.blacklist.CsvProcessor.createNameRecord(BlacklistDTO)": ["com.sapienter.jbilling.server.user.contact.db.ContactDTO.setLastName(java.lang.String)", "com.sapienter.jbilling.server.payment.blacklist.CsvProcessor.checkForEmptyRecord(java.lang.String,com.sapienter.jbilling.server.payment.blacklist.CsvProcessor$Column[])", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.setDeleted(int)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.setFirstName(java.lang.String)", "com.sapienter.jbilling.server.payment.blacklist.CsvProcessor.getString(com.sapienter.jbilling.server.payment.blacklist.CsvProcessor$Column)", "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDTO.setContact(com.sapienter.jbilling.server.user.contact.db.ContactDTO)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.setCreateDate(java.util.Date)"],
    "com.sapienter.jbilling.server.user.UserBL.set(Integer)": ["com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)"],
    "com.sapienter.jbilling.server.util.MapPeriodToCalendar.map(Integer)": ["java.lang.Integer.compareTo(java.lang.Integer)"],
    "com.sapienter.jbilling.server.user.balance.ValidatorPrePaid.validate(CustomerDTO, BigDecimal)": ["com.sapienter.jbilling.server.user.db.CustomerDTO.getDynamicBalance()", "java.math.BigDecimal.divide(java.math.BigDecimal,int,int)"],
    "com.sapienter.jbilling.server.payment.PaymentSessionBean.getPayment(Integer, Integer)": ["com.sapienter.jbilling.server.payment.PaymentBL.getDTOEx(java.lang.Integer)"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentAuthorizeNetCIMTask.preAuth(PaymentDTOEx)": ["com.sapienter.jbilling.server.payment.tasks.PaymentAuthorizeNetCIMTask.doProcess(com.sapienter.jbilling.server.payment.PaymentDTOEx,java.lang.String,java.lang.String)"],
    "com.sapienter.jbilling.server.payment.PaymentDTOEx.toString()": ["java.lang.StringBuffer.append(char)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getId()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getSecurityCode()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getName()", "java.lang.StringBuffer.toString()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getDeleted()", "java.util.List.size()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getCcExpiry()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getCcType()", "java.lang.StringBuffer.append(java.lang.String)", "java.lang.Object.toString()", "java.util.List.get(int)"],
    "com.sapienter.jbilling.server.user.UserSessionBean.delete(String, Integer)": ["com.sapienter.jbilling.server.user.UserBL.delete(java.lang.Integer)"],
    "com.sapienter.jbilling.tools.UploadInternationalData.main(String[])": ["java.sql.Connection.createStatement()", "java.io.PrintStream.println(java.lang.String)", "java.util.Properties.getProperty(java.lang.String)", "java.lang.String.split(java.lang.String)", "java.sql.PreparedStatement.executeUpdate()", "java.io.BufferedReader.close()", "java.lang.Class.forName(java.lang.String)", "java.lang.Integer.intValue()", "java.io.BufferedReader.readLine()", "java.sql.Connection.setAutoCommit(boolean)", "java.sql.DriverManager.getConnection(java.lang.String,java.lang.String,java.lang.String)", "java.sql.Connection.prepareStatement(java.lang.String)", "java.sql.PreparedStatement.setString(int,java.lang.String)", "java.sql.PreparedStatement.setInt(int,int)", "java.sql.Statement.close()", "java.sql.Connection.close()", "java.lang.Integer.valueOf(java.lang.String)", "java.lang.String.trim()", "java.sql.Statement.execute(java.lang.String)", "java.lang.Throwable.getMessage()", "java.util.Properties.load(java.io.InputStream)", "java.lang.Throwable.printStackTrace()", "java.sql.Connection.commit()"],
    "com.sapienter.jbilling.server.order.UsageBL.getSubAccountItemTypeUsage(Integer)": ["com.sapienter.jbilling.server.order.db.OrderDTO.getId()", "org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.order.UsageBL.getMainOrder()", "com.sapienter.jbilling.server.order.UsageBL.getPeriodStart()", "com.sapienter.jbilling.server.order.db.UsageDAS.findSubAccountUsageByItemType(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.util.Date,java.util.Date)", "com.sapienter.jbilling.server.order.UsageBL.addWorkingOrder(com.sapienter.jbilling.server.order.Usage)", "com.sapienter.jbilling.server.order.UsageBL.getPeriodEnd()", "com.sapienter.jbilling.server.order.UsageBL.getWorkingOrder()", "org.apache.log4j.Category.warn(java.lang.Object)"],
    "com.sapienter.jbilling.server.user.ContactBL.delete()": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getFields()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getContactMap()", "java.util.Set.clear()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getUserId()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getId()", "com.sapienter.jbilling.server.util.db.AbstractDAS.delete(java.lang.Object)", "com.sapienter.jbilling.server.util.audit.EventLogger.auditBySystem(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.util.Date)"],
    "com.sapienter.jbilling.client.authentication.util.UsernameHelper.buildUsernameToken(String, String)": ["java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.toString()"],
    "com.sapienter.jbilling.server.user.CreditCardBL.create(CreditCardDTO)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getId()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.useGatewayKey()", "com.sapienter.jbilling.server.system.event.EventManager.process(com.sapienter.jbilling.server.system.event.Event)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.isNumberObsucred()", "com.sapienter.jbilling.server.user.db.UserDTO.getEntity()", "com.sapienter.jbilling.server.user.CreditCardBL.getUser(com.sapienter.jbilling.server.user.db.CreditCardDTO)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.setDeleted(int)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.setVersionNum(java.lang.Integer)", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.user.UserBL.getCreditCard()", "com.sapienter.jbilling.server.user.db.UserDTO.getId()", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.setId(int)"],
    "com.sapienter.jbilling.server.mediation.MediationSessionBean.hasBeenProcessed(MediationProcess, Record)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.mediation.db.MediationRecordDAS.processed(java.lang.String)", "com.sapienter.jbilling.server.mediation.Record.getKey()", "java.util.Calendar.getInstance()", "com.sapienter.jbilling.server.util.db.AbstractDAS.flush()", "java.util.Calendar.getTime()", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)", "com.sapienter.jbilling.server.util.db.AbstractGenericStatusDAS.find(java.io.Serializable)"],
    "com.sapienter.jbilling.server.payment.PaymentBL.getRefundableList(Integer, Integer)": ["java.sql.Connection.close()", "javax.sql.RowSet.setInt(int,int)", "com.sapienter.jbilling.server.list.ResultList.execute()", "com.sapienter.jbilling.server.list.ResultList.prepareStatement(java.lang.String)", "java.lang.Integer.intValue()"],
    "com.sapienter.jbilling.server.provisioning.task.ProvisioningCommandsRulesTask.processRules(OrderDTO, OrderLineDTO, String)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.pluggableTask.PluggableTask.executeStatefulRules(com.sapienter.jbilling.server.pluggableTask.StatefulKnowledgeSession,java.util.List)", "java.util.List.add(java.lang.Object)", "com.sapienter.jbilling.server.provisioning.task.ProvisioningCommandsRulesTask.sendCommandQueue(java.lang.String,com.sapienter.jbilling.server.provisioning.task.ProvisioningCommandsRulesTask$CommandManager,com.sapienter.jbilling.server.order.db.OrderDTO)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getUsersInStatus(Integer)": ["com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getUsersByStatus(java.lang.Integer,boolean)"],
    "com.sapienter.jbilling.server.payment.blacklist.TestBlacklistFilter.testDB()": ["com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDTO.setType(java.lang.Integer)", "org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDTO.getUser()", "com.sapienter.jbilling.server.util.db.AbstractDAS.flush()", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDAS.findByEntityType(java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDTO.setCreateDate(java.util.Date)", "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDTO.setUser(com.sapienter.jbilling.server.user.db.UserDTO)", "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDTO.setSource(java.lang.Integer)", "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDTO.getType()", "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDTO.setCompany(com.sapienter.jbilling.server.user.db.CompanyDTO)", "java.util.List.size()", "com.sapienter.jbilling.server.user.db.UserDTO.getId()", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)", "java.util.List.get(int)"],
    "com.sapienter.jbilling.server.payment.db.PaymentDTO.getMethodId()": ["com.sapienter.jbilling.server.payment.db.PaymentDTO.getPaymentMethod()", "com.sapienter.jbilling.server.payment.db.PaymentMethodDTO.getId()"],
    "com.sapienter.jbilling.server.item.PricingField.getCalendarValue()": ["com.sapienter.jbilling.server.item.PricingField.getDateValue()", "java.util.Calendar.setTime(java.util.Date)", "java.util.Calendar.getInstance()"],
    "com.sapienter.jbilling.server.order.Usage.subtractLine(OrderLineDTO)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getQuantity()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getAmount()", "com.sapienter.jbilling.server.order.Usage.subtractQuantity(java.math.BigDecimal)", "com.sapienter.jbilling.server.order.Usage.subractAmount(java.math.BigDecimal)"],
    "com.sapienter.jbilling.server.order.OrderSessionBean.delete(Integer, Integer)": ["com.sapienter.jbilling.server.order.OrderBL.delete(java.lang.Integer)"],
    "com.sapienter.jbilling.server.process.db.ProcessRunUserDAS.findSuccessfullUsersCount(Integer)": ["com.sapienter.jbilling.server.process.db.ProcessRunUserDAS.findUsersCountByStatus(java.lang.Integer,java.lang.Integer)"],
    "com.sapienter.jbilling.server.mediation.task.AbstractFileReader.convertDuration(String, String)": ["java.lang.String.indexOf(int)", "java.lang.Integer.valueOf(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.trim()", "java.lang.String.lastIndexOf(int)"],
    "com.sapienter.jbilling.server.user.partner.PartnerBL.setRanges(Integer, PartnerRange[])": ["java.util.Set.add(java.lang.Object)", "java.util.Iterator.next()", "com.sapienter.jbilling.server.user.partner.db.PartnerRange.setRangeTo(int)", "com.sapienter.jbilling.server.user.partner.db.PartnerRange.setReferralFee(java.lang.Double)", "com.sapienter.jbilling.server.user.partner.db.PartnerRange.setPartner(com.sapienter.jbilling.server.user.partner.db.Partner)", "com.sapienter.jbilling.server.user.partner.db.PartnerRange.setPercentageRate(java.lang.Double)", "java.util.Iterator.hasNext()", "com.sapienter.jbilling.server.user.partner.db.Partner.getRanges()", "java.util.Iterator.remove()", "com.sapienter.jbilling.server.user.partner.db.Partner.getId()", "com.sapienter.jbilling.server.user.partner.db.PartnerRange.setRangeFrom(int)", "com.sapienter.jbilling.server.util.audit.EventLogger.audit(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.util.Date)", "com.sapienter.jbilling.server.user.partner.db.Partner.getBaseUser()", "com.sapienter.jbilling.server.user.partner.db.PartnerRange.getReferralFee()", "com.sapienter.jbilling.server.user.partner.db.PartnerRange.getRangeTo()", "com.sapienter.jbilling.server.user.partner.db.PartnerRange.getPercentageRate()", "com.sapienter.jbilling.server.util.db.AbstractDAS.delete(java.lang.Object)", "com.sapienter.jbilling.server.user.partner.db.PartnerRange.getRangeFrom()", "com.sapienter.jbilling.server.user.db.UserDTO.getId()", "java.util.Set.iterator()", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.saveCustomContactFields(ContactFieldTypeWS[])": ["com.sapienter.jbilling.server.user.contact.db.ContactFieldTypeDTO.setEntity(com.sapienter.jbilling.server.user.db.CompanyDTO)", "com.sapienter.jbilling.server.user.contact.ContactFieldTypeWS.getReadOnly()", "com.sapienter.jbilling.server.util.InternationalDescriptionWS.getContent()", "com.sapienter.jbilling.server.util.db.AbstractDAS.flush()", "com.sapienter.jbilling.server.user.contact.ContactFieldTypeWS.getCompanyId()", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.user.contact.ContactFieldTypeWS.getId()", "com.sapienter.jbilling.server.user.contact.db.ContactFieldTypeDTO.setPromptKey(java.lang.String)", "com.sapienter.jbilling.server.util.InternationalDescriptionWS.getLanguageId()", "com.sapienter.jbilling.server.user.contact.ContactFieldTypeWS.getDescriptions()", "com.sapienter.jbilling.server.util.db.AbstractDAS.clear()", "com.sapienter.jbilling.server.user.contact.ContactFieldTypeWS.getDataType()", "com.sapienter.jbilling.server.user.contact.db.ContactFieldTypeDTO.setDataType(java.lang.String)", "com.sapienter.jbilling.server.user.contact.db.ContactFieldTypeDTO.setVersionNum(java.lang.Integer)", "com.sapienter.jbilling.server.util.db.AbstractDescription.setDescription(java.lang.String,java.lang.Integer)", "com.sapienter.jbilling.server.user.contact.db.ContactFieldTypeDTO.setReadOnly(java.lang.Integer)", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)"],
    "com.sapienter.jbilling.server.util.db.PreferenceTypeDTO.getInstructions()": ["com.sapienter.jbilling.server.util.db.AbstractDescription.getDescription(java.lang.Integer,java.lang.String)"],
    "com.sapienter.jbilling.server.order.OrderSessionBean.createUpdate(Integer, Integer, OrderDTO, Integer)": ["com.sapienter.jbilling.server.order.db.OrderDTO.getId()", "com.sapienter.jbilling.server.order.OrderBL.create(java.lang.Integer,java.lang.Integer,com.sapienter.jbilling.server.order.db.OrderDTO)", "com.sapienter.jbilling.server.order.OrderBL.update(java.lang.Integer,com.sapienter.jbilling.server.order.db.OrderDTO)", "com.sapienter.jbilling.server.order.OrderBL.set(java.lang.Integer)"],
    "com.sapienter.jbilling.server.order.OrderBL.delete(Integer)": ["com.sapienter.jbilling.server.order.db.OrderDTO.getId()", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.system.event.EventManager.process(com.sapienter.jbilling.server.system.event.Event)", "com.sapienter.jbilling.server.util.audit.EventLogger.audit(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.util.Date)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setDeleted(int)", "com.sapienter.jbilling.server.user.db.UserDTO.getCompany()", "com.sapienter.jbilling.server.order.db.OrderDTO.getLines()", "com.sapienter.jbilling.server.order.db.OrderDTO.setDeleted(int)", "com.sapienter.jbilling.server.user.db.UserDTO.getId()", "com.sapienter.jbilling.server.order.db.OrderDTO.getBaseUserByUserId()"],
    "com.sapienter.jbilling.server.user.UserSessionBean.deleteCreditCard(Integer, Integer)": ["com.sapienter.jbilling.server.user.db.CreditCardDTO.getId()", "java.util.Iterator.next()", "com.sapienter.jbilling.server.user.CreditCardBL.delete(java.lang.Integer)", "com.sapienter.jbilling.server.user.db.UserDTO.getCreditCards()", "java.util.Iterator.hasNext()", "com.sapienter.jbilling.server.user.UserBL.getEntity()", "java.util.Set.iterator()"],
    "com.sapienter.jbilling.server.user.UserSessionBean.getEntityParameters(Integer, Integer[])": ["com.sapienter.jbilling.server.util.PreferenceBL.getValueAsString()", "com.sapienter.jbilling.server.util.PreferenceBL.getDefaultValue(java.lang.Integer)", "com.sapienter.jbilling.server.util.PreferenceBL.set(java.lang.Integer,java.lang.Integer)", "java.util.HashMap.put(java.lang.Object,java.lang.Object)"],
    "com.sapienter.jbilling.server.item.tasks.PricingResult.setPrice(BigDecimal)": ["org.apache.log4j.Category.debug(java.lang.Object)"],
    "com.sapienter.jbilling.tools.RulesGenerator.main(String[])": ["java.io.PrintStream.println(java.lang.String)", "com.sapienter.jbilling.tools.RulesGenerator.generateRules(java.lang.String,java.lang.String)", "java.lang.System.exit(int)"],
    "com.sapienter.jbilling.server.payment.db.PaymentInfoChequeDAS.findByPayment(PaymentDTO)": ["org.hibernate.criterion.Restrictions.eq(java.lang.String,com.sapienter.jbilling.server.payment.db.PaymentDTO)", "getSession()", "org.hibernate.Criteria.add()", "createCriteria(java.lang.Class)", "org.hibernate.Criteria.uniqueResult()"],
    "com.sapienter.jbilling.server.process.AgeingBL.setUserStatus(Integer, Integer, Integer, Date)": ["com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.user.db.UserDTO.getCompany()", "com.sapienter.jbilling.server.process.task.IAgeingTask.setUserStatus(com.sapienter.jbilling.server.user.db.UserDTO,com.sapienter.jbilling.server.user.db.UserStatusDTO,java.util.Date,java.lang.Integer)", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskManager.getNextClass()", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.util.db.AbstractGenericStatusDAS.find(java.io.Serializable)"],
    "com.sapienter.jbilling.server.util.api.validation.APIValidator.before(Method, Object[], Object)": ["java.util.ArrayList.size()", "java.lang.reflect.Method.getName()", "java.util.ArrayList.toArray(java.lang.Object[])", "com.sapienter.jbilling.server.util.api.validation.APIValidator.getObjectName(java.lang.Object)", "java.util.ArrayList.isEmpty()", "java.lang.Object.getClass()", "java.util.ArrayList.addAll(java.util.Collection)", "com.sapienter.jbilling.server.util.api.validation.APIValidator.validateObject(java.lang.reflect.Method,java.lang.String,java.lang.Object)", "java.lang.String.endsWith(java.lang.String)", "java.lang.Class.getName()", "java.lang.Class.isArray()"],
    "com.sapienter.jbilling.server.util.db.AbstractDAS.findByExample(T, String[])": ["org.hibernate.Criteria.list()", "org.hibernate.criterion.Example.create(java.lang.Object)", "org.hibernate.criterion.Example.excludeProperty(java.lang.String)", "createCriteria(java.lang.Class)", "com.sapienter.jbilling.server.util.db.AbstractDAS.getSession()", "com.sapienter.jbilling.server.util.db.AbstractDAS.getPersistentClass()", "org.hibernate.Criteria.add(org.hibernate.criterion.Example)", "org.hibernate.Criteria.setCacheable(boolean)"],
    "com.sapienter.jbilling.server.order.db.OrderDTO.getCurrencyId()": ["com.sapienter.jbilling.server.order.db.OrderDTO.getCurrency()", "com.sapienter.jbilling.server.util.db.CurrencyDTO.getId()"],
    "com.sapienter.jbilling.server.invoice.InvoiceIdComparator.compare(Object, Object)": ["java.lang.Integer.compareTo(java.lang.Integer)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getId()"],
    "com.sapienter.jbilling.server.order.OrderBL.validate(OrderLineWS)": ["com.sapienter.jbilling.server.order.OrderLineWS.getTypeId()", "com.sapienter.jbilling.server.order.OrderLineWS.getQuantity()", "com.sapienter.jbilling.server.order.OrderLineWS.getDescription()"],
    "com.sapienter.jbilling.server.order.OrderHelper.find(Collection, Integer, BigDecimal)": ["com.sapienter.jbilling.server.order.db.OrderLineDTO.getPrice()", "java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getItemId()", "java.math.BigDecimal.compareTo(java.math.BigDecimal)"],
    "com.sapienter.jbilling.server.provisioning.task.TestMMSCCommunication.modifyCustomer(ModifyCustomerRequest)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.provisioning.task.mmsc.EfsBaseRequest.getTransactionId()", "com.sapienter.jbilling.server.provisioning.task.TestMMSCCommunication.getResponse(java.lang.String)"],
    "com.sapienter.jbilling.server.user.tasks.BasicSubscriptionStatusManagerTask.subscriptionEnds(Integer, Date, Date)": ["com.sapienter.jbilling.server.user.UserBL.updateSubscriptionStatus(java.lang.Integer)", "com.sapienter.jbilling.server.user.tasks.BasicSubscriptionStatusManagerTask.getUser(java.lang.Integer)", "org.apache.log4j.Category.info(java.lang.Object)", "com.sapienter.jbilling.server.util.db.AbstractDescription.getDescription(java.lang.Integer)", "java.util.Date.after(java.util.Date)", "com.sapienter.jbilling.server.user.UserBL.getEntity()", "com.sapienter.jbilling.server.util.db.AbstractGenericStatus.getId()", "com.sapienter.jbilling.server.user.db.UserDTO.getSubscriberStatus()"],
    "com.sapienter.jbilling.server.order.OrderSessionBean.getPeriod(Integer, Integer)": ["com.sapienter.jbilling.server.order.db.OrderPeriodDTO.touch()", "com.sapienter.jbilling.server.order.OrderBL.getPeriod(java.lang.Integer,java.lang.Integer)"],
    "com.sapienter.jbilling.common.SystemProperties.get(String)": ["java.util.Properties.getProperty(java.lang.String)", "java.lang.String.equals(java.lang.Object)"],
    "com.sapienter.jbilling.server.pluggableTask.BasicOrderFilterTask.isApplicable(OrderDTO, BillingProcessDTO)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.util.audit.EventLogger.warning(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String)", "com.sapienter.jbilling.server.process.db.BillingProcessDTO.getBillingDate()", "java.lang.Integer.equals(java.lang.Object)", "java.util.Date.after(java.util.Date)", "com.sapienter.jbilling.server.util.MapPeriodToCalendar.map(java.lang.Integer)", "com.sapienter.jbilling.server.order.db.OrderDTO.getOrderPeriod()", "java.lang.Integer.intValue()", "com.sapienter.jbilling.server.order.db.OrderDTO.getPeriodId()", "java.util.Date.compareTo(java.util.Date)", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.order.OrderBL.setStatus(java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.util.audit.EventLogger.getInstance()", "com.sapienter.jbilling.server.process.BillingProcessBL.getEndOfProcessPeriod(com.sapienter.jbilling.server.process.db.BillingProcessDTO)", "com.sapienter.jbilling.server.order.db.OrderDTO.getBaseUserByUserId()", "com.sapienter.jbilling.server.order.db.OrderDTO.setNextBillableDay(java.util.Date)", "com.sapienter.jbilling.server.order.db.OrderDTO.getId()", "org.apache.log4j.Category.fatal(java.lang.Object,java.lang.Throwable)", "com.sapienter.jbilling.server.process.db.BillingProcessDTO.getEntity()", "java.util.GregorianCalendar.add(int,int)", "com.sapienter.jbilling.server.order.db.OrderPeriodDTO.getValue()", "org.apache.log4j.Category.warn(java.lang.Object)", "com.sapienter.jbilling.server.order.db.OrderPeriodDTO.getUnitId()", "java.lang.Integer.compareTo(java.lang.Integer)", "com.sapienter.jbilling.server.order.db.OrderDTO.getCreateDate()", "java.util.Calendar.setTime(java.util.Date)", "com.sapienter.jbilling.server.order.db.OrderDTO.getActiveUntil()", "com.sapienter.jbilling.server.order.db.OrderDTO.getActiveSince()", "java.util.Date.before(java.util.Date)", "java.lang.Throwable.getMessage()", "com.sapienter.jbilling.server.order.db.OrderDTO.getNextBillableDay()", "com.sapienter.jbilling.common.Util.truncateDate(java.util.Date)", "com.sapienter.jbilling.server.order.db.OrderDTO.getBillingTypeId()", "com.sapienter.jbilling.server.user.db.UserDTO.getId()", "java.util.Calendar.getTime()", "com.sapienter.jbilling.server.util.audit.EventLogger.info(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String)", "com.sapienter.jbilling.server.pluggableTask.BasicOrderFilterTask.thisOrActiveUntil(java.util.Date,java.util.Date)"],
    "com.sapienter.jbilling.server.order.OrderLineBL.addItem(OrderDTO, Integer, BigDecimal)": ["com.sapienter.jbilling.server.order.OrderLineBL.addItem(com.sapienter.jbilling.server.order.db.OrderDTO,java.lang.Integer,java.math.BigDecimal,boolean)"],
    "com.sapienter.jbilling.server.entity.CreditCardDTO.setPrimaryKey(Integer)": ["com.sapienter.jbilling.server.entity.CreditCardDTO.setId(java.lang.Integer)"],
    "com.sapienter.jbilling.server.mediation.db.MediationRecordLineDTO.toString()": ["com.sapienter.jbilling.server.mediation.db.MediationRecordDTO.getKey()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getId()"],
    "com.sapienter.jbilling.server.mediation.task.MediationResult.setEventDate(String, String)": ["java.text.DateFormat.parse(java.lang.String)", "org.apache.log4j.Category.warn(java.lang.Object,java.lang.Throwable)"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentsGatewayTask.getCCType(Integer)": ["org.apache.log4j.Category.debug(java.lang.Object)", "org.apache.log4j.Category.error(java.lang.Object)"],
    "com.sapienter.jbilling.server.pluggableTask.PaymentAuthorizeNetTask.process(PaymentDTOEx)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.pluggableTask.PaymentAuthorizeNetTask.getACHRefundData(java.lang.String,java.lang.String,boolean,java.math.BigDecimal,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String)", "com.sapienter.jbilling.server.user.CreditCardBL.get4digitExpiry(com.sapienter.jbilling.server.user.db.CreditCardDTO)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.util.db.CurrencyDTO.getCode()", "com.sapienter.jbilling.server.item.CurrencyBL.getEntity()", "java.lang.Integer.intValue()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getPayoutId()", "org.apache.log4j.Category.warn(java.lang.Object,java.lang.Throwable)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getAmount()", "com.sapienter.jbilling.server.pluggableTask.PaymentAuthorizeNetTask.getACHChargeData(java.lang.String,java.lang.String,boolean,java.math.BigDecimal,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String)", "com.sapienter.jbilling.server.pluggableTask.PaymentAuthorizeNetTask.makeCall(org.apache.commons.httpclient.NameValuePair[])", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getTransactionId()", "com.sapienter.jbilling.server.user.db.AchDTO.getBankName()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getAch()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getCode1()", "com.sapienter.jbilling.server.payment.PaymentAuthorizationBL.create(com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO,java.lang.Integer)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getNumber()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getUserId()", "com.sapienter.jbilling.server.user.db.AchDTO.getAccountName()", "java.lang.String.equals(java.lang.Object)", "com.sapienter.jbilling.server.util.db.CurrencyDTO.getId()", "com.sapienter.jbilling.server.user.db.AchDTO.getAccountType()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getIsRefund()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getCreditCard()", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)", "com.sapienter.jbilling.server.pluggableTask.PaymentAuthorizeNetTask.addAVSFields(java.lang.Integer,org.apache.commons.httpclient.NameValuePair[])", "java.lang.String.length()", "java.util.Map.get(java.lang.Object)", "com.sapienter.jbilling.server.pluggableTask.PaymentAuthorizeNetTask.getRefundData(java.lang.String,java.lang.String,boolean,java.math.BigDecimal,java.lang.String,java.lang.String,java.lang.String)", "org.apache.log4j.Category.warn(java.lang.Object)", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription.getName()", "com.sapienter.jbilling.server.user.db.AchDTO.getAbaRouting()", "java.util.Random.nextInt(int)", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getPayment()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getAuthorization()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getId()", "com.sapienter.jbilling.server.user.db.AchDTO.getBankAccount()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getCurrency()", "com.sapienter.jbilling.server.pluggableTask.PaymentAuthorizeNetTask.getChargeData(java.lang.String,java.lang.String,boolean,java.math.BigDecimal,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.Integer)", "java.lang.Integer.valueOf(java.lang.String)", "com.sapienter.jbilling.server.pluggableTask.AuthorizeNetResponseDTO.getPaymentAuthorizationDTO()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setPaymentResult(com.sapienter.jbilling.server.payment.db.PaymentResultDTO)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.setProcessor(java.lang.String)", "com.sapienter.jbilling.server.payment.PaymentDTOEx.setAuthorization(com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO)", "org.apache.log4j.Category.error(java.lang.Object)"],
    "com.sapienter.jbilling.server.report.db.ReportDTO.getReportFile()": ["com.sapienter.jbilling.server.report.db.ReportDTO.getReportFilePath()"],
    "com.sapienter.jbilling.server.payment.blacklist.CsvProcessor.getString(Column)": ["java.lang.Enum.ordinal()", "java.lang.String.equals(java.lang.Object)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.isUserSubscribedTo(Integer, Integer)": ["java.math.BigDecimal.toString()", "com.sapienter.jbilling.server.order.db.OrderDAS.findIsUserSubscribedTo(java.lang.Integer,java.lang.Integer)"],
    "com.sapienter.jbilling.server.invoice.InvoiceLineComparator.compare(InvoiceLineDTO, InvoiceLineDTO)": ["java.lang.Integer.compareTo(java.lang.Integer)", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO.getSourceUserId()", "com.sapienter.jbilling.server.item.ItemBL.getEntity()", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO.getOrderPosition()", "com.sapienter.jbilling.server.item.db.ItemDTO.getNumber()", "java.lang.String.compareTo(java.lang.String)", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO.getItem()", "org.apache.log4j.Logger.getLogger(java.lang.Class)", "com.sapienter.jbilling.server.item.db.ItemDTO.getId()", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO.getTypeId()"],
    "com.sapienter.jbilling.server.mediation.task.JDBCReader.buildTimestampUpdateSql(Record, int[])": ["com.sapienter.jbilling.server.mediation.task.AbstractJDBCReader.getTableName()", "com.sapienter.jbilling.server.mediation.Record.getFields()", "com.sapienter.jbilling.server.mediation.task.AbstractJDBCReader.getTimestampColumnName()", "com.sapienter.jbilling.server.item.PricingField.getName()", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.toString()", "java.util.List.get(int)"],
    "com.sapienter.jbilling.server.payment.blacklist.BlacklistBL.set(Integer)": ["com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getItem(Integer, Integer, String)": ["com.sapienter.jbilling.server.item.ItemBL.setPricingFields(java.util.List)", "com.sapienter.jbilling.server.user.db.UserDTO.getLanguageIdField()", "com.sapienter.jbilling.server.user.UserBL.getCurrencyId()", "java.util.List.addAll(java.util.Collection)", "com.sapienter.jbilling.server.item.ItemBL.getWS(com.sapienter.jbilling.server.item.db.ItemDTO)", "com.sapienter.jbilling.server.item.ItemBL.getDTO(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.user.UserBL.getEntity()", "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerId()", "com.sapienter.jbilling.server.item.PricingField.getPricingFieldsValue(java.lang.String)", "com.sapienter.jbilling.server.user.UserBL.getEntityId(java.lang.Integer)", "java.util.Arrays.asList(java.lang.Object[])", "com.sapienter.jbilling.server.user.db.UserDTO.getUserId()"],
    "com.sapienter.jbilling.server.payment.blacklist.BlacklistBL.getBlacklistPluginId(Integer)": ["com.sapienter.jbilling.server.util.PreferenceBL.set(java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.util.PreferenceBL.getInt()"],
    "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskTypeCategoryDTO.toString()": ["com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskTypeCategoryDTO.getId()", "java.lang.StringBuffer.append(char)", "java.lang.StringBuffer.toString()", "java.lang.Object.getClass()", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskTypeCategoryDTO.getInterfaceName()", "java.lang.Class.getName()", "com.sapienter.jbilling.server.util.db.AbstractDescription.getDescription()", "java.lang.StringBuffer.append(java.lang.String)"],
    "com.sapienter.jbilling.server.item.ItemSessionBean.validateDecimals(Integer, Integer)": ["com.sapienter.jbilling.server.item.ItemBL.validateDecimals(java.lang.Integer)"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentPaypalExternalTask.getPassword()": ["com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase.ensureGetParameter(java.lang.String)", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription.getName()"],
    "com.sapienter.jbilling.server.provisioning.task.MMSCProvisioningTask.getId()": ["java.util.Map.get(java.lang.Object)"],
    "com.sapienter.jbilling.server.order.OrderBL.setProvisioningStatus(Integer, Integer)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getProvisioningStatusId()", "com.sapienter.jbilling.server.user.db.UserDTO.getCompany()", "com.sapienter.jbilling.server.util.db.AbstractDAS.findForUpdate(java.io.Serializable)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setProvisioningStatus(com.sapienter.jbilling.server.provisioning.db.ProvisioningStatusDTO)", "com.sapienter.jbilling.server.util.audit.EventLogger.auditBySystem(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.util.Date)", "com.sapienter.jbilling.server.user.db.UserDTO.getId()", "com.sapienter.jbilling.server.order.db.OrderDTO.getBaseUserByUserId()", "com.sapienter.jbilling.server.util.db.AbstractGenericStatusDAS.find(java.io.Serializable)"],
    "com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase.getBooleanParameter(String)": ["java.lang.Boolean.parseBoolean(java.lang.String)", "com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase.getOptionalParameter(java.lang.String,java.lang.String)"],
    "com.sapienter.jbilling.server.user.balance.DynamicBalanceManagerTask.determineAmount(Event)": ["com.sapienter.jbilling.server.order.event.NewQuantityEvent.getNewQuantity()", "com.sapienter.jbilling.server.order.event.NewQuantityEvent.getOrderLine()", "com.sapienter.jbilling.server.order.event.OrderAddedOnInvoiceEvent.getOrder()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getAmount()", "com.sapienter.jbilling.server.order.event.OrderDeletedEvent.getOrder()", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "java.math.BigDecimal.compareTo(java.math.BigDecimal)", "com.sapienter.jbilling.server.order.db.OrderDTO.getOrderPeriod()", "com.sapienter.jbilling.server.order.db.OrderDTO.getTotal()", "java.math.BigDecimal.multiply(java.math.BigDecimal)", "com.sapienter.jbilling.server.order.event.OrderAddedOnInvoiceEvent.getTotalInvoiced()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getAmount()", "com.sapienter.jbilling.server.payment.event.AbstractPaymentEvent.getPayment()", "com.sapienter.jbilling.server.order.db.OrderPeriodDTO.getId()", "java.math.BigDecimal.subtract(java.math.BigDecimal)", "com.sapienter.jbilling.server.payment.event.PaymentDeletedEvent.getPayment()", "com.sapienter.jbilling.server.order.event.NewOrderEvent.getOrder()", "com.sapienter.jbilling.server.order.event.NewQuantityEvent.getOrderId()", "org.apache.log4j.Category.error(java.lang.Object)", "com.sapienter.jbilling.server.order.event.NewQuantityEvent.getNewOrderLine()"],
    "com.sapienter.jbilling.server.invoice.db.InvoiceDAS.create(Integer, NewInvoiceDTO, BillingProcessDTO)": ["com.sapienter.jbilling.server.invoice.db.InvoiceDTO.setInProcessPayment(int)", "java.util.Calendar.getInstance()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.setBillingProcess(com.sapienter.jbilling.server.process.db.BillingProcessDTO)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "java.math.BigDecimal.compareTo(java.math.BigDecimal)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getDueDate()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.setToProcess(java.lang.Integer)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.setDeleted(java.lang.Integer)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.setCreateTimestamp(java.util.Date)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.setBaseUser(com.sapienter.jbilling.server.user.db.UserDTO)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getBalance()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getTotal()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getInProcessPayment()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getCarriedBalance()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.setCreateDatetime(java.util.Date)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.setBalance(java.math.BigDecimal)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.setPaymentAttempts(int)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getIsReview()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getCurrency()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.setTotal(java.math.BigDecimal)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.setIsReview(java.lang.Integer)", "com.sapienter.jbilling.server.invoice.NewInvoiceDTO.getBillingDate()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.setDueDate(java.util.Date)", "java.util.Calendar.getTime()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.setCarriedBalance(java.math.BigDecimal)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.setCurrency(com.sapienter.jbilling.server.util.db.CurrencyDTO)", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)"],
    "com.sapienter.jbilling.server.user.PartnerRangeComparator.compare(Object, Object)": ["java.lang.Integer.compareTo(java.lang.Integer)", "com.sapienter.jbilling.server.user.partner.db.PartnerRange.getRangeFrom()"],
    "com.sapienter.jbilling.server.user.db.CreditCardDTO.getExpiry()": ["com.sapienter.jbilling.server.user.db.CreditCardDTO.getCcExpiry()"],
    "com.sapienter.jbilling.server.item.ItemBL.updateCurrencies(ItemDTO)": ["org.apache.log4j.Category.debug(java.lang.Object)", "java.util.Set.add(java.lang.Object)", "com.sapienter.jbilling.server.item.db.ItemPriceDAS.find(java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.util.db.AbstractDAS.findNow(java.io.Serializable)", "com.sapienter.jbilling.server.user.db.CompanyDTO.getCurrency()", "org.apache.log4j.Category.warn(java.lang.Object)", "com.sapienter.jbilling.server.item.db.ItemDTO.getEntityId()", "java.util.List.add(java.lang.Object)", "com.sapienter.jbilling.server.item.db.ItemPriceDTO.getPrice()", "com.sapienter.jbilling.server.item.db.ItemDTO.getId()", "com.sapienter.jbilling.server.item.db.ItemPriceDTO.getCurrencyId()", "com.sapienter.jbilling.server.item.db.ItemPriceDTO.setPrice(java.math.BigDecimal)", "com.sapienter.jbilling.server.user.EntityBL.getEntity()", "com.sapienter.jbilling.server.item.db.ItemDTO.getPrices()", "com.sapienter.jbilling.server.item.db.ItemDTO.getItemPrices()", "com.sapienter.jbilling.server.item.db.ItemDTO.setPrices(java.util.List)", "java.util.List.size()", "com.sapienter.jbilling.server.item.db.ItemDTO.getCurrencyId()", "com.sapienter.jbilling.server.item.db.ItemPriceDTO.getCurrency()", "com.sapienter.jbilling.server.util.db.AbstractDAS.delete(java.lang.Object)", "com.sapienter.jbilling.server.item.db.ItemDTO.getPrice()", "com.sapienter.jbilling.server.item.ItemBL.invalidateCache()", "java.util.List.get(int)"],
    "com.sapienter.jbilling.server.user.CreditCardBL.init()": ["com.sapienter.jbilling.server.util.audit.EventLogger.getInstance()"],
    "com.sapienter.jbilling.server.util.PreferenceBL.getInt()": ["java.lang.Integer.valueOf(java.lang.String)", "com.sapienter.jbilling.server.util.PreferenceBL.getString()"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getAllItemCategories()": ["com.sapienter.jbilling.server.item.ItemTypeBL.getAllItemTypes()"],
    "com.sapienter.jbilling.server.pluggableTask.PaymentAuthorizeNetTask.preAuth(PaymentDTOEx)": ["java.util.Map.get(java.lang.Object)", "org.apache.log4j.Category.info(java.lang.Object,java.lang.Throwable)", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription.getName()", "com.sapienter.jbilling.server.user.CreditCardBL.get4digitExpiry(com.sapienter.jbilling.server.user.db.CreditCardDTO)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getId()", "com.sapienter.jbilling.server.util.db.CurrencyDTO.getCode()", "com.sapienter.jbilling.server.item.CurrencyBL.getEntity()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getAmount()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getCurrency()", "com.sapienter.jbilling.server.pluggableTask.PaymentAuthorizeNetTask.makeCall(org.apache.commons.httpclient.NameValuePair[])", "com.sapienter.jbilling.server.pluggableTask.PaymentAuthorizeNetTask.getChargeData(java.lang.String,java.lang.String,boolean,java.math.BigDecimal,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.Integer)", "com.sapienter.jbilling.server.payment.PaymentAuthorizationBL.create(com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO,java.lang.Integer)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getNumber()", "com.sapienter.jbilling.server.pluggableTask.AuthorizeNetResponseDTO.getPaymentAuthorizationDTO()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.setProcessor(java.lang.String)", "com.sapienter.jbilling.server.util.db.CurrencyDTO.getId()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getCreditCard()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.setAuthorization(com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO)", "java.lang.String.length()"],
    "com.sapienter.jbilling.server.provisioning.TestExternalProvisioningMDB.testExternalProvisioningTask(MapMessage)": ["org.apache.log4j.Category.debug(java.lang.Object)", "javax.jms.MapMessage.getIntProperty(java.lang.String)", "com.sapienter.jbilling.server.provisioning.TestExternalProvisioningMDB.pause(long)", "java.lang.String.equals(java.lang.Object)", "com.sapienter.jbilling.server.provisioning.TestExternalProvisioningMDB.updateProvisioningStatus(int,int)", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)", "org.apache.log4j.Category.error(java.lang.Object)", "javax.jms.MapMessage.getStringProperty(java.lang.String)"],
    "com.sapienter.jbilling.server.order.db.OrderDAS.findIsUserSubscribedTo(Integer, Integer)": ["getSession()", "createQuery(java.lang.String)", "uniqueResult()", "setInteger(java.lang.String,java.lang.Integer)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.createItem(ItemDTOEx)": ["com.sapienter.jbilling.server.user.db.UserDTO.getLanguageIdField()", "com.sapienter.jbilling.server.item.ItemBL.getDTO(com.sapienter.jbilling.server.item.ItemDTOEx)", "com.sapienter.jbilling.server.item.db.ItemDTO.setEntity(com.sapienter.jbilling.server.user.db.CompanyDTO)", "com.sapienter.jbilling.server.user.UserBL.getEntity()", "com.sapienter.jbilling.server.item.ItemBL.create(com.sapienter.jbilling.server.item.db.ItemDTO,java.lang.Integer)", "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerId()", "com.sapienter.jbilling.server.user.UserBL.getEntityId(java.lang.Integer)", "com.sapienter.jbilling.server.user.db.UserDTO.getUserId()"],
    "com.sapienter.jbilling.server.item.tasks.PricingResult.toString()": ["com.sapienter.jbilling.server.rule.Result.toString()"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getOrderProcessesByInvoice(Integer)": ["java.util.Collections.emptyList()", "java.util.List.add(java.lang.Object)", "java.util.Set.size()", "com.sapienter.jbilling.server.invoice.InvoiceBL.getDTO()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getOrderProcesses()"],
    "com.sapienter.jbilling.server.mediation.MediationConfigurationBL.getDTO(MediationConfigurationWS)": ["com.sapienter.jbilling.server.mediation.MediationConfigurationWS.getPluggableTaskId()", "com.sapienter.jbilling.server.mediation.MediationConfigurationBL.getPluggableTaskDAS()", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)"],
    "com.sapienter.jbilling.server.mediation.task.JDBCReader.batchRead(List, int[])": ["com.sapienter.jbilling.server.mediation.task.AbstractJDBCReader.flushLastId()", "java.util.List.isEmpty()", "com.sapienter.jbilling.server.mediation.task.JDBCReader.executeTimestampUpdateSql(java.util.List,int[])", "com.sapienter.jbilling.server.mediation.task.AbstractJDBCReader.getMarkMethod()"],
    "com.sapienter.jbilling.server.user.UserSessionBean.getEntityContact(Integer)": ["com.sapienter.jbilling.server.user.ContactBL.getDTO()", "com.sapienter.jbilling.server.user.ContactBL.setEntity(java.lang.Integer)", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)"],
    "com.sapienter.jbilling.server.invoice.db.InvoiceDAS.findIdsByUserLatestFirst(Integer, int)": ["org.hibernate.criterion.Order.desc(java.lang.String)", "org.hibernate.Criteria.list()", "createAlias(java.lang.String,java.lang.String)", "org.hibernate.criterion.Restrictions.eq(java.lang.String,java.lang.Integer)", "addOrder()", "setProjection()", "getSession()", "add()", "createCriteria(java.lang.Class)", "org.hibernate.criterion.Projections.id()", "setMaxResults(int)", "org.hibernate.criterion.Restrictions.eq(java.lang.String,int)"],
    "com.sapienter.jbilling.server.process.db.ProcessRunUserDAS.findSuccessfullUserIds(Integer)": ["com.sapienter.jbilling.server.process.db.ProcessRunUserDAS.findUserIdsByStatus(java.lang.Integer,java.lang.Integer)"],
    "com.sapienter.jbilling.server.order.OrderWS.setTotal(BigDecimal)": ["java.math.BigDecimal.toString()"],
    "com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.throwDuplicateProfileError(String, String)": ["java.lang.String.indexOf(int,int)", "java.lang.String.substring(int,int)", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.length()"],
    "com.sapienter.jbilling.server.order.Usage.subtractQuantity(BigDecimal)": ["java.math.BigDecimal.subtract(java.math.BigDecimal)", "com.sapienter.jbilling.server.order.Usage.setQuantity(java.math.BigDecimal)", "com.sapienter.jbilling.server.order.Usage.getQuantity()"],
    "com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.beginTag(StringBuffer, String)": ["java.lang.String.format(java.lang.String,java.lang.Object[])", "java.lang.StringBuffer.append(java.lang.String)"],
    "com.sapienter.jbilling.server.user.CreditCardBL.get4digitExpiry(CreditCardDTO)": ["java.util.Calendar.setTime(java.util.Date)", "java.lang.String.substring(int)", "java.util.Calendar.get(int)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getCcExpiry()", "java.lang.String.valueOf(int)", "java.lang.String.length()"],
    "com.sapienter.jbilling.server.payment.PaymentSessionBean.processAndUpdateInvoice(PaymentDTOEx, Integer, Integer)": ["java.util.List.isEmpty()", "org.apache.log4j.Category.info(java.lang.Object)", "java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.payment.PaymentBL.automaticPaymentApplication()", "com.sapienter.jbilling.server.process.ConfigurationBL.getEntity()", "java.util.List.add(java.lang.Object)", "com.sapienter.jbilling.server.payment.PaymentDTOEx.setInvoiceIds(java.util.List)", "com.sapienter.jbilling.server.payment.PaymentSessionBean.processAndUpdateInvoice(com.sapienter.jbilling.server.payment.PaymentDTOEx,com.sapienter.jbilling.server.invoice.db.InvoiceDTO)", "com.sapienter.jbilling.server.payment.PaymentBL.getEntity()", "com.sapienter.jbilling.server.invoice.InvoiceBL.getEntity()", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getPayment()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getInvoiceIds()", "com.sapienter.jbilling.server.payment.PaymentBL.processPayment(java.lang.Integer,com.sapienter.jbilling.server.payment.PaymentDTOEx)", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.getAutoPaymentApplication()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setPaymentResult(com.sapienter.jbilling.server.payment.db.PaymentResultDTO)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getIsRefund()", "java.util.List.get(int)"],
    "com.sapienter.jbilling.server.order.OrderBL.createAsWithLine(OrderDTO, Integer, Double)": ["com.sapienter.jbilling.server.order.OrderBL.createAsWithLine(com.sapienter.jbilling.server.order.db.OrderDTO,java.lang.Integer,java.math.BigDecimal)", "java.math.BigDecimal.setScale(int,int)"],
    "com.sapienter.jbilling.server.order.OrderBL.setForUpdate(Integer)": ["com.sapienter.jbilling.server.order.db.OrderDAS.findForUpdate(java.lang.Integer)"],
    "com.sapienter.jbilling.server.item.db.ItemDAS.findAllByItemType(Integer)": ["org.hibernate.Criteria.list()", "createAlias(java.lang.String,java.lang.String)", "org.hibernate.criterion.Restrictions.eq(java.lang.String,java.lang.Integer)", "getSession()", "add()", "createCriteria(java.lang.Class)", "com.sapienter.jbilling.server.util.db.AbstractDAS.getPersistentClass()"],
    "com.sapienter.jbilling.server.notification.NotificationBL.getDTO()": ["com.sapienter.jbilling.server.notification.MessageDTO.setTypeId(java.lang.Integer)", "com.sapienter.jbilling.server.notification.MessageDTO.setUseFlag(java.lang.Boolean)", "com.sapienter.jbilling.server.util.db.LanguageDTO.getId()", "com.sapienter.jbilling.server.notification.db.NotificationMessageDTO.getLanguage()", "com.sapienter.jbilling.server.notification.NotificationBL.setContent(com.sapienter.jbilling.server.notification.MessageDTO)", "com.sapienter.jbilling.server.notification.db.NotificationMessageDTO.getNotificationMessageType()", "com.sapienter.jbilling.server.notification.db.NotificationMessageDTO.getUseFlag()", "com.sapienter.jbilling.server.notification.MessageDTO.setLanguageId(java.lang.Integer)", "com.sapienter.jbilling.server.notification.db.NotificationMessageTypeDTO.getId()"],
    "com.sapienter.jbilling.server.payment.blacklist.BlacklistBL.getIpAddressCcfId(Integer)": ["com.sapienter.jbilling.server.payment.tasks.PaymentFilterTask.getIpAddressCcfId()", "com.sapienter.jbilling.server.payment.blacklist.BlacklistBL.instantiatePaymentFilter(java.lang.Integer)"],
    "com.sapienter.jbilling.server.order.OrderBL.addItem(Integer, Integer, Integer, Integer, Integer, Integer)": ["com.sapienter.jbilling.server.order.OrderBL.addItem(java.lang.Integer,java.math.BigDecimal,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.util.List)"],
    "com.sapienter.jbilling.server.user.UserBL.validateUserNamePassword(UserDTOEx, UserDTOEx)": ["com.sapienter.jbilling.server.user.UserDTOEx.getEntityId()", "com.sapienter.jbilling.server.user.UserDTOEx.getUserId()", "com.sapienter.jbilling.server.user.UserDTOEx.getMainRoleId()", "com.sapienter.jbilling.server.user.db.UserDTO.getPassword()", "java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.user.UserBL.getUserEntity(java.lang.Integer)", "com.sapienter.jbilling.server.user.db.UserDTO.getDeleted()", "com.sapienter.jbilling.common.JBCrypto.getPasswordCrypto(java.lang.Integer)", "java.lang.String.equals(java.lang.Object)", "com.sapienter.jbilling.common.JBCrypto.encrypt(java.lang.String)"],
    "com.sapienter.jbilling.server.item.db.ItemDTO.getNumber()": ["com.sapienter.jbilling.server.item.db.ItemDTO.getInternalNumber()"],
    "com.sapienter.jbilling.server.invoice.NewInvoiceDTO.calculateTotal()": ["java.util.Iterator.next()", "java.util.List.iterator()", "java.util.Iterator.hasNext()", "java.math.BigDecimal.add(java.math.BigDecimal)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.setTotal(java.math.BigDecimal)", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO.getAmount()"],
    "com.sapienter.jbilling.server.invoice.db.InvoiceDAS.findProccesableByProcess(Integer)": ["org.hibernate.Criteria.list()", "org.hibernate.criterion.Restrictions.eq(java.lang.String,java.lang.Integer)", "org.hibernate.criterion.Restrictions.eq(java.lang.String,com.sapienter.jbilling.server.process.db.BillingProcessDTO)", "getSession()", "add()", "org.hibernate.Criteria.createAlias(java.lang.String,java.lang.String)", "org.hibernate.Criteria.add()", "createCriteria(java.lang.Class)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "org.hibernate.criterion.Restrictions.eq(java.lang.String,int)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getUserPaymentInstrument(Integer)": ["com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerCompanyId()", "com.sapienter.jbilling.server.payment.PaymentBL.getWS(com.sapienter.jbilling.server.payment.PaymentDTOEx)", "com.sapienter.jbilling.server.payment.PaymentBL.findPaymentInstrument(java.lang.Integer,java.lang.Integer)"],
    "com.sapienter.jbilling.server.order.db.OrderLineDTO.getQuantityInt()": ["java.math.BigDecimal.intValue()"],
    "com.sapienter.jbilling.server.payment.event.ProcessPaymentProcessor.processPayment(ProcessPaymentEvent)": ["com.sapienter.jbilling.server.system.event.EventProcessor.getPluggableTask(java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.payment.event.ProcessPaymentEvent.getRunId()", "com.sapienter.jbilling.server.payment.tasks.IAsyncPaymentParameters.addParameters(com.sapienter.jbilling.server.payment.tasks.MapMessage)", "com.sapienter.jbilling.server.payment.event.ProcessPaymentEvent.getInvoiceId()", "com.sapienter.jbilling.server.system.event.MapMessage.setStringProperty(java.lang.String,java.lang.String)", "java.lang.Object.getClass()", "com.sapienter.jbilling.server.system.event.MapMessage.setInt(java.lang.String,java.lang.Integer)", "com.sapienter.jbilling.server.system.event.MapMessage.setInt(java.lang.String,int)", "com.sapienter.jbilling.server.payment.event.ProcessPaymentEvent.getProcessId()"],
    "com.sapienter.jbilling.server.user.contact.db.ContactTypeDAS.findPrimary(Integer)": ["createAlias(java.lang.String,java.lang.String)", "org.hibernate.criterion.Restrictions.eq(java.lang.String,java.lang.Integer)", "getSession()", "add()", "createCriteria(java.lang.Class)", "org.hibernate.Criteria.uniqueResult()", "org.hibernate.criterion.Restrictions.eq(java.lang.String,int)"],
    "com.sapienter.jbilling.server.provisioning.task.TelnetCommunication.connect(Map)": ["java.util.Map.get(java.lang.Object)", "org.apache.log4j.Category.debug(java.lang.Object)", "org.apache.commons.net.telnet.TelnetClient.getOutputStream()", "com.sapienter.jbilling.server.provisioning.task.TelnetCommunication.write(java.lang.String)", "com.sapienter.jbilling.server.provisioning.task.TelnetCommunication.getParameter(java.lang.String,java.util.Map)", "org.apache.commons.net.telnet.TelnetClient.connect(java.lang.String,int)", "com.sapienter.jbilling.server.provisioning.task.TelnetCommunication.readUntil(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "org.apache.commons.net.telnet.TelnetClient.getInputStream()"],
    "com.sapienter.jbilling.server.item.tasks.SubscriptionResult.populateSubscription(Integer, Integer)": ["com.sapienter.jbilling.server.order.db.OrderPeriodDTO.getId()", "com.sapienter.jbilling.server.order.db.OrderDTO.getActiveSince()", "com.sapienter.jbilling.server.order.db.OrderDTO.getActiveUntil()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getQuantity()", "com.sapienter.jbilling.server.order.OrderBL.getRecurringOrderLine(java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getPurchaseOrder()", "com.sapienter.jbilling.server.order.db.OrderDTO.getOrderPeriod()"],
    "com.sapienter.jbilling.server.item.ItemDTOEx.isIdentical(Object)": ["java.lang.Integer.equals(java.lang.Object)", "java.lang.String.equals(java.lang.Object)"],
    "com.sapienter.jbilling.server.order.OrderBL.deleteItem(Integer)": ["com.sapienter.jbilling.server.order.db.OrderDTO.removeLine(java.lang.Integer)"],
    "com.sapienter.jbilling.server.process.task.BasicAgeingTask.reviewAllUsers(Integer, Set, Date, Integer)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.process.task.BasicAgeingTask.ageUser(java.util.Set,com.sapienter.jbilling.server.user.db.UserDTO,java.util.Date,java.lang.Integer)", "java.sql.ResultSet.next()", "java.sql.ResultSet.getInt(int)", "com.sapienter.jbilling.server.user.UserBL.findActiveWithOpenInvoices(java.lang.Integer)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.process.task.BasicAgeingTask.getGracePeriod(java.lang.Integer)", "com.sapienter.jbilling.server.user.db.UserDTO.getId()", "com.sapienter.jbilling.server.invoice.db.InvoiceDAS.findProccesableByUser(com.sapienter.jbilling.server.user.db.UserDTO)", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)", "com.sapienter.jbilling.server.user.db.UserDAS.findAgeing(java.lang.Integer)", "com.sapienter.jbilling.server.process.task.BasicAgeingTask.isInvoiceOverdue(com.sapienter.jbilling.server.invoice.db.InvoiceDTO,com.sapienter.jbilling.server.user.db.UserDTO,java.lang.Integer,java.util.Date)"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentPaypalExternalTask.prepareExternalPayment(PaymentDTOEx)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.payment.PaymentDTOEx.setCreditCard(com.sapienter.jbilling.server.user.db.CreditCardDTO)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.useGatewayKey()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getUserId()", "com.sapienter.jbilling.server.user.UserBL.getCreditCard()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getCreditCard()"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getAllInvoices()": ["com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerLanguageId()", "java.util.List.size()", "com.sapienter.jbilling.server.util.db.AbstractDAS.findAll()", "com.sapienter.jbilling.server.invoice.InvoiceWS.setStatusDescr(java.lang.String)", "com.sapienter.jbilling.server.util.db.AbstractDescription.getDescription(java.lang.Integer)", "java.util.List.add(java.lang.Object)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getInvoiceStatus()", "com.sapienter.jbilling.server.invoice.InvoiceBL.getWS(com.sapienter.jbilling.server.invoice.db.InvoiceDTO)", "java.util.List.toArray(java.lang.Object[])"],
    "com.sapienter.jbilling.tools.ConvertToBinHexa.updateUserRow(int, String)": ["java.sql.Connection.prepareStatement(java.lang.String)", "java.sql.PreparedStatement.setString(int,java.lang.String)", "java.sql.PreparedStatement.setInt(int,int)", "java.sql.PreparedStatement.executeUpdate()"],
    "com.sapienter.jbilling.server.pluggableTask.AuthorizeNetResponseDTO.toString()": ["com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getCode2()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getCode3()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getApprovalCode()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getTransactionId()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getMD5()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getCode1()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getResponseMessage()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getCardCode()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getAvs()"],
    "com.sapienter.jbilling.server.util.db.AbstractDescription.setDescription(String, Integer, String)": ["com.sapienter.jbilling.server.util.db.JbillingTableDAS.findByName(java.lang.String)", "com.sapienter.jbilling.server.util.db.JbillingTable.getId()", "com.sapienter.jbilling.server.util.db.AbstractDescription.getId()", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "com.sapienter.jbilling.server.util.db.AbstractDescription.getTable()", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)"],
    "com.sapienter.jbilling.server.user.UserSessionBean.sendLostPassword(String, String)": ["com.sapienter.jbilling.server.user.UserBL.sendLostPassword(java.lang.Integer,java.lang.Integer,java.lang.Integer)", "java.lang.Integer.valueOf(java.lang.String)", "com.sapienter.jbilling.server.user.db.UserDTO.getLanguageIdField()", "com.sapienter.jbilling.server.user.UserBL.getEntity()", "com.sapienter.jbilling.server.user.db.UserDTO.getUserId()"],
    "com.sapienter.jbilling.client.api.ExternalCallbackServlet.verifyTransactionType(String)": ["java.lang.String.equals(java.lang.Object)", "java.lang.String.length()"],
    "com.sapienter.jbilling.server.order.OrderLineBL.addItem(OrderDTO, Integer, Integer, BigDecimal)": ["com.sapienter.jbilling.server.order.db.OrderDTO.getCurrencyId()", "com.sapienter.jbilling.server.user.UserBL.getLanguage()", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setItemId(java.lang.Integer)", "com.sapienter.jbilling.server.order.OrderLineBL.addItem(java.lang.Integer,java.math.BigDecimal,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,com.sapienter.jbilling.server.order.db.OrderDTO,com.sapienter.jbilling.server.order.db.OrderLineDTO,boolean)", "com.sapienter.jbilling.server.user.db.UserDTO.getEntity()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setPrice(java.math.BigDecimal)", "com.sapienter.jbilling.server.user.UserBL.getEntity()", "com.sapienter.jbilling.server.order.db.OrderDTO.getUserId()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setQuantity(java.lang.Integer)"],
    "com.sapienter.jbilling.server.payment.db.PaymentInvoiceId.equals(Object)": ["java.lang.Integer.equals(java.lang.Object)", "java.util.Date.equals(java.lang.Object)", "com.sapienter.jbilling.server.payment.db.PaymentInvoiceId.getAmount()", "com.sapienter.jbilling.server.payment.db.PaymentInvoiceId.getId()", "com.sapienter.jbilling.server.payment.db.PaymentInvoiceId.getPaymentId()", "com.sapienter.jbilling.server.payment.db.PaymentInvoiceId.getCreateDatetime()", "java.lang.Double.equals(java.lang.Object)", "com.sapienter.jbilling.server.payment.db.PaymentInvoiceId.getInvoiceId()"],
    "com.sapienter.jbilling.server.user.partner.PartnerBL.getList(Integer)": ["java.sql.Connection.close()", "javax.sql.RowSet.setInt(int,int)", "com.sapienter.jbilling.server.list.ResultList.execute()", "com.sapienter.jbilling.server.list.ResultList.prepareStatement(java.lang.String)", "java.lang.Integer.intValue()"],
    "com.sapienter.jbilling.server.util.db.LanguageDAS.findByCode(String)": ["org.hibernate.Query.setParameter(java.lang.String,java.lang.String)", "org.hibernate.Query.uniqueResult()", "getSession()", "createQuery(java.lang.String)"],
    "com.sapienter.jbilling.server.customer.CustomerSessionBean.getPrimaryContactDTO(Integer)": ["com.sapienter.jbilling.server.user.ContactBL.getDTO()", "com.sapienter.jbilling.server.user.ContactBL.set(java.lang.Integer)", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)"],
    "com.sapienter.jbilling.server.payment.db.PaymentDTO.getPaymentInfoCheque()": ["com.sapienter.jbilling.server.payment.db.PaymentInfoChequeDAS.findByPayment(com.sapienter.jbilling.server.payment.db.PaymentDTO)"],
    "com.sapienter.jbilling.server.user.UserSessionBean.getPartnerDTO(Integer)": ["com.sapienter.jbilling.server.user.partner.db.Partner.touch()", "com.sapienter.jbilling.server.user.partner.PartnerBL.getDTO()"],
    "com.sapienter.jbilling.server.pluggableTask.PaymentACHCommerceTask.processResponse(String)": ["com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.setTransactionId(java.lang.String)", "java.lang.String.split(java.lang.String)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.setCode1(java.lang.String)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.setResponseMessage(java.lang.String)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.setProcessor(java.lang.String)"],
    "com.sapienter.jbilling.server.pluggableTask.ProcessorEmailAlarmTask.fail()": ["com.sapienter.jbilling.server.pluggableTask.ProcessorEmailAlarm.fail(int,int,int)", "com.sapienter.jbilling.server.pluggableTask.ProcessorEmailAlarm.getFailedCounter()", "com.sapienter.jbilling.server.pluggableTask.ProcessorEmailAlarmTask.sendEmail(java.lang.String,java.lang.String[])", "java.util.Date.toString()", "java.lang.Integer.toString()"],
    "com.sapienter.jbilling.server.notification.NotificationBL.setContent(MessageDTO, Integer, Integer, Integer)": ["com.sapienter.jbilling.server.notification.NotificationBL.set(java.lang.Integer,java.lang.Integer,java.lang.Integer)", "org.apache.log4j.Category.warn(java.lang.Object)", "com.sapienter.jbilling.server.notification.NotificationBL.setContent(com.sapienter.jbilling.server.notification.MessageDTO)", "com.sapienter.jbilling.server.notification.db.NotificationMessageDTO.getUseFlag()"],
    "com.sapienter.jbilling.server.user.contact.db.ContactDTO.toString()": ["com.sapienter.jbilling.server.user.contact.db.ContactDTO.getFaxAreaCode()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getContactMap()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getInitial()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getUserId()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getOrganizationName()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getFaxNumber()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getInclude()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getEmail()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getId()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getTitle()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getLastName()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getFaxCountryCode()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getVersionNum()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getDeleted()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getPhoneCountryCode()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getCreateDate()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getPhoneNumber()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getStateProvince()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getCity()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getPhoneAreaCode()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getCountryCode()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getFirstName()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getAddress2()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getPostalCode()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getAddress1()"],
    "com.sapienter.jbilling.server.payment.PaymentAuthorizationBL.set(Integer)": ["com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)"],
    "com.sapienter.jbilling.server.provisioning.task.TestExternalProvisioningTask.pause(long)": ["org.apache.log4j.Category.debug(java.lang.Object)", "java.lang.Thread.sleep(long)"],
    "com.sapienter.jbilling.server.order.db.OrderDTO.init(OrderDTO)": ["com.sapienter.jbilling.server.order.db.OrderDTO.getOrderBillingType()", "com.sapienter.jbilling.server.order.db.OrderDTO.getNotes()", "com.sapienter.jbilling.server.order.db.OrderDTO.getAnticipatePeriods()", "java.util.List.add(java.lang.Object)", "com.sapienter.jbilling.server.order.db.OrderDTO.getCycleStarts()", "com.sapienter.jbilling.server.order.db.OrderDTO.getOrderPeriod()", "com.sapienter.jbilling.server.order.db.OrderDTO.getBaseUserByCreatedBy()", "com.sapienter.jbilling.server.order.db.OrderDTO.getLastNotified()", "com.sapienter.jbilling.server.order.db.OrderDTO.getVersionNum()", "com.sapienter.jbilling.server.order.db.OrderDTO.getBaseUserByUserId()", "com.sapienter.jbilling.server.order.db.OrderDTO.getIsCurrent()", "com.sapienter.jbilling.server.order.db.OrderDTO.getOrderStatus()", "com.sapienter.jbilling.server.order.db.OrderDTO.getId()", "com.sapienter.jbilling.server.order.db.OrderDTO.getNotificationStep()", "com.sapienter.jbilling.server.order.db.OrderDTO.getCurrency()", "java.util.Set.addAll(java.util.Collection)", "com.sapienter.jbilling.server.order.db.OrderDTO.getCreateDate()", "com.sapienter.jbilling.server.order.db.OrderDTO.getNotify()", "com.sapienter.jbilling.server.order.db.OrderDTO.getActiveSince()", "com.sapienter.jbilling.server.order.db.OrderDTO.getActiveUntil()", "com.sapienter.jbilling.server.order.db.OrderDTO.getOrderProcesses()", "com.sapienter.jbilling.server.order.db.OrderDTO.getOwnInvoice()", "com.sapienter.jbilling.server.order.db.OrderDTO.getNextBillableDay()", "com.sapienter.jbilling.server.order.db.OrderDTO.getDeleted()", "com.sapienter.jbilling.server.order.db.OrderDTO.getLines()", "com.sapienter.jbilling.server.order.db.OrderDTO.getDfFm()", "com.sapienter.jbilling.server.order.db.OrderDTO.getDueDateUnitId()", "com.sapienter.jbilling.server.order.db.OrderDTO.getPricingFields()", "com.sapienter.jbilling.server.order.db.OrderDTO.getDueDateValue()", "com.sapienter.jbilling.server.order.db.OrderDTO.getNotesInInvoice()"],
    "com.sapienter.jbilling.server.order.db.OrderDTO.addExtraFields(Integer)": ["com.sapienter.jbilling.server.order.db.OrderDTO.getOrderBillingType()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getId()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.addExtraFields(java.lang.Integer)", "com.sapienter.jbilling.server.order.db.OrderProcessDTO.getBillingProcess()", "com.sapienter.jbilling.server.util.db.CurrencyDTO.getSymbol()", "com.sapienter.jbilling.server.order.db.OrderProcessDTO.getIsReview()", "com.sapienter.jbilling.server.util.db.AbstractDescription.getDescription(java.lang.Integer)", "com.sapienter.jbilling.server.order.db.OrderDTO.getCurrency()", "com.sapienter.jbilling.server.invoice.InvoiceBL.getDTO()", "com.sapienter.jbilling.server.order.db.OrderDTO.getOrderPeriod()", "com.sapienter.jbilling.server.util.Util.getPeriodUnitStr(java.lang.Integer,java.lang.Integer)", "java.util.Collection.add(java.lang.Object)", "com.sapienter.jbilling.server.order.db.OrderDTO.getOrderProcesses()", "com.sapienter.jbilling.server.order.db.OrderDTO.getLines()", "com.sapienter.jbilling.server.order.db.OrderDTO.getDueDateUnitId()", "com.sapienter.jbilling.server.order.db.OrderProcessDTO.getInvoice()", "com.sapienter.jbilling.server.order.db.OrderDTO.getOrderStatus()"],
    "com.sapienter.jbilling.server.user.EntityBL.getContact()": ["com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.user.ContactBL.getEntity()", "com.sapienter.jbilling.server.user.ContactBL.setEntity(java.lang.Integer)"],
    "com.sapienter.jbilling.server.order.OrderHelper.add(BigDecimal, BigDecimal)": ["java.math.BigDecimal.add(java.math.BigDecimal)"],
    "com.sapienter.jbilling.server.user.UserSessionBean.processPayout(Integer)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.user.partner.PartnerBL.processPayout(java.lang.Integer)"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayTask.preAuth(PaymentDTOEx)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayTask.getProcessorName()", "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask.doProcess(com.sapienter.jbilling.server.payment.PaymentDTOEx,com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask$SvcType,com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO)", "com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase$Result.shouldCallOtherProcessors()"],
    "com.sapienter.jbilling.server.process.ProcessRunTotalWS.setTotalNotPaid(BigDecimal)": ["java.math.BigDecimal.toString()"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.updateOrderLine(OrderLineWS)": ["com.sapienter.jbilling.server.order.OrderBL.updateOrderLine(com.sapienter.jbilling.server.order.OrderLineWS)"],
    "com.sapienter.jbilling.server.entity.PaymentAuthorizationDTO.equals(Object)": ["com.sapienter.jbilling.server.entity.PaymentAuthorizationDTO.hasIdentity()", "java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.entity.PaymentAuthorizationDTO.isIdentical(java.lang.Object)"],
    "com.sapienter.jbilling.server.invoice.InvoiceSessionBean.delete(Integer, Integer)": ["com.sapienter.jbilling.server.invoice.InvoiceBL.delete(java.lang.Integer)"],
    "com.sapienter.jbilling.server.invoice.db.InvoiceDAS.findAmountForPeriodByItem(Integer, Integer, Date, Date)": ["com.sapienter.jbilling.server.invoice.db.InvoiceDAS.addItemCriteria(org.hibernate.Criteria,java.lang.Integer)", "com.sapienter.jbilling.server.invoice.db.InvoiceDAS.addUserCriteria(org.hibernate.Criteria,java.lang.Integer)", "com.sapienter.jbilling.server.invoice.db.InvoiceDAS.addPeriodCriteria(org.hibernate.Criteria,java.util.Date,java.util.Date)", "org.hibernate.criterion.Projections.sum(java.lang.String)", "getSession()", "createCriteria(java.lang.Class)", "org.hibernate.Criteria.uniqueResult()", "org.hibernate.Criteria.setProjection()"],
    "com.sapienter.jbilling.server.user.AchBL.create(AchDTO)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.user.db.AchDTO.useGatewayKey()", "java.util.Iterator.next()", "com.sapienter.jbilling.server.system.event.EventManager.process(com.sapienter.jbilling.server.system.event.Event)", "com.sapienter.jbilling.server.user.db.AchDTO.isBankAccountObscured()", "com.sapienter.jbilling.server.user.db.AchDTO.getAbaRouting()", "com.sapienter.jbilling.server.user.db.AchDTO.getBaseUser()", "com.sapienter.jbilling.server.user.UserBL.getEntity()", "com.sapienter.jbilling.server.user.db.AchDTO.getId()", "com.sapienter.jbilling.server.user.db.AchDTO.getBankAccount()", "com.sapienter.jbilling.server.user.db.AchDTO.getBankName()", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.user.db.UserDTO.getCompany()", "com.sapienter.jbilling.server.user.db.AchDAS.create(com.sapienter.jbilling.server.user.db.UserDTO,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String)", "com.sapienter.jbilling.server.user.db.UserDTO.getAchs()", "com.sapienter.jbilling.server.user.db.AchDTO.getAccountName()", "com.sapienter.jbilling.server.user.db.AchDTO.getAccountType()", "com.sapienter.jbilling.server.user.db.UserDTO.getId()", "com.sapienter.jbilling.server.user.db.AchDTO.getGatewayKey()", "java.util.Set.iterator()", "com.sapienter.jbilling.server.user.AchBL.getUser(com.sapienter.jbilling.server.user.db.AchDTO)"],
    "com.sapienter.jbilling.server.user.db.AchDTO.getAbaRouting()": ["com.sapienter.jbilling.common.JBCrypto.getCreditCardCrypto()", "com.sapienter.jbilling.common.JBCrypto.decrypt(java.lang.String)", "com.sapienter.jbilling.server.user.db.AchDTO.getRawAbaRouting()"],
    "com.sapienter.jbilling.server.system.event.EventProcessor.getPluggableTask(Integer, Integer)": ["com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskManager.getNextClass()"],
    "com.sapienter.jbilling.server.item.ItemBL.validateDecimals(Integer)": ["com.sapienter.jbilling.server.item.db.ItemDTO.getId()", "com.sapienter.jbilling.server.order.db.OrderLineDAS.findLinesWithDecimals(java.lang.Integer)"],
    "com.sapienter.jbilling.server.user.UserBL.findActiveWithOpenInvoices(Integer)": ["java.sql.Connection.close()", "javax.sql.RowSet.setInt(int,int)", "com.sapienter.jbilling.server.list.ResultList.execute()", "com.sapienter.jbilling.server.list.ResultList.prepareStatement(java.lang.String)"],
    "com.sapienter.jbilling.server.util.api.validation.APIValidator.validateObject(Object, Class[])": ["com.sapienter.jbilling.server.util.api.validation.APIValidator.validateObjects(java.util.List,java.lang.Class[])", "java.util.Arrays.asList(java.lang.Object[])"],
    "com.sapienter.jbilling.server.user.RoleBL.setPermissions(Set)": ["java.util.Set.clear()", "com.sapienter.jbilling.server.util.db.AbstractDAS.flush()", "com.sapienter.jbilling.server.user.permisson.db.RoleDTO.getPermissions()", "java.util.Set.addAll(java.util.Collection)", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)", "org.apache.log4j.Category.error(java.lang.Object)"],
    "com.sapienter.jbilling.client.authentication.CompanyUserAuthenticationFilter.unsuccessfulAuthentication(HttpServletRequest, HttpServletResponse, AuthenticationException)": ["org.apache.log4j.Category.debug(java.lang.Object)", "getPrincipal()", "org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter.unsuccessfulAuthentication(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.security.core.AuthenticationException)", "org.springframework.security.core.AuthenticationException.getAuthentication()", "com.sapienter.jbilling.client.authentication.util.SecuritySession.clearAttributes(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.payInvoice(Integer)": ["com.sapienter.jbilling.server.payment.PaymentAuthorizationDTOEx.setResult(java.lang.Boolean)", "java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCreditCard(java.lang.Integer)", "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.doPayInvoice(com.sapienter.jbilling.server.invoice.db.InvoiceDTO,com.sapienter.jbilling.server.user.db.CreditCardDTO)", "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.findInvoice(java.lang.Integer)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getOldDTO()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getPaymentResult()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getAuthorization()", "com.sapienter.jbilling.server.payment.db.PaymentResultDTO.getId()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getBaseUser()", "com.sapienter.jbilling.server.user.db.UserDTO.getUserId()"],
    "com.sapienter.jbilling.server.notification.barcode.BarcodeRenderer.render(Graphics2D, Rectangle2D)": ["java.awt.Graphics2D.translate(double,double)", "java.awt.Graphics2D.scale(double,double)", "org.krysalis.barcode4j.BarcodeDimension.getBoundingRect()", "org.krysalis.barcode4j.impl.AbstractBarcodeBean.generateBarcode(org.krysalis.barcode4j.output.java2d.Java2DCanvasProvider,java.lang.String)", "java.awt.geom.RectangularShape.getY()", "org.krysalis.barcode4j.impl.AbstractBarcodeBean.calcDimensions(java.lang.String)", "java.awt.geom.RectangularShape.getX()", "java.awt.geom.RectangularShape.getHeight()", "java.lang.String.equals(java.lang.Object)", "java.awt.Graphics.create()", "java.awt.geom.RectangularShape.getWidth()"],
    "com.sapienter.jbilling.server.report.ReportBL.setLocale(Integer)": ["com.sapienter.jbilling.server.user.UserBL.getLocale()"],
    "com.sapienter.jbilling.server.process.task.BasicAgeingTask.isInvoiceOverdue(InvoiceDTO, UserDTO, Integer, Date)": ["org.apache.log4j.Category.debug(java.lang.Object)", "java.util.Calendar.setTime(java.util.Date)", "java.util.Date.before(java.util.Date)", "java.util.Calendar.add(int,int)", "java.util.Calendar.clear()", "java.util.Calendar.getTime()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getDueDate()"],
    "com.sapienter.jbilling.server.user.UserTransitionResponseWS.getOwningUserId()": ["com.sapienter.jbilling.server.user.UserTransitionResponseWS.getUserId()"],
    "com.sapienter.jbilling.server.order.OrderBL.addItem(Integer, BigDecimal, Integer, Integer, Integer, Integer)": ["com.sapienter.jbilling.server.order.OrderBL.addItem(java.lang.Integer,java.math.BigDecimal,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.util.List)"],
    "com.sapienter.jbilling.server.item.tasks.RulesPricingTask2.getLog()": ["org.apache.log4j.Logger.getLogger(java.lang.Class)"],
    "com.sapienter.jbilling.server.payment.db.PaymentInvoiceId.hashCode()": ["java.util.Date.hashCode()", "java.lang.Double.hashCode()", "java.lang.Integer.hashCode()", "com.sapienter.jbilling.server.payment.db.PaymentInvoiceId.getAmount()", "com.sapienter.jbilling.server.payment.db.PaymentInvoiceId.getId()", "com.sapienter.jbilling.server.payment.db.PaymentInvoiceId.getPaymentId()", "com.sapienter.jbilling.server.payment.db.PaymentInvoiceId.getCreateDatetime()", "com.sapienter.jbilling.server.payment.db.PaymentInvoiceId.getInvoiceId()"],
    "com.sapienter.jbilling.server.pluggableTask.PaymentPartnerTestTask.process(PaymentDTOEx)": ["com.sapienter.jbilling.server.payment.db.PaymentDTO.setPaymentResult(com.sapienter.jbilling.server.payment.db.PaymentResultDTO)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getPayoutId()"],
    "com.sapienter.jbilling.server.user.contact.db.ContactTypeDTO.toString()": ["com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.util.db.AbstractDescription.getDescription()"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.deleteItem(Integer)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.item.ItemBL.getEntity()", "com.sapienter.jbilling.server.item.ItemBL.delete(java.lang.Integer)", "com.sapienter.jbilling.server.item.db.ItemDTO.getDeleted()", "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerId()"],
    "com.sapienter.jbilling.client.authentication.PermissionVoter.supports(ConfigAttribute)": ["java.lang.String.matches(java.lang.String)", "java.lang.String.startsWith(java.lang.String)", "com.sapienter.jbilling.client.authentication.PermissionVoter.getRolePrefix()", "com.sapienter.jbilling.client.authentication.PermissionVoter.getAttributeValue(org.springframework.security.access.ConfigAttribute)"],
    "com.sapienter.jbilling.server.list.ResultList.prepareStatement(String)": ["java.sql.ResultSet.setFetchDirection(int)", "javax.sql.RowSet.setCommand(java.lang.String)"],
    "com.sapienter.jbilling.server.process.BusinessDays.calculateEndDate(Date, Date)": ["java.util.Calendar.setTime(java.util.Date)", "com.sapienter.jbilling.server.process.BusinessDays.isEqual(java.util.Date,java.util.Date)", "java.util.Calendar.get(int)", "java.util.Calendar.add(int,int)", "java.util.Calendar.before(java.lang.Object)", "java.util.Calendar.getTime()"],
    "com.sapienter.jbilling.server.notification.NotificationBL.generatePaperInvoice(String, boolean, InvoiceDTO, ContactDTOEx, ContactDTOEx, String, String, Integer, String, String)": ["com.sapienter.jbilling.server.invoice.InvoiceBL.getTotalPaid()", "java.lang.String.substring(int)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getId()", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "java.util.Iterator.hasNext()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getCustomerNotes()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getDueDate()", "com.sapienter.jbilling.server.util.Util.formatDate(java.util.Date,java.lang.Integer)", "com.sapienter.jbilling.server.user.contact.db.ContactFieldDTO.getContent()", "com.sapienter.jbilling.server.invoice.db.InvoiceLineTypeDTO.getId()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getTotal()", "com.sapienter.jbilling.server.user.ContactDTOEx.getFieldsTable()", "com.sapienter.jbilling.common.Util.getSysProp(java.lang.String)", "com.sapienter.jbilling.server.util.Util.decimal2string(java.math.BigDecimal,java.util.Locale)", "java.util.List.remove(int)", "java.lang.String.replaceAll(java.lang.String,java.lang.String)", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO.getIsPercentage()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getCarriedBalance()", "java.lang.String.lastIndexOf(int)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getCurrency()", "com.sapienter.jbilling.server.invoice.InvoiceBL.getEntity()", "java.util.HashMap.put(java.lang.Object,java.lang.Object)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getInvoiceLines()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getCity()", "com.sapienter.jbilling.server.user.contact.db.ContactFieldDTO.getType()", "com.sapienter.jbilling.server.notification.NotificationBL.printable(java.lang.String)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getAddress2()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getPostalCode()", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO.getAmount()", "org.apache.log4j.Category.debug(java.lang.Object)", "java.util.HashMap.get(java.lang.Object)", "java.util.Hashtable.values()", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO.getPrice()", "net.sf.jasperreports.engine.JasperFillManager.fillReport(java.io.FileInputStream,java.util.HashMap,net.sf.jasperreports.engine.data.JRBeanCollectionDataSource)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getCreateDatetime()", "java.util.List.removeAll(java.util.Collection)", "org.springframework.jdbc.datasource.DataSourceUtils.getConnection(javax.sql.DataSource)", "java.util.List.add(java.lang.Object)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getOrganizationName()", "com.sapienter.jbilling.server.invoice.InvoiceBL.setPrevious()", "java.lang.Integer.intValue()", "java.lang.Integer.toString()", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO.getInvoiceLineType()", "java.io.FileInputStream.close()", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO.setPrice(java.math.BigDecimal)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getBalance()", "com.sapienter.jbilling.server.notification.NotificationBL.printable(java.lang.String,java.lang.String)", "com.sapienter.jbilling.server.util.db.CurrencyDTO.getId()", "com.sapienter.jbilling.server.user.UserBL.getLocale()", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getPublicNumber()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getLastName()", "java.util.Iterator.next()", "net.sf.jasperreports.engine.JasperFillManager.fillReport(java.io.FileInputStream,java.util.HashMap,java.sql.Connection)", "org.springframework.jdbc.datasource.DataSourceUtils.releaseConnection(java.sql.Connection,javax.sql.DataSource)", "java.lang.System.setProperty(java.lang.String,java.lang.String)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getStateProvince()", "java.math.BigDecimal.subtract(java.math.BigDecimal)", "com.sapienter.jbilling.server.util.Util.formatMoney(java.math.BigDecimal,java.lang.Integer,java.lang.Integer,boolean)", "com.sapienter.jbilling.server.user.contact.db.ContactFieldTypeDTO.getPromptKey()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getFirstName()", "java.util.List.size()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getUserId()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getAddress1()", "java.math.BigDecimal.add(java.math.BigDecimal)", "java.util.Collection.iterator()"],
    "com.sapienter.jbilling.client.process.Trigger.Initialize()": ["org.apache.log4j.Category.debug(java.lang.Object)", "java.util.GregorianCalendar.add(int,int)", "org.apache.log4j.Category.info(java.lang.Object)", "com.sapienter.jbilling.client.process.JobScheduler.getScheduler()", "org.quartz.SimpleTrigger.setMisfireInstruction()", "org.quartz.Scheduler.scheduleJob(org.quartz.JobDetail,org.quartz.SimpleTrigger)", "java.lang.Throwable.getMessage()", "com.sapienter.jbilling.common.Util.truncateDate(java.util.Date)", "java.lang.String.equals(java.lang.Object)", "com.sapienter.jbilling.common.Util.getSysProp(java.lang.String)", "java.util.Calendar.getTime()", "java.text.DateFormat.parse(java.lang.String)", "com.sapienter.jbilling.client.process.JobScheduler.getInstance()", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)", "java.lang.String.length()", "java.lang.Integer.parseInt(java.lang.String)"],
    "com.sapienter.jbilling.common.Util.truncateDate(Date)": ["java.util.Calendar.setTime(java.util.Date)", "java.util.Calendar.getTime()", "java.util.Calendar.set(int,int)"],
    "com.sapienter.jbilling.server.order.db.OrderDTO.removeLine(Integer)": ["com.sapienter.jbilling.server.order.db.OrderDTO.getLine(java.lang.Integer)", "java.util.List.remove(java.lang.Object)"],
    "com.sapienter.jbilling.server.item.tasks.PricingManager.setByPercentage(double)": ["java.math.BigDecimal.add(java.math.BigDecimal)", "java.math.BigDecimal.multiply(java.math.BigDecimal)", "java.math.BigDecimal.divide(java.math.BigDecimal,int,int)"],
    "com.sapienter.jbilling.server.util.audit.EventLogger.error(Integer, Integer, Integer, Integer, Integer, String)": ["com.sapienter.jbilling.server.util.audit.EventLogger.log(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String)"],
    "com.sapienter.jbilling.server.invoice.InvoiceBL.delete(Integer)": ["java.util.Collection.remove(java.lang.Object)", "com.sapienter.jbilling.server.order.db.OrderDTO.getStatusId()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getId()", "java.lang.Integer.equals(java.lang.Object)", "java.util.Date.equals(java.lang.Object)", "java.util.Iterator.hasNext()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getPaymentMap()", "com.sapienter.jbilling.server.order.db.OrderProcessDTO.getPeriodStart()", "com.sapienter.jbilling.server.order.OrderBL.setStatus(java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.invoice.InvoiceBL.getHome()", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getOrderProcesses()", "com.sapienter.jbilling.server.order.db.OrderDTO.setNextBillableDay(java.util.Date)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getBaseUser()", "com.sapienter.jbilling.server.user.ContactBL.setInvoice(java.lang.Integer)", "java.util.Iterator.next()", "java.util.Set.remove(java.lang.Object)", "java.util.Set.clear()", "com.sapienter.jbilling.server.payment.PaymentBL.removeInvoiceLink(java.lang.Integer)", "com.sapienter.jbilling.server.util.db.AbstractDAS.flush()", "com.sapienter.jbilling.server.order.db.OrderProcessDTO.getPeriodEnd()", "com.sapienter.jbilling.server.order.db.OrderProcessDTO.getPurchaseOrder()", "com.sapienter.jbilling.server.payment.db.PaymentInvoiceMapDTO.getId()", "com.sapienter.jbilling.server.order.db.OrderDTO.getOrderProcesses()", "com.sapienter.jbilling.server.util.audit.EventLogger.audit(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.util.Date)", "com.sapienter.jbilling.server.order.db.OrderDTO.getNextBillableDay()", "com.sapienter.jbilling.server.util.db.AbstractDAS.delete(java.lang.Object)", "com.sapienter.jbilling.server.user.db.UserDTO.getId()", "com.sapienter.jbilling.server.user.ContactBL.delete()", "com.sapienter.jbilling.server.payment.db.PaymentInvoiceMapDAS.deleteAllWithInvoice(com.sapienter.jbilling.server.invoice.db.InvoiceDTO)", "java.util.Collection.iterator()"],
    "com.sapienter.jbilling.server.payment.blacklist.UserIdFilter.checkUser(Integer)": ["com.sapienter.jbilling.server.util.Util.getEntityNotificationsBundle(java.lang.Integer)", "java.util.List.isEmpty()", "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDAS.findByUserType(java.lang.Integer,java.lang.Integer)", "java.util.ResourceBundle.getString(java.lang.String)"],
    "com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.buildTag(StringBuffer, String, String)": ["java.lang.String.format(java.lang.String,java.lang.Object[])", "java.lang.StringBuffer.append(java.lang.String)"],
    "com.sapienter.jbilling.server.pluggableTask.BasicPenaltyTask.getInvoiceDelegatedDescription(InvoiceDTO)": ["java.util.ResourceBundle.getBundle(java.lang.String,java.util.Locale)", "java.lang.StringBuffer.toString()", "java.util.ResourceBundle.getString(java.lang.String)", "java.text.DateFormat.format(java.util.Date)", "com.sapienter.jbilling.server.user.UserBL.getLocale()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getBaseUser()", "java.lang.StringBuffer.append(java.lang.String)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getPublicNumber()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getDueDate()"],
    "com.sapienter.jbilling.server.util.Context.getBean(String)": ["com.sapienter.jbilling.server.util.Context.getApplicationContext()", "org.springframework.context.ApplicationContext.getBean(java.lang.String)"],
    "com.sapienter.jbilling.server.notification.barcode.BarcodeFactory.ean128(Checksum, TextPlacement)": ["com.sapienter.jbilling.server.notification.barcode.BarcodeFactory.getPlacement(com.sapienter.jbilling.server.notification.barcode.TextPlacement)", "org.krysalis.barcode4j.impl.code128.EAN128Bean.setFontSize(int)", "org.krysalis.barcode4j.impl.code128.EAN128Bean.setMsgPosition(org.krysalis.barcode4j.HumanReadablePlacement)", "org.krysalis.barcode4j.impl.code128.EAN128Bean.setChecksumMode(org.krysalis.barcode4j.ChecksumMode)", "com.sapienter.jbilling.server.notification.barcode.BarcodeFactory.getChecksum(com.sapienter.jbilling.server.notification.barcode.Checksum)"],
    "com.sapienter.jbilling.server.order.OrderSessionBean.getOrder(Integer)": ["com.sapienter.jbilling.server.order.db.OrderDTO.touch()", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)"],
    "com.sapienter.jbilling.server.util.db.PreferenceDTO.setValue(BigDecimal)": ["java.math.BigDecimal.toString()"],
    "com.sapienter.jbilling.server.process.event.NewUserStatusEvent.toString()": ["com.sapienter.jbilling.server.process.event.NewUserStatusEvent.getName()"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.validateUser(UserWS)": ["com.sapienter.jbilling.server.user.UserWS.getCreditCard()", "com.sapienter.jbilling.server.entity.CreditCardDTO.setNumber(java.lang.String)", "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.zero2null(java.lang.Integer)", "com.sapienter.jbilling.server.user.UserWS.getParentId()", "com.sapienter.jbilling.server.user.UserWS.setLanguageId(java.lang.Integer)", "java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.user.UserWS.getStatusId()", "com.sapienter.jbilling.server.user.UserWS.setPartnerId(java.lang.Integer)", "com.sapienter.jbilling.server.user.UserWS.getLanguageId()", "java.lang.Integer.intValue()", "com.sapienter.jbilling.server.user.UserWS.setStatusId(java.lang.Integer)", "com.sapienter.jbilling.server.user.UserWS.getPartnerId()", "com.sapienter.jbilling.server.user.UserWS.setMainRoleId(java.lang.Integer)", "com.sapienter.jbilling.server.user.UserWS.setCurrencyId(java.lang.Integer)", "com.sapienter.jbilling.server.user.UserWS.setParentId(java.lang.Integer)", "com.sapienter.jbilling.server.user.UserWS.getCurrencyId()", "com.sapienter.jbilling.server.user.CreditCardBL.cleanUpNumber(java.lang.String)", "com.sapienter.jbilling.server.entity.CreditCardDTO.getNumber()", "com.sapienter.jbilling.server.user.UserWS.getMainRoleId()"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayExternalTask.preAuth(PaymentDTOEx)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayExternalTask.prepareExternalPayment(com.sapienter.jbilling.server.payment.PaymentDTOEx)", "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayExternalTask.getProcessorName()", "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask.doProcess(com.sapienter.jbilling.server.payment.PaymentDTOEx,com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask$SvcType,com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO)", "com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase$Result.shouldCallOtherProcessors()"],
    "com.sapienter.jbilling.server.mediation.MediationSessionBean.delete(Integer, Integer)": ["com.sapienter.jbilling.server.util.audit.EventLogger.audit(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.util.Date)", "com.sapienter.jbilling.server.util.audit.EventLogger.getInstance()", "com.sapienter.jbilling.server.util.db.AbstractDAS.delete(java.lang.Object)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)"],
    "com.sapienter.jbilling.server.process.db.AgeingEntityStepDTO.setWelcomeMessage(Integer, String)": ["com.sapienter.jbilling.server.util.db.AbstractDescription.setDescription(java.lang.String,java.lang.Integer,java.lang.String)"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentBeanstreamTask.confirmPreAuth(PaymentAuthorizationDTO, PaymentDTOEx)": ["com.sapienter.jbilling.server.payment.tasks.PaymentBeanstreamTask.doPost(java.lang.String,com.sapienter.jbilling.server.payment.PaymentDTOEx)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getTransactionId()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getCode1()", "com.sapienter.jbilling.server.payment.tasks.PaymentBeanstreamTask$BeanstreamResponseDTO.parseResponse(java.lang.String)", "com.sapienter.jbilling.server.payment.PaymentAuthorizationBL.create(com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO,java.lang.Integer)", "com.sapienter.jbilling.server.payment.tasks.PaymentBeanstreamTask.getPOSTString(com.sapienter.jbilling.server.payment.PaymentDTOEx,java.lang.String,java.lang.String)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setPaymentResult(com.sapienter.jbilling.server.payment.db.PaymentResultDTO)", "java.lang.String.equals(java.lang.Object)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getId()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.setAuthorization(com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO)"],
    "com.sapienter.jbilling.server.invoice.InvoiceBL.getWS(InvoiceDTO)": ["com.sapienter.jbilling.server.invoice.InvoiceWS.setPayments(java.lang.Integer[])", "com.sapienter.jbilling.server.invoice.InvoiceWS.setCurrencyId(java.lang.Integer)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getDeleted()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getId()", "com.sapienter.jbilling.server.invoice.InvoiceWS.setDelegatedInvoiceId(java.lang.Integer)", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO.getDescription()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getCustomerNotes()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getDueDate()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getPaymentMap()", "com.sapienter.jbilling.server.invoice.InvoiceWS.setDueDate(java.util.Date)", "com.sapienter.jbilling.server.invoice.InvoiceWS.setUserId(java.lang.Integer)", "com.sapienter.jbilling.server.invoice.InvoiceWS.setLastReminder(java.util.Date)", "com.sapienter.jbilling.server.invoice.InvoiceWS.setCarriedBalance(java.math.BigDecimal)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getTotal()", "com.sapienter.jbilling.server.invoice.InvoiceWS.setId(java.lang.Integer)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getInvoiceStatus()", "com.sapienter.jbilling.server.order.db.OrderDTO.getId()", "com.sapienter.jbilling.server.invoice.InvoiceWS.setPaymentAttempts(java.lang.Integer)", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO.getIsPercentage()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getInvoice()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getCarriedBalance()", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO.getDeleted()", "com.sapienter.jbilling.server.invoice.InvoiceWS.setBalance(java.math.BigDecimal)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getCurrency()", "com.sapienter.jbilling.server.invoice.InvoiceWS.setCreateDateTime(java.util.Date)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getId()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getInvoiceLines()", "com.sapienter.jbilling.server.invoice.InvoiceWS.setStatusId(java.lang.Integer)", "com.sapienter.jbilling.server.invoice.InvoiceWS.setOverdueStep(java.lang.Integer)", "com.sapienter.jbilling.server.user.db.UserDTO.getId()", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO.getQuantity()", "com.sapienter.jbilling.server.util.db.AbstractGenericStatus.getId()", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO.getAmount()", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO.getPrice()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getCreateDatetime()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getLastReminder()", "com.sapienter.jbilling.server.invoice.InvoiceWS.setNumber(java.lang.String)", "java.util.Collection.size()", "com.sapienter.jbilling.server.item.db.ItemDTO.getId()", "com.sapienter.jbilling.server.invoice.InvoiceWS.setToProcess(java.lang.Integer)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getOverdueStep()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getToProcess()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getBalance()", "com.sapienter.jbilling.server.util.db.CurrencyDTO.getId()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getInProcessPayment()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getBaseUser()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getOrderProcesses()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getPublicNumber()", "com.sapienter.jbilling.server.invoice.InvoiceWS.setTotal(java.math.BigDecimal)", "com.sapienter.jbilling.server.invoice.InvoiceWS.setInvoiceLines(com.sapienter.jbilling.server.entity.InvoiceLineDTO[])", "com.sapienter.jbilling.server.payment.db.PaymentInvoiceMapDTO.getPayment()", "com.sapienter.jbilling.server.invoice.InvoiceWS.setCreateTimeStamp(java.util.Date)", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO.getSourceUserId()", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO.getId()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getIsReview()", "com.sapienter.jbilling.server.invoice.InvoiceWS.setOrders(java.lang.Integer[])", "com.sapienter.jbilling.server.invoice.InvoiceWS.setIsReview(java.lang.Integer)", "java.util.Set.size()", "com.sapienter.jbilling.server.order.db.OrderProcessDTO.getPurchaseOrder()", "com.sapienter.jbilling.server.invoice.InvoiceWS.setInProcessPayment(java.lang.Integer)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getCreateTimestamp()", "com.sapienter.jbilling.server.invoice.InvoiceWS.setCustomerNotes(java.lang.String)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getPaymentAttempts()", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO.getItem()", "com.sapienter.jbilling.server.invoice.InvoiceWS.setDeleted(java.lang.Integer)"],
    "com.sapienter.jbilling.server.util.db.JbillingTableDAS.findByName(String)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.util.db.AbstractDAS.findByCriteriaSingle(com.sapienter.jbilling.server.util.db.Criterion[])", "org.springmodules.cache.provider.CacheProviderFacade.putInCache(java.lang.String,org.springmodules.cache.CachingModel,com.sapienter.jbilling.server.util.db.JbillingTable)", "org.springmodules.cache.provider.CacheProviderFacade.getFromCache(java.lang.String,org.springmodules.cache.CachingModel)", "org.hibernate.criterion.Restrictions.eq(java.lang.String,java.lang.String)"],
    "com.sapienter.jbilling.server.payment.blacklist.BlacklistBL.isUserIdBlacklisted(Integer)": ["java.util.List.isEmpty()", "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDAS.findByUserType(java.lang.Integer,java.lang.Integer)"],
    "com.sapienter.jbilling.server.process.db.BillingProcessDAS.getCountAndSum(Integer)": ["getSession()", "org.hibernate.Query.iterate()", "org.hibernate.Query.setParameter(java.lang.String,java.lang.Integer)", "createQuery(java.lang.String)"],
    "com.sapienter.jbilling.server.process.db.ProcessRunDAS.getLatestSuccessful(Integer)": ["org.hibernate.Query.setMaxResults(int)", "org.hibernate.Query.uniqueResult()", "getSession()", "org.hibernate.Query.setParameter(java.lang.String,java.lang.Integer)", "createQuery(java.lang.String)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.validateMultiPurchase(Integer, Integer[], String[])": ["com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.doValidatePurchase(java.lang.Integer,java.lang.Integer[],java.lang.String[])"],
    "com.sapienter.jbilling.server.util.DescriptionBL.delete(String, Integer)": ["java.util.Collection.clear()", "com.sapienter.jbilling.server.util.db.InternationalDescriptionDAS.findByTable_Row(java.lang.String,java.lang.Integer)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getPartner(Integer)": ["com.sapienter.jbilling.server.user.IUserSessionBean.getPartnerDTO(java.lang.Integer)", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "com.sapienter.jbilling.server.user.partner.PartnerBL.getWS(com.sapienter.jbilling.server.user.partner.db.Partner)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getContactTypeWS(Integer)": ["com.sapienter.jbilling.server.util.db.AbstractDAS.findAll()", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)"],
    "com.sapienter.jbilling.client.authentication.util.SecuritySession.clearAttributes(HttpServletRequest, HttpServletResponse)": ["javax.servlet.http.HttpServletRequest.getSession()", "javax.servlet.http.HttpSession.removeAttribute(java.lang.String)"],
    "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDAS.filterByName(Integer, String, String)": ["org.hibernate.Criteria.list()", "createAlias(java.lang.String,java.lang.String)", "org.hibernate.criterion.Restrictions.eq(java.lang.String,java.lang.Integer)", "getSession()", "add()", "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDAS.equals(java.lang.String,java.lang.Object)", "createCriteria(java.lang.Class)", "add(org.hibernate.criterion.Criterion)"],
    "com.sapienter.jbilling.server.util.CurrencyWS.setRateAsDecimal(BigDecimal)": ["com.sapienter.jbilling.server.util.CurrencyWS.setRate(java.math.BigDecimal)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getLatestOrder(Integer)": ["com.sapienter.jbilling.server.user.db.UserDTO.getLanguageIdField()", "com.sapienter.jbilling.server.order.OrderBL.getLatest(java.lang.Integer)", "com.sapienter.jbilling.server.user.UserBL.getEntity()", "com.sapienter.jbilling.server.order.OrderBL.set(java.lang.Integer)", "com.sapienter.jbilling.server.order.OrderBL.getWS(java.lang.Integer)", "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerId()"],
    "com.sapienter.jbilling.server.mediation.db.MediationRecordStatusDAS.initialize(MediationRecordStatusDTO)": ["initialize(com.sapienter.jbilling.server.mediation.db.MediationRecordStatusDTO)", "getHibernateTemplate()"],
    "com.sapienter.jbilling.server.order.db.OrderDTO.getUser()": ["com.sapienter.jbilling.server.order.db.OrderDTO.getBaseUserByUserId()"],
    "com.sapienter.jbilling.server.provisioning.task.TestCommunication.close()": ["org.apache.log4j.Category.debug(java.lang.Object)"],
    "com.sapienter.jbilling.server.process.BillingProcessSessionBean.getAgeingSteps(Integer, Integer, Integer)": ["com.sapienter.jbilling.server.process.AgeingBL.getSteps(java.lang.Integer,java.lang.Integer,java.lang.Integer)"],
    "com.sapienter.jbilling.server.process.BillingProcessRunBL.findFailedUsersList()": ["java.sql.Connection.close()", "javax.sql.RowSet.setInt(int,int)", "com.sapienter.jbilling.server.process.db.ProcessRunDTO.getId()", "com.sapienter.jbilling.server.list.ResultList.execute()", "com.sapienter.jbilling.server.list.ResultList.prepareStatement(java.lang.String)"],
    "com.sapienter.jbilling.server.payment.blacklist.tasks.BlacklistUserStatusTask.process(Event)": ["com.sapienter.jbilling.server.process.event.NewUserStatusEvent.getNewStatusId()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.setPhoneNumber(java.lang.String)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.setPhoneAreaCode(java.lang.Integer)", "com.sapienter.jbilling.server.user.contact.db.ContactFieldDTO.setContact(com.sapienter.jbilling.server.user.contact.db.ContactDTO)", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getNumber()", "com.sapienter.jbilling.server.process.event.NewUserStatusEvent.getUserId()", "com.sapienter.jbilling.server.user.contact.db.ContactFieldDTO.getContent()", "com.sapienter.jbilling.server.process.event.NewUserStatusEvent.getOldStatusId()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.setCcExpiry(java.util.Date)", "com.sapienter.jbilling.server.user.contact.db.ContactFieldDTO.setContent(java.lang.String)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.setCreateDate(java.util.Date)", "com.sapienter.jbilling.server.user.contact.db.ContactFieldDTO.setType(com.sapienter.jbilling.server.user.contact.db.ContactFieldTypeDTO)", "com.sapienter.jbilling.server.payment.blacklist.BlacklistBL.isUserIdBlacklisted(java.lang.Integer)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.setCcType(java.lang.Integer)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.setCity(java.lang.String)", "org.apache.log4j.Category.warn(java.lang.Object)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.setAddress2(java.lang.String)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getPhoneCountryCode()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getPhoneNumber()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.setPhoneCountryCode(java.lang.Integer)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getCcType()", "com.sapienter.jbilling.server.payment.blacklist.BlacklistBL.create(com.sapienter.jbilling.server.user.db.CompanyDTO,java.lang.Integer,java.lang.Integer,com.sapienter.jbilling.server.user.db.CreditCardDTO,com.sapienter.jbilling.server.user.contact.db.ContactDTO,com.sapienter.jbilling.server.user.db.UserDTO)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getCity()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getFields()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getPhoneAreaCode()", "com.sapienter.jbilling.server.user.contact.db.ContactFieldDTO.getType()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.setFirstName(java.lang.String)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getAddress2()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getPostalCode()", "com.sapienter.jbilling.server.user.db.UserDTO.getCreditCards()", "com.sapienter.jbilling.server.user.db.UserDTO.getId()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.setAddress1(java.lang.String)", "com.sapienter.jbilling.server.user.contact.db.ContactDAS.findPrimaryContact(java.lang.Integer)", "org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.setNumber(java.lang.String)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.setLastName(java.lang.String)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getCcExpiry()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.setDeleted(int)", "com.sapienter.jbilling.server.user.db.UserDTO.getCompany()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.setPostalCode(java.lang.String)", "com.sapienter.jbilling.server.user.contact.db.ContactFieldTypeDTO.getId()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getLastName()", "com.sapienter.jbilling.server.payment.blacklist.BlacklistBL.getIpAddressCcfId(java.lang.Integer)", "java.util.Set.add(java.lang.Object)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.setFields(java.util.Set)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.setCountryCode(java.lang.String)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.setDeleted(int)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getStateProvince()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getCountryCode()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getFirstName()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.setStateProvince(java.lang.String)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getAddress1()"],
    "com.sapienter.jbilling.tools.LanguageKeys.main(String[])": ["java.util.Properties.containsKey(java.lang.Object)", "java.io.PrintStream.println(java.lang.String)", "java.util.Properties.getProperty(java.lang.String)", "java.util.Iterator.next()", "java.util.Properties.load(java.io.InputStream)", "java.util.Iterator.hasNext()", "java.util.Set.iterator()", "java.util.Properties.keySet()", "java.lang.Throwable.printStackTrace()"],
    "com.sapienter.jbilling.server.entity.AchDTO.isIdentical(Object)": ["java.lang.Integer.equals(java.lang.Object)", "java.lang.String.equals(java.lang.Object)"],
    "com.sapienter.jbilling.server.payment.blacklist.IpAddressFilter.checkPayment(PaymentDTOEx)": ["com.sapienter.jbilling.server.payment.PaymentDTOEx.getUserId()", "com.sapienter.jbilling.server.payment.blacklist.IpAddressFilter.checkUser(java.lang.Integer)"],
    "com.sapienter.jbilling.server.provisioning.task.CAIProvisioningTask.constructCommand(String, String)": ["java.util.Map.get(java.lang.Object)", "java.lang.StringBuilder.indexOf(java.lang.String,int)", "java.lang.StringBuilder.lastIndexOf(java.lang.String,int)", "com.sapienter.jbilling.server.provisioning.task.CAIProvisioningTask.removeValueIndex(java.lang.StringBuilder,java.lang.String)", "java.lang.StringBuilder.delete(int,int)", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription.getName()", "java.lang.StringBuilder.toString()", "java.lang.StringBuilder.indexOf(java.lang.String)", "java.lang.StringBuilder.insert(int,java.lang.String)", "java.lang.String.length()"],
    "com.sapienter.jbilling.server.util.db.AbstractGenericStatusDAS.find(Serializable)": ["org.hibernate.criterion.Restrictions.eq(java.lang.String,java.io.Serializable)", "com.sapienter.jbilling.server.util.db.AbstractDAS.findByCriteriaSingle(com.sapienter.jbilling.server.util.db.Criterion[])", "com.sapienter.jbilling.server.util.db.AbstractGenericStatusDAS.getCacheKey(java.io.Serializable)", "org.springmodules.cache.provider.CacheProviderFacade.getFromCache(java.lang.String,org.springmodules.cache.CachingModel)", "org.springmodules.cache.provider.CacheProviderFacade.putInCache(java.lang.String,org.springmodules.cache.CachingModel,java.lang.Object)"],
    "com.sapienter.jbilling.server.mediation.Format.toString()": ["java.lang.StringBuffer.toString()", "com.sapienter.jbilling.server.mediation.FormatField.toString()", "java.lang.StringBuffer.append(java.lang.String)"],
    "com.sapienter.jbilling.server.user.RoleBL.setTitle(Integer, String)": ["com.sapienter.jbilling.server.util.db.AbstractDescription.setDescription(java.lang.String,java.lang.Integer,java.lang.String)"],
    "com.sapienter.jbilling.server.order.OrderHelper.merge(OrderLineDTO, OrderLineDTO)": ["com.sapienter.jbilling.server.order.db.OrderLineDTO.setQuantity(java.math.BigDecimal)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getQuantity()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getAmount()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setItem(com.sapienter.jbilling.server.item.db.ItemDTO)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setDescription(java.lang.String)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setAmount(java.math.BigDecimal)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setOrderLineType(com.sapienter.jbilling.server.order.db.OrderLineTypeDTO)", "com.sapienter.jbilling.server.order.OrderHelper.add(java.math.BigDecimal,java.math.BigDecimal)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setId(int)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getPrice()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getCreateDatetime()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setCreateDatetime(java.util.Date)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getDescription()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setDeleted(int)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setPrice(java.math.BigDecimal)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getUseItem()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setPurchaseOrder(com.sapienter.jbilling.server.order.db.OrderDTO)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getItem()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getOrderLineType()"],
    "com.sapienter.jbilling.server.item.tasks.BasicItemManager.addItem(Integer, Integer, Integer, Integer, Integer, Integer, OrderDTO, List)": ["com.sapienter.jbilling.server.item.tasks.BasicItemManager.addItem(java.lang.Integer,java.math.BigDecimal,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,com.sapienter.jbilling.server.order.db.OrderDTO,java.util.List)"],
    "com.sapienter.jbilling.server.system.event.InternalEventProcessor.process(Event)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskManager.getAllTasks()", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskTypeDTO.getClassName()", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskTypeCategoryDTO.getInterfaceName()", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskTypeDTO.getCategory()", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDTO.getType()", "com.sapienter.jbilling.server.system.event.task.IInternalEventsTask.process(com.sapienter.jbilling.server.system.event.Event)", "com.sapienter.jbilling.server.system.event.Event.getEntityId()", "com.sapienter.jbilling.server.system.event.InternalEventProcessor.isProcessable(com.sapienter.jbilling.server.system.event.task.IInternalEventsTask,com.sapienter.jbilling.server.system.event.Event)", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskManager.getInstance(java.lang.String,java.lang.String,com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDTO)"],
    "com.sapienter.jbilling.server.process.BillingProcessBL.set(Integer)": ["com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)"],
    "com.sapienter.jbilling.server.process.BillingProcessSessionBean.addProcessRunUser(Integer, Integer, Integer)": ["com.sapienter.jbilling.server.process.BillingProcessRunBL.addProcessRunUser(java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.process.db.ProcessRunUserDTO.getId()", "com.sapienter.jbilling.server.process.BillingProcessRunBL.setProcess(java.lang.Integer)"],
    "com.sapienter.jbilling.server.process.BillingProcessSessionBean.processPayment(Integer, Integer, Integer)": ["com.sapienter.jbilling.server.process.BillingProcessBL.generatePayment(java.lang.Integer,java.lang.Integer,java.lang.Integer)", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)"],
    "com.sapienter.jbilling.server.order.OrderLineBL.addItem(Integer, BigDecimal, Integer, Integer, Integer, Integer, OrderDTO, OrderLineDTO, boolean)": ["com.sapienter.jbilling.server.order.db.OrderLineDTO.setQuantity(java.math.BigDecimal)", "com.sapienter.jbilling.server.order.db.OrderDTO.getLine(java.lang.Integer)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getQuantity()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getAmount()", "java.util.List.add(java.lang.Object)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setItem(com.sapienter.jbilling.server.item.db.ItemDTO)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setAmount(java.math.BigDecimal)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getDescription()", "com.sapienter.jbilling.server.order.db.OrderDTO.getLines()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setPurchaseOrder(com.sapienter.jbilling.server.order.db.OrderDTO)", "java.lang.String.equals(java.lang.Object)", "java.math.BigDecimal.add(java.math.BigDecimal)", "com.sapienter.jbilling.server.order.OrderLineBL.populateWithSimplePrice(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,com.sapienter.jbilling.server.order.db.OrderLineDTO,java.lang.Integer)", "com.sapienter.jbilling.server.item.db.ItemDTO.setId(int)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setDefaults()", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)"],
    "com.sapienter.jbilling.server.invoice.db.InvoiceDAS.findIdsOverdueForUser(Integer, Date)": ["org.hibernate.criterion.Order.desc(java.lang.String)", "org.hibernate.criterion.Restrictions.ne(java.lang.String,java.lang.Integer)", "addOrder()", "com.sapienter.jbilling.server.invoice.db.InvoiceDAS.addUserCriteria(org.hibernate.Criteria,java.lang.Integer)", "getSession()", "add()", "org.hibernate.Criteria.add()", "createCriteria(java.lang.Class)", "org.hibernate.criterion.Projections.id()", "org.hibernate.Criteria.list()", "createAlias(java.lang.String,java.lang.String)", "setProjection()", "org.hibernate.criterion.Restrictions.lt(java.lang.String,java.util.Date)", "org.hibernate.criterion.Restrictions.eq(java.lang.String,int)"],
    "com.sapienter.jbilling.server.order.TimePeriod.hashCode()": ["java.lang.Boolean.booleanValue()", "java.lang.Integer.intValue()"],
    "com.sapienter.jbilling.server.invoice.db.InvoiceDAS.findProccesableByUser(UserDTO)": ["org.hibernate.Criteria.list()", "org.hibernate.criterion.Restrictions.eq(java.lang.String,java.lang.Integer)", "getSession()", "add()", "org.hibernate.Criteria.createAlias(java.lang.String,java.lang.String)", "org.hibernate.Criteria.add()", "createCriteria(java.lang.Class)", "org.hibernate.criterion.Restrictions.eq(java.lang.String,int)", "org.hibernate.criterion.Restrictions.eq(java.lang.String,com.sapienter.jbilling.server.user.db.UserDTO)"],
    "com.sapienter.jbilling.server.process.ConfigurationBL.getDTO()": ["com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.setDaysForReport(java.lang.Integer)", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.getPeriodUnit()", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.setReviewStatus(int)", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.getId()", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.getPeriodValue()", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.setPeriodValue(int)", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.setNextRunDate(java.util.Date)", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.setInvoiceDateProcess(java.lang.Integer)", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.getNextRunDate()", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.setDaysForRetry(java.lang.Integer)", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.getDaysForRetry()", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.setDfFm(java.lang.Integer)", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.getDueDateUnitId()", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.getOnlyRecurring()", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.setGenerateReport(java.lang.Integer)", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.setAutoPayment(java.lang.Integer)", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.setPeriodUnit(com.sapienter.jbilling.server.process.db.PeriodUnitDTO)", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.getAutoPayment()", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.setAutoPaymentApplication(int)", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.getDaysForReport()", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.setDueDateValue(int)", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.setOnlyRecurring(java.lang.Integer)", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.setRetries(java.lang.Integer)", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.getDfFm()", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.setDueDateUnitId(int)", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.getInvoiceDateProcess()", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.getEntity()", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.getAutoPaymentApplication()", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.getReviewStatus()", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.getMaximumPeriods()", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.setId(int)", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.getRetries()", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.getDueDateValue()", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.setMaximumPeriods(int)", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.setEntity(com.sapienter.jbilling.server.user.db.CompanyDTO)", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.getGenerateReport()"],
    "com.sapienter.jbilling.server.user.UserBL.getMainRole()": ["com.sapienter.jbilling.server.user.UserBL.selectMainRole(java.util.Collection)", "com.sapienter.jbilling.server.user.permisson.db.RoleDTO.getId()", "com.sapienter.jbilling.server.user.db.UserDTO.getRoles()", "java.util.List.add(java.lang.Object)"],
    "com.sapienter.jbilling.server.entity.PaymentInfoChequeDTO.setPrimaryKey(Integer)": ["com.sapienter.jbilling.server.entity.PaymentInfoChequeDTO.setId(java.lang.Integer)"],
    "com.sapienter.jbilling.server.order.db.OrderLineDTO.setTypeId(Integer)": ["com.sapienter.jbilling.server.order.db.OrderLineDTO.setOrderLineType(com.sapienter.jbilling.server.order.db.OrderLineTypeDTO)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)"],
    "com.sapienter.jbilling.server.user.permisson.db.PermissionTypeDTO.equals(Object)": ["java.lang.Object.getClass()", "java.lang.String.equals(java.lang.Object)"],
    "com.sapienter.jbilling.server.mediation.MediationSessionBean.normalizeRecordGroup(IMediationProcess, Integer, MediationProcess, List, Integer, MediationConfiguration)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.mediation.task.IMediationProcess.process(java.util.List,java.util.List,java.lang.String)", "com.sapienter.jbilling.server.mediation.db.MediationOrderMap.setMediationProcessId(java.lang.Integer)", "com.sapienter.jbilling.server.mediation.task.MediationResult.getDescription()", "java.util.Iterator.hasNext()", "com.sapienter.jbilling.server.mediation.MediationSessionBean.findRecordByKey(java.util.List,java.lang.String)", "com.sapienter.jbilling.server.mediation.task.MediationResult.getEventDate()", "com.sapienter.jbilling.server.mediation.task.MediationResult.getLines()", "com.sapienter.jbilling.server.mediation.MediationSessionBean.hasBeenProcessed(com.sapienter.jbilling.server.mediation.db.MediationProcess,com.sapienter.jbilling.server.mediation.Record)", "org.springframework.util.StopWatch.getLastTaskTimeMillis()", "com.sapienter.jbilling.server.mediation.task.MediationResult.getCurrentOrder()", "com.sapienter.jbilling.server.mediation.MediationSessionBean.saveEventRecordLines(java.util.List,com.sapienter.jbilling.server.mediation.db.MediationRecordDTO,java.util.Date,java.lang.String)", "com.sapienter.jbilling.server.mediation.MediationSessionBean.resolveMediationResultErrors(com.sapienter.jbilling.server.mediation.task.MediationResult)", "com.sapienter.jbilling.server.mediation.db.MediationConfiguration.getName()", "com.sapienter.jbilling.server.mediation.MediationSessionBean.assignStatusToMediationRecord(java.lang.String,com.sapienter.jbilling.server.mediation.db.MediationRecordStatusDTO)", "com.sapienter.jbilling.server.mediation.task.MediationResult.getDiffLines()", "java.util.List.iterator()", "com.sapienter.jbilling.server.mediation.db.MediationProcess.setOrdersAffected(java.lang.Integer)", "com.sapienter.jbilling.server.mediation.task.MediationResult.getRecordKey()", "com.sapienter.jbilling.server.mediation.task.MediationResult.getErrors()", "com.sapienter.jbilling.server.order.db.OrderDTO.getId()", "java.util.Iterator.next()", "java.util.List.isEmpty()", "com.sapienter.jbilling.server.mediation.db.MediationProcess.getOrdersAffected()", "org.springframework.util.StopWatch.stop()", "java.util.Iterator.remove()", "com.sapienter.jbilling.server.util.db.AbstractDAS.reattachUnmodified(java.lang.Object)", "com.sapienter.jbilling.server.mediation.db.MediationRecordDAS.findNewestByKey(java.lang.String)", "com.sapienter.jbilling.server.mediation.db.MediationProcess.getId()", "com.sapienter.jbilling.server.rule.Result.isDone()", "com.sapienter.jbilling.server.mediation.MediationSessionBean.handleMediationErrors(com.sapienter.jbilling.server.mediation.Record,java.util.List,java.lang.Integer,com.sapienter.jbilling.server.mediation.db.MediationConfiguration)", "java.util.List.size()", "org.springframework.util.StopWatch.start(java.lang.String)", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)", "com.sapienter.jbilling.server.util.db.AbstractGenericStatusDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.mediation.db.MediationOrderMap.setOrderId(java.lang.Integer)"],
    "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.setPeriodUnitId(Integer)": ["com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.setPeriodUnit(com.sapienter.jbilling.server.process.db.PeriodUnitDTO)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)"],
    "com.sapienter.jbilling.server.mediation.MediationConfigurationWS.getOwningEntityId()": ["com.sapienter.jbilling.server.mediation.MediationConfigurationWS.getEntityId()"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayExternalTask.confirmPreAuth(PaymentAuthorizationDTO, PaymentDTOEx)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getProcessor()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getResultId()", "org.apache.log4j.Category.warn(java.lang.Object)", "java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayExternalTask.getProcessorName()", "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask.isApplicable(com.sapienter.jbilling.server.payment.PaymentDTOEx)", "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask.doProcess(com.sapienter.jbilling.server.payment.PaymentDTOEx,com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask$SvcType,com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getId()", "com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase$Result.shouldCallOtherProcessors()", "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayExternalTask.prepareExternalPayment(com.sapienter.jbilling.server.payment.PaymentDTOEx)", "java.lang.String.equals(java.lang.Object)", "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayExternalTask.updateGatewayKey(com.sapienter.jbilling.server.payment.PaymentDTOEx)", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getCreditCard()", "org.apache.log4j.Category.error(java.lang.Object)"],
    "com.sapienter.jbilling.server.provisioning.ExternalProvisioningMDB.onMessage(Message)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "com.sapienter.jbilling.server.provisioning.IProvisioningProcessSessionBean.externalProvisioning(javax.jms.Message)"],
    "com.sapienter.jbilling.server.util.db.AbstractGenericStatusDAS.getCacheKey(Serializable)": ["java.lang.Class.getSimpleName()", "com.sapienter.jbilling.server.util.db.AbstractDAS.getPersistentClass()"],
    "com.sapienter.jbilling.server.order.OrderBL.getOnetimeOrderLines(Integer, Integer, Integer)": ["com.sapienter.jbilling.server.order.db.OrderLineDAS.findOnetimeByUserItem(java.lang.Integer,java.lang.Integer,java.lang.Integer)"],
    "com.sapienter.jbilling.server.item.ItemSessionBean.update(Integer, ItemDTO, Integer)": ["com.sapienter.jbilling.server.item.ItemBL.update(java.lang.Integer,com.sapienter.jbilling.server.item.db.ItemDTO,java.lang.Integer)", "com.sapienter.jbilling.server.item.db.ItemDTO.getId()"],
    "com.sapienter.jbilling.server.payment.blacklist.BlacklistBL.save()": ["com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)"],
    "com.sapienter.jbilling.server.user.UserBL.getByCustomField(Integer, Integer, String)": ["java.sql.Connection.close()", "javax.sql.RowSet.setInt(int,int)", "javax.sql.RowSet.setString(int,java.lang.String)", "com.sapienter.jbilling.server.list.ResultList.execute()", "com.sapienter.jbilling.server.list.ResultList.prepareStatement(java.lang.String)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getPreference(Integer)": ["com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerCompanyId()", "com.sapienter.jbilling.server.util.PreferenceBL.getEntity()", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)"],
    "com.sapienter.jbilling.server.user.UserSessionBean.setApplicationContext(ApplicationContext)": ["com.sapienter.jbilling.server.util.Context.setApplicationContext(org.springframework.context.ApplicationContext)"],
    "com.sapienter.jbilling.server.item.tasks.BasicItemManager.addItem(Integer, BigDecimal, Integer, Integer, Integer, Integer, OrderDTO, List)": ["com.sapienter.jbilling.server.order.db.OrderLineDTO.setQuantity(java.math.BigDecimal)", "com.sapienter.jbilling.server.item.tasks.BasicItemManager.populateOrderLine(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,com.sapienter.jbilling.server.order.db.OrderLineDTO,java.util.List)", "com.sapienter.jbilling.server.order.db.OrderDTO.getLine(java.lang.Integer)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getQuantity()", "com.sapienter.jbilling.server.item.db.ItemDTO.getHasDecimals()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getAmount()", "java.util.List.add(java.lang.Object)", "java.math.BigDecimal.compareTo(java.math.BigDecimal)", "java.lang.Integer.intValue()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setItem(com.sapienter.jbilling.server.item.db.ItemDTO)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setAmount(java.math.BigDecimal)", "com.sapienter.jbilling.server.item.ItemBL.getEntity()", "com.sapienter.jbilling.server.order.db.OrderDTO.getLines()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setPurchaseOrder(com.sapienter.jbilling.server.order.db.OrderDTO)", "java.math.BigDecimal.add(java.math.BigDecimal)", "com.sapienter.jbilling.server.item.ItemBL.set(java.lang.Integer)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setDefaults()", "java.math.BigDecimal.remainder(java.math.BigDecimal)"],
    "com.sapienter.jbilling.server.user.UserSessionBean.updatePartnerRanges(Integer, Integer, PartnerRange[])": ["com.sapienter.jbilling.server.user.partner.PartnerBL.setRanges(java.lang.Integer,com.sapienter.jbilling.server.user.partner.db.PartnerRange[])"],
    "com.sapienter.jbilling.server.mediation.MediationSessionBean.createConfiguration(MediationConfiguration)": ["java.util.Calendar.getInstance()", "com.sapienter.jbilling.server.mediation.db.MediationConfiguration.setCreateDatetime(java.util.Date)", "java.util.Calendar.getTime()", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)"],
    "com.sapienter.jbilling.tools.UploadInvoices.readLine(BufferedReader)": ["java.lang.StringBuffer.append(char)", "java.lang.StringBuffer.toString()", "java.io.BufferedReader.read()", "java.lang.StringBuffer.length()"],
    "com.sapienter.jbilling.server.invoice.db.InvoiceDAS.findLinesForPeriodByItemCategory(Integer, Integer, Date, Date)": ["com.sapienter.jbilling.server.invoice.db.InvoiceDAS.addUserCriteria(org.hibernate.Criteria,java.lang.Integer)", "com.sapienter.jbilling.server.invoice.db.InvoiceDAS.addPeriodCriteria(org.hibernate.Criteria,java.util.Date,java.util.Date)", "getSession()", "createCriteria(java.lang.Class)", "com.sapienter.jbilling.server.invoice.db.InvoiceDAS.addItemCategoryCriteria(org.hibernate.Criteria,java.lang.Integer)", "org.hibernate.Criteria.uniqueResult()", "org.hibernate.Criteria.setProjection()", "org.hibernate.criterion.Projections.count(java.lang.String)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.triggerProvisioning()": ["com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "com.sapienter.jbilling.server.provisioning.IProvisioningProcessSessionBean.trigger()"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.zero2null(Date)": ["java.util.Calendar.setTime(java.util.Date)", "java.util.Calendar.get(int)", "java.util.Calendar.getInstance()"],
    "com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.buildDeleteCustomerPaymentProfileRequest(CustomerProfileData)": ["com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.getMerchantAuthenticationXML()", "com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.endTag(java.lang.StringBuffer,java.lang.String)", "java.lang.StringBuffer.toString()", "com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.buildTag(java.lang.StringBuffer,java.lang.String,java.lang.String)", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.getCustomerPaymentProfileId()", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.getCustomerProfileId()", "java.lang.StringBuffer.append(java.lang.String)"],
    "com.sapienter.jbilling.server.provisioning.TestExternalProvisioningMDB.pause(long)": ["org.apache.log4j.Category.debug(java.lang.Object)", "java.lang.Thread.sleep(long)"],
    "com.sapienter.jbilling.server.pluggableTask.PluggableTask.getParameter(String, Boolean)": ["java.util.Map.get(java.lang.Object)", "org.apache.commons.lang.StringUtils.isNotBlank(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)"],
    "com.sapienter.jbilling.server.report.db.ReportDTO.getReportFilePath()": ["com.sapienter.jbilling.server.report.db.ReportDTO.getFileName()", "com.sapienter.jbilling.server.report.db.ReportDTO.getReportBaseDir()"],
    "com.sapienter.jbilling.server.report.db.ReportTypeDTO.setName(String)": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"],
    "com.sapienter.jbilling.server.invoice.InvoiceBL.getManyWS(Integer, Integer)": ["java.util.List.size()", "com.sapienter.jbilling.server.invoice.db.InvoiceDAS.findIdsByUserLatestFirst(java.lang.Integer,int)", "java.util.List.toArray(java.lang.Object[])"],
    "com.sapienter.jbilling.client.process.Trigger.execute(JobExecutionContext)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.user.IUserSessionBean.processPayouts(java.util.Date)", "java.util.Calendar.getInstance()", "org.apache.log4j.Category.info(java.lang.Object)", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "com.sapienter.jbilling.server.order.IOrderSessionBean.reviewNotifications(java.util.Date)", "java.util.Date.before(java.util.Date)", "org.quartz.JobExecutionContext.getPreviousFireTime()", "com.sapienter.jbilling.common.Util.truncateDate(java.util.Date)", "com.sapienter.jbilling.common.Util.getSysPropBooleanTrue(java.lang.String)", "com.sapienter.jbilling.server.invoice.IInvoiceSessionBean.sendReminders(java.util.Date)", "com.sapienter.jbilling.server.user.IUserSessionBean.notifyCreditCardExpiration(java.util.Date)", "java.util.Calendar.getTime()", "com.sapienter.jbilling.server.provisioning.IProvisioningProcessSessionBean.trigger()"],
    "com.sapienter.jbilling.server.provisioning.task.MMSCProvisioningTask.populateRequest(EfsBaseMSISDNRequest, Map)": ["java.util.Map.get(java.lang.Object)", "com.sapienter.jbilling.server.provisioning.task.mmsc.EfsBaseRequest.setChannelId(java.lang.String)", "com.sapienter.jbilling.server.provisioning.task.mmsc.EfsBaseRequest.setUserId(java.lang.String)", "com.sapienter.jbilling.server.provisioning.task.mmsc.EfsBaseRequest.setTransactionId(java.lang.String)", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription.getName()", "com.sapienter.jbilling.server.provisioning.task.mmsc.EfsBaseMSISDNRequest.setMSISDN(java.lang.String)", "com.sapienter.jbilling.server.provisioning.task.mmsc.EfsBaseRequest.setPortalId(java.lang.String)", "com.sapienter.jbilling.server.provisioning.task.mmsc.EfsBaseRequest.setReferenceId(java.lang.String)", "com.sapienter.jbilling.server.provisioning.task.mmsc.EfsBaseRequest.setTag(java.lang.String)", "com.sapienter.jbilling.server.provisioning.task.mmsc.EfsBaseRequest.setLoginUser(java.lang.String)", "com.sapienter.jbilling.server.provisioning.task.mmsc.EfsBaseRequest.setLoginPassword(java.lang.String)", "com.sapienter.jbilling.server.provisioning.task.mmsc.EfsBaseRequest.setApplicationId(java.lang.String)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getAllMediationProcesses()": ["com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerCompanyId()", "java.util.List.size()", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "java.util.List.add(java.lang.Object)", "com.sapienter.jbilling.server.mediation.IMediationSessionBean.getAll(java.lang.Integer)"],
    "com.sapienter.jbilling.server.process.PeriodOfTime.getDaysInPeriod()": ["org.joda.time.DateMidnight.isBefore(org.joda.time.DateMidnight)", "getDays()", "org.joda.time.Days.daysBetween(org.joda.time.DateMidnight,org.joda.time.DateMidnight)"],
    "com.sapienter.jbilling.common.JNDILookup.getFactory()": ["com.sapienter.jbilling.common.JNDILookup.getFactory(boolean)"],
    "com.sapienter.jbilling.server.user.ContactBL.setInvoice(Integer)": ["com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.user.db.UserDTO.getCompany()", "com.sapienter.jbilling.server.user.contact.db.ContactDAS.findInvoiceContact(java.lang.Integer)", "com.sapienter.jbilling.server.user.ContactBL.set(java.lang.Integer)", "com.sapienter.jbilling.server.invoice.InvoiceBL.getEntity()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getBaseUser()", "com.sapienter.jbilling.server.user.db.UserDTO.getUserId()"],
    "com.sapienter.jbilling.server.user.AchBL.set(Integer)": ["com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)"],
    "com.sapienter.jbilling.server.order.OrderSessionBean.setPeriods(Integer, OrderPeriodDTO[])": ["com.sapienter.jbilling.server.order.OrderBL.updatePeriods(java.lang.Integer,com.sapienter.jbilling.server.order.db.OrderPeriodDTO[])"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getSpringSecurityService()": ["com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)"],
    "com.sapienter.jbilling.server.notification.NotificationSessionBean.createUpdate(MessageDTO, Integer)": ["com.sapienter.jbilling.server.notification.NotificationBL.createUpdate(java.lang.Integer,com.sapienter.jbilling.server.notification.MessageDTO)"],
    "com.sapienter.jbilling.server.provisioning.task.TelnetCommunication.close()": ["org.apache.commons.net.telnet.TelnetClient.disconnect()"],
    "com.sapienter.jbilling.server.order.Usage.addLine(OrderLineDTO)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getQuantity()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getAmount()", "com.sapienter.jbilling.server.order.Usage.addAmount(java.math.BigDecimal)", "com.sapienter.jbilling.server.order.Usage.addQuantity(java.math.BigDecimal)"],
    "com.sapienter.jbilling.server.order.db.OrderLineDAS.findOnetimeByParentUserItem(Integer, Integer, Integer)": ["org.joda.time.DateMidnight.minusMonths(java.lang.Integer)", "org.hibernate.Query.setParameter(java.lang.String)", "org.apache.log4j.Category.warn(java.lang.Object)", "getSession()", "com.sapienter.jbilling.server.user.db.CustomerDTO.getId()", "org.hibernate.Query.setParameter(java.lang.String,java.lang.Integer)", "com.sapienter.jbilling.server.user.db.UserDTO.getCustomer()", "com.sapienter.jbilling.server.user.UserBL.getEntity()", "org.hibernate.Query.setParameter(java.lang.String,int)", "createQuery(java.lang.String)", "org.joda.time.DateMidnight.toDate()", "org.hibernate.Query.list()", "java.util.Collections.emptyList()"],
    "com.sapienter.jbilling.server.pluggableTask.PaymentFakeTask.createAuthorizationDTO(Integer, String)": ["java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.pluggableTask.PaymentFakeTask.createAuthorizationDTO(boolean,java.lang.String)"],
    "com.sapienter.jbilling.common.SystemProperties.get(String, String)": ["java.util.Properties.getProperty(java.lang.String,java.lang.String)"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentPaypalExternalTask.buildPaymentAuthorization(PaypalResult)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.setTransactionId(java.lang.String)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.setCode1(java.lang.String)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.setResponseMessage(java.lang.String)", "com.sapienter.jbilling.server.payment.tasks.PaymentPaypalExternalTask.getProcessorName()", "com.sapienter.jbilling.server.payment.tasks.paypal.dto.PaypalResult.getTransactionId()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.setProcessor(java.lang.String)", "com.sapienter.jbilling.server.payment.tasks.paypal.dto.PaypalResult.getErrorCode()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.setAvs(java.lang.String)", "com.sapienter.jbilling.server.payment.tasks.paypal.dto.PaypalResult.getAvs()"],
    "com.sapienter.jbilling.server.invoice.InvoiceBL.addHeadersFooters(List, ResourceBundle)": ["org.apache.log4j.Category.debug(java.lang.Object)", "java.util.List.add(int,java.lang.Object)", "java.lang.StringBuffer.toString()", "java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO.getSourceUserId()", "java.util.List.add(java.lang.Object)", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO.setDescription(java.lang.String)", "java.util.ResourceBundle.getString(java.lang.String)", "com.sapienter.jbilling.server.user.ContactBL.set(java.lang.Integer)", "com.sapienter.jbilling.server.user.ContactBL.getEntity()", "java.lang.StringBuffer.append(java.lang.String)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getFirstName()", "java.util.List.size()", "java.math.BigDecimal.add(java.math.BigDecimal)", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO.setAmount(java.math.BigDecimal)", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)", "java.util.List.get(int)", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO.getTypeId()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getLastName()", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO.getAmount()"],
    "com.sapienter.jbilling.server.user.contact.db.ContactDAS.findContact(Integer, Integer)": ["org.hibernate.Query.setParameter(java.lang.String,java.lang.String)", "org.hibernate.Query.uniqueResult()", "getSession()", "org.hibernate.Query.setParameter(java.lang.String,java.lang.Integer)", "createQuery(java.lang.String)"],
    "com.sapienter.jbilling.server.pluggableTask.OrderFilterAnticipatedTask.isApplicable(OrderDTO, BillingProcessDTO)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.pluggableTask.BasicOrderFilterTask.isApplicable(com.sapienter.jbilling.server.order.db.OrderDTO,com.sapienter.jbilling.server.process.db.BillingProcessDTO)", "com.sapienter.jbilling.server.process.db.BillingProcessDTO.getEntity()", "java.util.GregorianCalendar.add(int,int)", "org.apache.log4j.Category.warn(java.lang.Object)", "com.sapienter.jbilling.server.order.db.OrderDTO.getAnticipatePeriods()", "java.lang.Integer.intValue()", "com.sapienter.jbilling.server.util.PreferenceBL.getInt()", "java.util.Calendar.setTime(java.util.Date)", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.util.PreferenceBL.set(java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.process.BillingProcessBL.getEndOfProcessPeriod(com.sapienter.jbilling.server.process.db.BillingProcessDTO)", "java.util.Calendar.getTime()", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)"],
    "com.sapienter.jbilling.server.order.db.OrderDTO.toString()": ["com.sapienter.jbilling.server.order.db.OrderLineDTO.toString()", "java.lang.StringBuffer.toString()", "com.sapienter.jbilling.server.order.db.OrderDTO.getLines()", "com.sapienter.jbilling.server.user.db.UserDTO.getId()", "java.lang.StringBuffer.append(java.lang.String)"],
    "com.sapienter.jbilling.server.user.partner.PartnerBL.setRelatedClerk(Partner, Integer)": ["java.util.Set.add(java.lang.Object)", "com.sapienter.jbilling.server.user.db.UserDTO.getPartnersForRelatedClerk()", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.user.partner.db.Partner.setBaseUserByRelatedClerk(com.sapienter.jbilling.server.user.db.UserDTO)"],
    "com.sapienter.jbilling.tools.ConvertToBinHexa.main(String[])": ["java.io.PrintStream.println(java.lang.String)", "com.sapienter.jbilling.tools.ConvertToBinHexa.getCCRowsToUpdate()", "java.sql.ResultSet.next()", "com.sapienter.jbilling.tools.ConvertToBinHexa.updateCCRow(int,java.lang.String,java.lang.String)", "java.sql.ResultSet.getInt(int)", "com.sapienter.jbilling.tools.ConvertToBinHexa.getUserRowsToUpdate()", "org.apache.commons.codec.binary.Base64.decodeBase64(byte[])", "com.sapienter.jbilling.tools.ConvertToBinHexa.updateUserRow(int,java.lang.String)", "java.sql.ResultSet.getString(int)", "java.lang.System.exit(int)", "com.sapienter.jbilling.common.JBCrypto.setUseHexForBinary(boolean)", "com.sapienter.jbilling.common.JBCrypto.encrypt(java.lang.String)", "com.sapienter.jbilling.server.util.Util.binaryToString(byte[])", "java.lang.String.getBytes()", "java.sql.Connection.close()", "com.sapienter.jbilling.common.JBCrypto.getCreditCardCrypto()", "java.lang.Throwable.getMessage()", "com.sapienter.jbilling.common.JBCrypto.decrypt(java.lang.String)", "com.sapienter.jbilling.tools.ConvertToBinHexa.getConnection(java.lang.String,java.lang.String,java.lang.String,java.lang.String)", "java.sql.ResultSet.close()", "java.lang.Throwable.printStackTrace()"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentFilterTask.getEnabledFilters()": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase.getBooleanParameter(java.lang.String)", "com.sapienter.jbilling.server.payment.tasks.PaymentFilterTask.getIpAddressCcfId()", "org.apache.log4j.Category.warn(java.lang.Object)", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription.getName()", "java.util.List.add(java.lang.Object)"],
    "com.sapienter.jbilling.server.order.db.OrderLineDTO.touch()": ["com.sapienter.jbilling.server.order.db.OrderLineDTO.getCreateDatetime()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getEditable()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getItem()", "com.sapienter.jbilling.server.item.db.ItemDTO.getInternalNumber()"],
    "com.sapienter.jbilling.server.process.BillingProcessBL.findOrCreate(BillingProcessDTO)": ["com.sapienter.jbilling.server.process.db.BillingProcessDTO.getId()", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.process.db.BillingProcessDTO.getEntity()", "com.sapienter.jbilling.server.process.db.BillingProcessDTO.getBillingDate()", "com.sapienter.jbilling.server.process.db.BillingProcessDTO.getIsReview()", "com.sapienter.jbilling.server.process.BillingProcessBL.create(com.sapienter.jbilling.server.process.db.BillingProcessDTO)", "com.sapienter.jbilling.server.process.db.BillingProcessDAS.isPresent(java.lang.Integer,java.lang.Integer,java.util.Date)"],
    "com.sapienter.jbilling.server.pluggableTask.PaymentAuthorizeNetTask.getRefundData(String, String, boolean, BigDecimal, String, String, String)": ["java.math.BigDecimal.toString()"],
    "com.sapienter.jbilling.server.user.UserSessionBean.isParentCustomer(Integer)": ["com.sapienter.jbilling.server.user.db.UserDTO.getCustomer()", "com.sapienter.jbilling.server.user.UserBL.getEntity()", "com.sapienter.jbilling.server.user.db.CustomerDTO.getIsParent()", "java.lang.Integer.intValue()"],
    "com.sapienter.jbilling.server.process.BillingProcessSessionBean.createProcessRecord(Integer, Date, Integer, Integer, boolean, Integer)": ["com.sapienter.jbilling.server.process.db.BillingProcessDTO.getId()", "com.sapienter.jbilling.server.process.db.BillingProcessDTO.setIsReview(int)", "com.sapienter.jbilling.server.process.BillingProcessBL.getEntity()", "com.sapienter.jbilling.server.process.BillingProcessBL.findOrCreate(com.sapienter.jbilling.server.process.db.BillingProcessDTO)", "com.sapienter.jbilling.server.process.BillingProcessBL.purgeReview(java.lang.Integer,boolean)", "com.sapienter.jbilling.server.process.db.BillingProcessDTO.setPeriodUnit(com.sapienter.jbilling.server.process.db.PeriodUnitDTO)", "com.sapienter.jbilling.common.Util.truncateDate(java.util.Date)", "com.sapienter.jbilling.server.process.db.BillingProcessDTO.setRetriesToDo(int)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.process.db.BillingProcessDTO.setBillingDate(java.util.Date)", "com.sapienter.jbilling.server.process.db.BillingProcessDTO.setPeriodValue(int)", "com.sapienter.jbilling.server.process.db.BillingProcessDTO.setEntity(com.sapienter.jbilling.server.user.db.CompanyDTO)"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentSageTask.preAuth(PaymentDTOEx)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase$Result.shouldCallOtherProcessors()", "com.sapienter.jbilling.server.payment.tasks.PaymentSageTask.doProcess(com.sapienter.jbilling.server.payment.PaymentDTOEx,com.sapienter.jbilling.server.payment.tasks.PaymentSageTask$Transaction,com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO)"],
    "com.sapienter.jbilling.server.item.ItemTypeBL.update(Integer, ItemTypeDTO)": ["com.sapienter.jbilling.server.item.db.ItemTypeDTO.getDescription()", "com.sapienter.jbilling.server.util.audit.EventLogger.audit(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.util.Date)", "com.sapienter.jbilling.server.item.db.ItemTypeDTO.setDescription(java.lang.String)", "com.sapienter.jbilling.server.item.db.ItemTypeDTO.getOrderLineTypeId()", "com.sapienter.jbilling.server.item.db.ItemTypeDTO.getId()", "com.sapienter.jbilling.server.item.db.ItemTypeDTO.setOrderLineTypeId(int)"],
    "com.sapienter.jbilling.server.payment.PaymentSessionBean.processPaypalPayment(Integer, String, BigDecimal, String, Integer, String)": ["org.apache.log4j.Category.debug(java.lang.Object)", "java.util.Calendar.getInstance()", "com.sapienter.jbilling.server.user.db.UserDTO.getEntity()", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setAmount(java.math.BigDecimal)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.user.UserBL.getEntityId(java.lang.Integer)", "com.sapienter.jbilling.server.util.db.CurrencyDTO.getCode()", "com.sapienter.jbilling.server.item.CurrencyBL.getEntity()", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.user.UserBL.getByEmail(java.lang.String)", "com.sapienter.jbilling.server.user.UserBL.getCurrencyId()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getUserId()", "com.sapienter.jbilling.server.util.PreferenceBL.set(java.lang.Integer,java.lang.Integer)", "java.lang.String.equals(java.lang.Object)", "com.sapienter.jbilling.server.util.db.CurrencyDTO.getId()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getBaseUser()", "com.sapienter.jbilling.server.notification.NotificationBL.getPaymentMessage(java.lang.Integer,com.sapienter.jbilling.server.payment.PaymentDTOEx,boolean)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setCreateDatetime(java.util.Date)", "com.sapienter.jbilling.server.payment.PaymentBL.automaticPaymentApplication()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.setUserId(java.lang.Integer)", "com.sapienter.jbilling.server.invoice.InvoiceBL.getEntity()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getCurrency()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setPaymentDate(java.util.Date)", "com.sapienter.jbilling.server.util.PreferenceBL.getString()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setCurrency(com.sapienter.jbilling.server.util.db.CurrencyDTO)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setPaymentMethod(com.sapienter.jbilling.server.payment.db.PaymentMethodDTO)", "com.sapienter.jbilling.server.payment.PaymentSessionBean.applyPayment(com.sapienter.jbilling.server.payment.PaymentDTOEx,java.lang.Integer)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setIsRefund(int)", "com.sapienter.jbilling.server.notification.INotificationSessionBean.notify(java.lang.Integer,com.sapienter.jbilling.server.notification.MessageDTO)", "java.util.Calendar.getTime()", "com.sapienter.jbilling.server.user.db.UserDTO.getUserId()"],
    "com.sapienter.jbilling.server.util.Util.concatCsvLine(List, String)": ["java.util.List.isEmpty()", "java.util.List.size()", "java.lang.StringBuilder.append(java.lang.String)", "com.sapienter.jbilling.server.util.Util.escapeStringForCsvFormat(java.lang.String,java.lang.String)", "java.lang.StringBuilder.toString()", "java.util.List.get(int)"],
    "com.sapienter.jbilling.server.item.PricingField.mapType(String)": ["java.lang.String.equalsIgnoreCase(java.lang.String)"],
    "com.sapienter.jbilling.server.notification.NotificationBL.getSections(Integer)": ["com.sapienter.jbilling.server.pluggableTask.NotificationTask.getSections()", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskManager.getNextClass()"],
    "com.sapienter.jbilling.server.process.AgeingBL.getWelcome(Integer, Integer, Integer)": ["com.sapienter.jbilling.server.process.db.AgeingEntityStepDTO.getId()", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.process.db.AgeingEntityStepDTO.getWelcomeMessage(java.lang.Integer)", "com.sapienter.jbilling.server.process.db.AgeingEntityStepDAS.findStep(java.lang.Integer,java.lang.Integer)"],
    "com.sapienter.jbilling.server.util.db.AbstractDAS.makePersistent(T)": ["saveOrUpdate(java.lang.Object)", "com.sapienter.jbilling.server.util.db.AbstractDAS.getHibernateTemplate()"],
    "com.sapienter.jbilling.server.payment.blacklist.CreditCardFilter.checkPayment(PaymentDTOEx)": ["com.sapienter.jbilling.server.user.db.CreditCardDTO.setNumber(java.lang.String)", "com.sapienter.jbilling.server.payment.blacklist.CreditCardFilter.checkCreditCard(java.lang.Integer,java.util.Collection)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getNumber()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getUserId()", "java.util.List.add(java.lang.Object)", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getCreditCard()"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getUserItemsByCategory(Integer, Integer)": ["com.sapienter.jbilling.server.order.db.OrderDAS.findUserItemsByCategory(java.lang.Integer,java.lang.Integer)"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentRouterCCFTask.getAsyncParameters(InvoiceDTO)": ["com.sapienter.jbilling.server.payment.tasks.PaymentRouterCCFTask.getProcessorName(java.lang.Integer)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getUserId()", "java.util.Map.put(java.lang.Object,java.lang.Object)"],
    "com.sapienter.jbilling.server.process.ConfigurationBL.set(Integer)": ["com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDAS.findByEntity(com.sapienter.jbilling.server.user.db.CompanyDTO)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)"],
    "com.sapienter.jbilling.server.provisioning.task.CommandsQueueSender.postCommand(LinkedList, String, MapMessage)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.provisioning.task.CommandsQueueSender.getEntityId()", "com.sapienter.jbilling.server.order.db.OrderDTO.getId()", "java.util.Iterator.next()", "java.util.AbstractSequentialList.iterator()", "com.sapienter.jbilling.server.provisioning.task.StringPair.getName()", "com.sapienter.jbilling.server.order.OrderBL.setProvisioningStatus(java.lang.Integer,java.lang.Integer)", "java.util.UUID.toString()", "java.util.Iterator.hasNext()", "java.util.UUID.randomUUID()", "com.sapienter.jbilling.server.provisioning.task.StringPair.getValue()", "java.lang.Integer.valueOf(java.lang.String)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getProvisioningRequestId()", "com.sapienter.jbilling.server.order.OrderBL.getOrderLine(java.lang.Integer)", "com.sapienter.jbilling.server.order.db.OrderDTO.getUser()", "javax.jms.MapMessage.setIntProperty(java.lang.String,java.lang.Integer)", "java.lang.String.equals(java.lang.Object)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setProvisioningRequestId(java.lang.String)", "com.sapienter.jbilling.server.user.db.UserDTO.getId()", "com.sapienter.jbilling.server.util.audit.EventLogger.auditBySystem(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.util.Date)", "javax.jms.MapMessage.setStringProperty(java.lang.String,java.lang.String)"],
    "com.sapienter.jbilling.server.order.db.OrderLineDAS.findLinesWithDecimals(Integer)": ["org.hibernate.Query.uniqueResult()", "getSession()", "org.hibernate.Query.setParameter(java.lang.String,java.lang.Integer)", "createQuery(java.lang.String)"],
    "com.sapienter.jbilling.server.order.db.OrderDAS.findByUserAndPeriod(Integer, OrderPeriodDTO)": ["org.hibernate.criterion.Restrictions.eq(java.lang.String,java.lang.Integer)", "java.util.List.isEmpty()", "addOrder()", "getSession()", "add()", "createCriteria(java.lang.Class)", "org.hibernate.Criteria.list()", "createAlias(java.lang.String,java.lang.String)", "org.hibernate.criterion.Order.asc(java.lang.String)", "org.hibernate.criterion.Restrictions.eq(java.lang.String,com.sapienter.jbilling.server.order.db.OrderPeriodDTO)", "setMaxResults(int)", "org.hibernate.criterion.Restrictions.eq(java.lang.String,int)", "java.util.List.get(int)"],
    "com.sapienter.jbilling.server.user.UserBL.validate(UserDTOEx)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.user.UserDTOEx.getMainRoleId()", "com.sapienter.jbilling.server.user.db.UserDTO.getPassword()", "com.sapienter.jbilling.server.user.UserDTOEx.getStatusId()", "com.sapienter.jbilling.server.user.db.UserDTO.getUserName()", "com.sapienter.jbilling.server.user.UserDTOEx.getCreditCard()", "org.apache.log4j.Logger.getLogger(java.lang.Class)", "com.sapienter.jbilling.server.user.UserDTOEx.getLanguageId()", "com.sapienter.jbilling.server.user.CreditCardBL.validate(com.sapienter.jbilling.server.user.db.CreditCardDTO)"],
    "com.sapienter.jbilling.server.payment.tasks.SaveCreditCardExternallyTask.updateCreditCard(CreditCardDTO, String)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.obscureNumber()", "org.apache.log4j.Category.warn(java.lang.Object)", "com.sapienter.jbilling.server.user.CreditCardBL.delete(java.lang.Integer)", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription.getName()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.setGatewayKey(java.lang.String)", "com.sapienter.jbilling.server.user.db.UserDTO.getId()", "com.sapienter.jbilling.server.pluggableTask.PluggableTask.getParameter(java.lang.String,java.lang.Boolean)", "com.sapienter.jbilling.server.user.CreditCardBL.getUser()"],
    "com.sapienter.jbilling.server.process.task.ScheduledTask.getJobDetail()": ["put(java.lang.String,java.lang.Integer)", "com.sapienter.jbilling.server.process.task.IScheduledTask.getTaskName()", "com.sapienter.jbilling.server.pluggableTask.PluggableTask.getTaskId()", "java.lang.Object.getClass()", "org.quartz.JobDetail.getJobDataMap()", "com.sapienter.jbilling.server.pluggableTask.PluggableTask.getEntityId()", "putAll(java.util.Map)"],
    "com.sapienter.jbilling.server.payment.PaymentBL.update(Integer, PaymentDTOEx)": ["com.sapienter.jbilling.server.payment.db.PaymentDTO.setUpdateDatetime(java.util.Date)", "java.math.BigDecimal.toString()", "java.util.Calendar.getInstance()", "com.sapienter.jbilling.server.payment.db.PaymentInfoChequeDTO.getDate()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setAmount(java.math.BigDecimal)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getPaymentNotes()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getAmount()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getAch()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getBaseUser()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getAch()", "com.sapienter.jbilling.server.payment.db.PaymentInfoChequeDTO.setBank(java.lang.String)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setPaymentPeriod(java.lang.Integer)", "com.sapienter.jbilling.server.user.AchBL.update(java.lang.Integer,com.sapienter.jbilling.server.user.db.AchDTO)", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getCreditCard()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setPaymentNotes(java.lang.String)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getId()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setPaymentDate(java.util.Date)", "com.sapienter.jbilling.server.user.CreditCardBL.update(java.lang.Integer,com.sapienter.jbilling.server.user.db.CreditCardDTO,java.lang.Integer)", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getCheque()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getPaymentPeriod()", "com.sapienter.jbilling.server.payment.db.PaymentInfoChequeDTO.setNumber(java.lang.String)", "com.sapienter.jbilling.server.payment.db.PaymentInfoChequeDTO.setDate(java.util.Date)", "com.sapienter.jbilling.server.payment.db.PaymentInfoChequeDTO.getBank()", "com.sapienter.jbilling.server.util.audit.EventLogger.audit(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.util.Date)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setBalance(java.math.BigDecimal)", "com.sapienter.jbilling.server.user.db.UserDTO.getId()", "java.util.Calendar.getTime()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getPaymentInfoCheque()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getPaymentDate()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getCreditCard()", "com.sapienter.jbilling.server.payment.db.PaymentInfoChequeDTO.getNumber()"],
    "com.sapienter.jbilling.server.order.OrderLineBL.copy(List)": ["java.util.List.size()", "java.util.List.add(java.lang.Object)"],
    "com.sapienter.jbilling.server.mediation.task.MediationResult.addError(String)": ["java.util.List.add(java.lang.Object)"],
    "com.sapienter.jbilling.server.provisioning.task.TestCommunication.connect(Map)": ["org.apache.log4j.Category.debug(java.lang.Object)"],
    "com.sapienter.jbilling.server.util.db.AbstractDAS.isIdPersisted(Serializable)": ["setProjection()", "add()", "org.hibernate.criterion.Projections.rowCount()", "createCriteria(java.lang.Class)", "com.sapienter.jbilling.server.util.db.AbstractDAS.getSession()", "com.sapienter.jbilling.server.util.db.AbstractDAS.getPersistentClass()", "org.hibernate.Criteria.uniqueResult()", "org.hibernate.criterion.Restrictions.idEq(java.io.Serializable)"],
    "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDAS.equals(String, Object)": ["org.hibernate.criterion.Restrictions.isNull(java.lang.String)", "org.hibernate.criterion.Restrictions.eq(java.lang.String,java.lang.Object)"],
    "com.sapienter.jbilling.server.payment.event.ProcessPaymentProcessor.getEntityId()": ["java.lang.Integer.intValue()"],
    "com.sapienter.jbilling.server.process.db.ProcessRunUserDAS.findFailedUsersCount(Integer)": ["com.sapienter.jbilling.server.process.db.ProcessRunUserDAS.findUsersCountByStatus(java.lang.Integer,java.lang.Integer)"],
    "com.sapienter.jbilling.server.order.OrderLineWS.setAmountAsDecimal(BigDecimal)": ["com.sapienter.jbilling.server.order.OrderLineWS.setAmount(java.math.BigDecimal)"],
    "com.sapienter.jbilling.server.util.db.AbstractDAS.findNow(Serializable)": ["get(java.lang.Class,java.io.Serializable)", "com.sapienter.jbilling.server.util.db.AbstractDAS.getPersistentClass()", "com.sapienter.jbilling.server.util.db.AbstractDAS.getHibernateTemplate()"],
    "com.sapienter.jbilling.server.provisioning.task.TelnetCommunication.write(String)": ["java.io.PrintStream.println(java.lang.String)", "java.io.PrintStream.flush()"],
    "com.sapienter.jbilling.server.user.UserBL.getUserTransitionsByDate(Integer, Date, Date)": ["java.sql.ResultSet.next()", "java.util.Iterator.next()", "javax.sql.RowSet.setInt(int,int)", "com.sapienter.jbilling.server.user.UserTransitionResponseWS.setId(java.lang.Integer)", "com.sapienter.jbilling.server.user.UserTransitionResponseWS.setTransitionDate(java.util.Date)", "org.apache.log4j.Category.info(java.lang.Object)", "java.sql.ResultSet.getInt(int)", "com.sapienter.jbilling.server.list.ResultList.execute()", "java.util.List.add(java.lang.Object)", "com.sapienter.jbilling.server.list.ResultList.prepareStatement(java.lang.String)", "java.util.Iterator.hasNext()", "java.sql.ResultSet.getString(int)", "com.sapienter.jbilling.server.user.UserTransitionResponseWS.setUserId(java.lang.Integer)", "java.sql.ResultSet.getDate(int)", "com.sapienter.jbilling.server.user.UserTransitionResponseWS.setToStatusId(java.lang.Integer)", "java.sql.Connection.close()", "java.util.List.size()", "javax.sql.RowSet.setDate(int,java.sql.Date)", "java.util.List.iterator()", "com.sapienter.jbilling.server.user.UserTransitionResponseWS.setFromStatusId(java.lang.Integer)", "java.util.Date.getTime()", "java.lang.Integer.parseInt(java.lang.String)"],
    "com.sapienter.jbilling.server.mediation.MediationRecordBL.getWS(MediationRecordDTO)": ["com.sapienter.jbilling.server.mediation.MediationRecordBL.getWS(java.util.Collection)", "com.sapienter.jbilling.server.mediation.db.MediationRecordDTO.getLines()"],
    "com.sapienter.jbilling.server.order.OrderLineBL.addItem(OrderDTO, Integer)": ["com.sapienter.jbilling.server.order.OrderLineBL.addItem(com.sapienter.jbilling.server.order.db.OrderDTO,java.lang.Integer,boolean)"],
    "com.sapienter.jbilling.server.entity.AchDTO.useGatewayKey()": ["com.sapienter.jbilling.server.entity.AchDTO.getGatewayKey()"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentSageTask.process(PaymentDTOEx)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getPaymentResult()", "java.math.BigDecimal.compareTo(java.math.BigDecimal)", "com.sapienter.jbilling.server.payment.db.PaymentResultDTO.getId()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getAmount()", "com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase$Result.shouldCallOtherProcessors()", "com.sapienter.jbilling.server.payment.tasks.PaymentSageTask.doProcess(com.sapienter.jbilling.server.payment.PaymentDTOEx,com.sapienter.jbilling.server.payment.tasks.PaymentSageTask$Transaction,com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO)"],
    "com.sapienter.jbilling.server.item.db.ItemDTO.setNumber(String)": ["com.sapienter.jbilling.server.item.db.ItemDTO.setInternalNumber(java.lang.String)"],
    "com.sapienter.jbilling.server.notification.NotificationLineEntityComparator.compare(Object, Object)": ["java.lang.Integer.compareTo(java.lang.Integer)", "com.sapienter.jbilling.server.notification.db.NotificationMessageLineDTO.getId()"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentBeanstreamTask.getPOSTString(PaymentDTOEx, String, String)": ["org.apache.log4j.Category.debug(java.lang.Object)", "java.lang.String.substring(int,int)", "java.util.Calendar.getInstance()", "java.lang.StringBuffer.toString()", "com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase.ensureGetParameter(java.lang.String)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getCcExpiry()", "com.sapienter.jbilling.server.user.ContactBL.set(java.lang.Integer)", "com.sapienter.jbilling.server.user.ContactBL.getEntity()", "java.lang.StringBuffer.append(java.lang.String)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getAmount()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getEmail()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getNumber()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getUserId()", "java.lang.String.equals(java.lang.Object)", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getCreditCard()", "java.lang.String.length()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getLastName()", "java.util.Calendar.get(int)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getName()", "com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase.getString(java.lang.String)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getPhoneNumber()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getId()", "java.util.Calendar.setTime(java.util.Date)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getStateProvince()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getCity()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getCountryCode()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getFirstName()", "com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase.getOptionalParameter(java.lang.String,java.lang.String)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getAddress2()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getPostalCode()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getAddress1()", "java.lang.Integer.toString(int)", "org.apache.log4j.Category.error(java.lang.Object)"],
    "com.sapienter.jbilling.server.pluggableTask.PaymentFakeExternalStorage.storeCreditCard(ContactDTO, CreditCardDTO, AchDTO)": ["com.sapienter.jbilling.server.pluggableTask.PluggableTask.getParameter(java.lang.String,java.lang.String)", "com.sapienter.jbilling.server.pluggableTask.PluggableTask.getParameter(java.lang.String,java.lang.Boolean)"],
    "com.sapienter.jbilling.server.payment.event.ProcessPaymentProcessor.doProcess(Event)": ["com.sapienter.jbilling.server.payment.event.ProcessPaymentProcessor.processPayment(com.sapienter.jbilling.server.payment.event.ProcessPaymentEvent)", "com.sapienter.jbilling.server.payment.event.ProcessPaymentProcessor.processEnd(com.sapienter.jbilling.server.payment.event.EndProcessPaymentEvent)", "com.sapienter.jbilling.server.system.event.Event.getEntityId()"],
    "com.sapienter.jbilling.server.payment.tasks.RouterAsyncParameters.addParameters(MapMessage)": ["javax.jms.MapMessage.getInt(java.lang.String)", "com.sapienter.jbilling.server.payment.tasks.AbstractPaymentRouterTask.getAsyncParameters(com.sapienter.jbilling.server.invoice.db.InvoiceDTO)", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "java.util.Map.entrySet()", "java.util.Map$Entry.getValue()", "com.sapienter.jbilling.server.user.db.UserDTO.getEntity()", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskManager.getNextClass()", "com.sapienter.jbilling.server.invoice.InvoiceBL.getEntity()", "com.sapienter.jbilling.server.invoice.InvoiceBL.getDTO()", "javax.jms.MapMessage.setStringProperty(java.lang.String,java.lang.String)", "java.util.Map$Entry.getKey()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getBaseUser()"],
    "com.sapienter.jbilling.server.user.permisson.db.PermissionDTO.toString()": ["com.sapienter.jbilling.server.user.permisson.db.PermissionDTO.getAuthority()"],
    "com.sapienter.jbilling.server.mediation.task.AbstractJDBCReader.getLastId()": ["com.sapienter.jbilling.server.mediation.task.AbstractJDBCReader.readLastId()"],
    "com.sapienter.jbilling.server.payment.PaymentBL.createMap(InvoiceDTO, BigDecimal)": ["java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getPaymentResult()", "com.sapienter.jbilling.server.payment.db.PaymentResultDTO.getId()", "com.sapienter.jbilling.server.payment.db.PaymentInvoiceMapDAS.create(com.sapienter.jbilling.server.invoice.db.InvoiceDTO,com.sapienter.jbilling.server.payment.db.PaymentDTO,java.math.BigDecimal)"],
    "com.sapienter.jbilling.server.payment.blacklist.CsvProcessor.createAddressRecord(BlacklistDTO)": ["com.sapienter.jbilling.server.user.contact.db.ContactDTO.setCity(java.lang.String)", "com.sapienter.jbilling.server.payment.blacklist.CsvProcessor.checkForEmptyRecord(java.lang.String,com.sapienter.jbilling.server.payment.blacklist.CsvProcessor$Column[])", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.setDeleted(int)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.setAddress2(java.lang.String)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.setStateProvince(java.lang.String)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.setPostalCode(java.lang.String)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.setAddress1(java.lang.String)", "com.sapienter.jbilling.server.payment.blacklist.CsvProcessor.getString(com.sapienter.jbilling.server.payment.blacklist.CsvProcessor$Column)", "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDTO.setContact(com.sapienter.jbilling.server.user.contact.db.ContactDTO)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.setCreateDate(java.util.Date)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.setCountryCode(java.lang.String)"],
    "com.sapienter.jbilling.server.user.partner.PartnerBL.getCustomersCount()": ["java.sql.Connection.prepareStatement(java.lang.String)", "java.sql.ResultSet.next()", "java.sql.PreparedStatement.setInt(int,int)", "java.sql.Statement.close()", "java.sql.Connection.close()", "java.sql.ResultSet.getInt(int)", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "java.sql.PreparedStatement.executeQuery()", "com.sapienter.jbilling.server.user.partner.db.Partner.getId()", "java.sql.ResultSet.close()", "javax.sql.DataSource.getConnection()"],
    "com.sapienter.jbilling.server.mediation.task.AbstractFileReader.getFormat()": ["org.apache.commons.digester.Digester.setValidating(boolean)", "org.apache.log4j.Category.debug(java.lang.Object)", "org.apache.commons.digester.Digester.parse(java.io.File)", "org.apache.commons.digester.Digester.setUseContextClassLoader(boolean)", "org.apache.commons.digester.Digester.addSetNext(java.lang.String,java.lang.String,java.lang.String)", "org.apache.commons.digester.Digester.addObjectCreate(java.lang.String,java.lang.String)", "org.apache.commons.digester.Digester.addCallMethod(java.lang.String,java.lang.String,int)", "org.apache.commons.digester.Digester.addCallMethod(java.lang.String,java.lang.String)"],
    "com.sapienter.jbilling.server.util.db.AbstractDAS.reattachUnmodified(T)": ["lock(java.lang.Object)", "com.sapienter.jbilling.server.util.db.AbstractDAS.getSession()"],
    "com.sapienter.jbilling.server.process.BillingProcessRunBL.findOrCreateTotal(Integer)": ["com.sapienter.jbilling.server.process.db.ProcessRunTotalDAS.getByCurrency(com.sapienter.jbilling.server.process.db.ProcessRunDTO,java.lang.Integer)", "com.sapienter.jbilling.server.process.db.ProcessRunTotalDAS.create(com.sapienter.jbilling.server.process.db.ProcessRunDTO,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.lang.Integer)"],
    "com.sapienter.jbilling.server.payment.db.PaymentInvoiceMapDAS.deleteAllWithInvoice(InvoiceDTO)": ["org.hibernate.Criteria.list()", "java.util.List.isEmpty()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getId()", "getSession()", "org.hibernate.criterion.Restrictions.eq(java.lang.String,com.sapienter.jbilling.server.invoice.db.InvoiceDTO)", "org.hibernate.Criteria.add()", "createCriteria(java.lang.Class)", "com.sapienter.jbilling.server.util.db.AbstractDAS.delete(java.lang.Object)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)"],
    "com.sapienter.jbilling.server.user.UserBL.getByCCNumber(Integer, String)": ["java.sql.Connection.close()", "javax.sql.RowSet.setInt(int,int)", "javax.sql.RowSet.setString(int,java.lang.String)", "com.sapienter.jbilling.server.list.ResultList.execute()", "com.sapienter.jbilling.server.list.ResultList.prepareStatement(java.lang.String)", "java.lang.Integer.intValue()"],
    "com.sapienter.jbilling.server.user.tasks.BasicSubscriptionStatusManagerTask.getUser(Integer)": ["com.sapienter.jbilling.server.payment.PaymentDTOEx.getUserId()"],
    "com.sapienter.jbilling.server.item.db.ItemDTO.setTypes(Integer[])": ["java.util.Collection.add(java.lang.Object)", "java.lang.Integer.toString()"],
    "com.sapienter.jbilling.server.process.task.AgeingProcessTask.getTrigger()": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.process.task.AbstractBackwardSimpleScheduledTask.setTriggerFromProperties(org.quartz.SimpleTrigger)", "com.sapienter.jbilling.server.process.task.AbstractBackwardSimpleScheduledTask.useProperties()", "com.sapienter.jbilling.server.process.task.AbstractSimpleScheduledTask.getTrigger()"],
    "com.sapienter.jbilling.server.util.Util.formatDate(Date, Locale)": ["java.util.ResourceBundle.getBundle(java.lang.String,java.util.Locale)", "java.util.ResourceBundle.getString(java.lang.String)", "java.text.DateFormat.format(java.util.Date)"],
    "com.sapienter.jbilling.server.user.UserBL.getByCustomFieldLike(Integer, Integer, String)": ["java.sql.Connection.close()", "javax.sql.RowSet.setInt(int,int)", "javax.sql.RowSet.setString(int,java.lang.String)", "com.sapienter.jbilling.server.list.ResultList.execute()", "com.sapienter.jbilling.server.list.ResultList.prepareStatement(java.lang.String)"],
    "com.sapienter.jbilling.server.user.UserSessionBean.updatePartner(Integer, Partner)": ["com.sapienter.jbilling.server.user.partner.PartnerBL.update(java.lang.Integer,com.sapienter.jbilling.server.user.partner.db.Partner)", "com.sapienter.jbilling.server.user.partner.db.Partner.getId()"],
    "com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.buildCreateCustomerPaymentProfileRequest(CustomerProfileData)": ["com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.getMerchantAuthenticationXML()", "com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.endTag(java.lang.StringBuffer,java.lang.String)", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.getCreditCardNumber()", "java.lang.StringBuffer.toString()", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.getPaymentType()", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.getAccountType()", "com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.buildTag(java.lang.StringBuffer,java.lang.String,java.lang.String)", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.getLastName()", "java.lang.StringBuffer.append(java.lang.String)", "com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.buildTagIfNotEmpty(java.lang.StringBuffer,java.lang.String,java.lang.String)", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.getFirstName()", "com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.beginTag(java.lang.StringBuffer,java.lang.String)", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.getRoutingNumber()", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.getCustomerProfileId()", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.getCountry()", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.getPhoneNumber()", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.getState()", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.getCreditCardCode()", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.getAccountName()", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.getCity()", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.getFaxNumber()", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.getCreditCardExpirationDate()", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.getCompany()", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.getAccountNumber()", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.getBankName()", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.getAddress()"],
    "com.sapienter.jbilling.client.process.JobScheduler.getScheduler()": ["org.quartz.SchedulerFactory.getScheduler()", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)"],
    "com.sapienter.jbilling.server.util.Util.binaryToString(byte[])": ["java.lang.StringBuffer.toString()", "java.lang.StringBuffer.append(java.lang.String)"],
    "com.sapienter.jbilling.server.item.PricingField.setDecimalValue(BigDecimal)": ["java.math.BigDecimal.toString()"],
    "com.sapienter.jbilling.server.util.audit.EventLogger.info(Integer, Integer, Integer, Integer, Integer, String)": ["com.sapienter.jbilling.server.util.audit.EventLogger.log(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String)"],
    "com.sapienter.jbilling.server.pluggableTask.CalculateDueDateDfFm.apply(NewInvoiceDTO, Integer)": ["java.util.Calendar.setTime(java.util.Date)", "com.sapienter.jbilling.server.invoice.NewInvoiceDTO.getDueDatePeriod()", "com.sapienter.jbilling.server.pluggableTask.CalculateDueDate.apply(com.sapienter.jbilling.server.invoice.NewInvoiceDTO,java.lang.Integer)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.setDueDate(java.util.Date)", "com.sapienter.jbilling.server.order.TimePeriod.getDf_fm()", "java.util.Calendar.getTime()", "java.lang.Boolean.booleanValue()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getDueDate()", "java.util.GregorianCalendar.getActualMaximum(int)", "java.util.Calendar.set(int,int)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getMediationRecordsByMediationProcess(Integer)": ["com.sapienter.jbilling.server.mediation.MediationRecordBL.getWS(java.util.List)", "com.sapienter.jbilling.server.mediation.IMediationSessionBean.getMediationRecordsByMediationProcess(java.lang.Integer)", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)"],
    "com.sapienter.jbilling.server.item.ItemSessionBean.setCurrencies(Integer, CurrencyDTO[], Integer)": ["com.sapienter.jbilling.server.item.CurrencyBL.setEntityCurrency(java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.item.CurrencyBL.setCurrencies(java.lang.Integer,com.sapienter.jbilling.server.util.db.CurrencyDTO[])"],
    "com.sapienter.jbilling.server.mediation.task.MediationProcessTask.execute(JobExecutionContext)": ["com.sapienter.jbilling.server.process.task.AbstractBackwardSimpleScheduledTask.execute(org.quartz.JobExecutionContext)", "org.quartz.JobExecutionContext.getFireTime()", "org.apache.log4j.Category.info(java.lang.Object)", "org.apache.log4j.Category.warn(java.lang.Object)", "com.sapienter.jbilling.server.pluggableTask.PluggableTask.getEntityId()", "java.util.concurrent.atomic.AtomicBoolean.set(boolean)", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "com.sapienter.jbilling.server.mediation.IMediationSessionBean.trigger(java.lang.Integer)", "com.sapienter.jbilling.common.Util.getSysPropBooleanTrue(java.lang.String)", "java.util.concurrent.atomic.AtomicBoolean.compareAndSet(boolean,boolean)"],
    "com.sapienter.jbilling.server.user.db.UserDAS.findInStatus(Integer, Integer)": ["org.hibernate.Query.list()", "getSession()", "org.hibernate.Query.setParameter(java.lang.String,java.lang.Integer)", "createQuery(java.lang.String)"],
    "com.sapienter.jbilling.server.user.EntityBL.getAllIDs()": ["java.sql.ResultSet.next()", "java.sql.Connection.close()", "java.sql.ResultSet.getInt(int)", "java.util.List.size()", "com.sapienter.jbilling.server.list.ResultList.execute()", "java.util.List.add(java.lang.Object)", "com.sapienter.jbilling.server.list.ResultList.prepareStatement(java.lang.String)", "java.util.List.toArray(java.lang.Object[])"],
    "com.sapienter.jbilling.server.process.BillingProcessSessionBean.reviewUsersStatus(Integer, Date)": ["com.sapienter.jbilling.server.process.AgeingBL.reviewAll(java.lang.Integer,java.util.Date)"],
    "com.sapienter.jbilling.server.invoice.InvoiceSessionBean.create(Integer, Integer, NewInvoiceDTO)": ["com.sapienter.jbilling.server.invoice.InvoiceBL.create(java.lang.Integer,com.sapienter.jbilling.server.invoice.NewInvoiceDTO,com.sapienter.jbilling.server.process.db.BillingProcessDTO)", "java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.invoice.InvoiceBL.createLines(com.sapienter.jbilling.server.invoice.NewInvoiceDTO)", "com.sapienter.jbilling.server.user.UserBL.getEntityId(java.lang.Integer)"],
    "com.sapienter.jbilling.server.notification.NotificationBL.getInvoicePaperMessage(Integer, Integer, Integer, InvoiceDTO)": ["com.sapienter.jbilling.server.notification.MessageDTO.setTypeId(java.lang.Integer)", "com.sapienter.jbilling.server.notification.MessageDTO.setDeliveryMethodId(java.lang.Integer)", "com.sapienter.jbilling.server.notification.MessageDTO.addSection(com.sapienter.jbilling.server.notification.MessageSection)", "com.sapienter.jbilling.server.notification.MessageDTO.getParameters()", "com.sapienter.jbilling.server.notification.NotificationBL.setContent(com.sapienter.jbilling.server.notification.MessageDTO,java.lang.Integer,java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.invoice.InvoiceBL.getDTOEx(java.lang.Integer,boolean)", "java.util.HashMap.put(java.lang.Object,java.lang.Object)"],
    "com.sapienter.jbilling.server.mediation.MediationConfigurationBL.getPluggableTaskDAS()": ["com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)"],
    "com.sapienter.jbilling.server.util.db.AbstractDAS.makeTransient(T)": ["delete(java.lang.Object)", "com.sapienter.jbilling.server.util.db.AbstractDAS.getHibernateTemplate()"],
    "com.sapienter.jbilling.server.order.OrderLineWS.setPrice(BigDecimal)": ["java.math.BigDecimal.toString()"],
    "com.sapienter.jbilling.server.user.UserBL.getLocale(UserDTO)": ["com.sapienter.jbilling.server.util.db.LanguageDTO.getCode()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getCountryCode()", "com.sapienter.jbilling.server.user.db.UserDTO.getLanguage()", "com.sapienter.jbilling.server.user.db.UserDTO.getId()", "com.sapienter.jbilling.server.user.contact.db.ContactDAS.findPrimaryContact(java.lang.Integer)"],
    "com.sapienter.jbilling.server.invoice.InvoiceBL.getInvoicesToPrintByProcessId(Integer)": ["java.sql.Connection.close()", "javax.sql.RowSet.setInt(int,int)", "com.sapienter.jbilling.server.list.ResultList.execute()", "com.sapienter.jbilling.server.list.ResultList.prepareStatement(java.lang.String)", "java.lang.Integer.intValue()"],
    "com.sapienter.jbilling.server.process.BillingProcessSessionBean.processEntity(Integer, Date, Integer, Integer, boolean)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.process.IBillingProcessSessionBean.addProcessRunUser(java.lang.Integer,java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "com.sapienter.jbilling.server.process.IBillingProcessSessionBean.createProcessRecord(java.lang.Integer,java.util.Date,java.lang.Integer,java.lang.Integer,boolean,java.lang.Integer)", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.setNextRunDate(java.util.Date)", "org.hibernate.ScrollableResults.close()", "com.sapienter.jbilling.server.util.MapPeriodToCalendar.map(java.lang.Integer)", "java.lang.Integer.intValue()", "com.sapienter.jbilling.server.process.task.IBillingProcessFilterTask.findUsersToProcess(java.lang.Integer,java.util.Date)", "com.sapienter.jbilling.server.process.BillingProcessBL.getEntity()", "com.sapienter.jbilling.server.process.ConfigurationBL.set(java.lang.Integer)", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.getOnlyRecurring()", "java.util.List.contains(java.lang.Object)", "org.hibernate.ScrollableResults.get(int)", "org.hibernate.ScrollableResults.next()", "com.sapienter.jbilling.server.process.db.BillingProcessDTO.getPaperInvoiceBatch()", "com.sapienter.jbilling.server.process.BillingProcessRunBL.setProcess(java.lang.Integer)", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.getAutoPayment()", "com.sapienter.jbilling.server.invoice.PaperInvoiceBatchBL.sendEmail()", "com.sapienter.jbilling.server.system.event.EventManager.process(com.sapienter.jbilling.server.system.event.Event)", "java.util.GregorianCalendar.add(int,int)", "com.sapienter.jbilling.server.process.ConfigurationBL.getEntity()", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskManager.getNextClass()", "com.sapienter.jbilling.server.invoice.PaperInvoiceBatchBL.compileInvoiceFilesForProcess(java.lang.Integer)", "com.sapienter.jbilling.server.process.IBillingProcessSessionBean.updateProcessRunFinished(java.lang.Integer,java.lang.Integer)", "java.util.Calendar.setTime(java.util.Date)", "com.sapienter.jbilling.server.process.db.BillingProcessDAS.reset()", "com.sapienter.jbilling.server.process.BillingProcessRunBL.notifyProcessRunFailure(java.lang.Integer,int)", "com.sapienter.jbilling.server.process.BillingProcessRunBL.updateTotals(java.lang.Integer)", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.getRetries()", "com.sapienter.jbilling.server.process.BillingProcessRunBL.findSuccessfullUsers()", "com.sapienter.jbilling.server.process.IBillingProcessSessionBean.processUser(java.lang.Integer,java.lang.Integer,boolean,boolean)", "com.sapienter.jbilling.server.process.IBillingProcessSessionBean.emailAndPayment(java.lang.Integer,java.lang.Integer,java.lang.Integer,boolean)", "java.util.Calendar.getTime()"],
    "com.sapienter.jbilling.client.authentication.PermissionVoter.vote(Authentication, Object, Collection)": ["org.springframework.security.core.Authentication.getAuthorities()", "equals()", "com.sapienter.jbilling.client.authentication.PermissionVoter.getAttributeValue(org.springframework.security.access.ConfigAttribute)", "org.springframework.security.core.GrantedAuthority.getAuthority()", "com.sapienter.jbilling.client.authentication.PermissionVoter.supports(org.springframework.security.access.ConfigAttribute)"],
    "com.sapienter.jbilling.server.user.permisson.db.PermissionUserDTO.setIsGranted(boolean)": ["com.sapienter.jbilling.server.user.permisson.db.PermissionUserDTO.setIsGrant(short)"],
    "com.sapienter.jbilling.server.user.UserSessionBean.addContact(ContactDTOEx, String, Integer)": ["com.sapienter.jbilling.server.user.ContactBL.append(com.sapienter.jbilling.server.user.ContactDTOEx,java.lang.Integer)", "com.sapienter.jbilling.server.user.UserBL.getEntity()", "com.sapienter.jbilling.server.user.db.UserDTO.getUserId()"],
    "com.sapienter.jbilling.server.payment.tasks.paypal.PaypalApi.doDirectPayment(PaymentAction, Payer, CreditCard, Payment)": ["com.paypal.sdk.core.nvp.NVPDecoder.get(java.lang.String)", "equals(java.lang.String)", "com.sapienter.jbilling.server.payment.tasks.paypal.dto.Payer.getLastName()", "com.paypal.sdk.core.nvp.NVPDecoder.decode(java.lang.String)", "com.sapienter.jbilling.server.payment.tasks.paypal.dto.CreditCard.getType()", "com.sapienter.jbilling.server.payment.tasks.paypal.dto.Payer.getCountryCode()", "com.sapienter.jbilling.server.payment.tasks.paypal.dto.Payer.getCity()", "com.paypal.sdk.services.NVPCallerServices.call(java.lang.String)", "com.sapienter.jbilling.server.payment.tasks.paypal.dto.PaymentAction.toString()", "com.paypal.sdk.core.nvp.NVPEncoder.add(java.lang.String,java.lang.String)", "com.sapienter.jbilling.server.payment.tasks.paypal.dto.Payer.getZip()", "com.paypal.sdk.core.nvp.NVPEncoder.encode()", "com.sapienter.jbilling.server.payment.tasks.paypal.dto.Payer.getState()", "com.sapienter.jbilling.server.payment.tasks.paypal.dto.PaypalResult.setSucceseeded(boolean)", "com.sapienter.jbilling.server.payment.tasks.paypal.dto.Payer.getFirstName()", "com.sapienter.jbilling.server.payment.tasks.paypal.dto.Payer.getStreet()", "com.sapienter.jbilling.server.payment.tasks.paypal.dto.CreditCard.getAccount()", "com.sapienter.jbilling.server.payment.tasks.paypal.dto.Payment.getAmount()", "com.sapienter.jbilling.server.payment.tasks.paypal.dto.PaypalResult.setErrorCode(java.lang.String)", "com.sapienter.jbilling.server.payment.tasks.paypal.dto.CreditCard.getExpirationDate()", "com.paypal.sdk.services.NVPCallerServices.setAPIProfile(com.paypal.sdk.profiles.APIProfile)", "com.sapienter.jbilling.server.payment.tasks.paypal.dto.PaypalResult.setAvs(java.lang.String)", "com.sapienter.jbilling.server.payment.tasks.paypal.dto.Payment.getCurrencyCode()", "com.sapienter.jbilling.server.payment.tasks.paypal.dto.PaypalResult.setTransactionId(java.lang.String)", "com.sapienter.jbilling.server.payment.tasks.paypal.dto.CreditCard.getCvv2()"],
    "com.sapienter.jbilling.server.process.db.ProcessRunTotalPmDAS.getByMethod(Integer, ProcessRunTotalDTO)": ["createAlias(java.lang.String,java.lang.String)", "org.hibernate.criterion.Restrictions.eq(java.lang.String,java.lang.Integer)", "getSession()", "add()", "createCriteria(java.lang.Class)", "org.hibernate.Criteria.uniqueResult()", "org.hibernate.criterion.Restrictions.eq(java.lang.String,int)", "com.sapienter.jbilling.server.process.db.ProcessRunTotalDTO.getId()", "setComment(java.lang.String)"],
    "com.sapienter.jbilling.server.invoice.InvoiceBL.getInvoicesByCreateDateArray(Integer, Date, Date)": ["java.sql.ResultSet.next()", "java.sql.ResultSet.getInt(int)", "java.util.List.size()", "java.util.List.add(java.lang.Object)", "com.sapienter.jbilling.server.invoice.InvoiceBL.getInvoicesByCreateDate(java.lang.Integer,java.util.Date,java.util.Date)", "java.util.List.toArray(java.lang.Object[])"],
    "com.sapienter.jbilling.server.user.UserWS.setAutoRecharge(BigDecimal)": ["java.math.BigDecimal.toString()"],
    "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.hasSubAccounts()": ["com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getInvoiceLines()", "com.sapienter.jbilling.server.invoice.db.InvoiceLineTypeDTO.getId()", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO.getInvoiceLineType()"],
    "com.sapienter.jbilling.server.user.AchBL.getUser(AchDTO)": ["java.util.Iterator.next()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getBaseUser()", "com.sapienter.jbilling.server.user.db.AchDTO.getPayments()", "com.sapienter.jbilling.server.user.db.AchDTO.getBaseUser()", "java.util.Set.iterator()", "java.util.Set.isEmpty()"],
    "com.sapienter.jbilling.server.user.db.AchDTO.getOldDTO()": ["com.sapienter.jbilling.server.user.db.AchDTO.getBankName()", "com.sapienter.jbilling.server.user.db.AchDTO.getAbaRouting()", "com.sapienter.jbilling.server.user.db.AchDTO.getAccountName()", "com.sapienter.jbilling.server.user.db.AchDTO.getAccountType()", "com.sapienter.jbilling.server.user.db.AchDTO.getGatewayKey()", "com.sapienter.jbilling.server.user.db.AchDTO.getId()", "com.sapienter.jbilling.server.user.db.AchDTO.getBankAccount()"],
    "com.sapienter.jbilling.server.user.UserSessionBean.removeACH(Integer, Integer)": ["java.util.Set.toArray()", "com.sapienter.jbilling.server.user.db.UserDTO.getAchs()", "com.sapienter.jbilling.server.user.UserBL.getEntity()", "java.util.Set.size()", "com.sapienter.jbilling.server.user.db.AchDTO.getId()", "com.sapienter.jbilling.server.user.AchBL.delete(java.lang.Integer)"],
    "com.sapienter.jbilling.common.SystemProperties.getJBillingHome()": ["java.lang.System.getenv(java.lang.String)", "java.lang.System.getProperty(java.lang.String)"],
    "com.sapienter.jbilling.server.process.AgeingBL.validate(AgeingDTOEx[])": ["com.sapienter.jbilling.server.process.AgeingDTOEx.getInUse()", "com.sapienter.jbilling.common.SessionInternalError.setErrorMessages(java.lang.String[])", "com.sapienter.jbilling.server.process.AgeingDTOEx.setInUse(java.lang.Boolean)", "com.sapienter.jbilling.server.process.db.AgeingEntityStepDTO.getDays()", "java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.process.AgeingDTOEx.getStatusId()", "com.sapienter.jbilling.server.process.AgeingDTOEx.getWelcomeMessage()", "com.sapienter.jbilling.server.process.db.AgeingEntityStepDTO.setDays(int)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.updateItemCategory(ItemTypeWS)": ["com.sapienter.jbilling.server.item.ItemTypeBL.update(java.lang.Integer,com.sapienter.jbilling.server.item.db.ItemTypeDTO)", "com.sapienter.jbilling.server.item.db.ItemTypeDTO.setDescription(java.lang.String)", "com.sapienter.jbilling.server.item.db.ItemTypeDTO.setOrderLineTypeId(int)", "com.sapienter.jbilling.server.user.UserBL.getEntity()", "com.sapienter.jbilling.server.item.ItemTypeWS.getDescription()", "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerId()", "com.sapienter.jbilling.server.user.db.UserDTO.getUserId()", "com.sapienter.jbilling.server.item.ItemTypeWS.getId()", "com.sapienter.jbilling.server.item.ItemTypeWS.getOrderLineTypeId()"],
    "com.sapienter.jbilling.server.invoice.InvoiceBL.setPrevious()": ["java.sql.ResultSet.wasNull()", "java.sql.ResultSet.next()", "java.sql.Connection.close()", "javax.sql.RowSet.setInt(int,int)", "com.sapienter.jbilling.server.invoice.InvoiceBL.set(java.lang.Integer)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getId()", "java.sql.ResultSet.getInt(int)", "com.sapienter.jbilling.server.list.ResultList.execute()", "com.sapienter.jbilling.server.list.ResultList.prepareStatement(java.lang.String)", "java.lang.Integer.intValue()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getBaseUser()", "com.sapienter.jbilling.server.user.db.UserDTO.getUserId()"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getUserContactsWS(Integer)": ["com.sapienter.jbilling.server.user.ContactBL.getAll(java.lang.Integer)", "java.util.List.size()", "java.util.List.get(int)"],
    "com.sapienter.jbilling.server.util.converter.BigDecimalConverter.convert(Class, Object)": ["java.math.BigDecimal.toString()", "java.math.BigDecimal.compareTo(java.math.BigDecimal)"],
    "com.sapienter.jbilling.server.process.OrderProcessIdComparator.compare(Object, Object)": ["com.sapienter.jbilling.server.order.db.OrderProcessDTO.getId()"],
    "com.sapienter.jbilling.server.order.OrderBL.createAsWithLine(OrderDTO, Integer, BigDecimal)": ["com.sapienter.jbilling.server.order.db.OrderDTO.setOrderStatus(com.sapienter.jbilling.server.order.db.OrderStatusDTO)", "com.sapienter.jbilling.server.order.db.OrderPeriodDTO.getId()", "com.sapienter.jbilling.server.order.OrderLineBL.addItem(com.sapienter.jbilling.server.order.db.OrderDTO,java.lang.Integer,java.math.BigDecimal)", "java.util.List.clear()", "com.sapienter.jbilling.server.order.db.OrderDTO.getLines()", "com.sapienter.jbilling.server.order.db.OrderDTO.setId(java.lang.Integer)", "com.sapienter.jbilling.server.order.db.OrderDTO.setVersionNum(java.lang.Integer)", "com.sapienter.jbilling.server.order.db.OrderDTO.getOrderPeriod()", "com.sapienter.jbilling.server.order.db.OrderDTO.setOrderPeriodId(java.lang.Integer)", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)", "com.sapienter.jbilling.server.util.db.AbstractGenericStatusDAS.find(java.io.Serializable)"],
    "com.sapienter.jbilling.server.util.api.validation.APIValidator.validateObjects(List, Class[])": ["com.sapienter.jbilling.server.util.api.validation.APIValidator.getValidator()", "java.util.List.isEmpty()", "com.sapienter.jbilling.server.util.api.validation.APIValidator.getObjectName(java.lang.Object)", "javax.validation.Validator.validate(java.lang.Object,java.lang.Class[])", "javax.validation.Validator.validate(java.lang.Object)", "java.util.List.addAll(java.util.Collection)", "java.util.List.size()", "com.sapienter.jbilling.server.util.api.validation.APIValidator.getErrorMessages(java.util.Set,java.lang.String)", "java.util.List.toArray(java.lang.Object[])"],
    "com.sapienter.jbilling.tools.UploadInvoices.readInvoiceLines(NewInvoiceDTO, String)": ["java.lang.String.split(java.lang.String)", "java.io.BufferedReader.close()", "java.util.List.add(java.lang.Object)", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO.setDescription(java.lang.String)", "com.sapienter.jbilling.tools.UploadInvoices.readLine(java.io.BufferedReader)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "java.io.BufferedReader.readLine()", "java.lang.Integer.valueOf(java.lang.String)", "java.lang.String.trim()", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO.setPrice(java.math.BigDecimal)", "java.lang.String.equals(java.lang.Object)", "com.sapienter.jbilling.server.invoice.NewInvoiceDTO.getResultLines()", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO.setAmount(java.math.BigDecimal)", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO.setQuantity(java.math.BigDecimal)", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO.setItem(com.sapienter.jbilling.server.item.db.ItemDTO)", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO.setInvoiceLineType(com.sapienter.jbilling.server.invoice.db.InvoiceLineTypeDTO)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getPublicNumber()", "java.lang.String.length()"],
    "com.sapienter.jbilling.server.order.CurrentOrder.getCurrent()": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.order.db.OrderDTO.getId()", "com.sapienter.jbilling.server.order.db.OrderDTO.getStatusId()", "java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.order.CurrentOrder.create(java.util.Date,java.lang.Integer,java.lang.Integer)", "org.springmodules.cache.provider.CacheProviderFacade.putInCache(java.lang.String,org.springmodules.cache.CachingModel,java.lang.Integer)", "com.sapienter.jbilling.server.user.db.UserDTO.getCustomer()", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.user.UserBL.getEntity()", "com.sapienter.jbilling.server.order.OrderBL.getEntity()", "java.lang.Integer.toString()", "com.sapienter.jbilling.server.order.db.OrderDAS.findOneTimersByDate(java.lang.Integer,java.util.Date)", "com.sapienter.jbilling.server.order.db.OrderDTO.getCurrencyId()", "com.sapienter.jbilling.server.order.CurrentOrder.calculateDate(int)", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "org.springmodules.cache.provider.CacheProviderFacade.getFromCache(java.lang.String,org.springmodules.cache.CachingModel)", "com.sapienter.jbilling.server.user.db.UserDTO.getCompany()", "java.util.List.size()", "com.sapienter.jbilling.common.Util.truncateDate(java.util.Date)", "com.sapienter.jbilling.server.order.OrderBL.set(java.lang.Integer)", "com.sapienter.jbilling.server.util.audit.EventLogger.auditBySystem(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.util.Date)", "com.sapienter.jbilling.server.order.db.OrderDTO.getBaseUserByUserId()", "org.apache.log4j.Category.error(java.lang.Object)", "com.sapienter.jbilling.server.user.db.CustomerDTO.getCurrentOrderId()"],
    "com.sapienter.jbilling.server.item.db.ItemDTO.getFieldValues()": ["com.sapienter.jbilling.server.item.db.ItemTypeDTO.getDescription()", "java.util.Iterator.next()", "java.lang.StringBuilder.append(java.lang.Object)", "java.lang.StringBuilder.append(java.lang.String)", "com.sapienter.jbilling.server.item.db.ItemPriceDTO.getPrice()", "java.lang.StringBuilder.toString()", "java.util.Iterator.hasNext()", "com.sapienter.jbilling.server.item.db.ItemPriceDTO.getCurrency()", "java.util.Set.iterator()", "com.sapienter.jbilling.server.util.db.CurrencyDTO.getCode()"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentSageTask.formatAmount(BigDecimal)": ["java.math.BigDecimal.setScale(int,java.math.RoundingMode)", "java.math.BigDecimal.abs()", "java.math.BigDecimal.toPlainString()"],
    "com.sapienter.jbilling.server.payment.PaymentAuthorizationBL.create(PaymentAuthorizationDTO, Integer)": ["com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getProcessor()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.setTransactionId(java.lang.String)", "com.sapienter.jbilling.common.Util.truncateString(java.lang.String,int)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.setPayment(com.sapienter.jbilling.server.payment.db.PaymentDTO)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getCardCode()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getResponseMessage()", "com.sapienter.jbilling.server.payment.PaymentBL.getEntity()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getAvs()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.setAvs(java.lang.String)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.setCode2(java.lang.String)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.setId(int)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getCode2()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getApprovalCode()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getCode3()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.setApprovalCode(java.lang.String)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getMD5()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getTransactionId()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getCode1()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.setResponseMessage(java.lang.String)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.setCode3(java.lang.String)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.setCardCode(java.lang.String)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.setMD5(java.lang.String)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getId()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDAS.create(java.lang.String,java.lang.String)"],
    "com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.buildUpdateCustomerProfileRequest(CustomerProfileData)": ["com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.getMerchantAuthenticationXML()", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.getEmail()", "com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.endTag(java.lang.StringBuffer,java.lang.String)", "java.lang.StringBuffer.toString()", "com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.buildTag(java.lang.StringBuffer,java.lang.String,java.lang.String)", "com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.beginTag(java.lang.StringBuffer,java.lang.String)", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.getCustomerProfileId()", "java.lang.StringBuffer.append(java.lang.String)"],
    "com.sapienter.jbilling.server.process.task.BasicAgeingTask.getNextAgeingStep(Set, Integer)": ["java.lang.Integer.compareTo(java.lang.Integer)", "com.sapienter.jbilling.server.util.db.AbstractGenericStatus.getId()", "com.sapienter.jbilling.server.process.db.AgeingEntityStepDTO.getUserStatus()"],
    "com.sapienter.jbilling.server.process.task.BasicAgeingTask.isAgeingRequired(UserDTO, AgeingEntityStepDTO, Date)": ["org.apache.log4j.Category.debug(java.lang.Object)", "java.util.Calendar.setTime(java.util.Date)", "com.sapienter.jbilling.server.process.db.AgeingEntityStepDTO.getDays()", "java.util.Date.before(java.util.Date)", "java.util.Date.equals(java.lang.Object)", "java.util.Calendar.add(int,int)", "java.util.Calendar.clear()", "com.sapienter.jbilling.server.user.db.UserDTO.getLastStatusChange()", "com.sapienter.jbilling.server.user.db.UserDTO.getCreateDatetime()", "java.util.Calendar.getTime()"],
    "com.sapienter.jbilling.server.item.tasks.SubscriptionResult.toString()": ["com.sapienter.jbilling.server.item.tasks.SubscriptionResult.isSubscribed()"],
    "com.sapienter.jbilling.server.item.db.ItemDTO.hasType(Integer)": ["com.sapienter.jbilling.server.item.db.ItemDTO.getTypes()", "java.util.List.contains(java.lang.Object)", "java.util.Arrays.asList(java.lang.Object[])"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayTask.confirmPreAuth(PaymentAuthorizationDTO, PaymentDTOEx)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getProcessor()", "org.apache.log4j.Category.warn(java.lang.Object)", "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask.isApplicable(com.sapienter.jbilling.server.payment.PaymentDTOEx)", "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayTask.getProcessorName()", "java.lang.String.equals(java.lang.Object)", "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask.doProcess(com.sapienter.jbilling.server.payment.PaymentDTOEx,com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask$SvcType,com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getId()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getCreditCard()", "org.apache.log4j.Category.error(java.lang.Object)", "com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase$Result.shouldCallOtherProcessors()"],
    "com.sapienter.jbilling.server.payment.PaymentBL.unLinkFromInvoice(Integer)": ["com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getPaymentMap()", "java.util.Collection.remove(java.lang.Object)", "java.util.Iterator.next()", "com.sapienter.jbilling.server.payment.db.PaymentInvoiceMapDTO.getPayment()", "com.sapienter.jbilling.server.payment.PaymentBL.removeInvoiceLink(java.lang.Integer)", "java.util.Iterator.hasNext()", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getId()", "java.util.Collection.iterator()", "com.sapienter.jbilling.server.payment.db.PaymentInvoiceMapDTO.getId()"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getInvoicesByDate(String, String)": ["com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerCompanyId()", "com.sapienter.jbilling.server.invoice.InvoiceBL.getInvoicesByCreateDateArray(java.lang.Integer,java.util.Date,java.util.Date)", "com.sapienter.jbilling.common.Util.parseDate(java.lang.String)", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getUserTransitionsAfterId(Integer)": ["com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerCompanyId()", "org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.user.UserTransitionResponseWS.getId()", "com.sapienter.jbilling.server.util.audit.EventLogger.audit(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.util.Date)", "com.sapienter.jbilling.server.util.audit.EventLogger.getInstance()", "com.sapienter.jbilling.server.user.UserBL.getUserTransitionsById(java.lang.Integer,java.lang.Integer,java.util.Date)", "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerId()", "java.lang.Integer.toString()"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentMethodRouterTask.initializeParamters(PluggableTaskDTO)": ["org.apache.log4j.Category.debug(java.lang.Object)", "java.util.Map.get(java.lang.Object)", "com.sapienter.jbilling.server.pluggableTask.PluggableTask.initializeParamters(com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDTO)"],
    "com.sapienter.jbilling.server.order.UsageBL.getPeriodStart()": ["com.sapienter.jbilling.server.process.PeriodOfTime.getStart()", "com.sapienter.jbilling.server.order.UsagePeriod.getBillingPeriods()", "java.util.List.get(int)"],
    "com.sapienter.jbilling.server.order.OrderLineWS.setQuantity(Integer)": ["com.sapienter.jbilling.server.order.OrderLineWS.setQuantity(java.math.BigDecimal)"],
    "com.sapienter.jbilling.server.order.db.OrderLineDTO.getItemId()": ["com.sapienter.jbilling.server.order.db.OrderLineDTO.getItem()", "com.sapienter.jbilling.server.item.db.ItemDTO.getId()"],
    "com.sapienter.jbilling.server.process.task.ScpUploadTask.getParameter(String)": ["java.util.Map.get(java.lang.Object)", "java.lang.String.trim()", "java.lang.String.equals(java.lang.Object)"],
    "com.sapienter.jbilling.server.user.RoleBL.set(Integer)": ["com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.createUser(UserWS)": ["com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerCompanyId()", "com.sapienter.jbilling.server.user.UserWS.getCreditCard()", "java.util.Set.add(java.lang.Object)", "com.sapienter.jbilling.server.user.UserWS.setUserId(int)", "com.sapienter.jbilling.server.user.db.AchDTO.setBaseUser(com.sapienter.jbilling.server.user.db.UserDTO)", "com.sapienter.jbilling.server.user.db.AchDTO.setId(int)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getBaseUsers()", "com.sapienter.jbilling.server.user.UserBL.getEntity()", "com.sapienter.jbilling.server.user.CreditCardBL.create(com.sapienter.jbilling.server.user.db.CreditCardDTO)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.user.AchBL.create(com.sapienter.jbilling.server.user.db.AchDTO)", "com.sapienter.jbilling.server.user.UserBL.create(com.sapienter.jbilling.server.user.UserDTOEx)", "com.sapienter.jbilling.server.user.UserBL.exists(java.lang.String,java.lang.Integer)", "com.sapienter.jbilling.server.user.ContactWS.setId(java.lang.Integer)", "com.sapienter.jbilling.server.user.CreditCardBL.getEntity()", "com.sapienter.jbilling.server.user.UserWS.getAch()", "com.sapienter.jbilling.server.user.db.UserDTO.getCreditCards()", "com.sapienter.jbilling.server.user.UserWS.getContact()", "com.sapienter.jbilling.server.user.ContactBL.createPrimaryForUser(com.sapienter.jbilling.server.user.ContactDTOEx,java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.user.UserWS.getUserName()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.setId(int)"],
    "com.sapienter.jbilling.server.order.OrderLineBL.addItem(OrderDTO, Integer, BigDecimal, boolean)": ["com.sapienter.jbilling.server.order.db.OrderDTO.getCurrencyId()", "com.sapienter.jbilling.server.user.UserBL.getLanguage()", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.order.OrderLineBL.addItem(java.lang.Integer,java.math.BigDecimal,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,com.sapienter.jbilling.server.order.db.OrderDTO,com.sapienter.jbilling.server.order.db.OrderLineDTO,boolean)", "com.sapienter.jbilling.server.user.db.UserDTO.getEntity()", "com.sapienter.jbilling.server.user.UserBL.getEntity()", "com.sapienter.jbilling.server.order.db.OrderDTO.getUserId()"],
    "com.sapienter.jbilling.client.process.JobScheduler.start()": ["org.quartz.Scheduler.start()", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)", "com.sapienter.jbilling.client.process.JobScheduler.getScheduler()"],
    "com.sapienter.jbilling.server.user.db.CreditCardDTO.isNumberObsucred()": ["com.sapienter.jbilling.server.user.db.CreditCardDTO.getNumber()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getRawNumber()", "java.lang.String.contains(java.lang.CharSequence)"],
    "com.sapienter.jbilling.server.mediation.task.StatelessJDBCReader.getSqlQueryString()": ["com.sapienter.jbilling.server.mediation.task.AbstractJDBCReader.getTableName()", "org.apache.log4j.Category.debug(java.lang.Object)", "java.util.Iterator.next()", "java.lang.StringBuilder.append(java.lang.Object)", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription.getName()", "java.lang.StringBuilder.append(java.lang.String)", "com.sapienter.jbilling.server.mediation.task.AbstractJDBCReader.getKeyColumns()", "java.lang.StringBuilder.toString()", "java.util.Iterator.hasNext()", "com.sapienter.jbilling.server.pluggableTask.PluggableTask.getParameter(java.lang.String,java.lang.String)", "java.util.List.size()", "java.util.List.iterator()", "com.sapienter.jbilling.server.mediation.task.StatelessJDBCReader.getLastId()", "java.util.List.get(int)", "com.sapienter.jbilling.server.mediation.task.StatelessJDBCReader.getMarkMethod()"],
    "com.sapienter.jbilling.server.user.contact.db.ContactFieldDTO.getTypeId()": ["com.sapienter.jbilling.server.user.contact.db.ContactFieldDTO.getType()", "com.sapienter.jbilling.server.user.contact.db.ContactFieldTypeDTO.getId()"],
    "com.sapienter.jbilling.server.pluggableTask.PaymentACHCommerceTask.getChargeData(PaymentDTOEx)": ["java.lang.String.substring(int)", "java.lang.String.substring(int,int)", "java.math.BigDecimal.toString()", "com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase.ensureGetParameter(java.lang.String)", "com.sapienter.jbilling.server.user.ContactBL.set(java.lang.Integer)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getOrganizationName()", "com.sapienter.jbilling.server.user.ContactBL.getEntity()", "com.sapienter.jbilling.server.user.db.AchDTO.getAbaRouting()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getId()", "com.sapienter.jbilling.server.user.db.AchDTO.getBankAccount()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getAmount()", "java.lang.String.indexOf(int)", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getAch()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getUserId()", "com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase.getOptionalParameter(java.lang.String,java.lang.String)"],
    "com.sapienter.jbilling.common.JBCryptoImpl.encrypt(String)": ["com.sapienter.jbilling.server.util.Util.binaryToString(byte[])", "java.lang.String.getBytes(java.nio.charset.Charset)", "javax.crypto.Cipher.doFinal(byte[])", "com.sapienter.jbilling.common.JBCryptoImpl.getCipher()", "javax.crypto.Cipher.init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)", "org.apache.commons.codec.binary.Base64.encodeBase64(byte[])"],
    "com.sapienter.jbilling.server.payment.PaymentWS.setBalanceAsDecimal(BigDecimal)": ["com.sapienter.jbilling.server.payment.PaymentWS.setBalance(java.math.BigDecimal)"],
    "com.sapienter.jbilling.server.util.DTOFactory.getUserDTO(String, Integer)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.util.DTOFactory.getUserDTOEx(com.sapienter.jbilling.server.user.db.UserDTO)", "com.sapienter.jbilling.server.user.db.UserDAS.findByUserName(java.lang.String,java.lang.Integer)"],
    "com.sapienter.jbilling.server.order.db.OrderDTO.getNumberOfLines()": ["com.sapienter.jbilling.server.order.db.OrderLineDTO.getDeleted()", "com.sapienter.jbilling.server.order.db.OrderDTO.getLines()"],
    "com.sapienter.jbilling.server.invoice.InvoiceBL.sendReminders(Date)": ["javax.sql.RowSet.setInt(int,int)", "java.sql.ResultSet.getInt(int)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getCreateDatetime()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.setLastReminder(java.util.Date)", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "java.util.Iterator.hasNext()", "com.sapienter.jbilling.server.list.ResultList.prepareStatement(java.lang.String)", "java.lang.Integer.intValue()", "com.sapienter.jbilling.server.util.PreferenceBL.getInt()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getDueDate()", "java.lang.Math.round(float)", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "java.util.Calendar.getTimeInMillis()", "com.sapienter.jbilling.server.util.PreferenceBL.set(java.lang.Integer,java.lang.Integer)", "javax.sql.RowSet.setDate(int,java.sql.Date)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getTotal()", "java.util.List.iterator()", "com.sapienter.jbilling.server.util.db.CurrencyDTO.getId()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getBaseUser()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getPublicNumber()", "java.sql.ResultSet.next()", "java.util.Iterator.next()", "com.sapienter.jbilling.server.invoice.InvoiceBL.set(java.lang.Integer)", "java.util.GregorianCalendar.add(int,int)", "org.apache.log4j.Category.warn(java.lang.Object)", "com.sapienter.jbilling.server.list.ResultList.execute()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getCurrency()", "com.sapienter.jbilling.server.notification.INotificationSessionBean.notify(com.sapienter.jbilling.server.user.db.UserDTO,com.sapienter.jbilling.server.notification.MessageDTO)", "com.sapienter.jbilling.server.notification.NotificationBL.getInvoiceRemainderMessage(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.util.Date,java.lang.String,java.math.BigDecimal,java.util.Date,java.lang.Integer)", "com.sapienter.jbilling.server.user.db.CompanyDAS.findEntities()", "java.util.Calendar.setTime(java.util.Date)", "java.sql.Connection.close()", "java.util.Date.getTime()", "com.sapienter.jbilling.server.user.db.UserDTO.getUserId()"],
    "com.sapienter.jbilling.server.invoice.NewInvoiceDTO.addOrder(OrderDTO, Date, Date, List)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.order.db.OrderDTO.getId()", "java.util.List.add(java.lang.Object)", "java.util.Date.after(java.util.Date)", "org.apache.log4j.Logger.getLogger(java.lang.Class)"],
    "com.sapienter.jbilling.server.system.event.AsynchronousEventProcessor.process(Event)": ["com.sapienter.jbilling.server.system.event.AsynchronousEventProcessor.getEntityId()", "javax.jms.Session.createMapMessage()", "javax.jms.MapMessage.setIntProperty(java.lang.String,int)", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "com.sapienter.jbilling.server.system.event.AsynchronousEventProcessor.doProcess(com.sapienter.jbilling.server.system.event.Event)", "com.sapienter.jbilling.server.system.event.AsynchronousEventProcessor.getDestination()", "org.springframework.jms.core.JmsTemplate.send(javax.jms.Destination,com.sapienter.jbilling.server.system.event.AsynchronousEventProcessor$1)"],
    "com.sapienter.jbilling.server.payment.blacklist.PhoneFilter.checkPayment(PaymentDTOEx)": ["com.sapienter.jbilling.server.payment.PaymentDTOEx.getUserId()", "com.sapienter.jbilling.server.payment.blacklist.PhoneFilter.checkUser(java.lang.Integer)"],
    "com.sapienter.jbilling.server.process.db.ProcessRunTotalPmDAS.create(BigDecimal)": ["com.sapienter.jbilling.server.process.db.ProcessRunTotalPmDTO.setTotal(java.math.BigDecimal)", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)"],
    "com.sapienter.jbilling.server.order.OrderLineBL.addItem(OrderDTO, Integer, Integer, boolean)": ["com.sapienter.jbilling.server.order.OrderLineBL.addItem(com.sapienter.jbilling.server.order.db.OrderDTO,java.lang.Integer,java.math.BigDecimal,boolean)"],
    "com.sapienter.jbilling.server.process.BillingProcessBL.createOrderProcess(NewInvoiceDTO, InvoiceDTO, BillingProcessDTO, Integer)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.process.BillingProcessBL.updateStatusFinished(com.sapienter.jbilling.server.order.db.OrderDTO,java.util.Date,java.util.Date)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getId()", "com.sapienter.jbilling.server.order.db.OrderProcessDTO.setPurchaseOrder(com.sapienter.jbilling.server.order.db.OrderDTO)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "java.lang.Integer.intValue()", "com.sapienter.jbilling.server.invoice.NewInvoiceDTO.getOrders()", "java.util.List.get(int)", "com.sapienter.jbilling.server.order.db.OrderDTO.getId()", "com.sapienter.jbilling.server.process.db.BillingProcessDTO.getId()", "com.sapienter.jbilling.server.order.db.OrderProcessDTO.setPeriodStart(java.util.Date)", "com.sapienter.jbilling.server.process.PeriodOfTime.getStart()", "com.sapienter.jbilling.server.order.db.OrderProcessDTO.setIsReview(int)", "com.sapienter.jbilling.server.order.db.OrderProcessDTO.setBillingProcess(com.sapienter.jbilling.server.process.db.BillingProcessDTO)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getIsReview()", "com.sapienter.jbilling.server.order.db.OrderProcessDTO.setPeriodEnd(java.util.Date)", "com.sapienter.jbilling.server.order.db.OrderProcessDTO.setOrigin(java.lang.Integer)", "com.sapienter.jbilling.server.order.db.OrderProcessDTO.setPeriodsIncluded(java.lang.Integer)", "com.sapienter.jbilling.server.order.db.OrderProcessDTO.getId()", "com.sapienter.jbilling.server.process.BillingProcessBL.updateNextBillableDay(com.sapienter.jbilling.server.order.db.OrderDTO,java.util.Date)", "com.sapienter.jbilling.server.invoice.NewInvoiceDTO.getPeriods()", "java.util.List.size()", "com.sapienter.jbilling.server.process.PeriodOfTime.getEnd()", "com.sapienter.jbilling.server.order.db.OrderProcessDTO.setInvoice(com.sapienter.jbilling.server.invoice.db.InvoiceDTO)", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)"],
    "com.sapienter.jbilling.server.order.OrderBL.getOrdersByProcessId(Integer)": ["java.sql.Connection.close()", "javax.sql.RowSet.setInt(int,int)", "com.sapienter.jbilling.server.list.ResultList.execute()", "com.sapienter.jbilling.server.list.ResultList.prepareStatement(java.lang.String)", "java.lang.Integer.intValue()"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentsGatewayTask.getChargeData(PaymentDTOEx, int, boolean)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getSecurityCode()", "java.math.BigDecimal.toString()", "java.util.Calendar.getInstance()", "com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase.ensureGetParameter(java.lang.String)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getType()", "com.sapienter.jbilling.server.payment.tasks.PaymentsGatewayTask.getCCType(java.lang.Integer)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getCcExpiry()", "com.sapienter.jbilling.server.user.ContactBL.set(java.lang.Integer)", "com.sapienter.jbilling.server.user.ContactBL.getEntity()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getAmount()", "com.sapienter.jbilling.server.payment.tasks.PaymentsGatewayTask.getTransType(com.sapienter.jbilling.server.payment.PaymentDTOEx,int,boolean)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getEmail()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getAch()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getNumber()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getUserId()", "java.math.BigDecimal.abs()", "java.lang.String.equals(java.lang.Object)", "com.sapienter.jbilling.server.user.db.AchDTO.getAccountType()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getCreditCard()", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getLastName()", "java.util.Calendar.get(int)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getName()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getPhoneNumber()", "com.sapienter.jbilling.server.user.db.AchDTO.getAbaRouting()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getCheque()", "com.sapienter.jbilling.server.user.db.AchDTO.getBankAccount()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getStateProvince()", "java.util.Calendar.setTime(java.util.Date)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getCity()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getCountryCode()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getFirstName()", "com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase.getOptionalParameter(java.lang.String,java.lang.String)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getAddress2()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getPostalCode()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getAddress1()", "org.apache.log4j.Category.error(java.lang.Object)", "com.sapienter.jbilling.server.payment.db.PaymentInfoChequeDTO.getNumber()"],
    "com.sapienter.jbilling.server.process.db.ProcessRunTotalDAS.create(ProcessRunDTO, BigDecimal, BigDecimal, BigDecimal, Integer)": ["com.sapienter.jbilling.server.process.db.ProcessRunDTO.getProcessRunTotals()", "com.sapienter.jbilling.server.process.db.ProcessRunTotalDTO.setTotalPaid(java.math.BigDecimal)", "java.util.Set.add(java.lang.Object)", "com.sapienter.jbilling.server.process.db.ProcessRunTotalDTO.setProcessRun(com.sapienter.jbilling.server.process.db.ProcessRunDTO)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.process.db.ProcessRunTotalDTO.setTotalInvoiced(java.math.BigDecimal)", "com.sapienter.jbilling.server.process.db.ProcessRunTotalDTO.setTotalNotPaid(java.math.BigDecimal)", "com.sapienter.jbilling.server.process.db.ProcessRunTotalDTO.setCurrency(com.sapienter.jbilling.server.util.db.CurrencyDTO)", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)"],
    "com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.endTag(StringBuffer, String)": ["java.lang.String.format(java.lang.String,java.lang.Object[])", "java.lang.StringBuffer.append(java.lang.String)"],
    "com.sapienter.jbilling.server.pluggableTask.BasicLineTotalTask.isItemExcluded(ItemDTO, Set)": ["com.sapienter.jbilling.server.item.db.ItemDTO.getItemTypes()", "com.sapienter.jbilling.server.item.db.ItemTypeDTO.getId()"],
    "com.sapienter.jbilling.server.payment.event.AbstractPaymentEvent.getPaymentProcessor()": ["com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getProcessor()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getAuthorization()"],
    "com.sapienter.jbilling.server.process.db.ProcessRunTotalDAS.getByCurrency(ProcessRunDTO, Integer)": ["createAlias(java.lang.String,java.lang.String)", "org.hibernate.criterion.Restrictions.eq(java.lang.String,java.lang.Integer)", "com.sapienter.jbilling.server.process.db.ProcessRunDTO.getId()", "getSession()", "add()", "createCriteria(java.lang.Class)", "org.hibernate.Criteria.uniqueResult()", "org.hibernate.criterion.Restrictions.eq(java.lang.String,int)", "setComment(java.lang.String)"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentSageTask.confirmPreAuth(PaymentAuthorizationDTO, PaymentDTOEx)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getProcessor()", "org.apache.log4j.Category.warn(java.lang.Object)", "java.lang.String.equals(java.lang.Object)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getId()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getCreditCard()", "org.apache.log4j.Category.error(java.lang.Object)", "com.sapienter.jbilling.server.payment.tasks.PaymentSageTask.isApplicable(com.sapienter.jbilling.server.payment.PaymentDTOEx)", "com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase$Result.shouldCallOtherProcessors()", "com.sapienter.jbilling.server.payment.tasks.PaymentSageTask.doProcess(com.sapienter.jbilling.server.payment.PaymentDTOEx,com.sapienter.jbilling.server.payment.tasks.PaymentSageTask$Transaction,com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO)"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentSageTask.fillData(NVPList, PaymentDTOEx, Transaction)": ["com.sapienter.jbilling.server.user.db.CreditCardDTO.getSecurityCode()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getCcExpiry()", "com.sapienter.jbilling.server.user.ContactBL.set(java.lang.Integer)", "com.sapienter.jbilling.server.user.ContactBL.getEntity()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getAmount()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getAch()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getNumber()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getUserId()", "com.sapienter.jbilling.server.user.db.AchDTO.getAccountType()", "java.text.DateFormat.format(java.util.Date)", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getCreditCard()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getLastName()", "java.lang.String.valueOf(java.lang.Object)", "com.sapienter.jbilling.server.payment.tasks.PaymentSageTask$NVPList.add(java.lang.String,java.lang.String)", "com.sapienter.jbilling.server.payment.tasks.PaymentSageTask.isAch(com.sapienter.jbilling.server.payment.PaymentDTOEx)", "com.sapienter.jbilling.server.payment.tasks.PaymentSageTask$Transaction.getCode()", "com.sapienter.jbilling.server.user.db.AchDTO.getAbaRouting()", "com.sapienter.jbilling.server.user.db.AchDTO.getBankAccount()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getStateProvince()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getCity()", "com.sapienter.jbilling.server.payment.tasks.PaymentSageTask.formatAmount(java.math.BigDecimal)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getCountryCode()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getFirstName()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getPostalCode()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getAddress1()"],
    "com.sapienter.jbilling.server.provisioning.event.SubscriptionInactiveEvent.toString()": ["com.sapienter.jbilling.server.provisioning.event.SubscriptionInactiveEvent.getName()"],
    "com.sapienter.jbilling.client.authentication.StaticAuthenticationFilter.isAuthenticationRequired(String)": ["equals(java.lang.String)", "org.springframework.security.core.Authentication.isAuthenticated()", "org.springframework.security.core.Authentication.getName()", "org.springframework.security.core.context.SecurityContextHolder.getContext()", "getAuthentication()"],
    "com.sapienter.jbilling.server.invoice.db.InvoiceDAS.findTotalBalanceByUser(Integer)": ["org.hibernate.criterion.Restrictions.ne(java.lang.String,java.lang.Integer)", "com.sapienter.jbilling.server.invoice.db.InvoiceDAS.addUserCriteria(org.hibernate.Criteria,java.lang.Integer)", "org.hibernate.criterion.Projections.sum(java.lang.String)", "getSession()", "add()", "org.hibernate.Criteria.createAlias(java.lang.String,java.lang.String)", "org.hibernate.Criteria.add()", "createCriteria(java.lang.Class)", "org.hibernate.Criteria.setComment(java.lang.String)", "org.hibernate.Criteria.uniqueResult()", "org.hibernate.criterion.Restrictions.eq(java.lang.String,int)", "org.hibernate.Criteria.setProjection()"],
    "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskParameterDTO.expandValue()": ["java.lang.Integer.valueOf(java.lang.String)", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskParameterDTO.setStrValue(java.lang.String)", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskParameterDTO.setFloatValue(java.math.BigDecimal)", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskParameterDTO.setIntValue(java.lang.Integer)", "java.lang.Integer.intValue()"],
    "com.sapienter.jbilling.server.item.db.ItemDAS.findItemsByInternalNumber(String)": ["org.hibernate.Criteria.list()", "getSession()", "add()", "org.hibernate.criterion.Restrictions.eq(java.lang.String,java.lang.String)", "createCriteria(java.lang.Class)", "com.sapienter.jbilling.server.util.db.AbstractDAS.getPersistentClass()"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentPaypalExternalTask.doPaymentWithStoredCreditCard(PaymentDTOEx, PaymentAction)": ["com.sapienter.jbilling.server.payment.tasks.PaymentPaypalExternalTask.formatDollarAmount(java.math.BigDecimal)", "com.sapienter.jbilling.server.payment.tasks.paypal.PaypalApi.doReferenceTransaction(java.lang.String,com.sapienter.jbilling.server.payment.tasks.paypal.dto.PaymentAction,com.sapienter.jbilling.server.payment.tasks.paypal.dto.Payment)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getTransactionId()", "com.sapienter.jbilling.server.payment.tasks.PaymentPaypalExternalTask.buildPaymentAuthorization(com.sapienter.jbilling.server.payment.tasks.paypal.dto.PaypalResult)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setPaymentResult(com.sapienter.jbilling.server.payment.db.PaymentResultDTO)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getAuthorization()", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)", "com.sapienter.jbilling.server.payment.tasks.PaymentPaypalExternalTask.getApi()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getAmount()", "com.sapienter.jbilling.server.payment.tasks.PaymentPaypalExternalTask.storePaypalResult(com.sapienter.jbilling.server.payment.tasks.paypal.dto.PaypalResult,com.sapienter.jbilling.server.payment.PaymentDTOEx,com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO,boolean)"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentAuthorizeNetCIMTask.deletePaymentProfile(CreditCardDTO, AchDTO, AuthorizeNetCIMApi)": ["com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.deletePaymentProfile(com.sapienter.jbilling.server.payment.tasks.CustomerProfileData)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getGatewayKey()", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.buildFromGatewayKey(java.lang.String)", "com.sapienter.jbilling.server.user.db.AchDTO.getGatewayKey()"],
    "com.sapienter.jbilling.server.payment.blacklist.CsvProcessor.createUserRecord(BlacklistDTO)": ["com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDTO.setUser(com.sapienter.jbilling.server.user.db.UserDTO)", "com.sapienter.jbilling.server.payment.blacklist.CsvProcessor.getInt(com.sapienter.jbilling.server.payment.blacklist.CsvProcessor$Column)", "com.sapienter.jbilling.server.payment.blacklist.CsvProcessor.lineColMessage(com.sapienter.jbilling.server.payment.blacklist.CsvProcessor$Column,java.lang.String,java.lang.Object[])", "com.sapienter.jbilling.server.util.db.AbstractDAS.findNow(java.io.Serializable)"],
    "com.sapienter.jbilling.server.system.event.EventProcessor.toString()": ["java.lang.Object.getClass()", "java.lang.Class.getName()"],
    "com.sapienter.jbilling.server.user.UserBL.webServicesAuthenticate(String, String)": ["com.sapienter.jbilling.server.user.db.UserDAS.findWebServicesRoot(java.lang.String)", "com.sapienter.jbilling.server.user.db.UserDTO.getPassword()", "org.apache.log4j.Category.warn(java.lang.Object)", "com.sapienter.jbilling.common.JBCrypto.getPasswordCrypto(java.lang.Integer)", "java.lang.String.equals(java.lang.Object)", "com.sapienter.jbilling.common.JBCrypto.encrypt(java.lang.String)"],
    "com.sapienter.jbilling.server.util.PreferenceBL.set(Integer, Integer)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.util.db.PreferenceDAS.findByType_Row(java.lang.Integer,java.lang.Integer,java.lang.String)", "com.sapienter.jbilling.server.util.db.PreferenceTypeDTO.getDefaultValue()", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getLastOrdersByItemType(Integer, Integer, Integer)": ["com.sapienter.jbilling.server.order.OrderBL.getListIdsByItemType(java.lang.Integer,java.lang.Integer,java.lang.Integer)"],
    "com.sapienter.jbilling.server.pluggableTask.ProcessorEmailAlarmTask.successful()": ["com.sapienter.jbilling.server.pluggableTask.ProcessorEmailAlarm.successful()"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getInvoiceWS(Integer)": ["com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerLanguageId()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getDeleted()", "com.sapienter.jbilling.server.invoice.InvoiceWS.setStatusDescr(java.lang.String)", "com.sapienter.jbilling.server.util.db.AbstractDescription.getDescription(java.lang.Integer)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getInvoiceStatus()", "com.sapienter.jbilling.server.invoice.InvoiceBL.getWS(com.sapienter.jbilling.server.invoice.db.InvoiceDTO)"],
    "com.sapienter.jbilling.server.mediation.GroupRecordComparator.compare(Record, Record)": ["com.sapienter.jbilling.server.mediation.FormatField.getName()", "com.sapienter.jbilling.server.mediation.FormatField.getIsKey()", "com.sapienter.jbilling.server.mediation.Record.getFields()", "com.sapienter.jbilling.server.item.PricingField.getName()", "com.sapienter.jbilling.server.item.PricingField.getValue()", "java.lang.String.equals(java.lang.Object)", "java.lang.String.compareTo(java.lang.String)", "com.sapienter.jbilling.server.mediation.Format.getFields()", "java.lang.Object.toString()"],
    "com.sapienter.jbilling.server.payment.PaymentBL.getDTO()": ["com.sapienter.jbilling.server.payment.db.PaymentDTO.getIsPreauth()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getPaymentMethod()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getPaymentResult()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getId()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getBalance()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getAmount()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getCurrency()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getAttempt()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getUpdateDatetime()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getBaseUser()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getCreateDatetime()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getIsRefund()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getPaymentDate()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getDeleted()"],
    "com.sapienter.jbilling.server.pluggableTask.BasicCompositionTask.getTaxLineIndex(List, String)": ["java.util.List.size()", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO.getDescription()", "java.lang.String.equals(java.lang.Object)", "java.util.List.get(int)", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO.getTypeId()"],
    "com.sapienter.jbilling.server.process.db.BillingProcessDAS.getFailedProcessCurrencyAndSum(Integer)": ["getSession()", "org.hibernate.Query.iterate()", "org.hibernate.Query.setParameter(java.lang.String,java.lang.Integer)", "createQuery(java.lang.String)"],
    "com.sapienter.jbilling.server.process.BusinessDays.addBusinessDays(Date, int)": ["java.util.Calendar.setTime(java.util.Date)", "com.sapienter.jbilling.server.process.BusinessDays.isEqual(java.util.Date,java.util.Date)", "java.util.Calendar.get(int)", "java.util.Calendar.add(int,int)", "java.util.Calendar.getTime()"],
    "com.sapienter.jbilling.server.mediation.db.MediationRecordDAS.processed(String)": ["org.hibernate.Query.list()", "isEmpty()", "getSession()", "createSQLQuery(java.lang.String)", "setString(java.lang.String,java.lang.String)"],
    "com.sapienter.jbilling.server.process.AgeingBL.init()": ["com.sapienter.jbilling.server.util.audit.EventLogger.getInstance()"],
    "com.sapienter.jbilling.server.order.UsageBL.getMainOrder()": ["com.sapienter.jbilling.server.order.UsagePeriod.getMainOrder()"],
    "com.sapienter.jbilling.server.process.BillingProcessRunBL.updateFinished(Integer)": ["com.sapienter.jbilling.server.process.db.ProcessRunDTO.setStatus(com.sapienter.jbilling.server.process.db.ProcessRunStatusDTO)", "org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.process.db.ProcessRunDTO.getId()", "java.util.Calendar.getInstance()", "com.sapienter.jbilling.server.process.db.ProcessRunDTO.setFinished(java.util.Date)", "com.sapienter.jbilling.server.util.db.AbstractDAS.findForUpdate(java.io.Serializable)", "com.sapienter.jbilling.server.process.db.ProcessRunDTO.getVersionNum()", "java.util.Calendar.getTime()", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)", "com.sapienter.jbilling.server.util.db.AbstractGenericStatusDAS.find(java.io.Serializable)"],
    "com.sapienter.jbilling.server.item.CurrencyBL.create(CurrencyDTO, Integer)": ["com.sapienter.jbilling.server.util.db.CurrencyExchangeDTO.setCreateDatetime(java.util.Date)", "java.util.Set.add(java.lang.Object)", "com.sapienter.jbilling.server.util.db.CurrencyDTO.getInUse()", "com.sapienter.jbilling.server.util.db.CurrencyDTO.getRateAsDecimal()", "com.sapienter.jbilling.server.util.db.CurrencyDTO.getCurrencyExchanges()", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.util.db.CurrencyExchangeDTO.setCurrency(com.sapienter.jbilling.server.util.db.CurrencyDTO)", "com.sapienter.jbilling.server.util.db.CurrencyExchangeDTO.setRate(java.math.BigDecimal)", "java.util.Set.isEmpty()", "com.sapienter.jbilling.server.util.db.CurrencyDTO.getSysRate()", "com.sapienter.jbilling.server.util.db.CurrencyExchangeDTO.setEntityId(java.lang.Integer)", "com.sapienter.jbilling.server.user.db.CompanyDTO.getCurrencies()", "com.sapienter.jbilling.server.util.db.CurrencyDTO.getRate()", "com.sapienter.jbilling.server.util.db.CurrencyDTO.getId()", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)", "org.apache.log4j.Category.error(java.lang.Object)"],
    "com.sapienter.jbilling.server.pluggableTask.BasicPenaltyTask.getAgeingStep()": ["java.util.Map.get(java.lang.Object)", "java.lang.Integer.valueOf(java.lang.String)", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription.getName()"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayTask.buildRequest(PaymentDTOEx, SvcType)": ["com.sapienter.jbilling.server.user.db.CreditCardDTO.getSecurityCode()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getCcExpiry()", "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask.getMerchantId()", "com.sapienter.jbilling.server.user.ContactBL.set(java.lang.Integer)", "com.sapienter.jbilling.server.user.ContactBL.getEntity()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getAmount()", "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask.getStoreId()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getNumber()", "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask.getSellerId()", "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask$NVPList.add(java.lang.String,java.lang.String)", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getUserId()", "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask.getTerminalId()", "java.text.DateFormat.format(java.util.Date)", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getCreditCard()", "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask.getPassword()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getLastName()", "java.lang.String.valueOf(java.lang.Object)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getStateProvince()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getCity()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getCountryCode()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getFirstName()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getPostalCode()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getAddress1()", "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask$SvcType.getCode()", "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask.formatDollarAmount(java.math.BigDecimal)"],
    "com.sapienter.jbilling.server.order.OrderBL.fillInLines(OrderDTO, Integer)": ["com.sapienter.jbilling.server.order.db.OrderLineDTO.getQuantity()", "com.sapienter.jbilling.server.util.db.AbstractDescription.getDescription(java.lang.Integer)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setItem(com.sapienter.jbilling.server.item.db.ItemDTO)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setDescription(java.lang.String)", "com.sapienter.jbilling.server.item.ItemBL.getPrice(java.lang.Integer,java.lang.Integer,java.math.BigDecimal,java.lang.Integer)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getPrice()", "com.sapienter.jbilling.server.order.db.OrderDTO.getCurrencyId()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getDescription()", "com.sapienter.jbilling.server.item.db.ItemDTO.getEntity()", "com.sapienter.jbilling.server.order.db.OrderDTO.getLines()", "com.sapienter.jbilling.server.item.ItemBL.getEntity()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getItemId()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setPrice(java.math.BigDecimal)", "com.sapienter.jbilling.server.item.ItemBL.set(java.lang.Integer)", "com.sapienter.jbilling.server.user.db.CompanyDTO.getLanguageId()", "com.sapienter.jbilling.server.order.db.OrderDTO.getUserId()"],
    "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskBL.updateParameters(PluggableTaskDTO)": ["com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDTO.getParameters()", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskBL.updateParameter(com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskParameterDTO)"],
    "com.sapienter.jbilling.server.util.api.validation.APIValidator.getErrorMessages(Set, String)": ["toString()", "java.util.List.add(java.lang.Object)", "java.util.Set.size()", "javax.validation.ConstraintViolation.getPropertyPath()", "java.util.Set.isEmpty()", "javax.validation.ConstraintViolation.getMessage()"],
    "com.sapienter.jbilling.server.order.db.OrderLineDTO.setQuantity(Integer)": ["com.sapienter.jbilling.server.order.db.OrderLineDTO.setQuantity(java.math.BigDecimal)"],
    "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskManager.getClass(String)": ["org.apache.log4j.Category.debug(java.lang.Object)", "org.apache.log4j.Category.fatal(java.lang.Object,java.lang.Throwable)", "java.lang.Thread.getContextClassLoader()", "java.lang.ClassLoader.loadClass(java.lang.String)", "java.lang.Class.forName(java.lang.String)", "java.lang.Thread.currentThread()"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.triggerMediation()": ["com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerCompanyId()", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "com.sapienter.jbilling.server.mediation.IMediationSessionBean.trigger(java.lang.Integer)"],
    "com.sapienter.jbilling.server.mediation.MediationConfigurationBL.getDTO(List)": ["com.sapienter.jbilling.server.mediation.MediationConfigurationBL.getDTO(com.sapienter.jbilling.server.mediation.MediationConfigurationWS)", "java.util.List.size()", "java.util.List.add(java.lang.Object)"],
    "com.sapienter.jbilling.server.user.partner.PartnerBL.calculateCommission(BigDecimal, Integer, UserDTO, boolean)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.user.partner.db.Partner.getFeeCurrency()", "com.sapienter.jbilling.server.user.db.CompanyDTO.getCurrencyId()", "org.apache.log4j.Category.info(java.lang.Object)", "com.sapienter.jbilling.server.user.db.UserDTO.getEntity()", "com.sapienter.jbilling.server.user.db.UserDTO.getCustomer()", "java.math.BigDecimal.compareTo(java.math.BigDecimal)", "java.lang.Integer.intValue()", "com.sapienter.jbilling.server.user.partner.db.Partner.getPercentageRate()", "java.math.BigDecimal.multiply(java.math.BigDecimal)", "java.math.BigDecimal.divide(java.math.BigDecimal,int,int)", "com.sapienter.jbilling.server.user.partner.db.Partner.getReferralFee()", "com.sapienter.jbilling.server.user.partner.PartnerBL.getRangedCommission()", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.item.CurrencyBL.convert(java.lang.Integer,java.lang.Integer,java.math.BigDecimal,java.lang.Integer)", "com.sapienter.jbilling.server.util.db.CurrencyDTO.getId()", "com.sapienter.jbilling.server.user.db.CustomerDTO.setReferralFeePaid(java.lang.Integer)", "com.sapienter.jbilling.server.user.db.CustomerDTO.getReferralFeePaid()", "com.sapienter.jbilling.server.user.partner.db.Partner.getOneTime()", "com.sapienter.jbilling.server.user.partner.db.Partner.getUser()", "java.util.Set.size()", "com.sapienter.jbilling.server.user.partner.db.Partner.getRanges()", "com.sapienter.jbilling.server.user.partner.db.PartnerRange.getReferralFee()", "com.sapienter.jbilling.server.user.partner.db.PartnerRange.getPercentageRate()", "java.lang.Double.toString()"],
    "com.sapienter.jbilling.server.invoice.InvoiceBL.getInvoicesByIdRange(Integer, Integer, Integer)": ["java.sql.Connection.close()", "javax.sql.RowSet.setInt(int,int)", "com.sapienter.jbilling.server.list.ResultList.execute()", "com.sapienter.jbilling.server.list.ResultList.prepareStatement(java.lang.String)", "java.lang.Integer.intValue()"],
    "com.sapienter.jbilling.server.invoice.db.InvoiceDAS.findIdsByUserAndDate(Integer, Date, Date)": ["org.hibernate.criterion.Order.desc(java.lang.String)", "org.hibernate.Criteria.list()", "addOrder()", "com.sapienter.jbilling.server.invoice.db.InvoiceDAS.addUserCriteria(org.hibernate.Criteria,java.lang.Integer)", "com.sapienter.jbilling.server.invoice.db.InvoiceDAS.addPeriodCriteria(org.hibernate.Criteria,java.util.Date,java.util.Date)", "getSession()", "createCriteria(java.lang.Class)", "org.hibernate.criterion.Projections.id()", "org.hibernate.Criteria.setProjection()"],
    "com.sapienter.jbilling.server.mediation.MediationSessionBean.getEventsForOrder(Integer)": ["com.sapienter.jbilling.server.mediation.db.MediationRecordLineDAS.getByOrder(java.lang.Integer)", "com.sapienter.jbilling.server.mediation.db.MediationRecordLineDTO.toString()"],
    "com.sapienter.jbilling.server.pluggableTask.BasicPaymentInfoTask.getPaymentInfo(Integer)": ["com.sapienter.jbilling.server.user.db.CustomerDTO.getAutoPaymentType()", "org.apache.log4j.Category.debug(java.lang.Object)", "java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.user.db.UserDTO.getCustomer()", "java.util.Iterator.hasNext()", "com.sapienter.jbilling.server.user.UserBL.getEntity()", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.user.db.AchDTO.getId()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.setAch(com.sapienter.jbilling.server.user.db.AchDTO)", "com.sapienter.jbilling.server.payment.PaymentDTOEx.setCreditCard(com.sapienter.jbilling.server.user.db.CreditCardDTO)", "com.sapienter.jbilling.server.user.db.AchDTO.getBankName()", "java.util.Set.toArray()", "com.sapienter.jbilling.server.user.db.UserDTO.getAchs()", "com.sapienter.jbilling.server.user.db.AchDTO.getAccountName()", "com.sapienter.jbilling.server.user.db.AchDTO.getAccountType()", "com.sapienter.jbilling.server.user.db.AchDTO.getGatewayKey()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getId()", "java.util.Iterator.next()", "com.sapienter.jbilling.server.user.CreditCardBL.getDTO()", "com.sapienter.jbilling.server.user.CreditCardBL.validate()", "com.sapienter.jbilling.server.user.AchBL.getEntity()", "com.sapienter.jbilling.server.user.db.AchDTO.getAbaRouting()", "com.sapienter.jbilling.server.user.CreditCardBL.set(java.lang.Integer)", "java.util.Set.size()", "java.util.Set.isEmpty()", "com.sapienter.jbilling.server.user.db.AchDTO.getBankAccount()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setPaymentMethod(com.sapienter.jbilling.server.payment.db.PaymentMethodDTO)", "com.sapienter.jbilling.server.user.db.UserDTO.getCreditCards()", "com.sapienter.jbilling.server.user.CreditCardBL.getPaymentMethod()", "java.util.Set.iterator()"],
    "com.sapienter.jbilling.server.process.BillingProcessSessionBean.setReviewApproval(Integer, Integer, Boolean)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.process.BillingProcessSessionBean.getConfigurationDto(java.lang.Integer)", "java.lang.Boolean.booleanValue()", "com.sapienter.jbilling.server.process.ConfigurationBL.setReviewApproval(java.lang.Integer,boolean)"],
    "com.sapienter.jbilling.server.user.UserSessionBean.getCreditCard(Integer)": ["com.sapienter.jbilling.server.user.db.CreditCardDTO.getId()", "com.sapienter.jbilling.server.user.CreditCardBL.getDTO()", "java.util.Set.toArray()", "com.sapienter.jbilling.server.user.db.UserDTO.getCreditCards()", "com.sapienter.jbilling.server.user.UserBL.getEntity()", "java.util.Set.isEmpty()"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCurrentOrder(Integer, Date)": ["com.sapienter.jbilling.server.user.db.UserDTO.getLanguageIdField()", "com.sapienter.jbilling.server.order.OrderBL.getCurrentOrder(java.lang.Integer,java.util.Date)", "com.sapienter.jbilling.server.user.UserBL.getEntity()", "com.sapienter.jbilling.server.order.OrderBL.getWS(java.lang.Integer)", "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerId()"],
    "com.sapienter.jbilling.server.order.OrderBL.getCurrentOrder(Integer, Date)": ["com.sapienter.jbilling.server.order.OrderBL.set(com.sapienter.jbilling.server.order.db.OrderDTO)", "com.sapienter.jbilling.server.util.db.AbstractDAS.findNow(java.io.Serializable)", "com.sapienter.jbilling.server.order.CurrentOrder.getCurrent()"],
    "com.sapienter.jbilling.server.user.ContactTypeComparator.compare(ContactTypeDTO, ContactTypeDTO)": ["java.lang.Integer.compareTo(java.lang.Integer)", "com.sapienter.jbilling.server.user.contact.db.ContactTypeDTO.getId()"],
    "com.sapienter.jbilling.server.item.ItemSessionBean.updateType(Integer, ItemTypeDTO)": ["com.sapienter.jbilling.server.item.ItemTypeBL.update(java.lang.Integer,com.sapienter.jbilling.server.item.db.ItemTypeDTO)", "com.sapienter.jbilling.server.item.db.ItemTypeDTO.getId()"],
    "com.sapienter.jbilling.server.payment.event.PaymentSuccessfulEvent.toString()": ["com.sapienter.jbilling.server.payment.event.AbstractPaymentEvent.getPayment()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getId()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getAmount()"],
    "com.sapienter.jbilling.server.util.Util.float2string(double, Locale)": ["com.sapienter.jbilling.server.util.Util.float2string(java.lang.Float,java.util.Locale)"],
    "com.sapienter.jbilling.server.user.CreditCardBL.notifyExipration(Date)": ["org.apache.log4j.Category.debug(java.lang.Object)", "java.sql.ResultSet.next()", "com.sapienter.jbilling.server.notification.NotificationBL.getCreditCardMessage(java.lang.Integer,java.lang.Integer,java.lang.Integer,com.sapienter.jbilling.server.user.db.CreditCardDTO)", "com.sapienter.jbilling.server.user.CreditCardBL.getDTO()", "java.sql.ResultSet.getInt(int)", "org.apache.log4j.Category.warn(java.lang.Object)", "com.sapienter.jbilling.server.user.db.UserDTO.getEntity()", "com.sapienter.jbilling.server.list.ResultList.execute()", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "com.sapienter.jbilling.server.list.ResultList.prepareStatement(java.lang.String)", "com.sapienter.jbilling.server.user.CreditCardBL.set(java.lang.Integer)", "com.sapienter.jbilling.server.user.UserBL.getEntity()", "java.sql.Connection.close()", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.user.db.UserDTO.getLanguageIdField()", "com.sapienter.jbilling.server.notification.INotificationSessionBean.notify(java.lang.Integer,com.sapienter.jbilling.server.notification.MessageDTO)", "javax.sql.RowSet.setDate(int,java.sql.Date)", "java.util.Date.getTime()"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getUserId(String)": ["com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerCompanyId()", "com.sapienter.jbilling.server.user.db.UserDTO.getId()", "com.sapienter.jbilling.server.user.db.UserDAS.findByUserName(java.lang.String,java.lang.Integer)"],
    "com.sapienter.jbilling.server.order.CurrentOrder.create(Date, Integer, Integer)": ["com.sapienter.jbilling.server.order.OrderBL.addRelationships(java.lang.Integer,java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.order.OrderBL.create(java.lang.Integer,java.lang.Integer,com.sapienter.jbilling.server.order.db.OrderDTO)", "java.util.ResourceBundle.getBundle(java.lang.String,java.util.Locale)", "com.sapienter.jbilling.server.order.db.OrderDTO.setActiveSince(java.util.Date)", "com.sapienter.jbilling.server.order.OrderBL.set(com.sapienter.jbilling.server.order.db.OrderDTO)", "com.sapienter.jbilling.server.order.db.OrderDTO.setCurrency(com.sapienter.jbilling.server.util.db.CurrencyDTO)", "com.sapienter.jbilling.server.user.EntityBL.getLocale()", "com.sapienter.jbilling.server.order.db.OrderDTO.setNotes(java.lang.String)", "java.util.ResourceBundle.getString(java.lang.String)"],
    "com.sapienter.jbilling.server.mediation.task.RulesMediationTask.process(List, List, String)": ["com.sapienter.jbilling.server.mediation.Record.getKey()", "java.util.List.clear()", "com.sapienter.jbilling.server.mediation.Record.getFields()", "java.util.List.size()", "com.sapienter.jbilling.server.pluggableTask.PluggableTask.getEntityId()", "java.util.List.add(java.lang.Object)", "com.sapienter.jbilling.server.item.PricingField.setResultId(long)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.rule.Result.getId()", "com.sapienter.jbilling.server.rule.RulesBaseTask.executeRules()", "java.util.List.get(int)", "com.sapienter.jbilling.server.mediation.task.MediationResult.setRecordKey(java.lang.String)"],
    "com.sapienter.jbilling.server.mediation.task.JDBCUtils.correctTableNames(Connection, String[])": ["java.util.List.add(java.lang.Object)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "com.sapienter.jbilling.server.mediation.task.JDBCUtils.getAllTableNames(java.sql.Connection)"],
    "com.sapienter.jbilling.server.order.UsageBL.getPeriodEnd()": ["org.joda.time.DateMidnight.isBefore(org.joda.time.DateMidnight)", "org.joda.time.DateMidnight.toDate()", "java.util.List.size()", "org.joda.time.DateMidnight.plusDays(int)", "com.sapienter.jbilling.server.order.UsagePeriod.getBillingPeriods()", "java.util.Date.getTime()", "java.util.List.get(int)", "com.sapienter.jbilling.server.process.PeriodOfTime.getEnd()"],
    "com.sapienter.jbilling.server.util.InternationalDescriptionWS.setLabel(String)": ["com.sapienter.jbilling.server.util.InternationalDescriptionWS.setPsudoColumn(java.lang.String)"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentPaypalExternalTask.storePaypalResult(PaypalResult, PaymentDTOEx, PaymentAuthorizationDTO, boolean)": ["com.sapienter.jbilling.server.payment.tasks.PaymentPaypalExternalTask.updateGatewayKey(com.sapienter.jbilling.server.payment.PaymentDTOEx)", "com.sapienter.jbilling.server.payment.PaymentAuthorizationBL.create(com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO,java.lang.Integer)", "com.sapienter.jbilling.server.payment.tasks.paypal.dto.PaypalResult.isSucceseeded()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setPaymentResult(com.sapienter.jbilling.server.payment.db.PaymentResultDTO)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getId()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.setAuthorization(com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO)"],
    "com.sapienter.jbilling.server.user.UserSessionBean.delete(Integer, Integer)": ["com.sapienter.jbilling.server.user.UserBL.delete(java.lang.Integer)"],
    "com.sapienter.jbilling.server.process.db.ProcessRunUserDAS.findFailedUserIds(Integer)": ["com.sapienter.jbilling.server.process.db.ProcessRunUserDAS.findUserIdsByStatus(java.lang.Integer,java.lang.Integer)"],
    "com.sapienter.jbilling.server.process.AgeingBL.out(UserDTO, Integer)": ["com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.process.task.IAgeingTask.removeUser(com.sapienter.jbilling.server.user.db.UserDTO,java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.user.db.UserDTO.getCompany()", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskManager.getNextClass()"],
    "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDAS.filterByIpAddress(Integer, String, Integer)": ["org.hibernate.Criteria.list()", "createAlias(java.lang.String,java.lang.String)", "org.hibernate.criterion.Restrictions.eq(java.lang.String,java.lang.Integer)", "getSession()", "add()", "org.hibernate.criterion.Restrictions.eq(java.lang.String,java.lang.String)", "createCriteria(java.lang.Class)"],
    "com.sapienter.jbilling.server.item.PricingField.getFloatValue()": ["com.sapienter.jbilling.server.item.PricingField.getDoubleValue()"],
    "com.sapienter.jbilling.server.order.db.OrderDTO.getTotal()": ["com.sapienter.jbilling.server.order.db.OrderLineDTO.getDeleted()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getAmount()", "java.math.BigDecimal.add(java.math.BigDecimal)"],
    "com.sapienter.jbilling.server.pluggableTask.PaymentFakeExternalStorage.deleteCreditCard(ContactDTO, CreditCardDTO, AchDTO)": ["com.sapienter.jbilling.server.pluggableTask.PluggableTask.getParameter(java.lang.String,java.lang.String)", "com.sapienter.jbilling.server.pluggableTask.PluggableTask.getParameter(java.lang.String,java.lang.Boolean)"],
    "com.sapienter.jbilling.server.process.task.AbstractCronTask.getParameter(String, String)": ["java.util.Map.get(java.lang.Object)"],
    "com.sapienter.jbilling.server.payment.PaymentBL.processPayment(Integer, PaymentDTOEx)": ["org.apache.log4j.Category.debug(java.lang.Object)", "org.apache.log4j.Category.fatal(java.lang.Object,java.lang.Throwable)", "com.sapienter.jbilling.server.system.event.EventManager.process(com.sapienter.jbilling.server.system.event.Event)", "com.sapienter.jbilling.server.pluggableTask.PaymentTask.failure(java.lang.Integer,java.lang.Integer)", "org.apache.log4j.Category.warn(java.lang.Object)", "java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskManager.getNextClass()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getBaseUsers()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getPaymentResult()", "java.util.Set.isEmpty()", "com.sapienter.jbilling.server.payment.PaymentBL.create(com.sapienter.jbilling.server.payment.PaymentDTOEx)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getAmount()", "com.sapienter.jbilling.server.payment.PaymentBL.sendNotification(com.sapienter.jbilling.server.payment.PaymentDTOEx,java.lang.Integer)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getAttempt()", "com.sapienter.jbilling.server.payment.event.AbstractPaymentEvent.forPaymentResult(java.lang.Integer,com.sapienter.jbilling.server.payment.PaymentDTOEx)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.obscureNumber()", "com.sapienter.jbilling.server.pluggableTask.PaymentTask.process(com.sapienter.jbilling.server.payment.PaymentDTOEx)", "com.sapienter.jbilling.server.payment.PaymentAuthorizationBL.markAsUsed(com.sapienter.jbilling.server.payment.PaymentDTOEx)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setBalance(java.math.BigDecimal)", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getUserId()", "com.sapienter.jbilling.server.pluggableTask.PaymentTask.confirmPreAuth(com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO,com.sapienter.jbilling.server.payment.PaymentDTOEx)", "com.sapienter.jbilling.server.payment.PaymentAuthorizationBL.getPreAuthorization(java.lang.Integer)", "com.sapienter.jbilling.server.payment.db.PaymentResultDTO.getId()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getCreditCard()"],
    "com.sapienter.jbilling.client.authentication.CompanyUserDetails.getUserId()": ["getId()"],
    "com.sapienter.jbilling.server.payment.db.PaymentDAS.findWithBalance(Integer)": ["org.hibernate.Criteria.list()", "getSession()", "org.hibernate.Criteria.add()", "createCriteria(java.lang.Class)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "org.hibernate.criterion.Restrictions.ge(java.lang.String,java.math.BigDecimal)", "org.hibernate.criterion.Restrictions.eq(java.lang.String,int)", "org.hibernate.criterion.Restrictions.eq(java.lang.String,com.sapienter.jbilling.server.user.db.UserDTO)"],
    "com.sapienter.jbilling.server.invoice.InvoiceBL.getDTOEx(Integer, boolean)": ["com.sapienter.jbilling.server.invoice.db.InvoiceDTO.hasSubAccounts()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.setCurrencyName(java.lang.String)", "java.util.ResourceBundle.getBundle(java.lang.String,java.util.Locale)", "com.sapienter.jbilling.server.util.db.CurrencyDTO.getSymbol()", "com.sapienter.jbilling.server.util.db.AbstractDescription.getDescription(java.lang.Integer)", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO.setDescription(java.lang.String)", "java.util.ResourceBundle.getString(java.lang.String)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getCurrency()", "com.sapienter.jbilling.server.item.CurrencyBL.getEntity()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getInvoiceLines()", "com.sapienter.jbilling.server.invoice.InvoiceBL.addHeadersFooters(java.util.List,java.util.ResourceBundle)", "java.util.Collection.add(java.lang.Object)", "java.util.Collections.sort(java.util.List,java.util.Comparator)", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO.setIsPercentage(java.lang.Integer)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.setCurrencySymbol(java.lang.String)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getTotal()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.setInvoiceLines(java.util.Collection)", "com.sapienter.jbilling.server.util.db.CurrencyDTO.getId()", "com.sapienter.jbilling.server.user.UserBL.getLocale()", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO.setAmount(java.math.BigDecimal)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getBaseUser()"],
    "com.sapienter.jbilling.server.item.db.ItemDTO.hasExcludedType(Integer)": ["com.sapienter.jbilling.server.item.db.ItemDTO.getExcludedTypeIds()", "java.util.List.contains(java.lang.Object)", "java.util.Arrays.asList(java.lang.Object[])"],
    "com.sapienter.jbilling.server.pluggableTask.BasicPenaltyTask.process(Event)": ["org.apache.log4j.Category.debug(java.lang.Object)", "java.math.BigDecimal.toString()", "java.util.Calendar.getInstance()", "com.sapienter.jbilling.server.process.event.NewUserStatusEvent.getNewStatusId()", "java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.order.db.OrderDTO.setCreateDate(java.util.Date)", "com.sapienter.jbilling.server.user.db.UserDTO.getEntity()", "com.sapienter.jbilling.server.order.db.OrderPeriodDTO.setId(int)", "java.util.List.add(java.lang.Object)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setTypeId(java.lang.Integer)", "java.math.BigDecimal.compareTo(java.math.BigDecimal)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setDescription(java.lang.String)", "com.sapienter.jbilling.server.order.db.OrderDTO.setBaseUserByUserId(com.sapienter.jbilling.server.user.db.UserDTO)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setAmount(java.math.BigDecimal)", "com.sapienter.jbilling.server.user.db.UserDTO.setId(int)", "com.sapienter.jbilling.server.user.db.UserDTO.getLanguageIdField()", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.order.OrderBL.set(com.sapienter.jbilling.server.order.db.OrderDTO)", "com.sapienter.jbilling.server.order.db.OrderDTO.setCurrency(com.sapienter.jbilling.server.util.db.CurrencyDTO)", "com.sapienter.jbilling.server.process.event.NewUserStatusEvent.getUserId()", "com.sapienter.jbilling.server.item.ItemBL.getEntity()", "com.sapienter.jbilling.server.order.db.OrderBillingTypeDTO.setId(int)", "java.util.List.get(int)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getBaseUser()", "com.sapienter.jbilling.server.invoice.db.InvoiceDAS.findIdsOverdueForUser(java.lang.Integer,java.util.Date)", "com.sapienter.jbilling.server.pluggableTask.BasicPenaltyTask.calculatePenaltyFee(com.sapienter.jbilling.server.invoice.db.InvoiceDTO,com.sapienter.jbilling.server.item.ItemBL)", "java.util.List.isEmpty()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setItemId(java.lang.Integer)", "com.sapienter.jbilling.server.pluggableTask.BasicPenaltyTask.getAgeingStep()", "com.sapienter.jbilling.server.util.db.AbstractDescription.getDescription(java.lang.Integer)", "com.sapienter.jbilling.server.invoice.InvoiceBL.getEntity()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getCurrency()", "com.sapienter.jbilling.server.pluggableTask.BasicPenaltyTask.getPenaltyItemId()", "com.sapienter.jbilling.server.order.OrderBL.create(java.lang.Integer,java.lang.Integer,com.sapienter.jbilling.server.order.db.OrderDTO)", "com.sapienter.jbilling.server.order.db.OrderDTO.setOrderBillingType(com.sapienter.jbilling.server.order.db.OrderBillingTypeDTO)", "com.sapienter.jbilling.server.order.db.OrderDTO.getLines()", "com.sapienter.jbilling.common.Util.truncateDate(java.util.Date)", "com.sapienter.jbilling.server.user.db.UserDTO.getId()", "com.sapienter.jbilling.server.pluggableTask.BasicPenaltyTask.getInvoiceDelegatedDescription(com.sapienter.jbilling.server.invoice.db.InvoiceDTO)", "java.util.Calendar.getTime()", "org.apache.log4j.Category.error(java.lang.Object)", "com.sapienter.jbilling.server.order.db.OrderDTO.setOrderPeriod(com.sapienter.jbilling.server.order.db.OrderPeriodDTO)"],
    "com.sapienter.jbilling.common.JNDILookup.lookUpDataSource()": ["com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.doValidatePurchase(Integer, Integer[], String[])": ["com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerCompanyId()", "com.sapienter.jbilling.server.mediation.task.IMediationProcess.process(java.util.List,java.util.List,java.lang.String)", "java.io.PrintWriter.close()", "java.util.List.add(java.lang.Object)", "com.sapienter.jbilling.server.user.ValidatePurchaseWS.setMessage(java.lang.String[])", "com.sapienter.jbilling.server.mediation.task.MediationResult.setUserId(java.lang.Integer)", "java.util.ArrayList.add(java.lang.Object)", "com.sapienter.jbilling.server.item.ItemBL.getEntity()", "com.sapienter.jbilling.server.mediation.task.MediationResult.getDiffLines()", "com.sapienter.jbilling.server.user.UserBL.validatePurchase(java.util.List,java.util.List,java.util.List)", "com.sapienter.jbilling.server.item.PricingField.getPricingFieldsValue(java.lang.String)", "com.sapienter.jbilling.server.mediation.Record.addField(com.sapienter.jbilling.server.item.PricingField,boolean)", "java.util.List.get(int)", "com.sapienter.jbilling.server.item.ItemBL.setPricingFields(java.util.List)", "java.lang.Throwable.printStackTrace(java.io.PrintWriter)", "java.util.List.isEmpty()", "com.sapienter.jbilling.server.user.ValidatePurchaseWS.setQuantity(java.math.BigDecimal)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getAmount()", "com.sapienter.jbilling.server.user.ValidatePurchaseWS.setSuccess(java.lang.Boolean)", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskManager.getNextClass()", "com.sapienter.jbilling.server.user.ValidatePurchaseWS.setAuthorized(java.lang.Boolean)", "java.io.StringWriter.toString()", "java.util.Arrays.asList(java.lang.Object[])", "com.sapienter.jbilling.server.mediation.task.MediationResult.setEventDate(java.util.Date)", "java.lang.Throwable.getMessage()", "java.util.List.size()", "com.sapienter.jbilling.server.item.ItemBL.getPrice(java.lang.Integer,java.math.BigDecimal,java.lang.Integer)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getItemId()", "org.apache.log4j.Category.error(java.lang.Object)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.createCurrency(CurrencyWS)": ["com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerCompanyId()", "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerLanguageId()", "com.sapienter.jbilling.server.util.CurrencyWS.getDescription()", "com.sapienter.jbilling.server.util.db.AbstractDescription.setDescription(java.lang.String,java.lang.Integer)", "com.sapienter.jbilling.server.item.CurrencyBL.create(com.sapienter.jbilling.server.util.db.CurrencyDTO,java.lang.Integer)", "com.sapienter.jbilling.server.item.CurrencyBL.setEntityCurrency(java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.util.db.CurrencyDTO.getId()", "com.sapienter.jbilling.server.util.CurrencyWS.isDefaultCurrency()", "com.sapienter.jbilling.server.item.CurrencyBL.getEntity()"],
    "com.sapienter.jbilling.server.invoice.db.InvoiceDAS.findLinesForPeriodByItem(Integer, Integer, Date, Date)": ["com.sapienter.jbilling.server.invoice.db.InvoiceDAS.addItemCriteria(org.hibernate.Criteria,java.lang.Integer)", "com.sapienter.jbilling.server.invoice.db.InvoiceDAS.addUserCriteria(org.hibernate.Criteria,java.lang.Integer)", "com.sapienter.jbilling.server.invoice.db.InvoiceDAS.addPeriodCriteria(org.hibernate.Criteria,java.util.Date,java.util.Date)", "getSession()", "createCriteria(java.lang.Class)", "org.hibernate.Criteria.uniqueResult()", "org.hibernate.Criteria.setProjection()", "org.hibernate.criterion.Projections.count(java.lang.String)"],
    "com.sapienter.jbilling.server.provisioning.TestExternalProvisioningMDB.testCAIProvisioningTask(MapMessage)": ["org.apache.log4j.Category.debug(java.lang.Object)", "javax.jms.MapMessage.getIntProperty(java.lang.String)", "com.sapienter.jbilling.server.provisioning.TestExternalProvisioningMDB.pause(long)", "java.lang.String.equals(java.lang.Object)", "com.sapienter.jbilling.server.provisioning.TestExternalProvisioningMDB.updateProvisioningStatus(int,int)", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)", "org.apache.log4j.Category.error(java.lang.Object)", "javax.jms.MapMessage.getStringProperty(java.lang.String)", "java.lang.String.length()"],
    "com.sapienter.jbilling.server.util.db.PreferenceDTO.setValue(Integer)": ["java.lang.Integer.toString()"],
    "com.sapienter.jbilling.server.invoice.InvoiceWS.setBalance(BigDecimal)": ["java.math.BigDecimal.toString()"],
    "com.sapienter.jbilling.server.item.ItemSessionBean.create(ItemDTO, Integer)": ["com.sapienter.jbilling.server.item.ItemBL.create(com.sapienter.jbilling.server.item.db.ItemDTO,java.lang.Integer)"],
    "com.sapienter.jbilling.server.system.event.task.InternalEventsRulesTask.process(Event)": ["java.lang.reflect.Method.invoke(java.lang.Object,java.lang.Object[])", "java.lang.reflect.Method.getName()", "java.lang.String.startsWith(java.lang.String)", "java.lang.Object.getClass()", "java.util.List.add(java.lang.Object)", "java.lang.Class.isPrimitive()", "com.sapienter.jbilling.server.rule.RulesBaseTask.executeRules()", "java.lang.Class.getMethods()", "java.lang.reflect.Method.getReturnType()", "java.lang.reflect.Method.getParameterTypes()"],
    "com.sapienter.jbilling.server.mediation.task.MediationResult.addLine(Integer, Double)": ["java.math.BigDecimal.setScale(int,int)", "com.sapienter.jbilling.server.mediation.task.MediationResult.addLine(java.lang.Integer,java.math.BigDecimal)"],
    "com.sapienter.jbilling.server.invoice.InvoiceSessionBean.getFileName(Integer)": ["org.apache.log4j.Category.debug(java.lang.Object)", "java.util.ResourceBundle.getBundle(java.lang.String,java.util.Locale)", "com.sapienter.jbilling.server.invoice.InvoiceBL.getEntity()", "java.util.ResourceBundle.getString(java.lang.String)", "com.sapienter.jbilling.server.user.UserBL.getLocale()", "java.lang.String.replaceAll(java.lang.String,java.lang.String)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getBaseUser()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getPublicNumber()"],
    "com.sapienter.jbilling.server.user.UserDTOEx.isGranted(Integer)": ["java.util.Collections.binarySearch(java.util.List,java.lang.Object,java.util.Comparator)"],
    "com.sapienter.jbilling.server.invoice.InvoiceBL.set(Integer)": ["com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)"],
    "com.sapienter.jbilling.server.util.db.PreferenceDTO.getIntValue()": ["java.lang.Integer.valueOf(java.lang.String)"],
    "com.sapienter.jbilling.server.pluggableTask.PaymentFakeTask.createFilter(String)": ["java.lang.String.trim()", "java.lang.String.length()"],
    "com.sapienter.jbilling.server.notification.NotificationSessionBean.getDTO(Integer, Integer, Integer)": ["com.sapienter.jbilling.server.notification.NotificationBL.getDTO()", "com.sapienter.jbilling.server.notification.MessageDTO.setTypeId(java.lang.Integer)", "com.sapienter.jbilling.server.notification.NotificationBL.getEntity()", "com.sapienter.jbilling.server.notification.NotificationBL.getSections(java.lang.Integer)", "com.sapienter.jbilling.server.notification.NotificationBL.set(java.lang.Integer,java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.notification.MessageDTO.setContent(com.sapienter.jbilling.server.notification.MessageSection[])", "com.sapienter.jbilling.server.notification.MessageDTO.addSection(com.sapienter.jbilling.server.notification.MessageSection)", "com.sapienter.jbilling.server.notification.MessageDTO.getContent()", "com.sapienter.jbilling.server.notification.MessageDTO.setContentSize(int)", "com.sapienter.jbilling.server.notification.MessageDTO.setLanguageId(java.lang.Integer)"],
    "com.sapienter.jbilling.server.order.OrderHelper.delete(OrderDTO, Collection)": ["com.sapienter.jbilling.server.order.db.OrderLineDTO.setDeleted(int)", "com.sapienter.jbilling.server.order.db.OrderDTO.getLines()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getItemId()", "java.util.Collection.contains(java.lang.Object)"],
    "com.sapienter.jbilling.server.pluggableTask.BasicCompositionTask.composeDescription(OrderDTO, PeriodOfTime, String)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.order.db.OrderDTO.getId()", "com.sapienter.jbilling.server.process.PeriodOfTime.getDateMidnightEnd()", "java.lang.StringBuilder.append(java.lang.Object)", "java.util.ResourceBundle.getBundle(java.lang.String,java.util.Locale)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.toString()", "java.util.ResourceBundle.getString(java.lang.String)", "com.sapienter.jbilling.server.order.db.OrderDTO.getOrderPeriod()", "java.lang.Integer.toString()", "com.sapienter.jbilling.server.pluggableTask.BasicCompositionTask.appendOrderId(java.lang.Integer)", "com.sapienter.jbilling.server.order.db.OrderPeriodDTO.getId()", "com.sapienter.jbilling.server.process.PeriodOfTime.getDateMidnightStart()", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.user.db.UserDTO.getCompany()", "org.joda.time.format.DateTimeFormat.forPattern(java.lang.String)", "com.sapienter.jbilling.server.pluggableTask.BasicCompositionTask.getLocale(java.lang.Integer)", "com.sapienter.jbilling.server.user.db.UserDTO.getId()", "org.joda.time.DateMidnight.minusDays(int)", "com.sapienter.jbilling.server.order.db.OrderDTO.getBaseUserByUserId()", "org.joda.time.format.DateTimeFormatter.print(org.joda.time.DateMidnight)"],
    "com.sapienter.jbilling.server.notification.NotificationBL.getForgetPasswordEmailMessage(Integer, Integer, Integer)": ["com.sapienter.jbilling.server.notification.MessageDTO.setTypeId(java.lang.Integer)", "com.sapienter.jbilling.server.notification.NotificationBL.setContent(com.sapienter.jbilling.server.notification.MessageDTO,java.lang.Integer,java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.notification.NotificationBL.initializeMessage(java.lang.Integer,java.lang.Integer)"],
    "com.sapienter.jbilling.server.invoice.PaperInvoiceBatchBL.compileInvoiceFilesForProcess(Integer)": ["com.sapienter.jbilling.server.invoice.PaperInvoiceBatchBL.compileInvoiceFiles(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer[])", "com.sapienter.jbilling.server.process.db.PaperInvoiceBatchDTO.getInvoices()", "java.util.Collections.sort(java.util.List,java.util.Comparator)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getId()", "com.sapienter.jbilling.server.process.db.PaperInvoiceBatchDTO.getId()", "java.util.List.size()", "com.sapienter.jbilling.common.Util.getSysProp(java.lang.String)", "java.util.List.get(int)", "java.lang.Integer.toString()"],
    "com.sapienter.jbilling.server.pluggableTask.OrderPeriodAnticipateTask.calculateEnd(OrderDTO, Date, int, Date)": ["org.apache.log4j.Category.debug(java.lang.Object)", "java.util.Calendar.setTime(java.util.Date)", "java.util.GregorianCalendar.add(int,int)", "com.sapienter.jbilling.server.order.db.OrderDTO.getAnticipatePeriods()", "java.util.Calendar.getTime()", "com.sapienter.jbilling.server.order.db.OrderDTO.getOrderPeriod()", "java.lang.Integer.intValue()", "com.sapienter.jbilling.server.pluggableTask.BasicOrderPeriodTask.calculateEnd(com.sapienter.jbilling.server.order.db.OrderDTO,java.util.Date,int,java.util.Date)", "com.sapienter.jbilling.server.pluggableTask.BasicOrderPeriodTask.getViewLimit(com.sapienter.jbilling.server.order.db.OrderPeriodDTO,java.util.Date)"],
    "com.sapienter.jbilling.server.user.UserSessionBean.setEntityParameters(Integer, HashMap)": ["java.util.HashMap.get(java.lang.Object)", "com.sapienter.jbilling.server.util.PreferenceBL.createUpdateForEntity(java.lang.Integer,java.lang.Integer,java.lang.String)", "java.util.Iterator.next()", "com.sapienter.jbilling.server.util.PreferenceBL.createUpdateForEntity(java.lang.Integer,java.lang.Integer,java.lang.Integer)", "java.util.HashMap.keySet()", "java.util.Iterator.hasNext()", "com.sapienter.jbilling.server.util.PreferenceBL.createUpdateForEntity(java.lang.Integer,java.lang.Integer,java.math.BigDecimal)", "java.util.Set.iterator()", "java.lang.Object.toString()"],
    "com.sapienter.jbilling.server.invoice.task.FileInvoiceExportTask.process(Event)": ["org.apache.log4j.Category.debug(java.lang.Object)", "java.util.Map.get(java.lang.Object)", "java.io.Writer.write(java.lang.String)", "com.sapienter.jbilling.server.invoice.NewInvoiceEvent.getUserId()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getId()", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription.getName()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getIsReview()", "java.io.BufferedWriter.newLine()", "java.io.File.isAbsolute()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getInvoiceLines()", "com.sapienter.jbilling.server.invoice.task.FileInvoiceExportTask.composeLine(com.sapienter.jbilling.server.invoice.db.InvoiceDTO,com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO,java.lang.Integer)", "java.lang.Throwable.getMessage()", "java.io.BufferedWriter.close()", "com.sapienter.jbilling.common.Util.getSysProp(java.lang.String)", "com.sapienter.jbilling.server.invoice.NewInvoiceEvent.getInvoice()", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)"],
    "com.sapienter.jbilling.server.process.db.PaperInvoiceBatchDAS.create(Integer, Integer)": ["com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)"],
    "com.sapienter.jbilling.server.mediation.Record.addField(PricingField, boolean)": ["com.sapienter.jbilling.server.item.PricingField.getValue()", "java.util.List.add(java.lang.Object)", "java.lang.StringBuffer.append(java.lang.String)", "java.lang.Object.toString()"],
    "com.sapienter.jbilling.server.order.OrderBL.updateEndOfOrderProcess(Date)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.order.db.OrderDTO.getId()", "com.sapienter.jbilling.server.order.db.OrderProcessDTO.getId()", "com.sapienter.jbilling.server.order.db.OrderDTO.getActiveUntil()", "com.sapienter.jbilling.server.order.db.OrderDAS.findProcessByEndDate(java.lang.Integer,java.util.Date)", "com.sapienter.jbilling.server.order.db.OrderProcessDTO.setPeriodEnd(java.util.Date)"],
    "com.sapienter.jbilling.server.user.partner.PartnerWS.setDuePayout(BigDecimal)": ["java.math.BigDecimal.toString()"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentPaypalExternalTask.isCreditCardStored(PaymentDTOEx)": ["com.sapienter.jbilling.server.user.db.CreditCardDTO.useGatewayKey()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getCreditCard()"],
    "com.sapienter.jbilling.server.payment.blacklist.CsvProcessor.checkForEmptyRecord(String, Column[])": ["java.lang.Enum.ordinal()", "java.lang.String.equals(java.lang.Object)", "com.sapienter.jbilling.server.payment.blacklist.CsvProcessor.getMessage(java.lang.String,java.lang.Object[])"],
    "com.sapienter.jbilling.server.order.task.CancellationFeeRulesTask.process(Event)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.order.event.NewActiveUntilEvent.getOrderId()", "com.sapienter.jbilling.server.user.db.UserDTO.getLanguage()", "com.sapienter.jbilling.server.user.db.UserDTO.getEntity()", "java.util.List.add(java.lang.Object)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "java.math.BigDecimal.compareTo(java.math.BigDecimal)", "com.sapienter.jbilling.server.item.tasks.RulesItemManager.processRules(com.sapienter.jbilling.server.order.db.OrderDTO)", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.util.db.CurrencyDTO.getId()", "com.sapienter.jbilling.server.order.event.NewQuantityEvent.getOldQuantity()", "com.sapienter.jbilling.server.order.db.OrderDTO.getBaseUserByUserId()", "com.sapienter.jbilling.server.order.event.NewQuantityEvent.getNewQuantity()", "com.sapienter.jbilling.server.user.db.UserDTO.getCurrency()", "com.sapienter.jbilling.server.order.event.NewQuantityEvent.getOrderLine()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setQuantity(java.math.BigDecimal)", "java.util.List.clear()", "com.sapienter.jbilling.server.order.task.CancellationFeeRulesTask$FeeOrderManager.setNewActiveUntil(java.util.Date)", "com.sapienter.jbilling.server.order.event.NewActiveUntilEvent.getOldActiveUntil()", "com.sapienter.jbilling.server.order.task.CancellationFeeRulesTask$FeeOrderManager.setOldActiveUntil(java.util.Date)", "com.sapienter.jbilling.server.order.event.NewActiveUntilEvent.getNewActiveUntil()", "java.math.BigDecimal.subtract(java.math.BigDecimal)", "java.util.Date.before(java.util.Date)", "com.sapienter.jbilling.server.order.db.OrderDTO.getActiveUntil()", "com.sapienter.jbilling.server.order.db.OrderDTO.getLines()", "com.sapienter.jbilling.server.util.db.LanguageDTO.getId()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setPurchaseOrder(com.sapienter.jbilling.server.order.db.OrderDTO)", "com.sapienter.jbilling.server.order.event.NewQuantityEvent.getOrderId()", "com.sapienter.jbilling.server.user.db.UserDTO.getUserId()"],
    "com.sapienter.jbilling.server.item.tasks.RulesItemManager.addItem(Integer, BigDecimal, Integer, Integer, Integer, Integer, OrderDTO, List)": ["com.sapienter.jbilling.server.item.tasks.RulesItemManager.processRules(com.sapienter.jbilling.server.order.db.OrderDTO)", "com.sapienter.jbilling.server.item.tasks.BasicItemManager.addItem(java.lang.Integer,java.math.BigDecimal,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,com.sapienter.jbilling.server.order.db.OrderDTO,java.util.List)"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask.isApplicable(PaymentDTOEx)": ["com.sapienter.jbilling.server.payment.PaymentDTOEx.getAch()", "org.apache.log4j.Category.warn(java.lang.Object)", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getCreditCard()"],
    "com.sapienter.jbilling.server.report.ReportBL.export(ReportExportFormat)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.report.ReportBL.run()", "com.sapienter.jbilling.server.report.ReportExportFormat.export(net.sf.jasperreports.engine.JasperPrint)", "java.lang.Enum.name()", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)"],
    "com.sapienter.jbilling.server.process.BillingProcessBL.isReviewPresent(Integer)": ["com.sapienter.jbilling.server.process.db.BillingProcessDAS.findReview(java.lang.Integer)"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentFilterTask.getBlacklistMatches(Integer)": ["com.sapienter.jbilling.server.payment.blacklist.BlacklistFilter$Result.getMessage()", "com.sapienter.jbilling.server.payment.tasks.PaymentFilterTask.getEnabledFilters()", "com.sapienter.jbilling.server.payment.blacklist.BlacklistFilter$Result.isBlacklisted()", "java.util.List.add(java.lang.Object)", "com.sapienter.jbilling.server.payment.blacklist.BlacklistFilter.checkUser(java.lang.Integer)"],
    "com.sapienter.jbilling.server.user.partner.PartnerBL.getPayoutDTO()": ["com.sapienter.jbilling.server.user.partner.db.PartnerPayout.touch()"],
    "com.sapienter.jbilling.server.item.tasks.RulesItemManager.processRules(OrderDTO)": ["java.util.Hashtable.values()", "com.sapienter.jbilling.server.order.db.OrderDTO.setCreateDate(java.util.Date)", "com.sapienter.jbilling.server.user.ContactBL.getDTO()", "java.util.List.add(java.lang.Object)", "com.sapienter.jbilling.server.user.ContactBL.set(java.lang.Integer)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.order.OrderBL.getActiveRecurringByUser(java.lang.Integer)", "com.sapienter.jbilling.server.item.tasks.RulesItemManager$OrderManager.getUserId()", "com.sapienter.jbilling.server.order.db.OrderDTO.setCurrency(com.sapienter.jbilling.server.util.db.CurrencyDTO)", "com.sapienter.jbilling.server.pluggableTask.StatefulKnowledgeSession.setGlobal(java.lang.String,com.sapienter.jbilling.server.item.tasks.RulesItemManager$OrderManager)", "com.sapienter.jbilling.server.user.ContactDTOEx.getFieldsTable()", "com.sapienter.jbilling.server.util.db.CurrencyDTO.getId()", "com.sapienter.jbilling.server.order.db.OrderDTO.getBaseUserByUserId()", "com.sapienter.jbilling.server.util.DTOFactory.getUserDTOEx(java.lang.Integer)", "com.sapienter.jbilling.server.pluggableTask.PluggableTask.readKnowledgeBase()", "org.drools.KnowledgeBase.newStatefulKnowledgeSession()", "com.sapienter.jbilling.server.item.tasks.RulesItemManager$OrderManager.getEntityId()", "com.sapienter.jbilling.server.item.ItemBL.getDTO(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.order.db.OrderDTO.getCurrency()", "com.sapienter.jbilling.server.order.db.OrderDTO.getCreateDate()", "com.sapienter.jbilling.server.item.tasks.RulesItemManager$OrderManager.getLanguage()", "com.sapienter.jbilling.server.order.db.OrderDTO.getLines()", "java.util.List.size()", "com.sapienter.jbilling.server.pluggableTask.PluggableTask.executeStatefulRules(com.sapienter.jbilling.server.pluggableTask.StatefulKnowledgeSession,java.util.List)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getItemId()", "com.sapienter.jbilling.server.order.db.OrderDTO.getPricingFields()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getItem()", "com.sapienter.jbilling.server.user.db.UserDTO.getId()", "com.sapienter.jbilling.server.item.tasks.RulesItemManager$OrderManager.getCurrencyId()"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerLanguageId()": ["com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getSpringSecurityService()", "com.sapienter.jbilling.client.authentication.CompanyUserDetails.getLanguageId()", "grails.plugins.springsecurity.SpringSecurityService.getPrincipal()"],
    "com.sapienter.jbilling.server.util.db.InternationalDescriptionId.hashCode()": ["java.lang.String.hashCode()", "com.sapienter.jbilling.server.util.db.InternationalDescriptionId.getTableId()", "com.sapienter.jbilling.server.util.db.InternationalDescriptionId.getPsudoColumn()", "com.sapienter.jbilling.server.util.db.InternationalDescriptionId.getLanguageId()", "com.sapienter.jbilling.server.util.db.InternationalDescriptionId.getForeignId()"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentPaypalExternalTask.preAuth(PaymentDTOEx)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.payment.tasks.PaymentPaypalExternalTask.prepareExternalPayment(com.sapienter.jbilling.server.payment.PaymentDTOEx)", "com.sapienter.jbilling.server.payment.tasks.PaymentPaypalExternalTask.getProcessorName()", "com.sapienter.jbilling.server.payment.tasks.PaymentPaypalExternalTask.doProcess(com.sapienter.jbilling.server.payment.PaymentDTOEx,com.sapienter.jbilling.server.payment.tasks.paypal.dto.PaymentAction,boolean)"],
    "com.sapienter.jbilling.server.util.Context.getBean(Name)": ["com.sapienter.jbilling.server.util.Context.getApplicationContext()", "org.springframework.context.ApplicationContext.getBean(java.lang.String)", "com.sapienter.jbilling.server.util.Context$Name.getName()"],
    "com.sapienter.jbilling.server.item.ItemBL.delete(Integer)": ["com.sapienter.jbilling.server.util.db.AbstractDAS.clear()", "com.sapienter.jbilling.server.util.audit.EventLogger.audit(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.util.Date)", "com.sapienter.jbilling.server.system.event.EventManager.process(com.sapienter.jbilling.server.system.event.Event)", "com.sapienter.jbilling.server.util.db.AbstractDAS.flush()", "com.sapienter.jbilling.server.item.db.ItemDTO.setDeleted(java.lang.Integer)", "com.sapienter.jbilling.server.item.db.ItemDTO.getId()"],
    "com.sapienter.jbilling.server.order.db.OrderLineDTO.setItemId(Integer)": ["com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setItem(com.sapienter.jbilling.server.item.db.ItemDTO)"],
    "com.sapienter.jbilling.server.user.UserSessionBean.getEntityPrimaryContactType(Integer)": ["com.sapienter.jbilling.server.user.ContactBL.getPrimaryType(java.lang.Integer)"],
    "com.sapienter.jbilling.server.user.UserSessionBean.hasSubAccounts(Integer)": ["java.util.Iterator.next()", "com.sapienter.jbilling.server.user.db.UserDTO.getDeleted()", "com.sapienter.jbilling.server.user.db.CustomerDTO.getChildren()", "com.sapienter.jbilling.server.user.db.CustomerDTO.getBaseUser()", "com.sapienter.jbilling.server.user.db.UserDTO.getCustomer()", "java.util.Iterator.hasNext()", "com.sapienter.jbilling.server.user.UserBL.getEntity()", "java.util.Set.iterator()"],
    "com.sapienter.jbilling.server.util.audit.EventLogger.warning(Integer, Integer, Integer, Integer, Integer, String)": ["com.sapienter.jbilling.server.util.audit.EventLogger.log(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String)"],
    "com.sapienter.jbilling.server.order.OrderBL.setStatus(Integer, Integer)": ["com.sapienter.jbilling.server.order.db.OrderDTO.getId()", "com.sapienter.jbilling.server.order.db.OrderDTO.setOrderStatus(com.sapienter.jbilling.server.order.db.OrderStatusDTO)", "com.sapienter.jbilling.server.order.db.OrderDTO.getStatusId()", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.util.audit.EventLogger.audit(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.util.Date)", "com.sapienter.jbilling.server.system.event.EventManager.process(com.sapienter.jbilling.server.system.event.Event)", "java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.user.db.UserDTO.getCompany()", "com.sapienter.jbilling.server.user.db.UserDTO.getId()", "com.sapienter.jbilling.server.util.audit.EventLogger.auditBySystem(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.util.Date)", "com.sapienter.jbilling.server.order.db.OrderDTO.getBaseUserByUserId()", "com.sapienter.jbilling.server.util.db.AbstractGenericStatusDAS.find(java.io.Serializable)"],
    "com.sapienter.jbilling.server.item.ItemSessionBean.getEntityCurrency(Integer)": ["com.sapienter.jbilling.server.item.CurrencyBL.getEntityCurrency(java.lang.Integer)"],
    "com.sapienter.jbilling.server.order.OrderSessionBean.deletePeriod(Integer)": ["com.sapienter.jbilling.server.order.OrderBL.deletePeriod(java.lang.Integer)"],
    "com.sapienter.jbilling.server.pluggableTask.PluggableTaskSessionBean.updateParameters(Integer, PluggableTaskDTO)": ["com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskBL.updateParameters(com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDTO)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.create(UserWS, OrderWS)": ["com.sapienter.jbilling.server.order.OrderWS.setUserId(java.lang.Integer)", "com.sapienter.jbilling.server.user.UserWS.getCreditCard()", "com.sapienter.jbilling.server.payment.PaymentAuthorizationDTOEx.setResult(java.lang.Boolean)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getId()", "com.sapienter.jbilling.server.user.CreateResponseWS.setPaymentId(java.lang.Integer)", "java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.user.CreateResponseWS.setUserId(java.lang.Integer)", "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.doCreateOrder(com.sapienter.jbilling.server.order.OrderWS,boolean)", "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.doPayInvoice(com.sapienter.jbilling.server.invoice.db.InvoiceDTO,com.sapienter.jbilling.server.user.db.CreditCardDTO)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getPaymentResult()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getAuthorization()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getId()", "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.createUser(com.sapienter.jbilling.server.user.UserWS)", "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.doCreateInvoice(java.lang.Integer)", "com.sapienter.jbilling.server.user.CreateResponseWS.setOrderId(java.lang.Integer)", "com.sapienter.jbilling.server.user.CreateResponseWS.setInvoiceId(java.lang.Integer)", "com.sapienter.jbilling.server.order.OrderWS.getId()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getOldDTO()", "com.sapienter.jbilling.server.payment.db.PaymentResultDTO.getId()", "com.sapienter.jbilling.server.user.CreateResponseWS.setPaymentResult(com.sapienter.jbilling.server.payment.PaymentAuthorizationDTOEx)"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentPaypalExternalTask.getEnvironment()": ["com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase.getOptionalParameter(java.lang.String,java.lang.String)", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription.getName()"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentPaypalExternalTask.updateGatewayKey(PaymentDTOEx)": ["com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getTransactionId()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.obscureNumber()", "java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.setGatewayKey(java.lang.String)", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getAuthorization()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getCcType()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getCreditCard()"],
    "com.sapienter.jbilling.server.user.UserSessionBean.getLocale(Integer)": ["com.sapienter.jbilling.server.user.UserBL.getLocale()"],
    "com.sapienter.jbilling.server.payment.PaymentDTOEx.getPaymentMaps()": ["org.apache.log4j.Category.debug(java.lang.Object)", "java.util.List.size()", "org.apache.log4j.Logger.getLogger(java.lang.Class)"],
    "com.sapienter.jbilling.server.payment.tasks.AbstractPaymentRouterTask.process(PaymentDTOEx)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.payment.tasks.AbstractPaymentRouterTask.selectDelegate(com.sapienter.jbilling.server.payment.PaymentDTOEx)", "com.sapienter.jbilling.server.pluggableTask.PaymentTask.process(com.sapienter.jbilling.server.payment.PaymentDTOEx)", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getUserId()", "org.apache.log4j.Category.error(java.lang.Object)"],
    "com.sapienter.jbilling.server.user.UserBL.updateSubscriptionStatus(Integer)": ["org.apache.log4j.Category.debug(java.lang.Object)", "java.util.Calendar.getInstance()", "java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.process.AgeingBL.setUserStatus(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.util.Date)", "com.sapienter.jbilling.server.user.db.UserDTO.getEntity()", "com.sapienter.jbilling.server.user.db.UserDTO.getSubscriberStatus()", "com.sapienter.jbilling.server.user.db.UserDTO.setSubscriberStatus(com.sapienter.jbilling.server.user.db.SubscriberStatusDTO)", "java.lang.Integer.toString()", "com.sapienter.jbilling.server.util.PreferenceBL.getInt()", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.util.PreferenceBL.set(java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.util.audit.EventLogger.auditBySystem(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.util.Date)", "com.sapienter.jbilling.server.user.db.UserDTO.getId()", "com.sapienter.jbilling.server.util.db.AbstractGenericStatus.getId()", "java.util.Calendar.getTime()", "com.sapienter.jbilling.server.user.db.UserDTO.getUserId()", "com.sapienter.jbilling.server.util.db.AbstractGenericStatusDAS.find(java.io.Serializable)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.processPayment(PaymentWS, Integer)": ["com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerCompanyId()", "org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.payment.PaymentWS.getAch()", "com.sapienter.jbilling.server.payment.IPaymentSessionBean.processAndUpdateInvoice(com.sapienter.jbilling.server.payment.PaymentDTOEx,java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.payment.PaymentAuthorizationDTOEx.setResult(java.lang.Boolean)", "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.validatePayment(com.sapienter.jbilling.server.payment.PaymentWS)", "com.sapienter.jbilling.server.payment.PaymentWS.getCreditCard()", "java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getCcType()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getAuthorization()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.setAch(com.sapienter.jbilling.server.user.db.AchDTO)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setPaymentMethod(com.sapienter.jbilling.server.payment.db.PaymentMethodDTO)", "com.sapienter.jbilling.server.payment.PaymentWS.getUserId()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.setCreditCard(com.sapienter.jbilling.server.user.db.CreditCardDTO)", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getAch()", "com.sapienter.jbilling.server.entity.PaymentAuthorizationDTO.getId()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getAch()", "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.payInvoice(java.lang.Integer)", "com.sapienter.jbilling.server.payment.PaymentBL.findPaymentInstrument(java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getId()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getOldDTO()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getCreditCard()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getCreditCard()"],
    "com.sapienter.jbilling.server.order.UsageBL.getCycleStartDate()": ["com.sapienter.jbilling.server.order.UsagePeriod.getCycleStartDate()"],
    "com.sapienter.jbilling.server.order.OrderBL.getDueDate()": ["com.sapienter.jbilling.server.order.TimePeriod.setDf_fm(java.lang.Boolean)", "com.sapienter.jbilling.server.order.TimePeriod.setDf_fm(java.lang.Integer)", "com.sapienter.jbilling.server.order.TimePeriod.setValue(java.lang.Integer)", "com.sapienter.jbilling.server.user.db.CustomerDTO.getDueDateUnitId()", "com.sapienter.jbilling.server.user.db.UserDTO.getEntity()", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.getDfFm()", "com.sapienter.jbilling.server.process.ConfigurationBL.getEntity()", "com.sapienter.jbilling.server.user.db.UserDTO.getCustomer()", "com.sapienter.jbilling.server.user.db.CustomerDTO.getDueDateValue()", "com.sapienter.jbilling.server.util.PreferenceBL.getInt()", "com.sapienter.jbilling.server.order.TimePeriod.setOwn_invoice(java.lang.Integer)", "com.sapienter.jbilling.server.order.TimePeriod.setUnitId(java.lang.Integer)", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.getDueDateUnitId()", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.order.db.OrderDTO.getUser()", "com.sapienter.jbilling.server.order.db.OrderDTO.getOwnInvoice()", "com.sapienter.jbilling.server.user.db.UserDTO.getCompany()", "com.sapienter.jbilling.server.order.db.OrderDTO.getDfFm()", "com.sapienter.jbilling.server.order.db.OrderDTO.getDueDateUnitId()", "com.sapienter.jbilling.server.util.PreferenceBL.set(java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.user.db.CustomerDTO.getDfFm()", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.getDueDateValue()", "com.sapienter.jbilling.server.order.db.OrderDTO.getDueDateValue()", "com.sapienter.jbilling.server.order.db.OrderDTO.getBaseUserByUserId()"],
    "com.sapienter.jbilling.server.process.db.ProcessRunDTO.toString()": ["java.lang.StringBuffer.toString()", "com.sapienter.jbilling.server.process.db.ProcessRunTotalDTO.toString()", "java.lang.StringBuffer.append(java.lang.String)"],
    "com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.buildGetCustomerProfileRequest(String)": ["com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.getMerchantAuthenticationXML()", "com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.endTag(java.lang.StringBuffer,java.lang.String)", "java.lang.StringBuffer.toString()", "com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.buildTag(java.lang.StringBuffer,java.lang.String,java.lang.String)", "java.lang.StringBuffer.append(java.lang.String)"],
    "com.sapienter.jbilling.server.order.db.OrderLineDAS.findRecurringByUserItem(Integer, Integer)": ["org.hibernate.Query.list()", "java.util.List.isEmpty()", "getSession()", "org.hibernate.Query.setParameter(java.lang.String,java.lang.Integer)", "createQuery(java.lang.String)", "java.util.List.get(int)"],
    "com.sapienter.jbilling.server.customer.CustomerBL.getList(int, Integer, Integer)": ["java.sql.Connection.close()", "javax.sql.RowSet.setInt(int,int)", "java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.list.ResultList.execute()", "com.sapienter.jbilling.server.list.ResultList.prepareStatement(java.lang.String)", "java.lang.Integer.intValue()"],
    "com.sapienter.jbilling.server.util.db.InternationalDescriptionId.equals(Object)": ["com.sapienter.jbilling.server.util.db.InternationalDescriptionId.getTableId()", "java.lang.String.equals(java.lang.Object)", "com.sapienter.jbilling.server.util.db.InternationalDescriptionId.getPsudoColumn()", "com.sapienter.jbilling.server.util.db.InternationalDescriptionId.getLanguageId()", "com.sapienter.jbilling.server.util.db.InternationalDescriptionId.getForeignId()"],
    "com.sapienter.jbilling.server.user.partner.PartnerBL.create(Partner)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.user.partner.db.Partner.setTotalPayments(java.math.BigDecimal)", "com.sapienter.jbilling.server.user.partner.PartnerBL.setRelatedClerk(com.sapienter.jbilling.server.user.partner.db.Partner,java.lang.Integer)", "com.sapienter.jbilling.server.user.partner.db.Partner.getRelatedClerkUserId()", "com.sapienter.jbilling.server.user.partner.db.Partner.setDuePayout(java.math.BigDecimal)", "com.sapienter.jbilling.server.user.partner.db.Partner.setTotalPayouts(java.math.BigDecimal)", "com.sapienter.jbilling.server.user.partner.db.Partner.getId()", "com.sapienter.jbilling.server.user.partner.db.Partner.setTotalRefunds(java.math.BigDecimal)", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)"],
    "com.sapienter.jbilling.server.order.db.OrderLineDAS.findOnetimeByUserItem(Integer, Integer)": ["org.hibernate.Query.list()", "getSession()", "org.hibernate.Query.setParameter(java.lang.String,java.lang.Integer)", "createQuery(java.lang.String)"],
    "com.sapienter.jbilling.server.process.BillingProcessSessionBean.doRetry(Integer, int, Date)": ["org.apache.log4j.Category.debug(java.lang.Object)", "java.util.Iterator.next()", "com.sapienter.jbilling.server.process.IBillingProcessSessionBean.verifyIsRetry(java.lang.Integer,int,java.util.Date)", "com.sapienter.jbilling.server.system.event.EventManager.process(com.sapienter.jbilling.server.system.event.Event)", "com.sapienter.jbilling.server.process.db.BillingProcessDTO.getEntity()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getId()", "com.sapienter.jbilling.server.process.db.BillingProcessDTO.getRetriesToDo()", "com.sapienter.jbilling.server.process.db.BillingProcessDTO.setRetriesToDo(int)", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "com.sapienter.jbilling.server.invoice.db.InvoiceDAS.findProccesableByProcess(java.lang.Integer)", "com.sapienter.jbilling.server.process.IBillingProcessSessionBean.createRetryRun(java.lang.Integer)", "java.util.Iterator.hasNext()", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.process.BillingProcessRunBL.updateFinished(java.lang.Integer)", "com.sapienter.jbilling.server.process.BillingProcessBL.getEntity()", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.invoice.InvoiceBL.getHome()", "java.util.Collection.iterator()"],
    "com.sapienter.jbilling.server.user.db.CreditCardDTO.setNumber(String)": ["java.lang.String.substring(int)", "java.lang.String.trim()", "com.sapienter.jbilling.common.JBCrypto.getCreditCardCrypto()", "com.sapienter.jbilling.common.Util.getPaymentMethod(java.lang.String)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.setRawNumber(java.lang.String)", "java.lang.String.equals(java.lang.Object)", "com.sapienter.jbilling.common.JBCrypto.encrypt(java.lang.String)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.setCcNumberPlain(java.lang.String)", "java.lang.String.length()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.setCcType(java.lang.Integer)"],
    "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.buildFromContactAndCreditCardOrACH(ContactDTO, CreditCardDTO, AchDTO)": ["com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.fillWith(com.sapienter.jbilling.server.user.contact.db.ContactDTO,com.sapienter.jbilling.server.user.db.CreditCardDTO,com.sapienter.jbilling.server.user.db.AchDTO)"],
    "com.sapienter.jbilling.server.order.db.OrderDTO.getStatusId()": ["com.sapienter.jbilling.server.util.db.AbstractGenericStatus.getId()", "com.sapienter.jbilling.server.order.db.OrderDTO.getOrderStatus()"],
    "com.sapienter.jbilling.client.authentication.HttpAuthenticationEntryPoint.commence(HttpServletRequest, HttpServletResponse, AuthenticationException)": ["javax.servlet.http.HttpServletResponse.sendError()", "org.springframework.security.core.AuthenticationException.getMessage()"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.isMediationProcessing()": ["com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerCompanyId()", "com.sapienter.jbilling.server.mediation.IMediationSessionBean.isProcessing(java.lang.Integer)", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)"],
    "com.sapienter.jbilling.server.order.OrderBL.updateOrderLine(OrderLineWS)": ["com.sapienter.jbilling.server.order.OrderLineWS.getDeleted()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setQuantity(java.math.BigDecimal)", "com.sapienter.jbilling.server.order.OrderLineWS.getQuantity()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setProvisioningStatus(com.sapienter.jbilling.server.provisioning.db.ProvisioningStatusDTO)", "com.sapienter.jbilling.server.order.OrderLineWS.getDescription()", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "java.math.BigDecimal.compareTo(java.math.BigDecimal)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setDescription(java.lang.String)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setItem(com.sapienter.jbilling.server.item.db.ItemDTO)", "com.sapienter.jbilling.server.order.OrderLineWS.getQuantityAsDecimal()", "com.sapienter.jbilling.server.order.OrderLineWS.getProvisioningStatusId()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setAmount(java.math.BigDecimal)", "com.sapienter.jbilling.server.order.OrderLineWS.getItemId()", "com.sapienter.jbilling.server.order.OrderBL.getOrderLine(java.lang.Integer)", "com.sapienter.jbilling.server.order.OrderLineWS.getAmountAsDecimal()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setDeleted(int)", "com.sapienter.jbilling.server.order.OrderLineWS.getProvisioningRequestId()", "com.sapienter.jbilling.server.order.OrderLineWS.getId()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setPrice(java.math.BigDecimal)", "com.sapienter.jbilling.server.order.OrderLineWS.getPriceAsDecimal()", "com.sapienter.jbilling.server.util.db.AbstractDAS.delete(java.lang.Object)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setProvisioningRequestId(java.lang.String)", "com.sapienter.jbilling.server.util.db.AbstractGenericStatusDAS.find(java.io.Serializable)"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask.getSellerId()": ["com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase.getOptionalParameter(java.lang.String,java.lang.String)"],
    "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.fillWith(ContactDTO, CreditCardDTO, AchDTO)": ["com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.setAccountNumber(java.lang.String)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getSecurityCode()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.isNumberObsucred()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getCcExpiry()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getOrganizationName()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getFaxNumber()", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.setAddress(java.lang.String)", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.setPhoneNumber(java.lang.String)", "com.sapienter.jbilling.server.user.db.AchDTO.getBankName()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getEmail()", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.setState(java.lang.String)", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.setFaxNumber(java.lang.String)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getNumber()", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.setLastName(java.lang.String)", "com.sapienter.jbilling.server.user.db.AchDTO.getAccountName()", "com.sapienter.jbilling.server.user.db.AchDTO.getAccountType()", "java.text.DateFormat.format(java.util.Date)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getLastName()", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.setEmail(java.lang.String)", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.setAccountName(java.lang.String)", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.setCreditCardNumber(java.lang.String)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getPhoneNumber()", "com.sapienter.jbilling.server.user.db.AchDTO.getAbaRouting()", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.setRoutingNumber(java.lang.String)", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.setCountry(java.lang.String)", "com.sapienter.jbilling.server.user.db.AchDTO.getBankAccount()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getStateProvince()", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.setAccountType(java.lang.String)", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.setCompany(java.lang.String)", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.setCity(java.lang.String)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getCity()", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.setPaymentType(int)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getCountryCode()", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.setFirstName(java.lang.String)", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.setBankName(java.lang.String)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getFirstName()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getAddress1()", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.setCreditCardExpirationDate(java.lang.String)"],
    "com.sapienter.jbilling.server.payment.PaymentSessionBean.isMethodAccepted(Integer, Integer)": ["com.sapienter.jbilling.server.payment.PaymentBL.isMethodAccepted(java.lang.Integer,java.lang.Integer)"],
    "com.sapienter.jbilling.server.order.OrderSessionBean.getMainOrder(Integer)": ["com.sapienter.jbilling.server.order.OrderBL.getMainOrderId(java.lang.Integer)", "com.sapienter.jbilling.server.order.OrderSessionBean.getOrder(java.lang.Integer)"],
    "com.sapienter.jbilling.server.payment.PaymentSessionBean.update(Integer, PaymentDTOEx)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.payment.PaymentBL.update(java.lang.Integer,com.sapienter.jbilling.server.payment.PaymentDTOEx)", "java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.payment.PaymentBL.getEntity()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getPaymentResult()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getId()", "com.sapienter.jbilling.server.payment.db.PaymentResultDTO.getId()"],
    "com.sapienter.jbilling.server.mediation.task.AbstractJDBCReader.init()": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.mediation.task.AbstractJDBCReader.getTableName()", "java.lang.String.split(java.lang.String)", "com.sapienter.jbilling.server.mediation.task.AbstractReader.getBatchSize()", "org.springframework.jdbc.datasource.DataSourceUtils.releaseConnection(java.sql.Connection,javax.sql.DataSource)", "com.sapienter.jbilling.server.mediation.task.JDBCUtils.correctColumnName(java.sql.Connection,java.lang.String,java.lang.String)", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription.getName()", "org.springframework.jdbc.datasource.DataSourceUtils.getConnection(javax.sql.DataSource)", "org.springframework.jdbc.core.JdbcTemplate.setMaxRows(int)", "com.sapienter.jbilling.server.mediation.task.AbstractJDBCReader.getKeyColumns()", "com.sapienter.jbilling.server.mediation.task.AbstractJDBCReader.getDataSource()", "com.sapienter.jbilling.server.pluggableTask.PluggableTask.getParameter(java.lang.String,java.lang.String)", "com.sapienter.jbilling.server.mediation.task.AbstractJDBCReader.getMarkMethod()", "com.sapienter.jbilling.server.mediation.task.JDBCUtils.correctTableName(java.sql.Connection,java.lang.String)", "com.sapienter.jbilling.server.mediation.task.AbstractJDBCReader.getTimestampColumnName()", "com.sapienter.jbilling.server.mediation.task.JDBCUtils.correctColumnNames(java.sql.Connection,java.lang.String,java.lang.String[])", "com.sapienter.jbilling.server.pluggableTask.PluggableTask.getParameter(java.lang.String,java.lang.Boolean)"],
    "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskTypeDAS.findAllByCategory(Integer)": ["org.apache.log4j.Category.debug(java.lang.Object)", "org.hibernate.Query.list()", "getSession()", "org.hibernate.Query.setComment(java.lang.String)", "java.util.List.size()", "org.hibernate.Query.setParameter(java.lang.String,java.lang.Integer)", "createQuery(java.lang.String)"],
    "com.sapienter.jbilling.server.notification.barcode.BarcodeFactory.codabar(Checksum, TextPlacement)": ["org.krysalis.barcode4j.impl.codabar.CodabarBean.setChecksumMode(org.krysalis.barcode4j.ChecksumMode)", "com.sapienter.jbilling.server.notification.barcode.BarcodeFactory.getPlacement(com.sapienter.jbilling.server.notification.barcode.TextPlacement)", "org.krysalis.barcode4j.impl.codabar.CodabarBean.setMsgPosition(org.krysalis.barcode4j.HumanReadablePlacement)", "com.sapienter.jbilling.server.notification.barcode.BarcodeFactory.getChecksum(com.sapienter.jbilling.server.notification.barcode.Checksum)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.updateOrderPeriods(OrderPeriodWS[])": ["com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerCompanyId()", "com.sapienter.jbilling.server.order.OrderPeriodWS.getDescriptions()", "org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.util.InternationalDescriptionWS.getContent()", "com.sapienter.jbilling.server.util.db.AbstractDAS.flush()", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "java.lang.Integer.intValue()", "com.sapienter.jbilling.server.order.db.OrderPeriodDTO.setCompany(com.sapienter.jbilling.server.user.db.CompanyDTO)", "com.sapienter.jbilling.server.util.InternationalDescriptionWS.getLanguageId()", "com.sapienter.jbilling.server.util.db.AbstractDAS.clear()", "java.util.List.size()", "com.sapienter.jbilling.server.util.db.AbstractDescription.setDescription(java.lang.String,java.lang.Integer)", "com.sapienter.jbilling.server.order.db.OrderPeriodDTO.setUnitId(int)", "com.sapienter.jbilling.server.order.db.OrderPeriodDTO.setValue(java.lang.Integer)", "com.sapienter.jbilling.server.order.OrderPeriodWS.getPeriodUnitId()", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)", "java.util.List.get(int)", "com.sapienter.jbilling.server.order.OrderPeriodWS.getId()", "com.sapienter.jbilling.server.order.OrderPeriodWS.getValue()"],
    "com.sapienter.jbilling.server.user.partner.PartnerWS.getOwningUserId()": ["com.sapienter.jbilling.server.user.partner.PartnerWS.getUserId()"],
    "com.sapienter.jbilling.server.payment.PaymentBL.getManyWS(Integer, Integer, Integer)": ["com.sapienter.jbilling.server.payment.db.PaymentDAS.findIdsByUserLatestFirst(java.lang.Integer,int)", "java.util.List.size()", "java.util.List.toArray(java.lang.Object[])"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.createUpdateOrder(OrderWS)": ["com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerCompanyId()", "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerLanguageId()", "com.sapienter.jbilling.server.order.IOrderSessionBean.createUpdate(java.lang.Integer,java.lang.Integer,com.sapienter.jbilling.server.order.db.OrderDTO,java.lang.Integer)", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerId()", "com.sapienter.jbilling.server.order.OrderBL.getDTO(com.sapienter.jbilling.server.order.OrderWS)"],
    "com.sapienter.jbilling.server.process.BillingProcessBL.init()": ["com.sapienter.jbilling.server.util.audit.EventLogger.getInstance()"],
    "com.sapienter.jbilling.server.user.tasks.BasicSubscriptionStatusManagerTask.paymentFailed(Integer, PaymentDTOEx)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.user.tasks.BasicSubscriptionStatusManagerTask.isLastRetry()", "com.sapienter.jbilling.server.user.UserBL.updateSubscriptionStatus(java.lang.Integer)", "com.sapienter.jbilling.server.user.tasks.BasicSubscriptionStatusManagerTask.getUser(java.lang.Integer)", "java.lang.Integer.equals(java.lang.Object)", "org.apache.log4j.Category.warn(java.lang.Object)", "com.sapienter.jbilling.server.user.tasks.BasicSubscriptionStatusManagerTask.isPaymentApplicable(boolean)", "com.sapienter.jbilling.server.user.UserBL.getEntity()", "com.sapienter.jbilling.server.util.db.AbstractGenericStatus.getId()", "com.sapienter.jbilling.server.user.db.UserDTO.getSubscriberStatus()"],
    "com.sapienter.jbilling.server.user.CreditCardBL.getUser()": ["com.sapienter.jbilling.server.user.CreditCardBL.getUser(com.sapienter.jbilling.server.user.db.CreditCardDTO)"],
    "com.sapienter.jbilling.server.invoice.InvoiceBL.getPayableInvoicesByUser(Integer)": ["java.sql.Connection.close()", "javax.sql.RowSet.setInt(int,int)", "com.sapienter.jbilling.server.list.ResultList.execute()", "com.sapienter.jbilling.server.list.ResultList.prepareStatement(java.lang.String)", "java.lang.Integer.intValue()"],
    "com.sapienter.jbilling.server.process.task.BusinessDayAgeingTask.isInvoiceOverdue(InvoiceDTO, UserDTO, Integer, Date)": ["org.apache.log4j.Category.debug(java.lang.Object)", "java.util.Date.before(java.util.Date)", "com.sapienter.jbilling.server.process.task.BusinessDayAgeingTask.getBusinessDaysHelper()", "com.sapienter.jbilling.server.process.BusinessDays.addBusinessDays(java.util.Date,int)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getDueDate()"],
    "com.sapienter.jbilling.server.user.partner.PartnerWS.setTotalRefunds(BigDecimal)": ["java.math.BigDecimal.toString()"],
    "com.sapienter.jbilling.tools.Trigger.main(String[])": ["java.io.PrintStream.println(java.lang.String)", "com.sapienter.jbilling.server.user.IUserSessionBean.processPayouts(java.util.Date)", "java.util.Calendar.getInstance()", "com.sapienter.jbilling.server.process.IBillingProcessSessionBean.trigger(java.util.Date)", "com.sapienter.jbilling.common.Util.parseDate(java.lang.String)", "com.sapienter.jbilling.server.order.IOrderSessionBean.reviewNotifications(java.util.Date)", "java.lang.Integer.intValue()", "com.sapienter.jbilling.server.process.IBillingProcessSessionBean.reviewUsersStatus(java.lang.Integer,java.util.Date)", "java.lang.Integer.valueOf(java.lang.String)", "com.sapienter.jbilling.common.Util.truncateDate(java.util.Date)", "com.sapienter.jbilling.server.invoice.IInvoiceSessionBean.sendReminders(java.util.Date)", "com.sapienter.jbilling.server.user.IUserSessionBean.notifyCreditCardExpiration(java.util.Date)", "java.util.Calendar.getTime()", "java.lang.Throwable.printStackTrace()"],
    "com.sapienter.jbilling.server.item.ItemBL.getPrice(Integer, BigDecimal, Integer)": ["com.sapienter.jbilling.server.item.ItemBL.getPrice(java.lang.Integer,java.lang.Integer,java.math.BigDecimal,java.lang.Integer,com.sapienter.jbilling.server.order.db.OrderDTO)", "com.sapienter.jbilling.server.user.UserBL.getCurrencyId()"],
    "com.sapienter.jbilling.server.order.Usage.toString()": ["com.sapienter.jbilling.server.order.Usage.getAmount()", "com.sapienter.jbilling.server.order.Usage.getQuantity()"],
    "com.sapienter.jbilling.server.process.task.BasicAgeingTask.sendAgeingNotification(UserDTO, UserStatusDTO, UserStatusDTO)": ["com.sapienter.jbilling.server.notification.NotificationBL.getAgeingMessage(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.process.task.BasicAgeingTask.getStatusDescription(com.sapienter.jbilling.server.user.db.UserStatusDTO)", "com.sapienter.jbilling.server.user.db.UserDTO.getLanguage()", "org.apache.log4j.Category.warn(java.lang.Object)", "com.sapienter.jbilling.server.user.db.UserDTO.getEntity()", "com.sapienter.jbilling.server.util.db.LanguageDTO.getId()", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "com.sapienter.jbilling.server.notification.INotificationSessionBean.notify(com.sapienter.jbilling.server.user.db.UserDTO,com.sapienter.jbilling.server.notification.MessageDTO)", "com.sapienter.jbilling.server.user.db.UserDTO.getId()", "com.sapienter.jbilling.server.util.db.AbstractGenericStatus.getId()"],
    "com.sapienter.jbilling.server.user.UserWS.getOwningUserId()": ["com.sapienter.jbilling.server.user.UserWS.getUserId()"],
    "com.sapienter.jbilling.server.item.ItemBL.getDTO(Integer, Integer, Integer, Integer, BigDecimal)": ["com.sapienter.jbilling.server.item.ItemBL.getDTO(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.math.BigDecimal,com.sapienter.jbilling.server.order.db.OrderDTO)"],
    "com.sapienter.jbilling.server.provisioning.ProvisioningProcessBL.activateOrders()": ["org.apache.log4j.Category.debug(java.lang.Object)", "java.util.Iterator.next()", "java.util.List.iterator()", "java.util.Iterator.hasNext()", "com.sapienter.jbilling.server.order.db.OrderDAS.findToActivateOrders()", "com.sapienter.jbilling.server.provisioning.ProvisioningProcessBL.activateOrder(com.sapienter.jbilling.server.order.db.OrderDTO)"],
    "com.sapienter.jbilling.server.payment.tasks.SaveCreditCardExternallyTask.getContactType()": ["java.util.Map.get(java.lang.Object)", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription.getName()", "java.lang.Integer.parseInt(java.lang.String)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getReviewBillingProcess()": ["com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerCompanyId()", "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerLanguageId()", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "com.sapienter.jbilling.server.process.BillingProcessBL.getWS(com.sapienter.jbilling.server.process.BillingProcessDTOEx)", "com.sapienter.jbilling.server.process.IBillingProcessSessionBean.getReviewDto(java.lang.Integer,java.lang.Integer)"],
    "com.sapienter.jbilling.server.invoice.PaperInvoiceBatchBL.generateFile(CachedRowSet, Integer, String)": ["org.apache.log4j.Category.debug(java.lang.Object)", "java.sql.ResultSet.next()", "com.sapienter.jbilling.server.invoice.PaperInvoiceBatchBL.compileInvoiceFiles(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer[])", "java.lang.String.substring(int,int)", "java.sql.ResultSet.getInt(int)", "com.sapienter.jbilling.server.notification.NotificationBL.generatePaperInvoiceAsFile(com.sapienter.jbilling.server.invoice.db.InvoiceDTO)", "java.lang.System.currentTimeMillis()", "java.util.List.add(java.lang.Object)", "com.sapienter.jbilling.server.invoice.InvoiceBL.getEntity()", "java.lang.String.valueOf(long)", "java.util.List.size()", "java.lang.String.indexOf(java.lang.String)", "java.util.List.toArray(java.lang.Object[])"],
    "com.sapienter.jbilling.server.item.CurrencyBL.findExchange(Integer, Integer)": ["com.sapienter.jbilling.server.util.db.CurrencyExchangeDAS.findExchange(java.lang.Integer,java.lang.Integer)"],
    "com.sapienter.jbilling.server.util.PreferenceBL.getDefaultValue(Integer)": ["com.sapienter.jbilling.server.util.db.PreferenceTypeDTO.getDefaultValue()", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)"],
    "com.sapienter.jbilling.common.SystemProperties.getPropertiesFile()": ["java.net.URL.getFile()", "com.sapienter.jbilling.common.SystemProperties.getJBillingHome()", "java.lang.Class.getResource(java.lang.String)"],
    "com.sapienter.jbilling.server.process.BillingProcessSessionBean.emailAndPayment(Integer, Integer, Integer, boolean)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.notification.NotificationBL.getInvoiceMessages(java.lang.Integer,java.lang.Integer,java.lang.Integer,com.sapienter.jbilling.server.invoice.db.InvoiceDTO)", "org.springframework.transaction.interceptor.TransactionAspectSupport.currentTransactionStatus()", "com.sapienter.jbilling.server.system.event.EventManager.process(com.sapienter.jbilling.server.system.event.Event)", "org.apache.log4j.Category.warn(java.lang.Object)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getCarriedBalance()", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "com.sapienter.jbilling.server.invoice.InvoiceBL.getEntity()", "setRollbackOnly()", "com.sapienter.jbilling.server.invoice.InvoiceBL.getDTO()", "java.math.BigDecimal.compareTo(java.math.BigDecimal)", "com.sapienter.jbilling.server.util.PreferenceBL.getInt()", "com.sapienter.jbilling.server.user.db.UserDTO.getLanguageIdField()", "com.sapienter.jbilling.server.notification.INotificationSessionBean.notify(java.lang.Integer,com.sapienter.jbilling.server.notification.MessageDTO)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getBalance()", "com.sapienter.jbilling.server.util.PreferenceBL.set(java.lang.Integer,java.lang.Integer)", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getBaseUser()", "com.sapienter.jbilling.server.user.db.UserDTO.getUserId()"],
    "com.sapienter.jbilling.server.order.OrderLineWS.setAmount(BigDecimal)": ["java.math.BigDecimal.toString()"],
    "com.sapienter.jbilling.server.order.OrderBL.getOrderLine(Integer)": ["com.sapienter.jbilling.server.util.db.AbstractDAS.findNow(java.io.Serializable)"],
    "com.sapienter.jbilling.server.order.OrderSessionBean.getCountWithDecimals(Integer)": ["com.sapienter.jbilling.server.order.db.OrderLineDAS.findLinesWithDecimals(java.lang.Integer)"],
    "com.sapienter.jbilling.server.provisioning.task.CAIProvisioningTask.fieldSplitIndex(String, int)": ["java.lang.String.indexOf(int,int)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.updateUserContact(Integer, Integer, ContactWS)": ["com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerCompanyId()", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.user.ContactBL.updateForUser(com.sapienter.jbilling.server.user.ContactDTOEx,java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.user.contact.db.ContactTypeDTO.getEntity()"],
    "com.sapienter.jbilling.server.payment.PaymentAuthorizationDTOEx.toString()": ["com.sapienter.jbilling.server.entity.PaymentAuthorizationDTO.toString()"],
    "com.sapienter.jbilling.server.mediation.MediationRecordWS.toString()": ["java.util.List.size()"],
    "com.sapienter.jbilling.server.mediation.task.MySQLReader.getUrl()": ["java.util.Map.get(java.lang.Object)", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription.getName()", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.toString()", "com.sapienter.jbilling.server.mediation.task.AbstractJDBCReader.getDatabaseName()"],
    "com.sapienter.jbilling.server.process.BillingProcessRunBL.addProcessRunUser(Integer, Integer)": ["com.sapienter.jbilling.server.process.db.ProcessRunUserDTO.setStatus(java.lang.Integer)", "com.sapienter.jbilling.server.process.db.ProcessRunUserDAS.create(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.util.Date)", "com.sapienter.jbilling.server.process.db.ProcessRunDTO.getId()", "java.util.Calendar.getInstance()", "java.util.Calendar.getTime()", "com.sapienter.jbilling.server.process.db.ProcessRunUserDAS.getUser(java.lang.Integer,java.lang.Integer)"],
    "com.sapienter.jbilling.server.util.db.AbstractDAS.flush()": ["flush()", "com.sapienter.jbilling.server.util.db.AbstractDAS.getHibernateTemplate()"],
    "com.sapienter.jbilling.server.user.UserSessionBean.getVoidContactDTO(Integer)": ["com.sapienter.jbilling.server.user.ContactBL.getVoidDTO(java.lang.Integer)"],
    "com.sapienter.jbilling.server.util.DTOFactory.getUserDTOEx(UserDTO)": ["com.sapienter.jbilling.server.user.UserDTOEx.setStatusStr(java.lang.String)", "com.sapienter.jbilling.server.user.db.UserDTO.setCurrency(com.sapienter.jbilling.server.util.db.CurrencyDTO)", "com.sapienter.jbilling.server.user.UserDTOEx.setBalance(java.math.BigDecimal)", "com.sapienter.jbilling.server.user.db.CompanyDTO.getCurrency()", "com.sapienter.jbilling.server.user.permisson.db.RoleDTO.getTitle(java.lang.Integer)", "com.sapienter.jbilling.server.user.db.UserDTO.getEntity()", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.user.UserDTOEx.setLastInvoiceId(java.lang.Integer)", "com.sapienter.jbilling.server.user.UserDTOEx.setMainRoleStr(java.lang.String)", "com.sapienter.jbilling.server.user.db.UserDTO.getLanguageIdField()", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.user.db.UserDTO.getAchs()", "com.sapienter.jbilling.server.payment.blacklist.BlacklistBL.isUserIdBlacklisted(java.lang.Integer)", "com.sapienter.jbilling.server.user.UserDTOEx.setCreditCard(com.sapienter.jbilling.server.user.db.CreditCardDTO)", "com.sapienter.jbilling.server.user.UserDTOEx.setBlacklistMatches(java.util.List)", "com.sapienter.jbilling.server.user.UserDTOEx.setLanguageStr(java.lang.String)", "com.sapienter.jbilling.server.util.db.AbstractDescription.getDescription(java.lang.Integer)", "com.sapienter.jbilling.server.user.db.UserDTO.getPartner()", "com.sapienter.jbilling.server.user.db.UserDTO.setPartner(com.sapienter.jbilling.server.user.partner.db.Partner)", "java.util.Set.addAll(java.util.Collection)", "java.util.Set.isEmpty()", "com.sapienter.jbilling.server.user.UserBL.getBalance(java.lang.Integer)", "com.sapienter.jbilling.server.user.db.UserDTO.getCreditCards()", "com.sapienter.jbilling.server.user.db.UserDTO.getId()", "com.sapienter.jbilling.server.util.db.AbstractGenericStatus.getId()", "com.sapienter.jbilling.server.user.AchBL.getDTO()", "com.sapienter.jbilling.server.user.partner.PartnerBL.getDTO()", "java.util.Set.iterator()", "com.sapienter.jbilling.server.user.db.UserDTO.getUserId()", "com.sapienter.jbilling.server.payment.blacklist.BlacklistBL.getBlacklistMatches(java.lang.Integer)", "com.sapienter.jbilling.server.user.UserDTOEx.setSubscriptionStatusStr(java.lang.String)", "com.sapienter.jbilling.server.user.db.UserDTO.getCustomer()", "com.sapienter.jbilling.server.item.CurrencyBL.getEntity()", "com.sapienter.jbilling.server.user.UserDTOEx.setCurrencySymbol(java.lang.String)", "com.sapienter.jbilling.server.user.db.AchDTO.getId()", "com.sapienter.jbilling.server.user.UserDTOEx.setLocale(java.util.Locale)", "com.sapienter.jbilling.server.invoice.InvoiceBL.getLastByUser(java.lang.Integer)", "com.sapienter.jbilling.server.user.permisson.db.RoleDTO.getId()", "java.util.Set.toArray()", "com.sapienter.jbilling.server.user.db.UserDTO.getCompany()", "com.sapienter.jbilling.server.user.UserBL.getLocale()", "com.sapienter.jbilling.server.user.UserDTOEx.setCurrencyName(java.lang.String)", "java.util.Iterator.next()", "com.sapienter.jbilling.server.util.db.LanguageDTO.getDescription()", "com.sapienter.jbilling.server.user.db.UserDTO.setCustomer(com.sapienter.jbilling.server.user.db.CustomerDTO)", "com.sapienter.jbilling.server.util.db.CurrencyDTO.getSymbol()", "com.sapienter.jbilling.server.user.db.UserDTO.getStatus()", "com.sapienter.jbilling.server.user.UserDTOEx.setSubscriptionStatusId(java.lang.Integer)", "com.sapienter.jbilling.server.user.UserDTOEx.setAch(com.sapienter.jbilling.server.user.db.AchDTO)", "com.sapienter.jbilling.server.user.db.UserDTO.getSubscriberStatus()", "com.sapienter.jbilling.server.user.UserDTOEx.setStatusId(java.lang.Integer)", "com.sapienter.jbilling.server.user.db.UserDTO.getCurrencyId()", "com.sapienter.jbilling.server.user.UserDTOEx.setUserIdBlacklisted(java.lang.Boolean)", "com.sapienter.jbilling.server.user.UserDTOEx.setMainRoleId(java.lang.Integer)", "com.sapienter.jbilling.server.user.db.UserDTO.getRoles()", "com.sapienter.jbilling.server.payment.blacklist.BlacklistBL.isBlacklistEnabled(java.lang.Integer)"],
    "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskBL.validate(PluggableTaskDTO)": ["java.lang.Integer.equals(java.lang.Object)", "java.util.List.add(java.lang.Object)", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskParameterDTO.getStrValue()", "java.util.Collection.size()", "java.lang.String.trim()", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskTypeDTO.getCategory()", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskParameterDTO.getName()", "java.lang.String.equals(java.lang.Object)", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDTO.getId()", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDTO.getType()", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)", "java.lang.String.length()", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskManager.getInstance(java.lang.String,java.lang.String)", "com.sapienter.jbilling.common.SessionInternalError.setErrorMessages(java.lang.String[])", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription.isRequired()", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription.getName()", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDTO.getParameters()", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskTypeCategoryDTO.getId()", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDTO.getEntityId()", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskTypeDTO.getClassName()", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskTypeCategoryDTO.getInterfaceName()", "java.util.List.size()", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDTO.getProcessingOrder()", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDAS.findByEntityCategoryOrder(java.lang.Integer,java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.pluggableTask.PluggableTask.getParameterDescriptions()"],
    "com.sapienter.jbilling.server.order.OrderBL.getOnetimeOrderLines(Integer, Integer)": ["com.sapienter.jbilling.server.order.db.OrderLineDAS.findOnetimeByUserItem(java.lang.Integer,java.lang.Integer)"],
    "com.sapienter.jbilling.server.process.PeriodOfTime.getEnd()": ["org.joda.time.DateMidnight.toDate()"],
    "com.sapienter.jbilling.server.notification.barcode.BarcodeFactory.upcA(Checksum, TextPlacement)": ["org.krysalis.barcode4j.impl.upcean.UPCABean.setMsgPosition(org.krysalis.barcode4j.HumanReadablePlacement)", "com.sapienter.jbilling.server.notification.barcode.BarcodeFactory.getPlacement(com.sapienter.jbilling.server.notification.barcode.TextPlacement)", "org.krysalis.barcode4j.impl.upcean.UPCABean.setChecksumMode(org.krysalis.barcode4j.ChecksumMode)", "com.sapienter.jbilling.server.notification.barcode.BarcodeFactory.getChecksum(com.sapienter.jbilling.server.notification.barcode.Checksum)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCreditCard(Integer)": ["com.sapienter.jbilling.server.payment.PaymentBL.findPaymentInstrument(java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.user.UserBL.hasCreditCard()", "com.sapienter.jbilling.server.user.UserBL.getEntityId(java.lang.Integer)", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getCreditCard()", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)"],
    "com.sapienter.jbilling.server.provisioning.task.ProvisioningCommandsRulesTask.sendCommandQueue(String, CommandManager, OrderDTO)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.provisioning.task.ProvisioningCommandsRulesTask$CommandManager.getCommands()", "com.sapienter.jbilling.server.provisioning.task.CommandsQueueSender.postCommandsQueue(java.util.LinkedList,java.lang.String)"],
    "com.sapienter.jbilling.client.authentication.CompanyUserDetailsService.loadUserByUsername(String, boolean)": ["com.sapienter.jbilling.client.authentication.CompanyUserDetailsService.loadUserByUsername(java.lang.String)"],
    "com.sapienter.jbilling.server.pluggableTask.CalculateDueDate.apply(NewInvoiceDTO, Integer)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.invoice.NewInvoiceDTO.getDueDatePeriod()", "java.util.GregorianCalendar.add(int,int)", "com.sapienter.jbilling.server.order.TimePeriod.getValue()", "org.apache.log4j.Logger.getLogger(java.lang.Class)", "com.sapienter.jbilling.server.util.MapPeriodToCalendar.map(java.lang.Integer)", "java.lang.Integer.intValue()", "java.util.Calendar.setTime(java.util.Date)", "com.sapienter.jbilling.server.order.TimePeriod.getUnitId()", "com.sapienter.jbilling.server.invoice.NewInvoiceDTO.getBillingDate()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.setDueDate(java.util.Date)", "java.util.Calendar.getTime()", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)"],
    "com.sapienter.jbilling.server.order.db.OrderLineDTO.getTotalReadOnly()": ["com.sapienter.jbilling.server.order.db.OrderLineDTO.setTotalReadOnly(java.lang.Boolean)"],
    "com.sapienter.jbilling.server.order.db.UsageDAS.findSubAccountUsageByItemType(Integer, Integer, Integer, Date, Date)": ["com.sapienter.jbilling.server.order.Usage.setItemTypeId(java.lang.Integer)", "com.sapienter.jbilling.server.order.Usage.setUserId(java.lang.Integer)", "org.hibernate.Query.uniqueResult()", "com.sapienter.jbilling.server.order.Usage.setEndDate(java.util.Date)", "setResultTransformer()", "getSession()", "createSQLQuery(java.lang.String)", "com.sapienter.jbilling.server.order.Usage.setStartDate(java.util.Date)", "org.hibernate.Query.setParameter(java.lang.String,java.lang.Integer)", "addScalar(java.lang.String)", "org.hibernate.transform.Transformers.aliasToBean(java.lang.Class)", "org.hibernate.Query.setParameter(java.lang.String,java.util.Date)"],
    "com.sapienter.jbilling.server.provisioning.task.MMSCProvisioningTask.parseCommand(String)": ["org.apache.log4j.Category.debug(java.lang.Object)", "java.lang.String.split(java.lang.String)", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription.getName()", "java.util.StringTokenizer.nextToken()", "java.util.Map.put(java.lang.Object,java.lang.Object)", "java.util.StringTokenizer.hasMoreTokens()"],
    "com.sapienter.jbilling.server.pluggableTask.BasicOrderFilterTask.thisOrActiveUntil(Date, Date)": ["java.util.Date.before(java.util.Date)"],
    "com.sapienter.jbilling.server.pluggableTask.ProcessorEmailAlarmTask.init(String, Integer)": ["com.sapienter.jbilling.server.pluggableTask.ProcessorEmailAlarm.getAlarm(java.lang.String,java.lang.Integer)"],
    "com.sapienter.jbilling.server.process.BusinessDays.loadHolidayFile(File, DateFormat)": ["java.util.List.clear()", "org.apache.commons.lang.StringUtils.isNotBlank(java.lang.String)", "org.apache.log4j.Category.warn(java.lang.Object)", "java.io.BufferedReader.close()", "java.io.File.exists()", "java.util.List.add(java.lang.Object)", "java.io.File.getPath()", "java.text.DateFormat.parse(java.lang.String)", "java.io.BufferedReader.readLine()"],
    "com.sapienter.jbilling.server.process.task.AbstractBackwardSimpleScheduledTask.getScheduleString()": ["com.sapienter.jbilling.server.process.task.AbstractSimpleScheduledTask.getParameter(java.lang.String,java.util.Date)", "java.lang.StringBuilder.append(java.lang.Object)", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription.getName()", "java.lang.StringBuilder.append(java.lang.String)", "com.sapienter.jbilling.server.process.task.AbstractBackwardSimpleScheduledTask.useProperties()", "java.lang.StringBuilder.toString()", "java.util.Date.toString()", "com.sapienter.jbilling.common.Util.getSysProp(java.lang.String)", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)", "com.sapienter.jbilling.server.process.task.AbstractSimpleScheduledTask.getParameter(java.lang.String,java.lang.Integer)"],
    "com.sapienter.jbilling.server.util.db.AbstractDescription.setDescription(String, Integer)": ["com.sapienter.jbilling.server.util.db.AbstractDescription.setDescription(java.lang.String,java.lang.Integer,java.lang.String)"],
    "com.sapienter.jbilling.server.process.task.BasicAgeingTask.removeUser(UserDTO, Integer, Integer)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.user.db.UserDTO.getStatus()", "com.sapienter.jbilling.server.process.task.BasicAgeingTask.setUserStatus(com.sapienter.jbilling.server.user.db.UserDTO,com.sapienter.jbilling.server.user.db.UserStatusDTO,java.util.Date,java.lang.Integer)", "com.sapienter.jbilling.server.user.db.UserDTO.getId()", "com.sapienter.jbilling.server.util.db.AbstractGenericStatus.getId()", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)", "com.sapienter.jbilling.server.invoice.InvoiceBL.isUserWithOverdueInvoices(java.lang.Integer,java.util.Date,java.lang.Integer)", "com.sapienter.jbilling.server.user.db.UserDTO.getUserId()", "com.sapienter.jbilling.server.util.db.AbstractGenericStatusDAS.find(java.io.Serializable)"],
    "com.sapienter.jbilling.server.item.ItemSessionBean.get(Integer, Integer, Integer, Integer, Integer, List)": ["com.sapienter.jbilling.server.item.ItemBL.setPricingFields(java.util.List)", "com.sapienter.jbilling.server.item.ItemBL.getDTO(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)"],
    "com.sapienter.jbilling.common.JBCrypto.getPasswordCrypto(Integer)": ["java.lang.Boolean.parseBoolean(java.lang.String)", "com.sapienter.jbilling.common.Util.getSysProp(java.lang.String)"],
    "com.sapienter.jbilling.server.order.OrderBL.audit(Integer, Date)": ["com.sapienter.jbilling.server.order.db.OrderDTO.getId()", "com.sapienter.jbilling.server.util.audit.EventLogger.audit(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.util.Date)", "com.sapienter.jbilling.server.user.db.UserDTO.getId()", "com.sapienter.jbilling.server.order.db.OrderDTO.getBaseUserByUserId()"],
    "com.sapienter.jbilling.server.item.ItemBL.getDTO(Integer, Integer, Integer, Integer, BigDecimal, OrderDTO)": ["com.sapienter.jbilling.server.item.db.ItemDTO.getPriceManual()", "com.sapienter.jbilling.server.item.db.ItemDTO.getPercentage()", "com.sapienter.jbilling.server.item.db.ItemDTO.getExcludedTypes()", "org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.item.ItemBL.findPrices(java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.item.db.ItemDTO.getItemTypes()", "com.sapienter.jbilling.server.item.db.ItemTypeDTO.getId()", "com.sapienter.jbilling.server.item.db.ItemDTO.getHasDecimals()", "com.sapienter.jbilling.server.util.db.AbstractDescription.getDescription(java.lang.Integer)", "com.sapienter.jbilling.server.item.db.ItemDTO.getDeleted()", "java.util.Set.size()", "com.sapienter.jbilling.server.item.db.ItemDTO.setOrderLineTypeId(java.lang.Integer)", "com.sapienter.jbilling.server.item.db.ItemDTO.getId()", "com.sapienter.jbilling.server.item.db.ItemDTO.getInternalNumber()", "com.sapienter.jbilling.server.item.db.ItemDTO.setPrice(java.math.BigDecimal)", "com.sapienter.jbilling.server.item.ItemBL.getPrice(java.lang.Integer,java.lang.Integer,java.math.BigDecimal,java.lang.Integer,com.sapienter.jbilling.server.order.db.OrderDTO)", "com.sapienter.jbilling.server.item.db.ItemTypeDTO.getOrderLineTypeId()", "com.sapienter.jbilling.server.item.db.ItemDTO.setExcludedTypeIds(java.lang.Integer[])", "com.sapienter.jbilling.server.item.db.ItemDTO.getEntity()", "com.sapienter.jbilling.server.item.db.ItemDTO.setPrices(java.util.List)", "com.sapienter.jbilling.server.item.db.ItemDTO.getGlCode()", "com.sapienter.jbilling.server.item.db.ItemDTO.getPrice()", "com.sapienter.jbilling.server.item.db.ItemDTO.setTypes(java.lang.Integer[])"],
    "com.sapienter.jbilling.server.item.ItemSessionBean.delete(Integer, Integer)": ["com.sapienter.jbilling.server.item.ItemBL.delete(java.lang.Integer)"],
    "com.sapienter.jbilling.server.pluggableTask.PaperInvoiceNotificationTask.getPDFFile(UserDTO, MessageDTO)": ["com.sapienter.jbilling.server.user.db.UserDTO.getPassword()", "com.sapienter.jbilling.server.pluggableTask.PaperInvoiceNotificationTask.getDesign(com.sapienter.jbilling.server.user.db.UserDTO)", "com.sapienter.jbilling.server.user.db.UserDTO.getUserName()", "com.sapienter.jbilling.server.pluggableTask.PaperInvoiceNotificationTask.init(com.sapienter.jbilling.server.user.db.UserDTO,com.sapienter.jbilling.server.notification.MessageDTO)", "com.sapienter.jbilling.server.notification.MessageDTO.getContent()", "com.sapienter.jbilling.server.notification.NotificationBL.generatePaperInvoiceAsFile(java.lang.String,boolean,com.sapienter.jbilling.server.invoice.db.InvoiceDTO,com.sapienter.jbilling.server.user.ContactDTOEx,com.sapienter.jbilling.server.user.ContactDTOEx,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String)", "com.sapienter.jbilling.server.notification.MessageSection.getContent()"],
    "com.sapienter.jbilling.server.user.ContactBL.createPrimaryForUser(ContactDTOEx, Integer, Integer)": ["com.sapienter.jbilling.server.user.contact.db.ContactTypeDTO.getId()", "com.sapienter.jbilling.server.user.ContactBL.createForUser(com.sapienter.jbilling.server.user.ContactDTOEx,java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.setUserId(java.lang.Integer)", "com.sapienter.jbilling.server.user.contact.db.ContactTypeDAS.findPrimary(java.lang.Integer)"],
    "com.sapienter.jbilling.server.process.task.AbstractSimpleScheduledTask.getTrigger()": ["org.quartz.SimpleTrigger.setMisfireInstruction()", "com.sapienter.jbilling.server.process.task.AbstractSimpleScheduledTask.getParameter(java.lang.String,java.util.Date)", "com.sapienter.jbilling.server.process.task.IScheduledTask.getTaskName()", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription.getName()", "com.sapienter.jbilling.server.process.task.AbstractSimpleScheduledTask.getParameter(java.lang.String,java.lang.Integer)"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask.getGatewayUrl()": ["com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase.getOptionalParameter(java.lang.String,java.lang.String)"],
    "com.sapienter.jbilling.server.order.db.OrderDTO.isEmpty()": ["java.util.List.isEmpty()"],
    "com.sapienter.jbilling.server.system.event.task.InternalEventsRulesTask.getSubscribedEvents()": ["java.util.Map.get(java.lang.Object)", "com.sapienter.jbilling.server.pluggableTask.PluggableTask.getTaskId()", "org.apache.log4j.Category.info(java.lang.Object)", "java.util.List.size()", "java.lang.Class.forName(java.lang.String)", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "java.lang.Integer.toString()"],
    "com.sapienter.jbilling.server.user.ContactBL.setFromChild(Integer)": ["com.sapienter.jbilling.server.user.db.CustomerDTO.getBaseUser()", "com.sapienter.jbilling.server.user.ContactBL.set(java.lang.Integer)", "com.sapienter.jbilling.server.user.db.UserDTO.getCustomer()", "com.sapienter.jbilling.server.user.UserBL.getEntity()", "com.sapienter.jbilling.server.user.db.CustomerDTO.getParent()", "com.sapienter.jbilling.server.user.db.UserDTO.getUserId()"],
    "com.sapienter.jbilling.server.pluggableTask.PaymentFakeTask.confirmPreAuth(PaymentAuthorizationDTO, PaymentDTOEx)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.pluggableTask.PaymentFakeTask.getFakeProcessorName()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getProcessor()", "com.sapienter.jbilling.server.pluggableTask.PaymentFakeTask.doFakeAuthorization(com.sapienter.jbilling.server.payment.PaymentDTOEx,java.lang.String)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getTransactionId()", "org.apache.log4j.Category.warn(java.lang.Object)", "java.lang.String.equals(java.lang.Object)", "com.sapienter.jbilling.server.pluggableTask.PaymentFakeTask.isPreAuthTransactionId(java.lang.String)", "com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase$Result.shouldCallOtherProcessors()"],
    "com.sapienter.jbilling.server.notification.MessageDTO.addSection(MessageSection)": ["java.util.List.add(java.lang.Object)"],
    "com.sapienter.jbilling.server.provisioning.task.CAIProvisioningTask.sendRequest(String, String)": ["com.sapienter.jbilling.server.provisioning.task.CAIProvisioningTask.parseResponse(java.lang.String)", "com.sapienter.jbilling.server.provisioning.task.CAIProvisioningTask.sendCommand(java.lang.String)", "com.sapienter.jbilling.server.provisioning.task.CAIProvisioningTask.constructCommand(java.lang.String,java.lang.String)"],
    "com.sapienter.jbilling.server.user.db.AchDTO.obscureBankAccount()": ["java.lang.StringBuffer.append(char)", "java.lang.String.substring(int)", "com.sapienter.jbilling.server.user.db.AchDTO.getRawBankAccount()", "java.lang.StringBuffer.toString()", "com.sapienter.jbilling.server.user.db.AchDTO.setBankAccount(java.lang.String)", "java.lang.StringBuffer.append(java.lang.String)", "com.sapienter.jbilling.server.user.db.AchDTO.getBankAccount()", "java.lang.String.length()"],
    "com.sapienter.jbilling.server.order.OrderLineBL.populateWithSimplePrice(Integer, Integer, Integer, Integer, Integer, OrderLineDTO, Integer)": ["com.sapienter.jbilling.server.item.db.ItemDTO.getPercentage()", "java.util.Iterator.next()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setQuantity(java.math.BigDecimal)", "com.sapienter.jbilling.server.item.db.ItemDTO.getItemTypes()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getQuantity()", "com.sapienter.jbilling.server.item.ItemBL.getPriceByCurrency(com.sapienter.jbilling.server.item.db.ItemDTO,java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.order.OrderBL.lookUpEditable(java.lang.Integer)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getAmount()", "com.sapienter.jbilling.server.util.db.AbstractDescription.getDescription(java.lang.Integer)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setTypeId(java.lang.Integer)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setDescription(java.lang.String)", "java.math.BigDecimal.multiply(java.math.BigDecimal)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setItem(com.sapienter.jbilling.server.item.db.ItemDTO)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setAmount(java.math.BigDecimal)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setEditable(java.lang.Boolean)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getPrice()", "java.math.BigDecimal.setScale(int,int)", "com.sapienter.jbilling.server.item.db.ItemTypeDTO.getOrderLineTypeId()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setCreateDatetime(java.util.Date)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getDescription()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setDeleted(int)", "com.sapienter.jbilling.server.item.ItemBL.getEntity()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setPrice(java.math.BigDecimal)", "java.util.Set.iterator()"],
    "com.sapienter.jbilling.server.invoice.InvoiceBL.createLines(NewInvoiceDTO)": ["com.sapienter.jbilling.server.item.db.ItemDTO.getPercentage()", "java.util.Iterator.next()", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDAS.create(java.lang.String,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.lang.Integer,com.sapienter.jbilling.server.item.db.ItemDTO,java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO.getIsPercentage()", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO.getPrice()", "com.sapienter.jbilling.server.system.event.EventManager.process(com.sapienter.jbilling.server.system.event.Event)", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO.getSourceUserId()", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO.getDescription()", "java.util.Iterator.hasNext()", "com.sapienter.jbilling.server.item.db.ItemDTO.getId()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getInvoiceLines()", "java.util.Collection.add(java.lang.Object)", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO.setIsPercentage(java.lang.Integer)", "com.sapienter.jbilling.server.item.ItemBL.getEntity()", "com.sapienter.jbilling.server.invoice.InvoiceBL.getHome()", "java.util.List.iterator()", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO.getItem()", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO.getQuantity()", "com.sapienter.jbilling.server.invoice.NewInvoiceDTO.getResultLines()", "org.apache.log4j.Category.error(java.lang.Object)", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO.getTypeId()", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO.setInvoice(com.sapienter.jbilling.server.invoice.db.InvoiceDTO)", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO.getAmount()"],
    "com.sapienter.jbilling.server.user.ContactBL.initializeFields()": ["com.sapienter.jbilling.server.user.db.CompanyDTO.getContactFieldTypes()", "com.sapienter.jbilling.server.user.contact.db.ContactFieldTypeDTO.getId()", "com.sapienter.jbilling.server.user.contact.db.ContactFieldDTO.setContent(java.lang.String)", "java.util.Hashtable.put(java.lang.Object,java.lang.Object)", "java.lang.String.valueOf(int)", "com.sapienter.jbilling.server.user.contact.db.ContactFieldDTO.setType(com.sapienter.jbilling.server.user.contact.db.ContactFieldTypeDTO)", "com.sapienter.jbilling.server.user.EntityBL.getEntity()"],
    "com.sapienter.jbilling.server.user.CreditCardBL.validatePreAuthorization(Integer, Integer, CreditCardDTO, BigDecimal, Integer)": ["java.util.Calendar.getInstance()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setAttempt(java.lang.Integer)", "com.sapienter.jbilling.server.payment.PaymentBL.getEntity()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setAmount(java.math.BigDecimal)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.payment.PaymentDTOEx.setCreditCard(com.sapienter.jbilling.server.user.db.CreditCardDTO)", "com.sapienter.jbilling.server.pluggableTask.PaymentTask.preAuth(com.sapienter.jbilling.server.payment.PaymentDTOEx)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getNumber()", "com.sapienter.jbilling.common.Util.getPaymentMethod(java.lang.String)", "com.sapienter.jbilling.server.payment.db.PaymentResultDTO.getId()", "com.sapienter.jbilling.server.payment.PaymentAuthorizationDTOEx.setResult(java.lang.Boolean)", "com.sapienter.jbilling.server.system.event.EventManager.process(com.sapienter.jbilling.server.system.event.Event)", "com.sapienter.jbilling.server.payment.PaymentDTOEx.setUserId(java.lang.Integer)", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskManager.getNextClass()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getPaymentResult()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setIsPreauth(java.lang.Integer)", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getAuthorization()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setPaymentDate(java.util.Date)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setCurrency(com.sapienter.jbilling.server.util.db.CurrencyDTO)", "com.sapienter.jbilling.server.payment.PaymentBL.create(com.sapienter.jbilling.server.payment.PaymentDTOEx)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setPaymentMethod(com.sapienter.jbilling.server.payment.db.PaymentMethodDTO)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setIsRefund(int)", "com.sapienter.jbilling.server.payment.event.AbstractPaymentEvent.forPaymentResult(java.lang.Integer,com.sapienter.jbilling.server.payment.PaymentDTOEx)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setBalance(java.math.BigDecimal)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setPaymentResult(com.sapienter.jbilling.server.payment.db.PaymentResultDTO)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getOldDTO()", "java.util.Calendar.getTime()"],
    "com.sapienter.jbilling.server.billing.task.BillingProcessTask.execute(JobExecutionContext)": ["com.sapienter.jbilling.server.process.task.AbstractBackwardSimpleScheduledTask.execute(org.quartz.JobExecutionContext)", "org.apache.log4j.Category.info(java.lang.Object)", "com.sapienter.jbilling.server.process.IBillingProcessSessionBean.trigger(java.util.Date)", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "com.sapienter.jbilling.common.Util.getSysPropBooleanTrue(java.lang.String)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getOrderLine(Integer)": ["com.sapienter.jbilling.server.order.OrderBL.getOrderLineWS(java.lang.Integer)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.validateOrder(OrderWS)": ["com.sapienter.jbilling.server.order.OrderWS.setNextBillableDay(java.util.Date)", "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.zero2null(java.lang.Integer)", "com.sapienter.jbilling.server.order.OrderWS.setActiveSince(java.util.Date)", "com.sapienter.jbilling.server.order.OrderWS.setNotificationStep(java.lang.Integer)", "com.sapienter.jbilling.server.order.OrderWS.getUserId()", "com.sapienter.jbilling.server.order.OrderWS.setActiveUntil(java.util.Date)", "com.sapienter.jbilling.server.order.OrderLineWS.getDescription()", "java.math.BigDecimal.compareTo(java.math.BigDecimal)", "java.lang.Integer.intValue()", "com.sapienter.jbilling.server.order.OrderWS.setCurrencyId(java.lang.Integer)", "com.sapienter.jbilling.server.order.OrderLineWS.getQuantityAsDecimal()", "com.sapienter.jbilling.server.order.OrderLineWS.getItemId()", "com.sapienter.jbilling.server.order.OrderWS.setDueDateUnitId(java.lang.Integer)", "com.sapienter.jbilling.server.order.OrderWS.getDfFm()", "com.sapienter.jbilling.server.order.OrderWS.setAnticipatePeriods(java.lang.Integer)", "com.sapienter.jbilling.server.order.OrderWS.getDueDateValue()", "com.sapienter.jbilling.server.order.OrderWS.setStatusId(java.lang.Integer)", "java.lang.String.length()", "com.sapienter.jbilling.server.order.OrderWS.setUserId(java.lang.Integer)", "com.sapienter.jbilling.server.order.OrderWS.getNextBillableDay()", "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.zero2null(java.util.Date)", "com.sapienter.jbilling.server.order.OrderLineWS.setUseItem(java.lang.Boolean)", "com.sapienter.jbilling.server.order.OrderWS.setDueDateValue(java.lang.Integer)", "com.sapienter.jbilling.server.order.OrderWS.getActiveUntil()", "com.sapienter.jbilling.server.order.OrderLineWS.setItemId(java.lang.Integer)", "com.sapienter.jbilling.server.order.OrderWS.getAnticipatePeriods()", "com.sapienter.jbilling.server.order.OrderWS.setLastNotified(java.util.Date)", "com.sapienter.jbilling.server.order.OrderLineWS.getAmount()", "com.sapienter.jbilling.server.order.OrderWS.setDfFm(java.lang.Integer)", "com.sapienter.jbilling.server.order.OrderWS.setOrderLines(com.sapienter.jbilling.server.order.OrderLineWS[])", "com.sapienter.jbilling.server.order.OrderWS.getNotificationStep()", "com.sapienter.jbilling.server.order.OrderWS.getPeriod()", "com.sapienter.jbilling.server.order.OrderWS.getStatusId()", "com.sapienter.jbilling.server.order.OrderLineWS.getUseItem()", "com.sapienter.jbilling.server.order.OrderWS.getActiveSince()", "com.sapienter.jbilling.server.order.OrderWS.setBillingTypeId(java.lang.Integer)", "com.sapienter.jbilling.server.order.OrderWS.getCurrencyId()", "com.sapienter.jbilling.server.order.OrderWS.setPeriod(java.lang.Integer)", "com.sapienter.jbilling.server.order.OrderWS.getOrderLines()", "com.sapienter.jbilling.server.order.OrderWS.getBillingTypeId()", "com.sapienter.jbilling.server.order.OrderWS.getDueDateUnitId()"],
    "com.sapienter.jbilling.server.process.BillingProcessRunBL.notifyProcessRunFailure(Integer, int)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.process.db.ProcessRunDTO.getFinished()", "com.sapienter.jbilling.server.process.db.BillingProcessDAS.reset()", "com.sapienter.jbilling.server.process.db.ProcessRunDTO.getId()", "com.sapienter.jbilling.server.notification.NotificationBL.sendSapienterEmail(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String[])", "java.lang.Integer.toString(int)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "java.util.Date.toString()", "com.sapienter.jbilling.server.process.db.ProcessRunDTO.getStarted()", "java.lang.Integer.toString()", "org.apache.log4j.Category.warn(java.lang.Object,java.lang.Throwable)"],
    "com.sapienter.jbilling.server.process.task.AbstractSimpleScheduledTask.getScheduleString()": ["com.sapienter.jbilling.server.process.task.AbstractSimpleScheduledTask.getParameter(java.lang.String,java.util.Date)", "java.lang.StringBuilder.append(java.lang.Object)", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription.getName()", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.toString()", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)", "com.sapienter.jbilling.server.process.task.AbstractSimpleScheduledTask.getParameter(java.lang.String,java.lang.Integer)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getLastOrders(Integer, Integer)": ["com.sapienter.jbilling.server.order.OrderBL.getListIds(java.lang.Integer,java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.user.UserBL.getEntityId(java.lang.Integer)"],
    "com.sapienter.jbilling.server.payment.PaymentSessionBean.processAndUpdateInvoice(PaymentDTOEx, InvoiceDTO)": ["com.sapienter.jbilling.server.payment.db.PaymentDTO.setAttempt(java.lang.Integer)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getId()", "org.apache.log4j.Category.warn(java.lang.Object)", "java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.user.db.UserDTO.getEntity()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setId(int)", "java.util.List.add(java.lang.Object)", "com.sapienter.jbilling.server.payment.PaymentBL.getEntity()", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "java.math.BigDecimal.compareTo(java.math.BigDecimal)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getId()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getInvoiceIds()", "com.sapienter.jbilling.server.payment.PaymentBL.processPayment(java.lang.Integer,com.sapienter.jbilling.server.payment.PaymentDTOEx)", "com.sapienter.jbilling.server.util.PreferenceBL.getInt()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getAmount()", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setBalance(java.math.BigDecimal)", "com.sapienter.jbilling.server.payment.PaymentSessionBean.applyPayment(com.sapienter.jbilling.server.payment.db.PaymentDTO,com.sapienter.jbilling.server.invoice.db.InvoiceDTO,boolean)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setPaymentResult(com.sapienter.jbilling.server.payment.db.PaymentResultDTO)", "com.sapienter.jbilling.server.payment.PaymentBL.createMap(com.sapienter.jbilling.server.invoice.db.InvoiceDTO,java.math.BigDecimal)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getPaymentAttempts()", "com.sapienter.jbilling.server.util.PreferenceBL.set(java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getIsRefund()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getBaseUser()"],
    "com.sapienter.jbilling.server.order.OrderBL.getListIds(Integer, Integer, Integer)": ["com.sapienter.jbilling.server.order.db.OrderDAS.findIdsByUserLatestFirst(java.lang.Integer,int)", "java.util.List.size()", "java.util.List.toArray(java.lang.Object[])"],
    "com.sapienter.jbilling.server.user.partner.PartnerBL.init()": ["com.sapienter.jbilling.server.util.audit.EventLogger.getInstance()"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentPaypalExternalTask.getSubject()": ["com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase.getOptionalParameter(java.lang.String,java.lang.String)", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription.getName()"],
    "com.sapienter.jbilling.server.payment.blacklist.IpAddressFilter.checkUser(Integer)": ["com.sapienter.jbilling.server.util.Util.getEntityNotificationsBundle(java.lang.Integer)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getFields()", "com.sapienter.jbilling.server.user.contact.db.ContactFieldDTO.getType()", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "java.util.List.isEmpty()", "com.sapienter.jbilling.server.user.contact.db.ContactFieldDTO.getContent()", "com.sapienter.jbilling.server.user.db.UserDTO.getCompany()", "com.sapienter.jbilling.server.user.contact.db.ContactFieldTypeDTO.getId()", "java.util.ResourceBundle.getString(java.lang.String)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDAS.filterByIpAddress(java.lang.Integer,java.lang.String,java.lang.Integer)", "com.sapienter.jbilling.server.user.contact.db.ContactDAS.findPrimaryContact(java.lang.Integer)"],
    "com.sapienter.jbilling.server.user.CreditCardBL.getDTO()": ["com.sapienter.jbilling.server.user.db.CreditCardDTO.setName(java.lang.String)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getId()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.setNumber(java.lang.String)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getSecurityCode()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getName()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getGatewayKey()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getCcExpiry()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getCcType()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.setDeleted(int)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.setSecurityCode(java.lang.String)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getNumber()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getDeleted()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.setCcExpiry(java.util.Date)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.setGatewayKey(java.lang.String)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.setId(int)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.setCcType(java.lang.Integer)"],
    "com.sapienter.jbilling.server.rule.task.AbstractGeneratorTask.process()": ["org.apache.log4j.Category.debug(java.lang.Object)", "java.util.Map.get(java.lang.Object)", "org.drools.compiler.PackageBuilder.addPackageFromDrl(java.io.StringReader)", "org.drools.compiler.PackageBuilder.hasErrors()", "toString()", "org.drools.compiler.PackageBuilder.getErrors()", "org.drools.compiler.PackageBuilder.getPackage()", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription.getName()", "org.drools.util.DroolsStreamUtils.streamOut(java.io.FileOutputStream,java.lang.Package)", "com.sapienter.jbilling.server.rule.task.AbstractGeneratorTask.getAbsolutePath(java.lang.String)", "java.io.FileOutputStream.close()", "com.sapienter.jbilling.server.rule.task.AbstractGeneratorTask.generateRules(java.lang.Object)", "org.apache.log4j.Category.error(java.lang.Object)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.triggerBilling(Date)": ["com.sapienter.jbilling.server.process.IBillingProcessSessionBean.trigger(java.util.Date)", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)"],
    "com.sapienter.jbilling.server.mediation.db.MediationRecordLineDAS.findByInvoice(Integer)": ["org.hibernate.Query.list()", "getSession()", "org.hibernate.Query.setParameter(java.lang.String,java.lang.Integer)", "createQuery(java.lang.String)"],
    "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskParameterDTO.toString()": ["java.lang.StringBuffer.append(char)", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskParameterDTO.getFloatValue()", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskParameterDTO.getIntValue()", "java.lang.StringBuffer.toString()", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskParameterDTO.getId()", "java.lang.Object.getClass()", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskParameterDTO.getName()", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskParameterDTO.getStrValue()", "java.lang.Class.getName()", "java.lang.StringBuffer.append(java.lang.String)"],
    "com.sapienter.jbilling.server.user.UserSessionBean.notifyCreditCardExpiration(Date)": ["java.util.Calendar.setTime(java.util.Date)", "java.util.Calendar.get(int)", "java.util.Calendar.getInstance()", "com.sapienter.jbilling.server.user.CreditCardBL.notifyExipration(java.util.Date)"],
    "com.sapienter.jbilling.server.mediation.MediationSessionBean.getNumberOfRecordsByStatuses(Integer)": ["com.sapienter.jbilling.server.mediation.db.MediationRecordDAS.countMediationRecordsByEntityIdAndStatus(java.lang.Integer,com.sapienter.jbilling.server.mediation.db.MediationRecordStatusDTO)", "com.sapienter.jbilling.server.util.db.AbstractDAS.findAll()", "java.util.Map.put(java.lang.Object,java.lang.Object)", "com.sapienter.jbilling.server.mediation.db.MediationRecordStatusDAS.touch(java.util.List)"],
    "com.sapienter.jbilling.server.mediation.MediationSessionBean.isProcessing(Integer)": ["com.sapienter.jbilling.server.mediation.db.MediationProcessDAS.isProcessing(java.lang.Integer)"],
    "com.sapienter.jbilling.server.process.BillingProcessRunBL.findSuccessfullUsers()": ["com.sapienter.jbilling.server.process.db.ProcessRunUserDAS.findSuccessfullUserIds(java.lang.Integer)", "com.sapienter.jbilling.server.process.db.ProcessRunDTO.getId()"],
    "com.sapienter.jbilling.server.mediation.MediationRecordLineWS.setAmount(BigDecimal)": ["java.math.BigDecimal.toString()"],
    "com.sapienter.jbilling.server.order.db.UsageDAS.findSubAccountUsageByItem(Integer, Integer, Integer, Date, Date)": ["com.sapienter.jbilling.server.order.Usage.setUserId(java.lang.Integer)", "org.hibernate.Query.uniqueResult()", "com.sapienter.jbilling.server.order.Usage.setEndDate(java.util.Date)", "setResultTransformer()", "getSession()", "createSQLQuery(java.lang.String)", "com.sapienter.jbilling.server.order.Usage.setStartDate(java.util.Date)", "org.hibernate.Query.setParameter(java.lang.String,java.lang.Integer)", "addScalar(java.lang.String)", "org.hibernate.transform.Transformers.aliasToBean(java.lang.Class)", "com.sapienter.jbilling.server.order.Usage.setItemId(java.lang.Integer)", "org.hibernate.Query.setParameter(java.lang.String,java.util.Date)"],
    "com.sapienter.jbilling.server.payment.PaymentBL.delete()": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setUpdateDatetime(java.util.Date)", "com.sapienter.jbilling.server.system.event.EventManager.process(com.sapienter.jbilling.server.system.event.Event)", "java.util.Calendar.getInstance()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setDeleted(int)", "com.sapienter.jbilling.server.user.db.UserDTO.getEntity()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getId()", "org.apache.log4j.Category.warn(java.lang.Object,java.lang.Throwable)", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getBaseUser()", "com.sapienter.jbilling.server.util.audit.EventLogger.auditBySystem(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.util.Date)", "com.sapienter.jbilling.server.user.db.UserDTO.getId()", "java.util.Calendar.getTime()"],
    "com.sapienter.jbilling.server.mediation.task.SaveToJDBCMediationErrorHandler.isMySQL()": ["com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription.getName()", "com.sapienter.jbilling.server.pluggableTask.PluggableTask.getParameter(java.lang.String,java.lang.String)", "java.lang.String.contains(java.lang.CharSequence)"],
    "com.sapienter.jbilling.server.util.db.CurrencyExchangeDAS.findByEntity(Integer)": ["org.hibernate.Query.list()", "getSession()", "org.hibernate.Query.setParameter(java.lang.String,java.lang.Integer)", "createQuery(java.lang.String)"],
    "com.sapienter.jbilling.server.payment.blacklist.BlacklistBL.create(CompanyDTO, Integer, Integer, CreditCardDTO, ContactDTO, UserDTO)": ["com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDTO.setType(java.lang.Integer)", "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDTO.setUser(com.sapienter.jbilling.server.user.db.UserDTO)", "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDTO.setSource(java.lang.Integer)", "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDTO.setCompany(com.sapienter.jbilling.server.user.db.CompanyDTO)", "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDTO.setCreditCard(com.sapienter.jbilling.server.user.db.CreditCardDTO)", "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDTO.getId()", "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDTO.setCreateDate(java.util.Date)", "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDTO.setContact(com.sapienter.jbilling.server.user.contact.db.ContactDTO)", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)"],
    "com.sapienter.jbilling.server.user.db.UserDTO.touch()": ["com.sapienter.jbilling.server.user.partner.db.Partner.touch()", "com.sapienter.jbilling.server.user.db.CustomerDTO.getBaseUser()", "com.sapienter.jbilling.server.user.db.UserDTO.getCustomer()", "com.sapienter.jbilling.server.user.db.UserDTO.getId()", "com.sapienter.jbilling.server.user.db.UserDTO.getPartner()", "com.sapienter.jbilling.server.user.db.CustomerDTO.getParent()", "com.sapienter.jbilling.server.user.db.CustomerDTO.getTotalSubAccounts()"],
    "com.sapienter.jbilling.server.user.UserBL.getLanguage()": ["com.sapienter.jbilling.server.user.db.UserDTO.getLanguageIdField()"],
    "com.sapienter.jbilling.server.mediation.task.AbstractJDBCReader.getDataSource()": ["org.springframework.jdbc.datasource.DriverManagerDataSource.setDriverClassName(java.lang.String)", "org.springframework.jdbc.datasource.DriverManagerDataSource.setPassword(java.lang.String)", "com.sapienter.jbilling.server.mediation.task.AbstractJDBCReader.getDriverClassName()", "org.springframework.jdbc.datasource.DriverManagerDataSource.setUsername(java.lang.String)", "com.sapienter.jbilling.server.mediation.task.AbstractJDBCReader.getUsername()", "com.sapienter.jbilling.server.mediation.task.AbstractJDBCReader.getPassword()", "com.sapienter.jbilling.server.mediation.task.AbstractJDBCReader.getUrl()", "org.springframework.jdbc.datasource.DriverManagerDataSource.setUrl(java.lang.String)"],
    "com.sapienter.jbilling.server.item.ItemBL.getAllItems(Integer)": ["com.sapienter.jbilling.server.user.db.CompanyDTO.getItems()", "com.sapienter.jbilling.server.user.db.CompanyDTO.getCurrencyId()", "com.sapienter.jbilling.server.item.ItemBL.getWS(com.sapienter.jbilling.server.item.db.ItemDTO)", "com.sapienter.jbilling.server.item.ItemBL.getDTO(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)", "java.util.Collection.size()", "com.sapienter.jbilling.server.item.ItemBL.set(java.lang.Integer)", "com.sapienter.jbilling.server.user.db.CompanyDTO.getLanguageId()", "com.sapienter.jbilling.server.item.db.ItemDTO.getId()", "com.sapienter.jbilling.server.user.EntityBL.getEntity()"],
    "com.sapienter.jbilling.server.pluggableTask.BasicLineTotalTask.doProcessing(OrderDTO)": ["com.sapienter.jbilling.server.pluggableTask.BasicLineTotalTask.clearLineTotals(java.util.List)", "com.sapienter.jbilling.server.item.db.ItemDTO.getPercentage()", "org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.item.db.ItemDTO.getExcludedTypes()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getDeleted()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getQuantity()", "java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getTypeId()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getAmount()", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.pluggableTask.BasicLineTotalTask.getTotalForTax(java.util.List,java.util.Set)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getTotalReadOnly()", "java.math.BigDecimal.multiply(java.math.BigDecimal)", "com.sapienter.jbilling.server.pluggableTask.BasicLineTotalTask.getTotalForPercentage(java.util.List,java.util.Set)", "java.math.BigDecimal.divide(java.math.BigDecimal,int)", "com.sapienter.jbilling.server.order.db.OrderDTO.getTotal()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setAmount(java.math.BigDecimal)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getPrice()", "com.sapienter.jbilling.server.pluggableTask.BasicLineTotalTask.getTotal(java.util.List)", "com.sapienter.jbilling.server.order.db.OrderDTO.getLines()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getItemId()", "com.sapienter.jbilling.server.order.db.OrderDTO.setTotal(java.math.BigDecimal)", "com.sapienter.jbilling.server.pluggableTask.BasicLineTotalTask.validateLinesQuantity(java.util.List)"],
    "com.sapienter.jbilling.server.pluggableTask.PluggableTask.executeStatefulRules(StatefulKnowledgeSession, List)": ["org.apache.log4j.Category.debug(java.lang.Object)", "org.drools.runtime.StatefulKnowledgeSession.insert(java.lang.Object)", "org.drools.runtime.StatefulKnowledgeSession.dispose()", "org.drools.runtime.StatefulKnowledgeSession.fireAllRules()", "org.apache.log4j.Category.warn(java.lang.Object)", "java.util.Hashtable.clear()", "java.util.Hashtable.put(java.lang.Object)"],
    "com.sapienter.jbilling.server.process.db.BillingProcessDAS.create(CompanyDTO, Date, Integer, Integer, Integer)": ["com.sapienter.jbilling.server.process.db.BillingProcessDTO.setIsReview(int)", "com.sapienter.jbilling.server.process.db.BillingProcessDTO.setPeriodUnit(com.sapienter.jbilling.server.process.db.PeriodUnitDTO)", "com.sapienter.jbilling.server.process.db.BillingProcessDTO.setRetriesToDo(int)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.process.db.BillingProcessDTO.setBillingDate(java.util.Date)", "com.sapienter.jbilling.server.process.db.BillingProcessDTO.setPeriodValue(int)", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)", "com.sapienter.jbilling.server.process.db.BillingProcessDTO.setEntity(com.sapienter.jbilling.server.user.db.CompanyDTO)"],
    "com.sapienter.jbilling.server.billing.task.BillingProcessTask.getTaskName()": ["com.sapienter.jbilling.server.process.task.AbstractBackwardSimpleScheduledTask.getScheduleString()"],
    "com.sapienter.jbilling.server.order.Usage.addAmount(BigDecimal)": ["com.sapienter.jbilling.server.order.Usage.setAmount(java.math.BigDecimal)", "com.sapienter.jbilling.server.order.Usage.getAmount()", "java.math.BigDecimal.add(java.math.BigDecimal)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getWSFromOrder(OrderBL, Integer)": ["com.sapienter.jbilling.server.order.db.OrderDTO.getOrderBillingType()", "org.apache.log4j.Category.info(java.lang.Object)", "com.sapienter.jbilling.server.order.db.OrderDTO.getNotes()", "java.util.Iterator.hasNext()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getId()", "com.sapienter.jbilling.server.order.db.OrderDTO.getOrderPeriod()", "com.sapienter.jbilling.server.order.db.OrderLineTypeDTO.getId()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getCreateDatetime()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getProvisioningRequestId()", "com.sapienter.jbilling.server.order.db.OrderDTO.getVersionNum()", "com.sapienter.jbilling.server.order.db.OrderDTO.getIsCurrent()", "com.sapienter.jbilling.server.order.db.OrderDTO.getId()", "com.sapienter.jbilling.server.order.OrderBL.getDTO()", "com.sapienter.jbilling.server.order.db.OrderDTO.getNotificationStep()", "com.sapienter.jbilling.server.util.db.AbstractDescription.getDescription(java.lang.Integer)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getEditable()", "com.sapienter.jbilling.server.order.db.OrderDTO.getTotal()", "com.sapienter.jbilling.server.order.OrderWS.setOrderLines(com.sapienter.jbilling.server.order.OrderLineWS[])", "com.sapienter.jbilling.server.order.db.OrderDTO.getNotify()", "com.sapienter.jbilling.server.order.db.OrderPeriodDTO.getId()", "com.sapienter.jbilling.server.order.db.OrderDTO.getCurrencyId()", "com.sapienter.jbilling.server.order.db.OrderDTO.getActiveUntil()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getDescription()", "com.sapienter.jbilling.server.order.db.OrderDTO.getDeleted()", "com.sapienter.jbilling.server.order.db.OrderDTO.getBillingTypeId()", "com.sapienter.jbilling.server.user.db.UserDTO.getId()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getItem()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getPurchaseOrder()", "com.sapienter.jbilling.server.order.OrderWS.getOrderLines()", "com.sapienter.jbilling.server.order.db.OrderDTO.getDueDateValue()", "com.sapienter.jbilling.server.order.db.OrderDTO.getStatusId()", "com.sapienter.jbilling.server.order.OrderWS.setPeriodStr(java.lang.String)", "com.sapienter.jbilling.server.order.db.OrderDTO.getAnticipatePeriods()", "com.sapienter.jbilling.server.order.OrderWS.setTotal(java.math.BigDecimal)", "java.util.List.add(java.lang.Object)", "com.sapienter.jbilling.server.order.db.OrderDTO.getCycleStarts()", "com.sapienter.jbilling.server.item.db.ItemDTO.getId()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getPrice()", "com.sapienter.jbilling.server.order.OrderWS.setBillingTypeStr(java.lang.String)", "com.sapienter.jbilling.server.order.db.OrderDTO.getCreatedBy()", "java.util.List.iterator()", "com.sapienter.jbilling.server.order.db.OrderDTO.getLastNotified()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getOrderLineType()", "com.sapienter.jbilling.server.order.db.OrderDTO.getBaseUserByUserId()", "java.util.List.toArray(java.lang.Object[])", "java.util.Iterator.next()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getVersionNum()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getDeleted()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getProvisioningStatusId()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getQuantity()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getAmount()", "com.sapienter.jbilling.server.order.db.OrderDTO.getCreateDate()", "com.sapienter.jbilling.server.order.db.OrderDTO.getActiveSince()", "com.sapienter.jbilling.server.order.db.OrderDTO.getOwnInvoice()", "com.sapienter.jbilling.server.order.db.OrderDTO.getNextBillableDay()", "com.sapienter.jbilling.server.order.db.OrderDTO.getLines()", "java.util.List.size()", "com.sapienter.jbilling.server.order.db.OrderDTO.getDfFm()", "com.sapienter.jbilling.server.order.db.OrderDTO.getDueDateUnitId()", "com.sapienter.jbilling.server.order.db.OrderDTO.getNotesInInvoice()"],
    "com.sapienter.jbilling.server.notification.NotificationSessionBean.notify(UserDTO, MessageDTO)": ["com.sapienter.jbilling.server.notification.MessageSection.setContent(java.lang.String)", "com.sapienter.jbilling.common.Util.truncateString(java.lang.String,int)", "com.sapienter.jbilling.server.user.db.UserDTO.getEntity()", "com.sapienter.jbilling.server.notification.MessageDTO.getTypeId()", "com.sapienter.jbilling.server.pluggableTask.NotificationTask.deliver(com.sapienter.jbilling.server.user.db.UserDTO,com.sapienter.jbilling.server.notification.MessageDTO)", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskManager.getNextClass()", "com.sapienter.jbilling.server.notification.NotificationBL.parseParameters(java.lang.String,java.util.HashMap)", "com.sapienter.jbilling.server.notification.db.NotificationMessageArchDTO.setResultMessage(java.lang.String)", "com.sapienter.jbilling.server.notification.MessageDTO.getContent()", "com.sapienter.jbilling.server.notification.db.NotificationMessageArchDAS.create(java.lang.Integer,com.sapienter.jbilling.server.notification.MessageSection[])", "com.sapienter.jbilling.server.notification.MessageDTO.validate()", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.notification.db.NotificationMessageArchDTO.setBaseUser(com.sapienter.jbilling.server.user.db.UserDTO)", "java.lang.Throwable.getMessage()", "com.sapienter.jbilling.server.notification.MessageDTO.getParameters()", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)", "org.apache.log4j.Category.error(java.lang.Object)", "com.sapienter.jbilling.server.notification.MessageSection.getContent()"],
    "com.sapienter.jbilling.server.user.UserBL.getTotalOwed(Integer)": ["com.sapienter.jbilling.server.invoice.db.InvoiceDAS.findTotalAmountOwed(java.lang.Integer)"],
    "com.sapienter.jbilling.server.util.PreferenceBL.getDecimal()": ["com.sapienter.jbilling.server.util.PreferenceBL.getString()"],
    "com.sapienter.jbilling.server.mediation.task.JDBCUtils.correctColumnName(Connection, String, String)": ["java.util.List.isEmpty()", "com.sapienter.jbilling.server.mediation.task.JDBCUtils.correctColumnNames(java.sql.Connection,java.lang.String,java.lang.String[])", "java.util.List.get(int)"],
    "com.sapienter.jbilling.server.order.Usage.addQuantity(BigDecimal)": ["com.sapienter.jbilling.server.order.Usage.setQuantity(java.math.BigDecimal)", "java.math.BigDecimal.add(java.math.BigDecimal)", "com.sapienter.jbilling.server.order.Usage.getQuantity()"],
    "com.sapienter.jbilling.server.order.OrderBL.getActiveRecurringByUser(Integer)": ["com.sapienter.jbilling.server.order.db.OrderDAS.findByUserSubscriptions(java.lang.Integer)"],
    "com.sapienter.jbilling.server.item.ItemBL.getPriceByCurrency(ItemDTO, Integer, Integer)": ["java.util.Iterator.next()", "java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.item.db.ItemPriceDTO.getPrice()", "java.util.Iterator.hasNext()", "com.sapienter.jbilling.server.item.db.ItemDTO.getId()", "java.lang.Integer.intValue()", "java.lang.Integer.toString()", "com.sapienter.jbilling.server.item.db.ItemPriceDTO.getCurrencyId()", "com.sapienter.jbilling.server.item.db.ItemDTO.getItemPrices()", "com.sapienter.jbilling.server.item.CurrencyBL.convert(java.lang.Integer,java.lang.Integer,java.math.BigDecimal,java.lang.Integer)", "org.springmodules.cache.provider.CacheProviderFacade.getFromCache(java.lang.String,org.springmodules.cache.CachingModel)", "java.util.Set.iterator()", "org.springmodules.cache.provider.CacheProviderFacade.putInCache(java.lang.String,org.springmodules.cache.CachingModel,java.math.BigDecimal)"],
    "com.sapienter.jbilling.server.order.OrderSessionBean.reviewNotifications(Date)": ["com.sapienter.jbilling.server.order.OrderBL.reviewNotifications(java.util.Date)"],
    "com.sapienter.jbilling.server.pluggableTask.PaymentACHCommerceTask.processACHRequest(PaymentDTOEx)": ["org.apache.log4j.Category.debug(java.lang.Object)", "org.apache.commons.httpclient.HttpClient.setConnectionTimeout(int)", "org.apache.commons.httpclient.methods.PostMethod.getResponseBodyAsString()", "org.apache.commons.httpclient.methods.PostMethod.setRequestBody(org.apache.commons.httpclient.NameValuePair[])", "com.sapienter.jbilling.server.pluggableTask.PaymentACHCommerceTask.getChargeData(com.sapienter.jbilling.server.payment.PaymentDTOEx)", "com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase.ensureGetParameter(java.lang.String)", "org.apache.commons.httpclient.methods.PostMethod.releaseConnection()", "com.sapienter.jbilling.server.pluggableTask.PaymentACHCommerceTask.processResponse(java.lang.String)", "org.apache.commons.httpclient.HttpClient.executeMethod(org.apache.commons.httpclient.methods.PostMethod)", "org.apache.commons.httpclient.methods.PostMethod.recycle()"],
    "com.sapienter.jbilling.server.entity.CreditCardDTO.isIdentical(Object)": ["java.util.Date.equals(java.lang.Object)", "java.lang.Integer.equals(java.lang.Object)", "java.lang.String.equals(java.lang.Object)"],
    "com.sapienter.jbilling.server.notification.barcode.BarcodeFactory.USPSIntelligentMail(Checksum, TextPlacement)": ["org.krysalis.barcode4j.impl.fourstate.USPSIntelligentMailBean.setChecksumMode(org.krysalis.barcode4j.ChecksumMode)", "org.krysalis.barcode4j.impl.fourstate.USPSIntelligentMailBean.setMsgPosition(org.krysalis.barcode4j.HumanReadablePlacement)", "com.sapienter.jbilling.server.notification.barcode.BarcodeFactory.getPlacement(com.sapienter.jbilling.server.notification.barcode.TextPlacement)", "com.sapienter.jbilling.server.notification.barcode.BarcodeFactory.getChecksum(com.sapienter.jbilling.server.notification.barcode.Checksum)"],
    "com.sapienter.jbilling.server.user.UserWS.setAutoRechargeAsDecimal(BigDecimal)": ["com.sapienter.jbilling.server.user.UserWS.setAutoRecharge(java.math.BigDecimal)"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentAuthorizeNetCIMTask.confirmPreAuth(PaymentAuthorizationDTO, PaymentDTOEx)": ["com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getApprovalCode()", "com.sapienter.jbilling.server.payment.tasks.PaymentAuthorizeNetCIMTask.doProcess(com.sapienter.jbilling.server.payment.PaymentDTOEx,java.lang.String,java.lang.String)"],
    "com.sapienter.jbilling.server.user.CreditCardBL.validate(CreditCardDTO)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getName()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getNumber()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getCcExpiry()", "org.apache.log4j.Logger.getLogger(java.lang.Class)"],
    "com.sapienter.jbilling.server.item.ItemBL.getDTO(Integer, Integer, Integer, Integer)": ["com.sapienter.jbilling.server.item.ItemBL.getDTO(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.math.BigDecimal,com.sapienter.jbilling.server.order.db.OrderDTO)"],
    "com.sapienter.jbilling.server.pluggableTask.BasicOrderPeriodTask.getViewLimit(OrderPeriodDTO, Date)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.process.db.PeriodUnitDTO.getId()", "java.util.Calendar.setTime(java.util.Date)", "java.util.Calendar.getInstance()", "com.sapienter.jbilling.server.order.db.OrderPeriodDTO.getValue()", "java.util.Calendar.add(int,int)", "com.sapienter.jbilling.server.order.db.OrderPeriodDTO.getPeriodUnit()", "com.sapienter.jbilling.server.util.db.AbstractDescription.getDescription()", "com.sapienter.jbilling.server.util.MapPeriodToCalendar.map(java.lang.Integer)", "java.util.Calendar.getTime()"],
    "com.sapienter.jbilling.server.user.UserSessionBean.updateCreditCard(UserDTO, CreditCardDTO, Integer)": ["com.sapienter.jbilling.server.user.db.CreditCardDTO.getId()", "java.util.Iterator.next()", "com.sapienter.jbilling.server.user.UserBL.set(com.sapienter.jbilling.server.user.db.UserDTO)", "com.sapienter.jbilling.server.user.UserSessionBean.deleteCreditCard(java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.user.db.UserDTO.getCreditCards()", "com.sapienter.jbilling.server.user.UserBL.getEntity()", "com.sapienter.jbilling.server.user.db.UserDTO.getId()", "com.sapienter.jbilling.server.user.UserSessionBean.createCreditCard(java.lang.Integer,com.sapienter.jbilling.server.user.db.CreditCardDTO)", "java.util.Set.iterator()", "com.sapienter.jbilling.server.user.CreditCardBL.update(java.lang.Integer,com.sapienter.jbilling.server.user.db.CreditCardDTO,java.lang.Integer)", "com.sapienter.jbilling.server.user.db.UserDTO.getUserId()"],
    "com.sapienter.jbilling.client.authentication.CompanyUserDetails.toString()": ["java.lang.StringBuilder.append(java.lang.Object)", "append(java.lang.String)", "getUsername()", "java.lang.StringBuilder.append(java.lang.String)", "isAccountNonExpired()", "java.lang.StringBuilder.toString()", "com.sapienter.jbilling.client.authentication.CompanyUserDetails.getMainRoleId()", "isAccountNonLocked()", "com.sapienter.jbilling.client.authentication.CompanyUserDetails.getCurrencyId()", "isEnabled()", "getId()", "java.lang.StringBuilder.append(char)", "com.sapienter.jbilling.client.authentication.CompanyUserDetails.getLanguageId()", "com.sapienter.jbilling.client.authentication.CompanyUserDetails.getCompanyId()", "isCredentialsNonExpired()"],
    "com.sapienter.jbilling.server.order.db.OrderDTO.setNotes(String)": ["java.lang.String.substring(int,int)", "org.apache.log4j.Category.warn(java.lang.Object)", "java.lang.String.length()"],
    "com.sapienter.jbilling.server.process.AgeingBL.reviewAll(Integer, Date)": ["java.util.Map.get(java.lang.Object)", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "java.util.concurrent.ConcurrentMap.putIfAbsent(java.lang.Object,java.lang.Object)", "com.sapienter.jbilling.server.user.db.CompanyDTO.getAgeingEntitySteps()", "org.apache.log4j.Category.warn(java.lang.Object)", "com.sapienter.jbilling.server.process.task.IAgeingTask.reviewAllUsers(java.lang.Integer,java.util.Set,java.util.Date,java.lang.Integer)", "java.util.Map.put(java.lang.Object,java.lang.Object)", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskManager.getNextClass()", "com.sapienter.jbilling.server.user.EntityBL.getEntity()"],
    "com.sapienter.jbilling.server.user.UserSessionBean.getACH(Integer)": ["java.util.Set.toArray()", "com.sapienter.jbilling.server.user.db.UserDTO.getAchs()", "com.sapienter.jbilling.server.user.UserBL.getEntity()", "java.util.Set.size()", "com.sapienter.jbilling.server.user.AchBL.getDTO()", "com.sapienter.jbilling.server.user.db.AchDTO.getId()"],
    "com.sapienter.jbilling.server.user.partner.PartnerWS.setPercentageRate(BigDecimal)": ["java.math.BigDecimal.toString()"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentAtlasTask.getRefundData(PaymentDTOEx)": ["com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getTransactionId()", "com.sapienter.jbilling.server.payment.tasks.PaymentAtlasTask.getData(com.sapienter.jbilling.server.payment.PaymentDTOEx)", "java.util.Map.put(java.lang.Object,java.lang.Object)", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getAuthorization()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getPayment()"],
    "com.sapienter.jbilling.server.process.db.AgeingEntityStepDTO.getWelcomeMessage(Integer)": ["com.sapienter.jbilling.server.util.db.AbstractDescription.getDescription(java.lang.Integer,java.lang.String)"],
    "com.sapienter.jbilling.server.mediation.MediationSessionBean.assignStatusToMediationRecord(String, MediationRecordStatusDTO)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.mediation.db.MediationRecordDAS.findNewestByKey(java.lang.String)", "com.sapienter.jbilling.server.mediation.db.MediationRecordDTO.setRecordStatus(com.sapienter.jbilling.server.mediation.db.MediationRecordStatusDTO)", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)"],
    "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDAS.findByEntitySource(Integer, Integer)": ["org.hibernate.Criteria.list()", "createAlias(java.lang.String,java.lang.String)", "org.hibernate.criterion.Restrictions.eq(java.lang.String,java.lang.Integer)", "getSession()", "add()", "createCriteria(java.lang.Class)"],
    "com.sapienter.jbilling.server.order.OrderLineWS.setQuantityAsDecimal(BigDecimal)": ["com.sapienter.jbilling.server.order.OrderLineWS.setQuantity(java.math.BigDecimal)"],
    "com.sapienter.jbilling.server.provisioning.task.ProvisioningCommandsMDB.onMessage(Message)": ["org.apache.log4j.Category.debug(java.lang.Object)", "javax.jms.Message.getIntProperty(java.lang.String)", "java.lang.String.trim()", "com.sapienter.jbilling.server.provisioning.IProvisioningProcessSessionBean.updateProvisioningStatus(java.lang.Integer,java.lang.Integer,java.lang.String)", "javax.jms.Message.getStringProperty(java.lang.String)", "java.lang.Object.hashCode()", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "com.sapienter.jbilling.server.provisioning.task.ProvisioningCommandsMDB.pause(long)", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)", "javax.jms.MapMessage.getStringProperty(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)"],
    "com.sapienter.jbilling.server.process.BillingProcessRunBL.updatePaymentsStatistic(Integer)": ["com.sapienter.jbilling.server.process.db.BillingProcessDTO.getId()", "com.sapienter.jbilling.server.process.BillingProcessRunBL.updateNewPayment(java.lang.Integer,java.lang.Integer,java.math.BigDecimal,boolean)", "java.util.Iterator.next()", "com.sapienter.jbilling.server.process.db.BillingProcessDAS.getSuccessfulProcessCurrencyMethodAndSum(java.lang.Integer)", "com.sapienter.jbilling.server.process.db.ProcessRunDTO.getBillingProcess()", "com.sapienter.jbilling.server.process.BillingProcessRunBL.getEntity()", "java.util.Iterator.hasNext()", "com.sapienter.jbilling.server.process.db.BillingProcessDAS.getFailedProcessCurrencyAndSum(java.lang.Integer)"],
    "com.sapienter.jbilling.tools.ConvertToBinHexa.getCCRowsToUpdate()": ["java.sql.Connection.prepareStatement(java.lang.String)", "java.sql.Statement.getResultSet()", "java.sql.PreparedStatement.execute()"],
    "com.sapienter.jbilling.server.process.task.ProRateOrderPeriodTask.calculateEnd(OrderDTO, Date, int, Date)": ["com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.process.task.ProRateOrderPeriodTask.calculateCycleStarts(com.sapienter.jbilling.server.order.db.OrderDTO,java.util.Date)", "com.sapienter.jbilling.server.order.db.OrderDTO.getUser()", "com.sapienter.jbilling.server.user.db.UserDTO.getEntity()", "com.sapienter.jbilling.server.util.PreferenceBL.set(java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.pluggableTask.BasicOrderPeriodTask.calculateEnd(com.sapienter.jbilling.server.order.db.OrderDTO,java.util.Date,int,java.util.Date)", "com.sapienter.jbilling.server.util.PreferenceBL.getInt()"],
    "com.sapienter.jbilling.server.process.BillingProcessSessionBean.generateReview(Integer, Date, Integer, Integer)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.notification.NotificationBL.sendSapienterEmail(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String[])", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "java.lang.Integer.toString()", "org.apache.log4j.Category.warn(java.lang.Object,java.lang.Throwable)", "com.sapienter.jbilling.server.process.IBillingProcessSessionBean.processEntity(java.lang.Integer,java.util.Date,java.lang.Integer,java.lang.Integer,boolean)"],
    "com.sapienter.jbilling.server.item.CurrencyBL.entityHasCurrency(Integer, Integer)": ["java.sql.Connection.prepareStatement(java.lang.String)", "com.sapienter.jbilling.common.JNDILookup.getFactory()", "com.sapienter.jbilling.common.JNDILookup.lookUpDataSource()", "java.sql.ResultSet.next()", "java.sql.PreparedStatement.setInt(int,int)", "java.sql.Statement.close()", "java.sql.Connection.close()", "java.sql.PreparedStatement.executeQuery()", "java.sql.ResultSet.close()", "javax.sql.DataSource.getConnection()"],
    "com.sapienter.jbilling.server.order.OrderLineComparator.compare(OrderLineDTO, OrderLineDTO)": ["com.sapienter.jbilling.server.item.db.ItemDTO.getNumber()", "java.lang.String.compareTo(java.lang.String)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getItem()"],
    "com.sapienter.jbilling.server.pluggableTask.BasicLineTotalTask.getTotalForPercentage(List, Set)": ["com.sapienter.jbilling.server.item.db.ItemDTO.getPercentage()", "org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getDeleted()", "com.sapienter.jbilling.server.pluggableTask.BasicLineTotalTask.isItemExcluded(com.sapienter.jbilling.server.item.db.ItemDTO,java.util.Set)", "java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getTypeId()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getAmount()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getItem()", "java.math.BigDecimal.add(java.math.BigDecimal)", "com.sapienter.jbilling.server.item.db.ItemDTO.getId()"],
    "com.sapienter.jbilling.server.util.audit.EventLogger.getLastTransitionEvent(Integer)": ["com.sapienter.jbilling.server.util.audit.db.EventLogDAS.getLastTransitionEvent(java.lang.Integer)"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentAtlasTask.validateParameters()": ["com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase.ensureGetParameter(java.lang.String)", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription.getName()"],
    "com.sapienter.jbilling.server.user.partner.PartnerWS.toString()": ["java.util.List.size()"],
    "com.sapienter.jbilling.server.process.BillingProcessSessionBean.getReviewDto(Integer, Integer)": ["com.sapienter.jbilling.server.process.BillingProcessBL.getReviewDTO(java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.process.BillingProcessDTOEx.toString()"],
    "com.sapienter.jbilling.server.payment.tasks.paypal.PaypalApi.refundTransaction(String, String, RefundType)": ["com.paypal.sdk.core.nvp.NVPEncoder.encode()", "com.paypal.sdk.core.nvp.NVPDecoder.get(java.lang.String)", "com.sapienter.jbilling.server.payment.tasks.paypal.dto.PaypalResult.setErrorCode(java.lang.String)", "equals(java.lang.String)", "com.paypal.sdk.services.NVPCallerServices.call(java.lang.String)", "com.paypal.sdk.core.nvp.NVPDecoder.decode(java.lang.String)", "com.paypal.sdk.services.NVPCallerServices.setAPIProfile(com.paypal.sdk.profiles.APIProfile)", "com.sapienter.jbilling.server.payment.tasks.paypal.dto.PaypalResult.setSucceseeded(boolean)", "com.sapienter.jbilling.server.payment.tasks.paypal.dto.PaypalResult.setTransactionId(java.lang.String)", "com.sapienter.jbilling.server.payment.tasks.paypal.dto.RefundType.toString()", "com.paypal.sdk.core.nvp.NVPEncoder.add(java.lang.String,java.lang.String)", "java.lang.Enum.equals(java.lang.Object)"],
    "com.sapienter.jbilling.server.process.task.ScpUploadTask.upload(List, String, String, String, String)": ["org.apache.log4j.Category.debug(java.lang.Object)", "java.lang.String.trim()", "java.util.List.size()", "org.rev6.scf.ScpFacade.sendFiles(java.util.List)", "java.lang.String.equals(java.lang.Object)", "java.util.List.add(org.rev6.scf.ScpFile)", "java.io.File.getName()"],
    "com.sapienter.jbilling.server.payment.tasks.AbstractPaymentRouterTask.intValueOf(Object)": ["java.lang.Number.intValue()", "java.lang.Integer.valueOf(int)", "java.lang.Integer.parseInt(java.lang.String)"],
    "com.sapienter.jbilling.server.util.Util.round(float, int)": ["com.sapienter.jbilling.server.util.Util.round(double,int)"],
    "com.sapienter.jbilling.server.order.UsageBL.getCycleEndDate()": ["com.sapienter.jbilling.server.order.UsagePeriod.getCycleEndDate()"],
    "com.sapienter.jbilling.server.invoice.db.InvoiceDAS.addPeriodCriteria(Criteria, Date, Date)": ["org.hibernate.criterion.Restrictions.ge(java.lang.String,java.util.Date)", "add()", "org.hibernate.criterion.Restrictions.lt(java.lang.String,java.util.Date)", "org.hibernate.Criteria.add()"],
    "com.sapienter.jbilling.server.order.OrderBL.checkOrderLineQuantities(List, List, Integer, Integer, boolean)": ["org.apache.log4j.Category.debug(java.lang.Object)", "java.util.Iterator.next()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getDeleted()", "com.sapienter.jbilling.server.system.event.EventManager.process(com.sapienter.jbilling.server.system.event.Event)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getQuantity()", "java.lang.Object.java.lang.Object()", "java.util.List.add(java.lang.Object)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getId()", "java.util.Iterator.hasNext()", "java.util.Iterator.remove()", "java.math.BigDecimal.compareTo(java.math.BigDecimal)", "java.util.Collections.sort(java.util.List,java.util.Comparator)", "java.util.List.iterator()"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getAllInvoicesForUser(Integer)": ["com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerLanguageId()", "java.util.List.size()", "com.sapienter.jbilling.server.invoice.InvoiceWS.setStatusDescr(java.lang.String)", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "com.sapienter.jbilling.server.util.db.AbstractDescription.getDescription(java.lang.Integer)", "java.util.List.add(java.lang.Object)", "java.util.Set.size()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getInvoiceStatus()", "com.sapienter.jbilling.server.invoice.IInvoiceSessionBean.getAllInvoices(java.lang.Integer)", "com.sapienter.jbilling.server.invoice.InvoiceBL.getWS(com.sapienter.jbilling.server.invoice.db.InvoiceDTO)", "java.util.List.toArray(java.lang.Object[])"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.processLines(OrderDTO, Integer, Integer, Integer, Integer, String)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.item.ItemBL.setPricingFields(java.util.List)", "com.sapienter.jbilling.server.item.db.ItemDTO.getPercentage()", "com.sapienter.jbilling.server.item.ItemBL.getDTO(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.math.BigDecimal,com.sapienter.jbilling.server.order.db.OrderDTO)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getQuantity()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setTypeId(java.lang.Integer)", "com.sapienter.jbilling.server.order.OrderHelper.desynchronizeOrderLines(com.sapienter.jbilling.server.order.db.OrderDTO)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setDescription(java.lang.String)", "java.util.Arrays.asList(java.lang.Object[])", "com.sapienter.jbilling.server.order.db.OrderDTO.getLines()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getItemId()", "com.sapienter.jbilling.server.order.OrderHelper.synchronizeOrderLines(com.sapienter.jbilling.server.order.db.OrderDTO)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getUseItem()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setPrice(java.math.BigDecimal)", "com.sapienter.jbilling.server.item.db.ItemDTO.getPrice()", "com.sapienter.jbilling.server.util.db.AbstractDescription.getDescription()", "com.sapienter.jbilling.server.item.PricingField.getPricingFieldsValue(java.lang.String)", "com.sapienter.jbilling.server.item.db.ItemDTO.getOrderLineTypeId()"],
    "com.sapienter.jbilling.server.pluggableTask.ProcessorEmailAlarmTask.unavailable()": ["com.sapienter.jbilling.server.pluggableTask.ProcessorEmailAlarm.unavailable(int)", "com.sapienter.jbilling.server.pluggableTask.ProcessorEmailAlarmTask.sendEmail(java.lang.String,java.lang.String[])", "java.util.Date.toString()", "java.lang.Integer.toString()"],
    "com.sapienter.jbilling.server.entity.InvoiceLineDTO.setPrimaryKey(Integer)": ["com.sapienter.jbilling.server.entity.InvoiceLineDTO.setId(java.lang.Integer)"],
    "com.sapienter.jbilling.server.item.ItemDTOEx.setPrice(BigDecimal)": ["java.math.BigDecimal.toString()", "com.sapienter.jbilling.server.item.ItemDTOEx.setPrice(java.lang.String)"],
    "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getDelegatedInvoiceId()": ["com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getInvoice()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getId()"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getLastPayments(Integer, Integer)": ["com.sapienter.jbilling.server.user.db.UserDTO.getLanguageIdField()", "com.sapienter.jbilling.server.user.UserBL.getEntity()", "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerId()", "com.sapienter.jbilling.server.payment.PaymentBL.getManyWS(java.lang.Integer,java.lang.Integer,java.lang.Integer)"],
    "com.sapienter.jbilling.server.mediation.task.MediationResult.setStep(int)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.rule.Result.getId()", "com.sapienter.jbilling.server.mediation.task.MediationResult.getRecordKey()"],
    "com.sapienter.jbilling.server.process.db.AgeingEntityStepDTO.setFailedLoginMessage(Integer, String)": ["com.sapienter.jbilling.server.util.db.AbstractDescription.setDescription(java.lang.String,java.lang.Integer,java.lang.String)"],
    "com.sapienter.jbilling.server.item.CurrencyBL.convertPivotToCurrency(Integer, BigDecimal, Integer)": ["java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.util.db.CurrencyExchangeDTO.getRate()", "com.sapienter.jbilling.server.item.CurrencyBL.findExchange(java.lang.Integer,java.lang.Integer)", "java.math.BigDecimal.compareTo(java.math.BigDecimal)", "java.math.BigDecimal.multiply(java.math.BigDecimal)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getTotalRevenueByUser(Integer)": ["com.sapienter.jbilling.server.payment.db.PaymentDAS.findTotalRevenueByUser(java.lang.Integer)"],
    "com.sapienter.jbilling.server.user.partner.PartnerBL.notifyPayout(Integer, Integer, BigDecimal, Date, Date, boolean)": ["com.sapienter.jbilling.server.notification.NotificationBL.getPayoutMessage(java.lang.Integer,java.lang.Integer,java.math.BigDecimal,java.util.Date,java.util.Date,boolean,java.lang.Integer)", "com.sapienter.jbilling.server.user.partner.db.Partner.getBaseUserByRelatedClerk()", "org.apache.log4j.Category.warn(java.lang.Object)", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "com.sapienter.jbilling.server.user.partner.db.Partner.getUser()", "com.sapienter.jbilling.server.notification.INotificationSessionBean.notify(com.sapienter.jbilling.server.user.db.UserDTO,com.sapienter.jbilling.server.notification.MessageDTO)", "com.sapienter.jbilling.server.user.partner.db.Partner.getId()"],
    "com.sapienter.jbilling.server.mediation.db.MediationRecordDAS.findByProcess(Integer)": ["org.hibernate.Query.list()", "getSession()", "org.hibernate.Query.setParameter(java.lang.String,java.lang.Integer)", "createQuery(java.lang.String)"],
    "com.sapienter.jbilling.server.order.db.OrderDAS.findToDeActiveOrders()": ["org.hibernate.Criteria.list()", "org.hibernate.criterion.Restrictions.or()", "getSession()", "com.sapienter.jbilling.common.Util.truncateDate(java.util.Date)", "org.hibernate.Criteria.add()", "createCriteria(java.lang.Class)", "org.hibernate.criterion.Expression.gt(java.lang.String,java.util.Date)", "org.hibernate.criterion.Restrictions.eq(java.lang.String,int)", "org.hibernate.criterion.Expression.le(java.lang.String,java.util.Date)"],
    "com.sapienter.jbilling.server.payment.event.AbstractPaymentEvent.toString()": ["com.sapienter.jbilling.server.system.event.Event.getName()"],
    "com.sapienter.jbilling.client.authentication.CompanyUserDetails.getPlainUsername()": ["com.sapienter.jbilling.server.user.db.UserDTO.getUserName()"],
    "com.sapienter.jbilling.server.item.tasks.PricingManager.setPrice(int)": ["com.sapienter.jbilling.server.item.tasks.PricingManager.setPrice(double)"],
    "com.sapienter.jbilling.server.order.db.UsageDAS.findUsageByItem(Integer, Integer, Integer, Date, Date)": ["com.sapienter.jbilling.server.order.Usage.setUserId(java.lang.Integer)", "org.hibernate.Query.uniqueResult()", "com.sapienter.jbilling.server.order.Usage.setEndDate(java.util.Date)", "setResultTransformer()", "getSession()", "createSQLQuery(java.lang.String)", "com.sapienter.jbilling.server.order.Usage.setStartDate(java.util.Date)", "org.hibernate.Query.setParameter(java.lang.String,java.lang.Integer)", "addScalar(java.lang.String)", "org.hibernate.transform.Transformers.aliasToBean(java.lang.Class)", "com.sapienter.jbilling.server.order.Usage.setItemId(java.lang.Integer)", "org.hibernate.Query.setParameter(java.lang.String,java.util.Date)"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayExternalTask.updateGatewayKey(PaymentDTOEx)": ["com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getTransactionId()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.obscureNumber()", "java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.setGatewayKey(java.lang.String)", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getAuthorization()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getCcType()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getCreditCard()"],
    "com.sapienter.jbilling.server.util.db.AbstractDAS.findByCriteriaSingle(Criterion[])": ["org.hibernate.Criteria.add(org.hibernate.criterion.Criterion)", "createCriteria(java.lang.Class)", "com.sapienter.jbilling.server.util.db.AbstractDAS.getSession()", "com.sapienter.jbilling.server.util.db.AbstractDAS.getPersistentClass()", "org.hibernate.Criteria.uniqueResult()", "org.hibernate.Criteria.setCacheable(boolean)"],
    "com.sapienter.jbilling.server.pluggableTask.PluggableTask.getParameter(String, Integer)": ["java.util.Map.get(java.lang.Object)", "org.apache.commons.lang.StringUtils.isNotBlank(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentAtlasTask.getChargeData(PaymentDTOEx)": ["com.sapienter.jbilling.server.payment.tasks.PaymentAtlasTask.getData(com.sapienter.jbilling.server.payment.PaymentDTOEx)", "java.util.Map.put(java.lang.Object,java.lang.Object)"],
    "com.sapienter.jbilling.server.invoice.InvoiceSessionBean.sendReminders(Date)": ["com.sapienter.jbilling.server.invoice.InvoiceBL.sendReminders(java.util.Date)"],
    "com.sapienter.jbilling.server.entity.PaymentAuthorizationDTO.toString()": ["java.lang.StringBuffer.append(char)", "java.lang.StringBuffer.toString()", "com.sapienter.jbilling.server.entity.PaymentAuthorizationDTO.getApprovalCode()", "java.lang.StringBuffer.append(java.lang.String)", "com.sapienter.jbilling.server.entity.PaymentAuthorizationDTO.getProcessor()", "com.sapienter.jbilling.server.entity.PaymentAuthorizationDTO.getTransactionId()", "com.sapienter.jbilling.server.entity.PaymentAuthorizationDTO.getResponseMessage()", "com.sapienter.jbilling.server.entity.PaymentAuthorizationDTO.getId()", "com.sapienter.jbilling.server.entity.PaymentAuthorizationDTO.getCreateDate()", "com.sapienter.jbilling.server.entity.PaymentAuthorizationDTO.getCode2()", "com.sapienter.jbilling.server.entity.PaymentAuthorizationDTO.getCardCode()", "com.sapienter.jbilling.server.entity.PaymentAuthorizationDTO.getCode1()", "com.sapienter.jbilling.server.entity.PaymentAuthorizationDTO.getMD5()", "com.sapienter.jbilling.server.entity.PaymentAuthorizationDTO.getCode3()", "com.sapienter.jbilling.server.entity.PaymentAuthorizationDTO.getAVS()"],
    "com.sapienter.jbilling.server.process.BillingProcessRunBL.updateTotals(Integer)": ["org.apache.log4j.Category.debug(java.lang.Object)", "java.lang.Long.intValue()", "com.sapienter.jbilling.server.process.db.ProcessRunTotalDTO.getVersionNum()", "java.util.Iterator.next()", "com.sapienter.jbilling.server.process.BillingProcessRunBL.findOrCreateTotal(java.lang.Integer)", "com.sapienter.jbilling.server.process.db.ProcessRunDTO.setInvoicesGenerated(java.lang.Integer)", "com.sapienter.jbilling.server.process.db.BillingProcessDAS.getCountAndSum(java.lang.Integer)", "java.util.Iterator.hasNext()", "com.sapienter.jbilling.server.process.db.ProcessRunDTO.getInvoicesGenerated()", "com.sapienter.jbilling.server.process.db.ProcessRunTotalDTO.setTotalInvoiced(java.math.BigDecimal)"],
    "com.sapienter.jbilling.server.order.db.OrderDAS.findIdsByUserAndItemTypeLatestFirst(Integer, Integer, int)": ["list()", "getSession()", "setMaxResults(int)", "createQuery(java.lang.String)", "setParameter(java.lang.String,java.lang.Integer)"],
    "com.sapienter.jbilling.server.user.partner.PartnerBL.processPayout(Integer)": ["com.sapienter.jbilling.server.util.audit.EventLogger.warning(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String)", "com.sapienter.jbilling.server.user.db.UserDTO.getEntity()", "com.sapienter.jbilling.server.user.partner.db.PartnerPayout.setStartingDate(java.util.Date)", "com.sapienter.jbilling.server.user.partner.db.PartnerPayout.setEndingDate(java.util.Date)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setAmount(java.math.BigDecimal)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.user.partner.db.PartnerPayout.setPartner(com.sapienter.jbilling.server.user.partner.db.Partner)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getAmount()", "com.sapienter.jbilling.server.user.partner.PartnerBL.processPayment(com.sapienter.jbilling.server.payment.PaymentDTOEx,java.lang.Integer,com.sapienter.jbilling.server.user.partner.db.PartnerPayout,boolean)", "com.sapienter.jbilling.server.user.partner.db.Partner.getNextPayoutDate()", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.user.db.UserDTO.getLanguageIdField()", "com.sapienter.jbilling.server.payment.PaymentBL.findPaymentInstrument(java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.user.partner.db.PartnerPayout.setPaymentsAmount(java.math.BigDecimal)", "java.util.Set.add(java.lang.Object)", "com.sapienter.jbilling.server.user.db.UserDTO.getCurrency()", "com.sapienter.jbilling.server.user.partner.db.Partner.getBaseUserByRelatedClerk()", "com.sapienter.jbilling.server.user.partner.PartnerBL.calculatePayoutDates()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.setUserId(java.lang.Integer)", "com.sapienter.jbilling.server.user.partner.PartnerBL.calculatePayout(java.util.Date,java.util.Date,java.lang.Integer)", "com.sapienter.jbilling.server.user.partner.db.Partner.getUser()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setPaymentDate(java.util.Date)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setCurrency(com.sapienter.jbilling.server.util.db.CurrencyDTO)", "com.sapienter.jbilling.server.user.db.UserDTO.getCurrencyId()", "com.sapienter.jbilling.server.user.partner.db.PartnerPayout.setRefundsAmount(java.math.BigDecimal)", "com.sapienter.jbilling.server.user.partner.db.PartnerPayout.setBalanceLeft(java.math.BigDecimal)", "com.sapienter.jbilling.server.user.partner.db.Partner.setDuePayout(java.math.BigDecimal)", "com.sapienter.jbilling.server.user.partner.db.PartnerPayout.getPayment()", "com.sapienter.jbilling.server.user.partner.PartnerBL.notifyPayout(java.lang.Integer,java.lang.Integer,java.math.BigDecimal,java.util.Date,java.util.Date,boolean)", "com.sapienter.jbilling.server.user.partner.db.Partner.getAutomaticProcess()", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)", "com.sapienter.jbilling.server.user.partner.db.Partner.getPartnerPayouts()", "com.sapienter.jbilling.server.user.db.UserDTO.getUserId()"],
    "com.sapienter.jbilling.server.process.ProcessRunTotalWS.setTotalInvoiced(BigDecimal)": ["java.math.BigDecimal.toString()"],
    "com.sapienter.jbilling.server.payment.tasks.paypal.PaypalApi.doReferenceTransaction(String, PaymentAction, Payment)": ["com.paypal.sdk.core.nvp.NVPEncoder.encode()", "com.paypal.sdk.core.nvp.NVPDecoder.get(java.lang.String)", "equals(java.lang.String)", "com.paypal.sdk.core.nvp.NVPDecoder.decode(java.lang.String)", "com.sapienter.jbilling.server.payment.tasks.paypal.dto.PaypalResult.setSucceseeded(boolean)", "com.sapienter.jbilling.server.payment.tasks.paypal.dto.Payment.getAmount()", "com.sapienter.jbilling.server.payment.tasks.paypal.dto.PaypalResult.setErrorCode(java.lang.String)", "com.paypal.sdk.services.NVPCallerServices.call(java.lang.String)", "com.paypal.sdk.services.NVPCallerServices.setAPIProfile(com.paypal.sdk.profiles.APIProfile)", "com.sapienter.jbilling.server.payment.tasks.paypal.dto.PaymentAction.toString()", "com.sapienter.jbilling.server.payment.tasks.paypal.dto.Payment.getCurrencyCode()", "com.sapienter.jbilling.server.payment.tasks.paypal.dto.PaypalResult.setTransactionId(java.lang.String)", "com.paypal.sdk.core.nvp.NVPEncoder.add(java.lang.String,java.lang.String)"],
    "com.sapienter.jbilling.server.process.BillingProcessSessionBean.trigger(Date)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.util.audit.EventLogger.warning(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String)", "com.sapienter.jbilling.server.process.ConfigurationBL.getDTO()", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.getPeriodUnit()", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.getId()", "java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.getPeriodValue()", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "com.sapienter.jbilling.server.process.BillingProcessBL.getToRetry(java.lang.Integer)", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.getNextRunDate()", "java.util.Date.after(java.util.Date)", "com.sapienter.jbilling.server.process.db.BillingProcessDAS.isPresent(java.lang.Integer,java.lang.Integer,java.util.Date)", "java.lang.Integer.intValue()", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.getDaysForRetry()", "java.lang.Integer.toString()", "org.apache.log4j.Category.warn(java.lang.Object,java.lang.Throwable)", "com.sapienter.jbilling.server.process.BillingProcessBL.isReviewPresent(java.lang.Integer)", "com.sapienter.jbilling.server.process.IBillingProcessSessionBean.doRetry(java.lang.Integer,int,java.util.Date)", "com.sapienter.jbilling.server.util.audit.EventLogger.getInstance()", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.getAutoPayment()", "com.sapienter.jbilling.server.process.db.PeriodUnitDTO.getId()", "java.util.Calendar.get(int)", "com.sapienter.jbilling.server.user.EntityBL.getAllIDs()", "com.sapienter.jbilling.server.process.BillingProcessSessionBean.generateReview(java.lang.Integer,java.util.Date,java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.getDaysForReport()", "java.util.GregorianCalendar.add(int,int)", "org.apache.log4j.Category.warn(java.lang.Object)", "java.util.concurrent.atomic.AtomicBoolean.set(boolean)", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.getReviewStatus()", "com.sapienter.jbilling.server.process.IBillingProcessSessionBean.processEntity(java.lang.Integer,java.util.Date,java.lang.Integer,java.lang.Integer,boolean)", "java.util.Calendar.setTime(java.util.Date)", "com.sapienter.jbilling.common.Util.truncateDate(java.util.Date)", "com.sapienter.jbilling.server.notification.NotificationBL.sendSapienterEmail(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String[])", "java.util.Date.getTime()", "java.util.Calendar.getTime()", "java.util.concurrent.atomic.AtomicBoolean.compareAndSet(boolean,boolean)", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.getGenerateReport()"],
    "com.sapienter.jbilling.server.util.db.HibernateIdGenerator.getId()": ["org.hibernate.id.IdentifierGenerator.generate(org.hibernate.impl.StatelessSessionImpl,com.sapienter.jbilling.server.util.db.HibernateIdGenerator$ID)", "org.hibernate.StatelessSession.close()", "org.hibernate.SessionFactory.openStatelessSession()"],
    "com.sapienter.jbilling.server.notification.barcode.BarcodeFactory.royalMailCBC(Checksum, TextPlacement)": ["org.krysalis.barcode4j.impl.fourstate.RoyalMailCBCBean.setChecksumMode(org.krysalis.barcode4j.ChecksumMode)", "com.sapienter.jbilling.server.notification.barcode.BarcodeFactory.getPlacement(com.sapienter.jbilling.server.notification.barcode.TextPlacement)", "com.sapienter.jbilling.server.notification.barcode.BarcodeFactory.getChecksum(com.sapienter.jbilling.server.notification.barcode.Checksum)", "org.krysalis.barcode4j.impl.fourstate.RoyalMailCBCBean.setMsgPosition(org.krysalis.barcode4j.HumanReadablePlacement)"],
    "com.sapienter.jbilling.server.order.OrderBL.getRecurringOrderLines(Integer)": ["com.sapienter.jbilling.server.order.db.OrderLineDAS.findRecurringByUser(java.lang.Integer)"],
    "com.sapienter.jbilling.server.payment.blacklist.CsvProcessor.process(String, boolean, Integer)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.payment.blacklist.CsvProcessor.createAddressRecord(com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDTO)", "java.lang.Integer.equals(java.lang.Object)", "java.io.BufferedReader.close()", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDTO.setCreateDate(java.util.Date)", "java.io.BufferedReader.readLine()", "com.sapienter.jbilling.server.payment.blacklist.CsvProcessor.lineColMessage(com.sapienter.jbilling.server.payment.blacklist.CsvProcessor$Column,java.lang.String,java.lang.Object[])", "com.sapienter.jbilling.server.payment.blacklist.CsvProcessor.createNameRecord(com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDTO)", "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDTO.setCompany(com.sapienter.jbilling.server.user.db.CompanyDTO)", "com.sapienter.jbilling.server.user.EntityBL.getLocale()", "java.lang.String.equals(java.lang.Object)", "com.sapienter.jbilling.server.payment.blacklist.CsvProcessor.getMessage(java.lang.String,java.lang.Object[])", "com.sapienter.jbilling.server.payment.blacklist.BlacklistBL.getIpAddressCcfId(java.lang.Integer)", "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDTO.setType(java.lang.Integer)", "java.util.ResourceBundle.getBundle(java.lang.String,java.util.Locale)", "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDAS.deleteSource(java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.payment.blacklist.CsvProcessor.createCcRecord(com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDTO)", "com.sapienter.jbilling.server.payment.blacklist.CsvProcessor.getInt(com.sapienter.jbilling.server.payment.blacklist.CsvProcessor$Column)", "com.sapienter.jbilling.server.payment.blacklist.CsvProcessor.createUserRecord(com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDTO)", "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDTO.setSource(java.lang.Integer)", "com.sapienter.jbilling.server.payment.blacklist.CsvProcessor.createPhoneRecord(com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDTO)", "com.sapienter.jbilling.server.util.Util.csvSplitLine(java.lang.String,char)", "com.sapienter.jbilling.server.payment.blacklist.CsvProcessor.createIpAddressRecord(com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDTO)", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)"],
    "com.sapienter.jbilling.server.pluggableTask.PaymentFakeTask.preAuth(PaymentDTOEx)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.pluggableTask.PaymentFakeTask.doFakeAuthorization(com.sapienter.jbilling.server.payment.PaymentDTOEx,java.lang.String)", "com.sapienter.jbilling.server.pluggableTask.PaymentFakeTask.generatePreAuthTransactionId()", "com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase$Result.shouldCallOtherProcessors()"],
    "com.sapienter.jbilling.server.report.db.ReportDTO.toString()": ["com.sapienter.jbilling.server.report.db.ReportTypeDTO.getName()"],
    "com.sapienter.jbilling.server.mediation.task.SaveToJDBCMediationErrorHandler.process(Record, List, Date, MediationConfiguration)": ["org.apache.log4j.Category.debug(java.lang.Object)", "java.sql.PreparedStatement.setBoolean(int,boolean)", "java.sql.PreparedStatement.executeUpdate()", "java.lang.Integer.equals(java.lang.Object)", "java.lang.StringBuilder.append(java.lang.String)", "java.util.List.add(java.lang.Object)", "java.util.Iterator.hasNext()", "com.sapienter.jbilling.server.pluggableTask.PluggableTask.getParameter(java.lang.String,java.lang.String)", "com.sapienter.jbilling.server.item.PricingField.getDateValue()", "com.sapienter.jbilling.server.item.PricingField.getStrValue()", "java.sql.PreparedStatement.setInt(int,int)", "com.sapienter.jbilling.server.item.PricingField.getIntValue()", "java.util.List.iterator()", "java.lang.String.equals(java.lang.Object)", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)", "java.util.Iterator.next()", "java.sql.PreparedStatement.setDouble(int,double)", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription.getName()", "com.sapienter.jbilling.server.mediation.db.MediationConfiguration.getId()", "java.lang.StringBuilder.toString()", "com.sapienter.jbilling.server.mediation.task.SaveToJDBCMediationErrorHandler.getConnection()", "java.util.Iterator.remove()", "java.sql.Connection.prepareStatement(java.lang.String)", "java.sql.PreparedStatement.setString(int,java.lang.String)", "java.sql.PreparedStatement.setTimestamp(int,java.sql.Timestamp)", "java.sql.PreparedStatement.setNull(int,int)", "java.sql.Connection.close()", "com.sapienter.jbilling.server.mediation.Record.getFields()", "com.sapienter.jbilling.server.item.PricingField.getType()", "com.sapienter.jbilling.server.item.PricingField.getDoubleValue()", "com.sapienter.jbilling.server.item.PricingField.getName()", "com.sapienter.jbilling.server.util.Util.join(java.util.List,java.lang.String)", "java.util.List.size()", "com.sapienter.jbilling.server.mediation.task.SaveToJDBCMediationErrorHandler.escapedKeywordsColumnName(java.lang.String)", "com.sapienter.jbilling.server.item.PricingField.getBooleanValue()", "java.util.Date.getTime()", "java.util.Collections.nCopies(int,java.lang.Object)", "org.apache.log4j.Category.error(java.lang.Object)", "java.lang.Integer.parseInt(java.lang.String)"],
    "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDAS.deleteSource(Integer, Integer)": ["org.hibernate.Query.executeUpdate()", "getSession()", "org.hibernate.Query.setParameter(java.lang.String,java.lang.Integer)", "createQuery(java.lang.String)"],
    "com.sapienter.jbilling.server.process.task.AbstractCronTask.getScheduleString()": ["com.sapienter.jbilling.server.process.task.AbstractCronTask.getCronExpression()"],
    "com.sapienter.jbilling.server.pluggableTask.PaymentFakeTask.doFakeAuthorization(PaymentDTOEx, String)": ["java.lang.String.substring(int)", "com.sapienter.jbilling.server.pluggableTask.PaymentFakeTask.getProcessResultId(com.sapienter.jbilling.server.user.db.CreditCardDTO)", "java.lang.Integer.equals(java.lang.Object)", "java.math.BigDecimal.toPlainString()", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getAmount()", "com.sapienter.jbilling.server.pluggableTask.PaymentFakeTask$Filter.accept(com.sapienter.jbilling.server.user.db.CreditCardDTO)", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getAch()", "com.sapienter.jbilling.server.pluggableTask.PaymentFakeTask.createAuthorizationDTO(java.lang.Integer,java.lang.String)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setPaymentResult(com.sapienter.jbilling.server.payment.db.PaymentResultDTO)", "com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase.storeProcessedAuthorization(com.sapienter.jbilling.server.payment.PaymentDTOEx,com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO)", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getCreditCard()", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.String.length()"],
    "com.sapienter.jbilling.server.process.db.BillingProcessDAS.isPresent(Integer, Integer, Date)": ["org.hibernate.criterion.Restrictions.eq(java.lang.String,java.lang.Integer)", "getSession()", "org.hibernate.criterion.Restrictions.eq(java.lang.String,java.util.Date)", "add()", "org.hibernate.Criteria.createAlias(java.lang.String,java.lang.String)", "org.hibernate.Criteria.add()", "createCriteria(java.lang.Class)", "org.hibernate.Criteria.uniqueResult()"],
    "com.sapienter.jbilling.server.user.permisson.db.RoleDTO.initializeAuthority()": ["java.lang.String.trim()", "com.sapienter.jbilling.server.user.permisson.db.RoleDTO.getTitle(java.lang.Integer)", "java.lang.String.toUpperCase()", "java.lang.String.replaceAll(java.lang.String,java.lang.String)"],
    "com.sapienter.jbilling.server.provisioning.ProvisioningProcessSessionBean.updateProvisioningStatus(Integer, Integer)": ["com.sapienter.jbilling.server.order.OrderBL.setProvisioningStatus(java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getPurchaseOrder()"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getBillingProcessGeneratedInvoices(Integer)": ["com.sapienter.jbilling.server.process.IBillingProcessSessionBean.getGeneratedInvoices(java.lang.Integer)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getId()", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "java.util.List.add(java.lang.Object)", "java.util.Collection.size()"],
    "com.sapienter.jbilling.server.pluggableTask.PaymentFakeTask.generatePreAuthTransactionId()": ["java.lang.String.substring(int,int)", "java.lang.System.currentTimeMillis()", "java.lang.String.length()"],
    "com.sapienter.jbilling.server.pluggableTask.PaperInvoiceNotificationTask.getPDF(UserDTO, MessageDTO)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.user.db.UserDTO.getPassword()", "com.sapienter.jbilling.server.pluggableTask.PaperInvoiceNotificationTask.getDesign(com.sapienter.jbilling.server.user.db.UserDTO)", "com.sapienter.jbilling.server.user.db.UserDTO.getUserName()", "com.sapienter.jbilling.server.notification.NotificationBL.generatePaperInvoiceAsStream(java.lang.String,boolean,com.sapienter.jbilling.server.invoice.db.InvoiceDTO,com.sapienter.jbilling.server.user.ContactDTOEx,com.sapienter.jbilling.server.user.ContactDTOEx,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String)", "com.sapienter.jbilling.server.pluggableTask.PaperInvoiceNotificationTask.init(com.sapienter.jbilling.server.user.db.UserDTO,com.sapienter.jbilling.server.notification.MessageDTO)", "com.sapienter.jbilling.server.notification.MessageDTO.getContent()", "com.sapienter.jbilling.server.notification.MessageSection.getContent()"],
    "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskBL.instantiateTask()": ["java.lang.Class.newInstance()", "com.sapienter.jbilling.server.pluggableTask.PluggableTask.initializeParamters(com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDTO)", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskTypeDTO.getClassName()", "java.lang.Class.forName(java.lang.String)", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDTO.getId()", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDTO.getType()", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskBL.getDTO()"],
    "com.sapienter.jbilling.server.process.db.BillingProcessDAS.findReview(Integer)": ["org.hibernate.criterion.Restrictions.eq(java.lang.String,java.lang.Integer)", "getSession()", "add()", "org.hibernate.Criteria.createAlias(java.lang.String,java.lang.String)", "org.hibernate.Criteria.add()", "createCriteria(java.lang.Class)", "org.hibernate.Criteria.uniqueResult()", "org.hibernate.criterion.Restrictions.eq(java.lang.String,int)"],
    "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskBL.init()": ["com.sapienter.jbilling.server.util.audit.EventLogger.getInstance()", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)"],
    "com.sapienter.jbilling.server.payment.PaymentBL.validate(PaymentWS)": ["com.sapienter.jbilling.server.payment.PaymentWS.getCheque()", "com.sapienter.jbilling.server.payment.PaymentWS.getResultId()", "com.sapienter.jbilling.server.payment.PaymentWS.getUserId()", "com.sapienter.jbilling.server.payment.PaymentWS.getCreditCard()", "com.sapienter.jbilling.server.payment.PaymentWS.getMethodId()", "com.sapienter.jbilling.server.payment.PaymentBL.validate(com.sapienter.jbilling.server.payment.db.PaymentInfoChequeDTO)", "com.sapienter.jbilling.server.payment.PaymentWS.getAmount()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getCreditCard()", "com.sapienter.jbilling.server.payment.PaymentWS.getIsRefund()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getCheque()", "com.sapienter.jbilling.server.user.CreditCardBL.validate(com.sapienter.jbilling.server.user.db.CreditCardDTO)"],
    "com.sapienter.jbilling.server.order.OrderBL.updateActiveUntil(Integer, Date, OrderDTO)": ["com.sapienter.jbilling.server.order.db.OrderDTO.getId()", "com.sapienter.jbilling.server.order.OrderBL.isDateInvoiced(java.util.Date)", "com.sapienter.jbilling.server.order.OrderBL.updateEndOfOrderProcess(java.util.Date)", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.order.db.OrderDTO.getActiveUntil()", "com.sapienter.jbilling.server.system.event.EventManager.process(com.sapienter.jbilling.server.system.event.Event)", "com.sapienter.jbilling.server.order.db.OrderDTO.setActiveUntil(java.util.Date)", "com.sapienter.jbilling.server.order.OrderBL.audit(java.lang.Integer,java.util.Date)", "com.sapienter.jbilling.server.user.db.UserDTO.getCompany()", "com.sapienter.jbilling.server.util.db.AbstractGenericStatus.getId()", "com.sapienter.jbilling.server.order.db.OrderDTO.getBaseUserByUserId()", "com.sapienter.jbilling.server.order.db.OrderDTO.getOrderStatus()"],
    "com.sapienter.jbilling.server.item.PricingField.getDateValue()": ["java.lang.Long.parseLong(java.lang.String)"],
    "com.sapienter.jbilling.server.util.db.AbstractDAS.findForUpdate(Serializable)": ["get(java.lang.Class,java.io.Serializable)", "com.sapienter.jbilling.server.util.db.AbstractDAS.getPersistentClass()", "com.sapienter.jbilling.server.util.db.AbstractDAS.getHibernateTemplate()"],
    "com.sapienter.jbilling.server.process.task.AgeingProcessTask.getTaskName()": ["com.sapienter.jbilling.server.process.task.AbstractBackwardSimpleScheduledTask.getScheduleString()", "com.sapienter.jbilling.server.pluggableTask.PluggableTask.getEntityId()"],
    "com.sapienter.jbilling.server.order.db.OrderDTO.getPeriodId()": ["com.sapienter.jbilling.server.order.db.OrderPeriodDTO.getId()", "com.sapienter.jbilling.server.order.db.OrderDTO.getOrderPeriod()"],
    "com.sapienter.jbilling.server.user.tasks.AutoRechargeTask.getAutoRechargeThreshold(Integer)": ["com.sapienter.jbilling.server.util.PreferenceBL.getFloat()", "com.sapienter.jbilling.server.util.PreferenceBL.set(java.lang.Integer,java.lang.Integer)"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentSageTask.initializeParamters(PluggableTaskDTO)": ["com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase.ensureGetParameter(java.lang.String)", "com.sapienter.jbilling.server.pluggableTask.PaymentTaskWithTimeout.initializeParamters(com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDTO)"],
    "com.sapienter.jbilling.server.process.BillingProcessBL.getReviewDTO(Integer, Integer)": ["java.io.PrintStream.println(java.lang.String)", "com.sapienter.jbilling.server.process.db.BillingProcessDAS.findReview(java.lang.Integer)", "com.sapienter.jbilling.server.process.BillingProcessBL.getDtoEx(java.lang.Integer)"],
    "com.sapienter.jbilling.server.util.Bootstrap.destroy()": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.client.process.JobScheduler.shutdown()", "com.sapienter.jbilling.client.process.JobScheduler.getInstance()"],
    "com.sapienter.jbilling.server.process.BillingProcessRunBL.getDTO(Integer)": ["com.sapienter.jbilling.server.process.db.ProcessRunDTO.getStatus()", "com.sapienter.jbilling.server.process.db.ProcessRunDTO.setFinished(java.util.Date)", "java.util.List.add(java.lang.Object)", "java.util.Iterator.hasNext()", "com.sapienter.jbilling.server.process.db.ProcessRunDTO.setInvoicesGenerated(java.lang.Integer)", "com.sapienter.jbilling.server.process.db.ProcessRunDTO.getInvoicesGenerated()", "com.sapienter.jbilling.server.process.BillingProcessRunDTOEx.setStatusStr(java.lang.String)", "com.sapienter.jbilling.server.process.db.ProcessRunDTO.getProcessRunTotals()", "com.sapienter.jbilling.server.process.db.ProcessRunUserDAS.findFailedUsersCount(java.lang.Integer)", "java.util.Iterator.next()", "com.sapienter.jbilling.server.process.db.ProcessRunDTO.getId()", "com.sapienter.jbilling.server.process.db.ProcessRunDTO.setId(int)", "com.sapienter.jbilling.server.process.db.ProcessRunDTO.setStarted(java.util.Date)", "com.sapienter.jbilling.server.util.db.AbstractDescription.getDescription(java.lang.Integer)", "com.sapienter.jbilling.server.process.BillingProcessRunDTOEx.setUsersFailed(java.lang.Integer)", "com.sapienter.jbilling.server.process.db.ProcessRunDTO.setPaymentFinished(java.util.Date)", "com.sapienter.jbilling.server.process.BillingProcessRunDTOEx.getTotals()", "com.sapienter.jbilling.server.process.db.ProcessRunDTO.getStarted()", "com.sapienter.jbilling.server.process.db.ProcessRunDTO.getRunDate()", "com.sapienter.jbilling.server.process.BillingProcessRunBL.getTotalDTO(com.sapienter.jbilling.server.process.db.ProcessRunTotalDTO,java.lang.Integer)", "java.util.Set.isEmpty()", "com.sapienter.jbilling.server.process.db.ProcessRunDTO.getPaymentFinished()", "com.sapienter.jbilling.server.process.db.ProcessRunDTO.getFinished()", "com.sapienter.jbilling.server.process.BillingProcessRunDTOEx.setUsersSucceeded(java.lang.Integer)", "com.sapienter.jbilling.server.util.db.AbstractGenericStatus.getId()", "com.sapienter.jbilling.server.process.db.ProcessRunDTO.setRunDate(java.util.Date)", "com.sapienter.jbilling.server.process.db.ProcessRunUserDAS.findSuccessfullUsersCount(java.lang.Integer)", "java.util.Set.iterator()", "com.sapienter.jbilling.server.util.db.AbstractGenericStatusDAS.find(java.io.Serializable)"],
    "com.sapienter.jbilling.server.user.UserSessionBean.create(UserDTOEx, ContactDTOEx)": ["com.sapienter.jbilling.server.user.UserDTOEx.getEntityId()", "org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.user.UserBL.exists(java.lang.String,java.lang.Integer)", "com.sapienter.jbilling.server.user.db.UserDTO.getUserName()", "com.sapienter.jbilling.server.user.ContactBL.getDTO()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getId()", "com.sapienter.jbilling.server.user.db.UserDTO.getCustomer()", "com.sapienter.jbilling.server.user.ContactBL.setFromChild(java.lang.Integer)", "com.sapienter.jbilling.server.user.ContactBL.createPrimaryForUser(com.sapienter.jbilling.server.user.ContactDTOEx,java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.user.db.CustomerDTO.getParent()", "com.sapienter.jbilling.server.user.UserBL.create(com.sapienter.jbilling.server.user.UserDTOEx)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getUserTransitions(Date, Date)": ["com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerCompanyId()", "com.sapienter.jbilling.server.user.UserTransitionResponseWS.getId()", "com.sapienter.jbilling.server.util.audit.EventLogger.audit(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.util.Date)", "com.sapienter.jbilling.server.user.UserBL.getUserTransitionsByDate(java.lang.Integer,java.util.Date,java.util.Date)", "com.sapienter.jbilling.server.util.audit.EventLogger.getLastTransitionEvent(java.lang.Integer)", "org.apache.log4j.Category.info(java.lang.Object)", "com.sapienter.jbilling.server.util.audit.EventLogger.getInstance()", "com.sapienter.jbilling.server.user.UserBL.getUserTransitionsById(java.lang.Integer,java.lang.Integer,java.util.Date)", "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerId()", "java.lang.Integer.toString()"],
    "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskBL.updateParameter(PluggableTaskParameterDTO)": ["com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskParameterDTO.getTask()", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskParameterDTO.expandValue()", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDTO.getId()", "com.sapienter.jbilling.server.pluggableTask.PluggableTask.invalidateRuleCache(java.lang.Integer)", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)"],
    "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskBL.set(Integer)": ["com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)"],
    "com.sapienter.jbilling.server.order.db.OrderDAS.findProcessByEndDate(Integer, Date)": ["com.sapienter.jbilling.server.order.db.OrderDTO.getOrderProcesses()", "getSession()", "setDate(java.lang.String,java.util.Date)", "com.sapienter.jbilling.common.Util.truncateDate(java.util.Date)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "createFilter(java.util.Set,java.lang.String)", "uniqueResult()"],
    "com.sapienter.jbilling.server.util.Util.getPeriodUnitStr(Integer, Integer)": ["com.sapienter.jbilling.server.util.db.InternationalDescriptionDAS.findIt(java.lang.String,java.lang.Integer,java.lang.String,java.lang.Integer)", "org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.util.db.InternationalDescriptionDTO.getContent()", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "org.apache.log4j.Logger.getLogger(java.lang.Class)"],
    "com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.getCustomerProfile(String)": ["com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.sendViaXML(java.lang.String)", "com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.buildGetCustomerProfileRequest(java.lang.String)", "com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.parseGetCustomerProfileResponse(java.lang.String)"],
    "com.sapienter.jbilling.server.user.UserSessionBean.getContactDTO(Integer, Integer)": ["com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.user.ContactBL.set(java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.user.db.UserDTO.getCompany()", "com.sapienter.jbilling.server.user.ContactBL.getDTO()", "com.sapienter.jbilling.server.user.ContactBL.getEntity()", "com.sapienter.jbilling.server.user.UserSessionBean.getVoidContactDTO(java.lang.Integer)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)"],
    "com.sapienter.jbilling.server.notification.MessageDTO.getContent()": ["java.util.List.toArray(java.lang.Object[])"],
    "com.sapienter.jbilling.server.user.UserDTOEx.getEntityId()": ["com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.user.db.UserDTO.getCompany()"],
    "com.sapienter.jbilling.server.notification.NotificationBL.getOrderNotification(Integer, Integer, Integer, Date, Date, Integer, BigDecimal, Integer)": ["com.sapienter.jbilling.server.notification.MessageDTO.setTypeId(java.lang.Integer)", "com.sapienter.jbilling.server.util.Util.formatMoney(java.math.BigDecimal,java.lang.Integer,java.lang.Integer,boolean)", "java.util.ResourceBundle.getBundle(java.lang.String,java.util.Locale)", "com.sapienter.jbilling.server.notification.MessageDTO.getTypeId()", "java.util.ResourceBundle.getString(java.lang.String)", "com.sapienter.jbilling.server.notification.NotificationBL.setContent(com.sapienter.jbilling.server.notification.MessageDTO,java.lang.Integer,java.lang.Integer,java.lang.Integer)", "java.text.DateFormat.format(java.util.Date)", "java.lang.Integer.intValue()", "com.sapienter.jbilling.server.user.UserBL.getLocale()", "com.sapienter.jbilling.server.notification.MessageDTO.addParameter(java.lang.String,java.lang.Object)", "com.sapienter.jbilling.server.notification.NotificationBL.initializeMessage(java.lang.Integer,java.lang.Integer)"],
    "com.sapienter.jbilling.server.user.UserSessionBean.getUserDTO(String, Integer)": ["com.sapienter.jbilling.server.user.UserBL.getDto()"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.saveCustomerNotes(Integer, String)": ["com.sapienter.jbilling.server.user.db.CustomerDTO.setNotes(java.lang.String)", "com.sapienter.jbilling.server.user.UserBL.getUserEntity(java.lang.Integer)", "com.sapienter.jbilling.server.user.db.UserDTO.getCustomer()"],
    "com.sapienter.jbilling.server.payment.PaymentBL.getWS(PaymentDTOEx)": ["com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getCode1()", "com.sapienter.jbilling.server.payment.PaymentWS.setPaymentId(java.lang.Integer)", "com.sapienter.jbilling.server.payment.PaymentWS.setCreditCard(com.sapienter.jbilling.server.entity.CreditCardDTO)", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getUserId()", "com.sapienter.jbilling.server.user.db.AchDTO.getAccountType()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getId()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getCreditCard()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getId()", "com.sapienter.jbilling.server.entity.PaymentInfoChequeDTO.setId(java.lang.Integer)", "com.sapienter.jbilling.server.payment.PaymentWS.setPaymentPeriod(java.lang.Integer)", "com.sapienter.jbilling.server.payment.PaymentWS.setBalance(java.math.BigDecimal)", "com.sapienter.jbilling.server.user.db.AchDTO.getAbaRouting()", "com.sapienter.jbilling.server.payment.PaymentWS.setAttempt(java.lang.Integer)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getCcType()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getAuthorization()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getCheque()", "com.sapienter.jbilling.server.user.db.AchDTO.getBankAccount()", "com.sapienter.jbilling.server.payment.PaymentWS.setDeleted(int)", "com.sapienter.jbilling.server.payment.PaymentWS.setResultId(java.lang.Integer)", "com.sapienter.jbilling.server.payment.db.PaymentInfoChequeDTO.getBank()", "com.sapienter.jbilling.server.entity.CreditCardDTO.setDeleted(java.lang.Integer)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getCreateDatetime()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getDeleted()", "com.sapienter.jbilling.server.payment.PaymentWS.setMethodId(java.lang.Integer)", "com.sapienter.jbilling.server.payment.db.PaymentInfoChequeDTO.getNumber()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getIsPreauth()", "com.sapienter.jbilling.server.entity.CreditCardDTO.setNumber(java.lang.String)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getPaymentMethod()", "com.sapienter.jbilling.server.entity.PaymentAuthorizationDTO.setAVS(java.lang.String)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getCardCode()", "com.sapienter.jbilling.server.entity.PaymentAuthorizationDTO.setCode3(java.lang.String)", "com.sapienter.jbilling.server.entity.AchDTO.setAbaRouting(java.lang.String)", "com.sapienter.jbilling.server.entity.AchDTO.setGatewayKey(java.lang.String)", "com.sapienter.jbilling.server.payment.PaymentWS.setInvoiceIds(java.lang.Integer[])", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getBalance()", "com.sapienter.jbilling.server.user.db.AchDTO.getId()", "com.sapienter.jbilling.server.payment.PaymentWS.setMethod(java.lang.String)", "com.sapienter.jbilling.server.entity.CreditCardDTO.setType(java.lang.Integer)", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getAch()", "com.sapienter.jbilling.server.entity.AchDTO.setAccountType(java.lang.Integer)", "com.sapienter.jbilling.server.entity.PaymentInfoChequeDTO.setDate(java.util.Date)", "com.sapienter.jbilling.server.entity.CreditCardDTO.setName(java.lang.String)", "com.sapienter.jbilling.server.entity.CreditCardDTO.setSecurityCode(java.lang.String)", "com.sapienter.jbilling.server.entity.CreditCardDTO.setExpiry(java.util.Date)", "java.util.List.get(int)", "com.sapienter.jbilling.server.payment.PaymentWS.setPaymentDate(java.util.Date)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getProcessor()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getName()", "com.sapienter.jbilling.server.payment.db.PaymentInfoChequeDTO.getId()", "com.sapienter.jbilling.server.payment.PaymentWS.setAch(com.sapienter.jbilling.server.entity.AchDTO)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getPaymentPeriod()", "com.sapienter.jbilling.server.entity.AchDTO.setBankName(java.lang.String)", "com.sapienter.jbilling.server.payment.PaymentWS.setId(int)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getCurrency()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getCreateDate()", "com.sapienter.jbilling.server.entity.PaymentAuthorizationDTO.setResponseMessage(java.lang.String)", "com.sapienter.jbilling.server.payment.PaymentWS.setCheque(com.sapienter.jbilling.server.entity.PaymentInfoChequeDTO)", "com.sapienter.jbilling.server.payment.PaymentWS.setIsRefund(java.lang.Integer)", "com.sapienter.jbilling.server.payment.PaymentWS.setUpdateDatetime(java.util.Date)", "com.sapienter.jbilling.server.entity.PaymentAuthorizationDTO.setProcessor(java.lang.String)", "com.sapienter.jbilling.server.payment.PaymentWS.setAuthorization(com.sapienter.jbilling.server.entity.PaymentAuthorizationDTO)", "com.sapienter.jbilling.server.entity.PaymentAuthorizationDTO.setApprovalCode(java.lang.String)", "com.sapienter.jbilling.server.payment.PaymentWS.setCurrencyId(java.lang.Integer)", "com.sapienter.jbilling.server.payment.PaymentWS.setCreateDatetime(java.util.Date)", "com.sapienter.jbilling.server.payment.db.PaymentInfoChequeDTO.getDate()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getPaymentNotes()", "com.sapienter.jbilling.server.payment.db.PaymentMethodDTO.getId()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getInvoiceIds()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getAmount()", "com.sapienter.jbilling.server.entity.PaymentInfoChequeDTO.setNumber(java.lang.String)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getCode3()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getAttempt()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getTransactionId()", "com.sapienter.jbilling.server.payment.PaymentWS.setPaymentNotes(java.lang.String)", "com.sapienter.jbilling.server.user.db.AchDTO.getAccountName()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getCcNumberPlain()", "com.sapienter.jbilling.server.entity.PaymentAuthorizationDTO.setCardCode(java.lang.String)", "com.sapienter.jbilling.server.payment.db.PaymentResultDTO.getId()", "com.sapienter.jbilling.server.entity.PaymentAuthorizationDTO.setTransactionId(java.lang.String)", "com.sapienter.jbilling.server.entity.PaymentAuthorizationDTO.setId(java.lang.Integer)", "com.sapienter.jbilling.server.entity.AchDTO.setBankAccount(java.lang.String)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getResponseMessage()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getId()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getPayment()", "com.sapienter.jbilling.server.entity.CreditCardDTO.setId(java.lang.Integer)", "com.sapienter.jbilling.server.entity.PaymentAuthorizationDTO.setCode1(java.lang.String)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getMD5()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getDeleted()", "com.sapienter.jbilling.server.entity.PaymentInfoChequeDTO.setBank(java.lang.String)", "com.sapienter.jbilling.server.entity.PaymentAuthorizationDTO.setCode2(java.lang.String)", "com.sapienter.jbilling.server.payment.PaymentWS.setUserId(java.lang.Integer)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getPaymentDate()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getMethod()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getSecurityCode()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getCcExpiry()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getAvs()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getCode2()", "com.sapienter.jbilling.server.user.db.AchDTO.getBankName()", "com.sapienter.jbilling.server.entity.PaymentAuthorizationDTO.setMD5(java.lang.String)", "com.sapienter.jbilling.server.util.db.CurrencyDTO.getId()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getIsRefund()", "com.sapienter.jbilling.server.user.db.AchDTO.getGatewayKey()", "com.sapienter.jbilling.server.payment.PaymentWS.setAmount(java.math.BigDecimal)", "com.sapienter.jbilling.server.entity.AchDTO.setId(java.lang.Integer)", "com.sapienter.jbilling.server.entity.PaymentAuthorizationDTO.setCreateDate(java.util.Date)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getPaymentResult()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getApprovalCode()", "com.sapienter.jbilling.server.payment.PaymentWS.setIsPreauth(java.lang.Integer)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getUpdateDatetime()", "java.util.List.size()", "com.sapienter.jbilling.server.entity.AchDTO.setAccountName(java.lang.String)"],
    "com.sapienter.jbilling.server.order.db.OrderDTO.setOrderPeriodId(Integer)": ["com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.order.db.OrderDTO.setOrderPeriod(com.sapienter.jbilling.server.order.db.OrderPeriodDTO)"],
    "com.sapienter.jbilling.server.pluggableTask.PaymentAuthorizeNetTask.getACHRefundData(String, String, boolean, BigDecimal, String, String, Integer, String, String, String)": ["java.math.BigDecimal.toString()", "java.lang.Integer.intValue()"],
    "com.sapienter.jbilling.server.entity.PaymentInfoChequeDTO.equals(Object)": ["com.sapienter.jbilling.server.entity.PaymentInfoChequeDTO.hasIdentity()", "java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.entity.PaymentInfoChequeDTO.isIdentical(java.lang.Object)"],
    "com.sapienter.jbilling.server.invoice.InvoiceWS.setCarriedBalance(BigDecimal)": ["java.math.BigDecimal.toString()"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.triggerAgeing(Date)": ["com.sapienter.jbilling.server.process.IBillingProcessSessionBean.reviewUsersStatus(java.lang.Integer,java.util.Date)", "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerCompanyId()", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)"],
    "com.sapienter.jbilling.server.payment.blacklist.TestBlacklistFilter.checkUser(Integer)": ["java.util.List.isEmpty()", "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDAS.findByUserType(java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.payment.blacklist.TestBlacklistFilter.testDB()"],
    "com.sapienter.jbilling.server.mediation.task.AbstractJDBCReader.flushLastId()": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.mediation.task.AbstractJDBCReader.getLastId()", "com.sapienter.jbilling.server.util.PreferenceBL.createUpdateForEntity(java.lang.Integer,java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.pluggableTask.PluggableTask.getEntityId()"],
    "com.sapienter.jbilling.server.item.PricingField.setBooleanValue(Boolean)": ["java.lang.Boolean.toString()"],
    "com.sapienter.jbilling.server.mediation.MediationRecordBL.getWS(List)": ["java.util.List.size()", "java.util.List.add(java.lang.Object)", "com.sapienter.jbilling.server.mediation.MediationRecordBL.getWS(com.sapienter.jbilling.server.mediation.db.MediationRecordDTO)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getLastInvoices(Integer, Integer)": ["com.sapienter.jbilling.server.invoice.InvoiceBL.getManyWS(java.lang.Integer,java.lang.Integer)"],
    "com.sapienter.jbilling.server.pluggableTask.PaymentFakeTask.getFakeCode1()": ["java.util.Map.get(java.lang.Object)", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription.getName()"],
    "com.sapienter.jbilling.server.item.ItemBL.updateTypes(ItemDTO)": ["java.util.Collection.add(java.lang.Object)", "com.sapienter.jbilling.server.item.ItemTypeBL.getEntity()", "com.sapienter.jbilling.server.item.db.ItemDTO.getTypes()", "com.sapienter.jbilling.server.item.db.ItemDTO.getItemTypes()", "java.util.Collection.clear()", "com.sapienter.jbilling.server.item.ItemTypeBL.set(java.lang.Integer)"],
    "com.sapienter.jbilling.client.process.JobScheduler.shutdown()": ["org.quartz.Scheduler.shutdown()", "com.sapienter.jbilling.client.process.JobScheduler.getScheduler()"],
    "com.sapienter.jbilling.common.Util.getDay(String)": ["java.lang.String.substring(int)", "java.lang.Integer.valueOf(java.lang.String)", "java.lang.String.lastIndexOf(int)", "java.lang.Integer.intValue()"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getAllMediationConfigurations()": ["com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerCompanyId()", "com.sapienter.jbilling.server.mediation.IMediationSessionBean.getAllConfigurations(java.lang.Integer)", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "com.sapienter.jbilling.server.mediation.MediationConfigurationBL.getWS(java.util.List)"],
    "com.sapienter.jbilling.server.util.db.AbstractDAS.reattach(T)": ["com.sapienter.jbilling.server.util.db.AbstractDAS.getSession()", "update(java.lang.Object)"],
    "com.sapienter.jbilling.server.process.task.AgeingProcessTask.execute(JobExecutionContext)": ["com.sapienter.jbilling.server.process.IBillingProcessSessionBean.reviewUsersStatus(java.lang.Integer,java.util.Date)", "com.sapienter.jbilling.server.process.task.AbstractBackwardSimpleScheduledTask.execute(org.quartz.JobExecutionContext)", "org.apache.log4j.Category.info(java.lang.Object)", "com.sapienter.jbilling.server.pluggableTask.PluggableTask.getEntityId()", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "com.sapienter.jbilling.common.Util.getSysPropBooleanTrue(java.lang.String)"],
    "com.sapienter.jbilling.server.user.UserSessionBean.getCustomerNotes(Integer)": ["com.sapienter.jbilling.server.user.db.UserDTO.getCustomer()", "com.sapienter.jbilling.server.user.UserBL.getEntity()", "com.sapienter.jbilling.server.user.db.CustomerDTO.getNotes()"],
    "com.sapienter.jbilling.server.pluggableTask.PaperInvoiceNotificationTask.deliver(UserDTO, MessageDTO)": ["java.util.HashMap.get(java.lang.Object)", "java.util.Set.add(java.lang.Object)", "com.sapienter.jbilling.server.pluggableTask.PaperInvoiceNotificationTask.getDesign(com.sapienter.jbilling.server.user.db.UserDTO)", "com.sapienter.jbilling.server.user.db.UserDTO.getUserName()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getId()", "java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.notification.MessageDTO.getTypeId()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.setPaperInvoiceBatch(com.sapienter.jbilling.server.process.db.PaperInvoiceBatchDTO)", "com.sapienter.jbilling.server.util.db.AbstractDAS.findForUpdate(java.io.Serializable)", "com.sapienter.jbilling.server.pluggableTask.PaperInvoiceNotificationTask.init(com.sapienter.jbilling.server.user.db.UserDTO,com.sapienter.jbilling.server.notification.MessageDTO)", "com.sapienter.jbilling.server.notification.MessageDTO.getContent()", "com.sapienter.jbilling.server.notification.NotificationBL.generatePaperInvoiceAsFile(java.lang.String,boolean,com.sapienter.jbilling.server.invoice.db.InvoiceDTO,com.sapienter.jbilling.server.user.ContactDTOEx,com.sapienter.jbilling.server.user.ContactDTOEx,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String)", "com.sapienter.jbilling.server.process.db.PaperInvoiceBatchDTO.getTotalInvoices()", "com.sapienter.jbilling.server.user.db.UserDTO.getPassword()", "com.sapienter.jbilling.server.process.db.PaperInvoiceBatchDTO.getInvoices()", "com.sapienter.jbilling.server.notification.MessageDTO.getParameters()", "com.sapienter.jbilling.server.process.db.PaperInvoiceBatchDTO.setTotalInvoices(int)", "com.sapienter.jbilling.server.notification.MessageSection.getContent()", "com.sapienter.jbilling.server.invoice.PaperInvoiceBatchBL.createGet(java.lang.Integer)"],
    "com.sapienter.jbilling.server.util.MapPeriodToCalendar.periodToDays(Integer)": ["java.lang.Integer.compareTo(java.lang.Integer)"],
    "com.sapienter.jbilling.common.Util.getSysProp(String)": ["com.sapienter.jbilling.common.SystemProperties.get(java.lang.String)", "com.sapienter.jbilling.common.SystemProperties.getPropertiesFile()", "java.io.File.getPath()", "com.sapienter.jbilling.common.SystemProperties.getSystemProperties()", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentAtlasTask.makeCall(Map, boolean)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.setTransactionId(java.lang.String)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.setCode1(java.lang.String)", "com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase.ensureGetParameter(java.lang.String)", "java.util.List.add(java.lang.Object)", "java.util.Map.put(java.lang.Object,java.lang.Object)", "org.apache.xmlrpc.client.XmlRpcClientConfigImpl.setServerURL(java.net.URL)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.setAvs(java.lang.String)", "java.lang.String.equals(java.lang.Object)", "java.util.Map.get(java.lang.Object)", "org.apache.xmlrpc.client.XmlRpcClientConfigImpl.setReplyTimeout(int)", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription.getName()", "org.apache.xmlrpc.client.XmlRpcClientConfigImpl.setConnectionTimeout(int)", "org.apache.xmlrpc.client.XmlRpcClientConfigImpl.setEnabledForExtensions(boolean)", "org.apache.xmlrpc.client.XmlRpcClient.setTransportFactory(org.apache.xmlrpc.client.XmlRpcCommonsTransportFactory)", "java.lang.String.charAt(int)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.setApprovalCode(java.lang.String)", "org.apache.xmlrpc.client.XmlRpcClient.execute(java.lang.String,java.lang.Object[])", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.setResponseMessage(java.lang.String)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.setCode3(java.lang.String)", "com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase.getOptionalParameter(java.lang.String,java.lang.String)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.setProcessor(java.lang.String)", "org.apache.xmlrpc.client.XmlRpcClient.setConfig(org.apache.xmlrpc.client.XmlRpcClientConfigImpl)", "java.lang.String.valueOf(int)", "java.lang.Integer.parseInt(java.lang.String)"],
    "com.sapienter.jbilling.server.invoice.InvoiceBL.getWS()": ["com.sapienter.jbilling.server.invoice.InvoiceBL.getWS(com.sapienter.jbilling.server.invoice.db.InvoiceDTO)"],
    "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getUserId()": ["com.sapienter.jbilling.server.user.db.UserDTO.getId()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getBaseUser()"],
    "com.sapienter.jbilling.server.payment.blacklist.CsvProcessor.getInt(Column)": ["com.sapienter.jbilling.server.payment.blacklist.CsvProcessor.lineColMessage(com.sapienter.jbilling.server.payment.blacklist.CsvProcessor$Column,java.lang.String,java.lang.Object[])", "com.sapienter.jbilling.server.payment.blacklist.CsvProcessor.getString(com.sapienter.jbilling.server.payment.blacklist.CsvProcessor$Column)"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentAuthorizeNetCIMTask.isCreditCardStored(PaymentDTOEx, boolean)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.user.db.AchDTO.useGatewayKey()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getAch()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.useGatewayKey()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getCreditCard()"],
    "com.sapienter.jbilling.server.user.UserSessionBean.setAuthPaymentType(Integer, Integer, Boolean)": ["com.sapienter.jbilling.server.user.db.CustomerDTO.getAutoPaymentType()", "org.apache.log4j.Category.warn(java.lang.Object)", "java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.user.db.CustomerDTO.setAutoPaymentType(java.lang.Integer)", "com.sapienter.jbilling.server.user.db.UserDTO.getCustomer()", "com.sapienter.jbilling.server.user.UserBL.getEntity()", "java.lang.Boolean.booleanValue()"],
    "com.sapienter.jbilling.server.mediation.db.MediationRecordDAS.countMediationRecordsByEntityIdAndStatus(Integer, MediationRecordStatusDTO)": ["org.hibernate.Query.list()", "getSession()", "org.hibernate.Query.setParameter(java.lang.String,java.lang.Integer)", "get(int)", "createQuery(java.lang.String)", "org.hibernate.Query.setParameter(java.lang.String,com.sapienter.jbilling.server.mediation.db.MediationRecordStatusDTO)"],
    "com.sapienter.jbilling.server.util.audit.EventLogger.fatal(Integer, Integer, Integer, Integer, Integer, String)": ["com.sapienter.jbilling.server.util.audit.EventLogger.log(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String)"],
    "com.sapienter.jbilling.server.mediation.Record.setPosition(int)": ["com.sapienter.jbilling.server.item.PricingField.setPosition(java.lang.Integer)"],
    "com.sapienter.jbilling.server.report.ReportBL.set(Integer)": ["com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getOrder(Integer)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.user.db.UserDTO.getLanguageIdField()", "com.sapienter.jbilling.server.util.db.AbstractDAS.findNow(java.io.Serializable)", "com.sapienter.jbilling.server.order.db.OrderDTO.getDeleted()", "com.sapienter.jbilling.server.user.UserBL.getEntity()", "com.sapienter.jbilling.server.order.OrderBL.getWS(java.lang.Integer)", "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerId()"],
    "com.sapienter.jbilling.server.user.CreditCardBL.getUser(CreditCardDTO)": ["java.util.Iterator.next()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getBaseUser()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getPayments()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getBaseUsers()", "java.util.Set.iterator()", "java.util.Set.isEmpty()"],
    "com.sapienter.jbilling.common.JBCrypto.getCreditCardCrypto()": ["com.sapienter.jbilling.common.JBCrypto.loadCreditCardCrypto()"],
    "com.sapienter.jbilling.server.order.UsageBL.set(Integer, Integer)": ["com.sapienter.jbilling.server.order.UsagePeriod.setCycleEndDate(java.util.Date)", "org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.order.UsageBL.getCacheKey()", "java.util.List.isEmpty()", "com.sapienter.jbilling.server.order.UsagePeriod.setCycleStartDate(java.util.Date)", "org.apache.log4j.Category.warn(java.lang.Object)", "com.sapienter.jbilling.server.order.UsagePeriod.setBillingPeriods(java.util.List)", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskManager.getNextClass()", "com.sapienter.jbilling.server.pluggableTask.OrderPeriodTask.calculateStart(com.sapienter.jbilling.server.order.db.OrderDTO)", "com.sapienter.jbilling.server.order.UsagePeriod.setMainOrder(com.sapienter.jbilling.server.order.db.OrderDTO)", "com.sapienter.jbilling.server.order.OrderBL.getMainOrderId(java.lang.Integer)", "com.sapienter.jbilling.server.order.OrderBL.getEntity()", "com.sapienter.jbilling.server.pluggableTask.OrderPeriodTask.getPeriods()", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.pluggableTask.OrderPeriodTask.calculateEnd(com.sapienter.jbilling.server.order.db.OrderDTO,java.util.Date,int,java.util.Date)", "org.springmodules.cache.provider.CacheProviderFacade.getFromCache(java.lang.String,org.springmodules.cache.CachingModel)", "com.sapienter.jbilling.server.user.db.UserDTO.getCompany()", "org.springmodules.cache.provider.CacheProviderFacade.putInCache(java.lang.String,org.springmodules.cache.CachingModel,com.sapienter.jbilling.server.order.UsagePeriod)", "com.sapienter.jbilling.server.order.db.OrderDTO.getBaseUserByUserId()"],
    "com.sapienter.jbilling.server.invoice.PaperInvoiceBatchBL.set(Integer)": ["com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)"],
    "com.sapienter.jbilling.server.user.balance.ValidatorCreditLimit.validate(CustomerDTO, BigDecimal)": ["java.math.BigDecimal.subtract(java.math.BigDecimal)", "com.sapienter.jbilling.server.user.db.CustomerDTO.getDynamicBalance()", "java.math.BigDecimal.divide(java.math.BigDecimal,int,int)", "com.sapienter.jbilling.server.user.db.CustomerDTO.getCreditLimit()"],
    "com.sapienter.jbilling.server.user.db.CreditCardDAS.findByLastDigits(Integer, String)": ["org.hibernate.Query.list()", "org.hibernate.Query.setParameter(java.lang.String,java.lang.String)", "getSession()", "org.hibernate.Query.setComment(java.lang.String)", "org.hibernate.Query.setParameter(java.lang.String,java.lang.Integer)", "createQuery(java.lang.String)"],
    "com.sapienter.jbilling.server.item.PricingField.toString()": ["com.sapienter.jbilling.server.item.PricingField.getValue()"],
    "com.sapienter.jbilling.server.provisioning.task.TelnetCommunication.getParameter(String, Map)": ["java.util.Map.get(java.lang.Object)"],
    "com.sapienter.jbilling.server.report.db.ReportDTO.getParameter(String)": ["com.sapienter.jbilling.server.report.db.ReportParameterDTO.getName()", "java.lang.String.equals(java.lang.Object)"],
    "com.sapienter.jbilling.server.order.OrderBL.addItem(Integer, BigDecimal, Integer, Integer, Integer, Integer, List)": ["com.sapienter.jbilling.server.order.OrderBL.addItem(com.sapienter.jbilling.server.order.db.OrderDTO,java.lang.Integer,java.math.BigDecimal,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.util.List)"],
    "com.sapienter.jbilling.server.provisioning.task.ProvisioningCommandsRulesTask.processRules(OrderDTO, String)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.order.db.OrderDTO.getLines()", "com.sapienter.jbilling.server.pluggableTask.PluggableTask.executeStatefulRules(com.sapienter.jbilling.server.pluggableTask.StatefulKnowledgeSession,java.util.List)", "java.util.List.add(java.lang.Object)", "com.sapienter.jbilling.server.provisioning.task.ProvisioningCommandsRulesTask.sendCommandQueue(java.lang.String,com.sapienter.jbilling.server.provisioning.task.ProvisioningCommandsRulesTask$CommandManager,com.sapienter.jbilling.server.order.db.OrderDTO)"],
    "com.sapienter.jbilling.server.list.ResultList.execute()": ["com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "javax.sql.rowset.CachedRowSet.execute(java.sql.Connection)", "javax.sql.DataSource.getConnection()"],
    "com.sapienter.jbilling.server.user.contact.ContactFieldTypeWS.getDTO()": ["com.sapienter.jbilling.server.user.contact.db.ContactFieldTypeDTO.setEntity(com.sapienter.jbilling.server.user.db.CompanyDTO)", "com.sapienter.jbilling.server.user.contact.db.ContactFieldTypeDTO.setDataType(java.lang.String)", "com.sapienter.jbilling.server.user.contact.db.ContactFieldTypeDTO.setVersionNum(java.lang.Integer)", "java.util.List.size()", "com.sapienter.jbilling.server.util.InternationalDescriptionWS.getContent()", "com.sapienter.jbilling.server.util.db.AbstractDescription.setDescription(java.lang.String,java.lang.Integer)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.user.contact.db.ContactFieldTypeDTO.setReadOnly(java.lang.Integer)", "java.util.List.get(int)", "com.sapienter.jbilling.server.user.contact.db.ContactFieldTypeDTO.setPromptKey(java.lang.String)", "com.sapienter.jbilling.server.util.InternationalDescriptionWS.getLanguageId()"],
    "com.sapienter.jbilling.server.order.db.OrderLineDTO.addExtraFields(Integer)": ["com.sapienter.jbilling.server.util.db.AbstractDescription.getDescription(java.lang.Integer)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getProvisioningStatus()"],
    "com.sapienter.jbilling.server.invoice.db.InvoiceDAS.findAmountForPeriodByItemCategory(Integer, Integer, Date, Date)": ["com.sapienter.jbilling.server.invoice.db.InvoiceDAS.addUserCriteria(org.hibernate.Criteria,java.lang.Integer)", "com.sapienter.jbilling.server.invoice.db.InvoiceDAS.addPeriodCriteria(org.hibernate.Criteria,java.util.Date,java.util.Date)", "org.hibernate.criterion.Projections.sum(java.lang.String)", "getSession()", "createCriteria(java.lang.Class)", "com.sapienter.jbilling.server.invoice.db.InvoiceDAS.addItemCategoryCriteria(org.hibernate.Criteria,java.lang.Integer)", "org.hibernate.Criteria.uniqueResult()", "org.hibernate.Criteria.setProjection()"],
    "com.sapienter.jbilling.server.pluggableTask.PluggableTask.removeObject(Object)": ["org.apache.log4j.Category.debug(java.lang.Object)", "java.util.Hashtable.get(java.lang.Object)", "java.util.Hashtable.remove(java.lang.Object)", "org.drools.runtime.StatefulKnowledgeSession.retract(org.drools.runtime.rule.FactHandle)", "java.lang.Object.hashCode()"],
    "com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.parseSimpleResponse(String, String)": ["org.w3c.dom.Document.getDocumentElement()", "java.lang.String.format(java.lang.String,java.lang.Object[])", "javax.xml.parsers.DocumentBuilder.parse(org.xml.sax.InputSource)", "org.w3c.dom.NodeList.item(int)", "org.xml.sax.InputSource.setCharacterStream(java.io.Reader)", "org.w3c.dom.Node.normalize()", "org.w3c.dom.Node.getChildNodes()", "javax.xml.parsers.DocumentBuilderFactory.newInstance()", "org.w3c.dom.Node.getNodeValue()", "java.lang.String.equals(java.lang.Object)", "javax.xml.parsers.DocumentBuilderFactory.newDocumentBuilder()", "org.apache.log4j.Category.error(java.lang.Object)"],
    "com.sapienter.jbilling.server.payment.db.PaymentDAS.create(BigDecimal, PaymentMethodDTO, Integer, Integer, PaymentResultDTO, CurrencyDTO)": ["java.util.Calendar.getInstance()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setDeleted(int)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setAttempt(java.lang.Integer)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setCreateDatetime(java.util.Date)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setAmount(java.math.BigDecimal)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setIsPreauth(java.lang.Integer)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setCurrency(com.sapienter.jbilling.server.util.db.CurrencyDTO)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setPaymentMethod(com.sapienter.jbilling.server.payment.db.PaymentMethodDTO)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setIsRefund(int)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setPaymentResult(com.sapienter.jbilling.server.payment.db.PaymentResultDTO)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setBaseUser(com.sapienter.jbilling.server.user.db.UserDTO)", "com.sapienter.jbilling.server.util.db.CurrencyDTO.getId()", "java.util.Calendar.getTime()", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentFilterTask.getIpAddressCcfId()": ["java.util.Map.get(java.lang.Object)", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription.getName()"],
    "com.sapienter.jbilling.server.provisioning.task.TestCommunication.send(String)": ["org.apache.log4j.Category.debug(java.lang.Object)", "java.lang.String.indexOf(java.lang.String,int)", "java.lang.String.indexOf(int,int)", "java.lang.String.indexOf(int)", "java.lang.String.substring(int,int)", "java.lang.String.startsWith(java.lang.String)", "java.lang.String.equals(java.lang.Object)", "java.lang.String.length()"],
    "com.sapienter.jbilling.server.item.ItemPriceDTOEx.setPrice(BigDecimal)": ["java.math.BigDecimal.toString()"],
    "com.sapienter.jbilling.server.process.task.ScpUploadTask.execute(JobExecutionContext)": ["org.apache.log4j.Category.debug(java.lang.Object)", "java.util.List.isEmpty()", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription.getName()", "com.sapienter.jbilling.server.process.task.ScpUploadTask.upload(java.util.List,java.lang.String,java.lang.String,java.lang.String,java.lang.String)", "java.io.File.getPath()", "java.io.File.exists()", "com.sapienter.jbilling.server.process.task.ScpUploadTask.mark(java.util.List,java.io.File)", "java.io.File.isDirectory()", "com.sapienter.jbilling.server.process.task.ScheduledTask._init(org.quartz.JobExecutionContext)", "com.sapienter.jbilling.server.process.task.AbstractCronTask.getParameter(java.lang.String,java.lang.String)", "java.util.List.size()", "java.io.File.listFiles()", "com.sapienter.jbilling.server.process.task.ScpUploadTask.getParameter(java.lang.String)", "com.sapienter.jbilling.server.pluggableTask.PluggableTask.getParameter(java.lang.String,java.lang.Boolean)", "com.sapienter.jbilling.server.process.task.ScpUploadTask.collectFiles(java.io.File,java.lang.String,boolean)"],
    "com.sapienter.jbilling.server.notification.barcode.BarcodeFactory.ean8(Checksum, TextPlacement)": ["org.krysalis.barcode4j.impl.upcean.EAN8Bean.setMsgPosition(org.krysalis.barcode4j.HumanReadablePlacement)", "com.sapienter.jbilling.server.notification.barcode.BarcodeFactory.getPlacement(com.sapienter.jbilling.server.notification.barcode.TextPlacement)", "com.sapienter.jbilling.server.notification.barcode.BarcodeFactory.getChecksum(com.sapienter.jbilling.server.notification.barcode.Checksum)", "org.krysalis.barcode4j.impl.upcean.EAN8Bean.setChecksumMode(org.krysalis.barcode4j.ChecksumMode)"],
    "com.sapienter.jbilling.server.user.RoleBL.delete()": ["java.util.Set.clear()", "com.sapienter.jbilling.server.util.db.AbstractDAS.flush()", "com.sapienter.jbilling.server.user.permisson.db.RoleDTO.getPermissions()", "com.sapienter.jbilling.server.user.permisson.db.RoleDTO.getBaseUsers()", "com.sapienter.jbilling.server.util.db.AbstractDAS.delete(java.lang.Object)", "org.apache.log4j.Category.error(java.lang.Object)"],
    "com.sapienter.jbilling.server.pluggableTask.PluggableTask.appendResource(StringBuilder, String, String)": ["java.lang.StringBuilder.append(java.lang.String)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.rateOrder(OrderWS)": ["com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.doCreateOrder(com.sapienter.jbilling.server.order.OrderWS,boolean)"],
    "com.sapienter.jbilling.server.order.OrderLineBL.diffOrderLines(List, List)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setQuantity(java.math.BigDecimal)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getQuantity()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getAmount()", "java.lang.Object.java.lang.Object()", "java.util.List.add(java.lang.Object)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getId()", "java.math.BigDecimal.compareTo(java.math.BigDecimal)", "java.lang.Integer.compareTo(java.lang.Integer)", "java.util.Collections.binarySearch(java.util.List,java.lang.Object,java.util.Comparator)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setAmount(java.math.BigDecimal)", "java.math.BigDecimal.subtract(java.math.BigDecimal)", "java.util.Collections.sort(java.util.List,java.util.Comparator)", "java.util.List.get(int)"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentAuthorizeNetCIMTask.process(PaymentDTOEx)": ["com.sapienter.jbilling.server.payment.tasks.PaymentAuthorizeNetCIMTask.doProcess(com.sapienter.jbilling.server.payment.PaymentDTOEx,java.lang.String,java.lang.String)"],
    "com.sapienter.jbilling.server.user.UserTransitionResponseWS.toString()": ["com.sapienter.jbilling.server.user.UserTransitionResponseWS.getId()", "com.sapienter.jbilling.server.user.UserTransitionResponseWS.getToStatusId()", "java.util.Date.toString()", "com.sapienter.jbilling.server.user.UserTransitionResponseWS.getUserId()", "com.sapienter.jbilling.server.user.UserTransitionResponseWS.getFromStatusId()", "com.sapienter.jbilling.server.user.UserTransitionResponseWS.getTransitionDate()"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.setAuthPaymentType(Integer, Integer, boolean)": ["com.sapienter.jbilling.server.user.IUserSessionBean.setAuthPaymentType(java.lang.Integer,java.lang.Integer,java.lang.Boolean)", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)"],
    "com.sapienter.jbilling.server.process.BillingProcessSessionBean.generateInvoice(Integer, Integer, Integer)": ["com.sapienter.jbilling.server.process.BillingProcessBL.generateInvoice(java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.touch()"],
    "com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.buildTagIfNotEmpty(StringBuffer, String, String)": ["com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.buildTag(java.lang.StringBuffer,java.lang.String,java.lang.String)"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentAuthorizeNetCIMTask.storeCreditCard(ContactDTO, CreditCardDTO, AchDTO)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.toGatewayKey()", "com.sapienter.jbilling.server.payment.tasks.PaymentAuthorizeNetCIMTask.createOrUpdateProfile(com.sapienter.jbilling.server.user.contact.db.ContactDTO,com.sapienter.jbilling.server.user.db.CreditCardDTO,com.sapienter.jbilling.server.user.db.AchDTO,com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi)", "java.util.Iterator.next()", "org.apache.log4j.Category.warn(java.lang.Object)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getBaseUsers()", "com.sapienter.jbilling.server.user.ContactBL.set(java.lang.Integer)", "com.sapienter.jbilling.server.user.ContactBL.getEntity()", "com.sapienter.jbilling.server.user.db.AchDTO.getBaseUser()", "com.sapienter.jbilling.server.payment.tasks.PaymentAuthorizeNetCIMTask.getProcessorName()", "java.util.Set.isEmpty()", "com.sapienter.jbilling.server.payment.tasks.PaymentAuthorizeNetCIMTask.createApi()", "org.apache.log4j.Category.debug(java.lang.Object,java.lang.Throwable)", "com.sapienter.jbilling.server.user.db.UserDTO.getId()", "java.util.Set.iterator()", "org.apache.log4j.Category.error(java.lang.Object)"],
    "com.sapienter.jbilling.server.user.UserSessionBean.calculatePayout(Integer, Date, Date, Integer)": ["com.sapienter.jbilling.server.user.partner.PartnerBL.getEntity()", "com.sapienter.jbilling.server.user.db.CompanyDTO.getCurrencyId()", "com.sapienter.jbilling.server.user.db.UserDTO.getEntity()", "com.sapienter.jbilling.server.user.partner.PartnerBL.calculatePayout(java.util.Date,java.util.Date,java.lang.Integer)", "com.sapienter.jbilling.server.user.partner.db.Partner.getUser()"],
    "com.sapienter.jbilling.server.payment.tasks.SaveACHExternallyTask.getExternalSavingPluginId()": ["java.util.Map.get(java.lang.Object)", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription.getName()", "java.lang.Integer.parseInt(java.lang.String)"],
    "com.sapienter.jbilling.server.user.UserBL.getEntityId(Integer)": ["com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.user.db.UserDTO.getCompany()", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.user.db.UserDTO.getUserId()"],
    "com.sapienter.jbilling.server.mediation.MediationRecordLineWS.setQuantity(BigDecimal)": ["java.math.BigDecimal.toString()"],
    "com.sapienter.jbilling.server.order.db.OrderDTO.setDefaults()": ["com.sapienter.jbilling.server.order.db.OrderDTO.setOrderStatus(com.sapienter.jbilling.server.order.db.OrderStatusDTO)", "com.sapienter.jbilling.server.order.db.OrderDTO.getCreateDate()", "java.util.Calendar.getInstance()", "com.sapienter.jbilling.server.order.db.OrderDTO.setCreateDate(java.util.Date)", "com.sapienter.jbilling.server.order.db.OrderDTO.setDeleted(int)", "java.util.Calendar.getTime()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setDefaults()", "com.sapienter.jbilling.server.order.db.OrderDTO.getOrderStatus()", "com.sapienter.jbilling.server.util.db.AbstractGenericStatusDAS.find(java.io.Serializable)"],
    "com.sapienter.jbilling.server.user.UserSessionBean.setEntityParameter(Integer, Integer, String)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.util.PreferenceBL.createUpdateForEntity(java.lang.Integer,java.lang.Integer,java.lang.String)"],
    "com.sapienter.jbilling.server.order.OrderSessionBean.recalculate(OrderDTO, Integer)": ["com.sapienter.jbilling.server.order.OrderBL.getDTO()", "com.sapienter.jbilling.server.order.OrderBL.set(com.sapienter.jbilling.server.order.db.OrderDTO)", "com.sapienter.jbilling.server.order.OrderBL.recalculate(java.lang.Integer)"],
    "com.sapienter.jbilling.server.entity.PaymentAuthorizationDTO.isIdentical(Object)": ["java.lang.Integer.equals(java.lang.Object)", "java.util.Date.equals(java.lang.Object)", "java.lang.String.equals(java.lang.Object)"],
    "com.sapienter.jbilling.server.payment.tasks.SaveACHExternallyTask.getContactType()": ["java.util.Map.get(java.lang.Object)", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription.getName()", "java.lang.Integer.parseInt(java.lang.String)"],
    "com.sapienter.jbilling.server.payment.PaymentBL.init()": ["com.sapienter.jbilling.server.util.audit.EventLogger.getInstance()"],
    "com.sapienter.jbilling.common.Util.equal(Date, Date)": ["java.util.Date.compareTo(java.util.Date)"],
    "com.sapienter.jbilling.server.process.BillingProcessSessionBean.getLast(Integer)": ["com.sapienter.jbilling.server.process.BillingProcessBL.getLast(java.lang.Integer)"],
    "com.sapienter.jbilling.server.notification.barcode.BarcodeFactory.code128(TextPlacement)": ["com.sapienter.jbilling.server.notification.barcode.BarcodeFactory.getPlacement(com.sapienter.jbilling.server.notification.barcode.TextPlacement)", "org.krysalis.barcode4j.impl.code128.Code128Bean.setMsgPosition(org.krysalis.barcode4j.HumanReadablePlacement)", "org.krysalis.barcode4j.impl.code128.Code128Bean.setFontSize(int)"],
    "com.sapienter.jbilling.server.payment.blacklist.BlacklistBL.instantiatePaymentFilter(Integer)": ["com.sapienter.jbilling.server.pluggableTask.PluggableTask.initializeParamters(com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDTO)", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "com.sapienter.jbilling.server.payment.blacklist.BlacklistBL.getBlacklistPluginId(java.lang.Integer)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)"],
    "com.sapienter.jbilling.server.user.db.UserDAS.findAgeing(Integer)": ["org.hibernate.Query.list()", "getSession()", "org.hibernate.Query.setParameter(java.lang.String,java.lang.Integer)", "createQuery(java.lang.String)"],
    "com.sapienter.jbilling.server.util.db.AbstractDAS.touch(List, String)": ["java.lang.reflect.Method.invoke(java.lang.Object,java.lang.Object[])", "java.lang.Class.getMethod(java.lang.String,java.lang.Class[])", "java.util.List.size()", "java.util.List.get(int)"],
    "com.sapienter.jbilling.server.customer.CustomerBL.getInvoicableParent()": ["com.sapienter.jbilling.server.user.db.CustomerDTO.getInvoiceChild()", "java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.user.db.CustomerDTO.getParent()"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.deleteInvoice(Integer)": ["com.sapienter.jbilling.server.invoice.InvoiceBL.delete(java.lang.Integer)", "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerId()"],
    "com.sapienter.jbilling.server.notification.barcode.BarcodeFactory.postnet(Checksum, boolean, TextPlacement)": ["org.krysalis.barcode4j.impl.postnet.POSTNETBean.setDisplayChecksum(boolean)", "org.krysalis.barcode4j.impl.postnet.POSTNETBean.setMsgPosition(org.krysalis.barcode4j.HumanReadablePlacement)", "com.sapienter.jbilling.server.notification.barcode.BarcodeFactory.getPlacement(com.sapienter.jbilling.server.notification.barcode.TextPlacement)", "org.krysalis.barcode4j.impl.postnet.POSTNETBean.setChecksumMode(org.krysalis.barcode4j.ChecksumMode)", "com.sapienter.jbilling.server.notification.barcode.BarcodeFactory.getChecksum(com.sapienter.jbilling.server.notification.barcode.Checksum)"],
    "com.sapienter.jbilling.server.user.ContactBL.getDTO()": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.user.ContactDTOEx.setFieldsTable(java.util.Hashtable)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getFaxAreaCode()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getInitial()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getOrganizationName()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getFaxNumber()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getInclude()", "com.sapienter.jbilling.server.user.ContactBL.initializeFields()", "java.util.Hashtable.size()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getEmail()", "com.sapienter.jbilling.server.user.contact.db.ContactFieldDTO.getContent()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getId()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getTitle()", "com.sapienter.jbilling.server.user.contact.db.ContactFieldTypeDTO.getId()", "com.sapienter.jbilling.server.user.ContactDTOEx.getFieldsTable()", "com.sapienter.jbilling.server.user.contact.db.ContactFieldDTO.setContent(java.lang.String)", "com.sapienter.jbilling.server.user.contact.db.ContactFieldDTO.setId(int)", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)", "com.sapienter.jbilling.server.user.contact.db.ContactFieldDTO.getId()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getLastName()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getFaxCountryCode()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getDeleted()", "java.util.Hashtable.get(java.lang.Object)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getPhoneCountryCode()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getCreateDate()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getPhoneNumber()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getStateProvince()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getCity()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getFields()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getPhoneAreaCode()", "com.sapienter.jbilling.server.user.contact.db.ContactFieldDTO.getType()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getCountryCode()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getFirstName()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getAddress2()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getPostalCode()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getAddress1()", "java.lang.String.valueOf(int)"],
    "com.sapienter.jbilling.server.report.db.ReportDTO.getReportBaseDir()": ["com.sapienter.jbilling.server.report.db.ReportTypeDTO.getName()", "com.sapienter.jbilling.server.report.db.ReportDTO.getType()"],
    "com.sapienter.jbilling.server.mediation.task.JDBCUtils.getAllColumnNames(Connection, String)": ["java.sql.ResultSet.next()", "java.sql.ResultSet.getString(java.lang.String)", "java.sql.Connection.getMetaData()", "java.util.List.add(java.lang.Object)", "java.sql.DatabaseMetaData.getColumns(java.lang.String,java.lang.String,java.lang.String,java.lang.String)", "java.sql.ResultSet.close()"],
    "com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase.ensureGetParameter(String)": ["java.util.Map.get(java.lang.Object)"],
    "com.sapienter.jbilling.server.mediation.task.SeparatorFileReader.validate(List)": ["java.util.Map.get(java.lang.Object)", "org.apache.commons.lang.StringUtils.isBlank(java.lang.String)", "com.sapienter.jbilling.server.mediation.task.AbstractFileReader.validate(java.util.List)", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription.getName()"],
    "com.sapienter.jbilling.server.user.db.UserDTO.getFieldValues()": ["com.sapienter.jbilling.server.user.db.CustomerDTO.getAutoPaymentType()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getInitial()", "com.sapienter.jbilling.server.user.db.CustomerDTO.getExcludeAging()", "com.sapienter.jbilling.server.user.ContactBL.set(java.lang.Integer)", "com.sapienter.jbilling.server.user.ContactBL.getEntity()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getOrganizationName()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getEmail()", "com.sapienter.jbilling.server.user.db.CustomerDTO.getInvoiceDeliveryMethod()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getTitle()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getCompletePhoneNumber()", "com.sapienter.jbilling.server.user.db.CustomerDTO.getNotes()", "com.sapienter.jbilling.server.user.db.CustomerDTO.getIsParent()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getCompleteFaxNumber()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getLastName()", "com.sapienter.jbilling.server.util.db.LanguageDTO.getDescription()", "com.sapienter.jbilling.server.user.db.CustomerDTO.getBalanceType()", "com.sapienter.jbilling.server.user.db.CustomerDTO.getCreditLimit()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getStateProvince()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getCity()", "com.sapienter.jbilling.server.invoice.db.InvoiceDeliveryMethodDTO.getId()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getCountryCode()", "com.sapienter.jbilling.server.user.db.CustomerDTO.getInvoiceChild()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getFirstName()", "com.sapienter.jbilling.server.user.db.CustomerDTO.getBaseUser()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getPostalCode()", "com.sapienter.jbilling.server.user.db.UserDTO.getId()", "com.sapienter.jbilling.server.user.db.CustomerDTO.getDynamicBalance()", "com.sapienter.jbilling.server.util.db.AbstractDescription.getDescription()", "com.sapienter.jbilling.server.user.db.CustomerDTO.getParent()", "com.sapienter.jbilling.server.user.db.CustomerDTO.getAutoRecharge()"],
    "com.sapienter.jbilling.server.user.UserSessionBean.getEventLog(Integer)": ["com.sapienter.jbilling.server.util.audit.db.EventLogDAS.getEventsByAffectedUser(java.lang.Integer)", "com.sapienter.jbilling.server.util.audit.db.EventLogDTO.touch()"],
    "com.sapienter.jbilling.server.mediation.MediationSessionBean.resolveMediationResultErrors(MediationResult)": ["com.sapienter.jbilling.server.mediation.task.MediationResult.getCurrentOrder()", "java.util.List.isEmpty()", "com.sapienter.jbilling.server.mediation.task.MediationResult.getCurrencyId()", "java.util.List.addAll(java.util.Collection)", "java.util.List.add(java.lang.Object)", "com.sapienter.jbilling.server.mediation.task.MediationResult.getDiffLines()", "com.sapienter.jbilling.server.mediation.task.MediationResult.getUserId()", "com.sapienter.jbilling.server.mediation.task.MediationResult.getErrors()", "com.sapienter.jbilling.server.mediation.task.MediationResult.getEventDate()", "com.sapienter.jbilling.server.mediation.task.MediationResult.getLines()"],
    "com.sapienter.jbilling.server.user.UserWS.toString()": ["java.lang.StringBuilder.append(java.lang.Object)", "java.lang.StringBuilder.append(int)", "java.util.Arrays.toString(java.lang.Object[])", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.toString()"],
    "com.sapienter.jbilling.server.order.OrderBL.addItem(OrderDTO, Integer, BigDecimal, Integer, Integer, Integer, Integer, List)": ["java.lang.Throwable.getCause()", "com.sapienter.jbilling.server.item.tasks.IItemPurchaseManager.addItem(java.lang.Integer,java.math.BigDecimal,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,com.sapienter.jbilling.server.order.db.OrderDTO,java.util.List)", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskManager.getNextClass()"],
    "com.sapienter.jbilling.server.process.db.BillingProcessDTO.toString()": ["com.sapienter.jbilling.server.process.db.ProcessRunDTO.toString()", "java.lang.StringBuffer.toString()", "java.util.Set.size()", "java.lang.StringBuffer.append(java.lang.String)"],
    "com.sapienter.jbilling.server.process.BillingProcessBL.processOrderToInvoiceEvents(NewInvoiceDTO, Integer)": ["com.sapienter.jbilling.server.order.event.OrderToInvoiceEvent.setEnd(java.util.Date)", "com.sapienter.jbilling.server.system.event.EventManager.process(com.sapienter.jbilling.server.system.event.Event)", "com.sapienter.jbilling.server.invoice.NewInvoiceDTO.getPeriods()", "java.util.List.size()", "com.sapienter.jbilling.server.order.event.OrderToInvoiceEvent.setStart(java.util.Date)", "com.sapienter.jbilling.server.process.PeriodOfTime.getStart()", "com.sapienter.jbilling.server.invoice.NewInvoiceDTO.getOrders()", "java.util.List.get(int)", "com.sapienter.jbilling.server.process.PeriodOfTime.getEnd()", "com.sapienter.jbilling.server.process.BillingProcessBL.findUserId(com.sapienter.jbilling.server.order.db.OrderDTO)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getBillingProcess(Integer)": ["com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerLanguageId()", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "com.sapienter.jbilling.server.process.BillingProcessBL.getWS(com.sapienter.jbilling.server.process.BillingProcessDTOEx)", "com.sapienter.jbilling.server.process.IBillingProcessSessionBean.getDto(java.lang.Integer,java.lang.Integer)"],
    "com.sapienter.jbilling.server.order.OrderBL.set(Integer)": ["com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)"],
    "com.sapienter.jbilling.tools.DocumentationIndex.main(String[])": ["java.util.Properties.getProperty(java.lang.String)", "java.io.PrintStream.println(java.lang.String)", "java.util.Iterator.next()", "java.lang.String.endsWith(java.lang.String)", "java.util.List.add(java.lang.Object)", "java.util.Iterator.hasNext()", "java.io.FileOutputStream.close()", "java.io.File.isDirectory()", "java.io.FileOutputStream.write(byte[])", "java.util.Collections.sort(java.util.List)", "java.lang.String.getBytes()", "java.lang.Throwable.getMessage()", "java.util.Properties.load(java.io.InputStream)", "com.sapienter.jbilling.tools.DocumentationIndex.getText(java.lang.String)", "java.lang.String.equals(java.lang.Object)", "java.util.List.iterator()", "java.lang.String.replaceAll(java.lang.String,java.lang.String)", "java.lang.Throwable.printStackTrace()", "java.io.File.list()"],
    "com.sapienter.jbilling.server.provisioning.ProvisioningProcessSessionBean.trigger()": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.provisioning.ProvisioningProcessBL.deActivateOrders()", "com.sapienter.jbilling.server.provisioning.ProvisioningProcessBL.activateOrders()"],
    "com.sapienter.jbilling.server.user.db.CreditCardDTO.getOldDTO()": ["com.sapienter.jbilling.server.entity.CreditCardDTO.setNumber(java.lang.String)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getId()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getSecurityCode()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getName()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getGatewayKey()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getExpiry()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getCcType()", "com.sapienter.jbilling.server.entity.CreditCardDTO.setId(java.lang.Integer)", "com.sapienter.jbilling.server.entity.CreditCardDTO.setType(java.lang.Integer)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getNumber()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getDeleted()", "com.sapienter.jbilling.server.entity.CreditCardDTO.setDeleted(java.lang.Integer)", "com.sapienter.jbilling.server.entity.CreditCardDTO.setName(java.lang.String)", "com.sapienter.jbilling.server.entity.CreditCardDTO.setGatewayKey(java.lang.String)", "com.sapienter.jbilling.server.entity.CreditCardDTO.setSecurityCode(java.lang.String)", "com.sapienter.jbilling.server.entity.CreditCardDTO.setExpiry(java.util.Date)"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentPaypalExternalTask.convertCreditCardType(int)": ["com.sapienter.jbilling.server.payment.tasks.paypal.dto.CreditCardType.toString()"],
    "com.sapienter.jbilling.server.payment.db.PaymentInvoiceMapDAS.create(InvoiceDTO, PaymentDTO, BigDecimal)": ["java.util.Calendar.getInstance()", "com.sapienter.jbilling.server.payment.db.PaymentInvoiceMapDTO.setCreateDatetime(java.util.Date)", "com.sapienter.jbilling.server.payment.db.PaymentInvoiceMapDTO.setInvoiceEntity(com.sapienter.jbilling.server.invoice.db.InvoiceDTO)", "com.sapienter.jbilling.server.payment.db.PaymentInvoiceMapDTO.setPayment(com.sapienter.jbilling.server.payment.db.PaymentDTO)", "java.util.Calendar.getTime()", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)", "com.sapienter.jbilling.server.payment.db.PaymentInvoiceMapDTO.setAmount(java.math.BigDecimal)"],
    "com.sapienter.jbilling.server.pluggableTask.PluggableTaskSessionBean.getAllDTOs(Integer)": ["com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDTO.populateParamValues()", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "java.util.Collection.size()", "java.util.Collection.toArray(java.lang.Object[])", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDAS.findAllByEntity(java.lang.Integer)"],
    "com.sapienter.jbilling.server.provisioning.event.SubscriptionActiveEvent.toString()": ["com.sapienter.jbilling.server.provisioning.event.SubscriptionActiveEvent.getName()"],
    "com.sapienter.jbilling.server.payment.PaymentDTOEx.getAuthorization()": ["org.apache.log4j.Category.debug(java.lang.Object)", "org.apache.log4j.Logger.getLogger(java.lang.Class)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getId()"],
    "com.sapienter.jbilling.server.provisioning.ProvisioningProcessBL.activateOrder(OrderDTO)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.order.db.OrderDTO.getId()", "java.util.Iterator.next()", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getProvisioningStatusId()", "com.sapienter.jbilling.server.system.event.EventManager.process(com.sapienter.jbilling.server.system.event.Event)", "java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.order.db.OrderDTO.getUser()", "com.sapienter.jbilling.server.order.db.OrderDTO.getLines()", "com.sapienter.jbilling.server.user.db.UserDTO.getCompany()", "java.util.List.iterator()", "java.util.Iterator.hasNext()"],
    "com.sapienter.jbilling.server.user.db.AchDTO.getBankAccount()": ["com.sapienter.jbilling.server.user.db.AchDTO.getRawBankAccount()", "com.sapienter.jbilling.common.JBCrypto.getCreditCardCrypto()", "com.sapienter.jbilling.common.JBCrypto.decrypt(java.lang.String)"],
    "com.sapienter.jbilling.server.order.CurrentOrder.calculateDate(int)": ["com.sapienter.jbilling.server.order.db.OrderDTO.getId()", "com.sapienter.jbilling.server.process.db.PeriodUnitDTO.getId()", "java.util.GregorianCalendar.add(int,int)", "com.sapienter.jbilling.server.order.db.OrderPeriodDTO.getValue()", "java.util.Date.after(java.util.Date)", "com.sapienter.jbilling.server.order.OrderBL.getEntity()", "com.sapienter.jbilling.server.util.MapPeriodToCalendar.map(java.lang.Integer)", "com.sapienter.jbilling.server.order.db.OrderDTO.getOrderPeriod()", "com.sapienter.jbilling.server.order.db.OrderDTO.getCreateDate()", "java.util.Calendar.setTime(java.util.Date)", "com.sapienter.jbilling.server.order.db.OrderDTO.getActiveSince()", "java.util.Date.before(java.util.Date)", "com.sapienter.jbilling.server.order.db.OrderDTO.getActiveUntil()", "com.sapienter.jbilling.server.order.db.OrderPeriodDTO.getPeriodUnit()", "java.util.Calendar.getTime()", "org.apache.log4j.Category.error(java.lang.Object)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.updatePreferences(PreferenceWS[])": ["com.sapienter.jbilling.server.util.PreferenceBL.createUpdateForEntity(java.lang.Integer,java.lang.Integer,java.lang.String)", "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerCompanyId()", "com.sapienter.jbilling.server.util.PreferenceTypeWS.getId()", "com.sapienter.jbilling.server.util.PreferenceWS.getPreferenceType()", "com.sapienter.jbilling.server.util.PreferenceWS.getValue()"],
    "com.sapienter.jbilling.server.item.PricingField.getDoubleValue()": ["com.sapienter.jbilling.server.item.PricingField.getDecimalValue()", "java.math.BigDecimal.doubleValue()"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentPaypalExternalTask.convertPayer(PaymentDTOEx)": ["com.sapienter.jbilling.server.payment.tasks.paypal.dto.Payer.setZip(java.lang.String)", "com.sapienter.jbilling.server.payment.tasks.paypal.dto.Payer.setStreet(java.lang.String)", "com.sapienter.jbilling.server.payment.tasks.paypal.dto.Payer.setCity(java.lang.String)", "com.sapienter.jbilling.server.payment.tasks.paypal.dto.Payer.setEmail(java.lang.String)", "com.sapienter.jbilling.server.user.ContactBL.set(java.lang.Integer)", "com.sapienter.jbilling.server.user.ContactBL.getEntity()", "com.sapienter.jbilling.server.payment.tasks.paypal.dto.Payer.setCountryCode(java.lang.String)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getStateProvince()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getCity()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getEmail()", "com.sapienter.jbilling.server.payment.tasks.paypal.dto.Payer.setState(java.lang.String)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getCountryCode()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getFirstName()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getUserId()", "com.sapienter.jbilling.server.payment.tasks.paypal.dto.Payer.setFirstName(java.lang.String)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getPostalCode()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getAddress1()", "com.sapienter.jbilling.server.payment.tasks.paypal.dto.Payer.setLastName(java.lang.String)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getLastName()"],
    "com.sapienter.jbilling.server.provisioning.task.MMSCProvisioningTask.parseResponse(MmscFacadeHandlerResponse)": ["com.sapienter.jbilling.server.provisioning.task.mmsc.EfsBaseResponse.getTransactionId()", "com.sapienter.jbilling.server.provisioning.task.mmsc.EfsBaseResponse.getStatusCode()", "com.sapienter.jbilling.server.provisioning.task.mmsc.EfsBaseResponse.getStatusMessage()", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription.getName()", "java.util.Map.put(java.lang.Object,java.lang.Object)"],
    "com.sapienter.jbilling.server.notification.db.NotificationMessageLineDAS.create(String)": ["com.sapienter.jbilling.server.notification.db.NotificationMessageLineDTO.setContent(java.lang.String)", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)"],
    "com.sapienter.jbilling.server.user.db.UserDAS.findByCustomField(Integer, Integer, String)": ["org.hibernate.Query.list()", "org.hibernate.Query.setParameter(java.lang.String,java.lang.String)", "getSession()", "org.hibernate.Query.setParameter(java.lang.String,java.lang.Integer)", "createQuery(java.lang.String)"],
    "com.sapienter.jbilling.server.pluggableTask.PaymentAuthorizeNetTask.addAVSFields(Integer, NameValuePair[])": ["java.util.List.add(java.lang.Object)", "com.sapienter.jbilling.server.user.ContactBL.set(java.lang.Integer)", "com.sapienter.jbilling.server.user.ContactBL.getEntity()", "org.apache.log4j.Category.warn(java.lang.Object,java.lang.Throwable)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getStateProvince()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getCity()", "com.sapienter.jbilling.server.pluggableTask.PaymentAuthorizeNetTask.considerField(java.util.List,java.lang.String,java.lang.String)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getCountryCode()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getFirstName()", "java.util.List.size()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getPostalCode()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getAddress1()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getLastName()", "java.util.List.toArray(java.lang.Object[])"],
    "com.sapienter.jbilling.server.user.partner.PartnerBL.set(Integer)": ["com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayTask.process(PaymentDTOEx)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayTask.getProcessorName()", "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask.doProcess(com.sapienter.jbilling.server.payment.PaymentDTOEx,com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask$SvcType,com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getPaymentResult()", "java.math.BigDecimal.compareTo(java.math.BigDecimal)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getIsRefund()", "com.sapienter.jbilling.server.payment.db.PaymentResultDTO.getId()", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getPayoutId()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getAmount()", "com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase$Result.shouldCallOtherProcessors()"],
    "com.sapienter.jbilling.server.provisioning.ProvisioningProcessBL.deActivateOrder(OrderDTO)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.order.db.OrderDTO.getId()", "java.util.Iterator.next()", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getProvisioningStatusId()", "com.sapienter.jbilling.server.system.event.EventManager.process(com.sapienter.jbilling.server.system.event.Event)", "java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.order.db.OrderDTO.getUser()", "com.sapienter.jbilling.server.order.db.OrderDTO.getLines()", "com.sapienter.jbilling.server.user.db.UserDTO.getCompany()", "java.util.List.iterator()", "java.util.Iterator.hasNext()"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getPaperInvoicePDF(Integer)": ["com.sapienter.jbilling.server.invoice.IInvoiceSessionBean.getPDFInvoice(java.lang.Integer)", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)"],
    "com.sapienter.jbilling.server.util.PreferenceBL.isNull()": ["com.sapienter.jbilling.server.util.db.PreferenceDTO.getValue()"],
    "com.sapienter.jbilling.common.Util.getYear(String)": ["java.lang.String.indexOf(int)", "java.lang.Integer.valueOf(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.Integer.intValue()"],
    "com.sapienter.jbilling.server.order.db.UsageDAS.findUsageByItemType(Integer, Integer, Integer, Date, Date)": ["com.sapienter.jbilling.server.order.Usage.setItemTypeId(java.lang.Integer)", "com.sapienter.jbilling.server.order.Usage.setUserId(java.lang.Integer)", "org.hibernate.Query.uniqueResult()", "com.sapienter.jbilling.server.order.Usage.setEndDate(java.util.Date)", "setResultTransformer()", "getSession()", "createSQLQuery(java.lang.String)", "com.sapienter.jbilling.server.order.Usage.setStartDate(java.util.Date)", "org.hibernate.Query.setParameter(java.lang.String,java.lang.Integer)", "addScalar(java.lang.String)", "org.hibernate.transform.Transformers.aliasToBean(java.lang.Class)", "org.hibernate.Query.setParameter(java.lang.String,java.util.Date)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.updateAllMediationConfigurations(List)": ["com.sapienter.jbilling.server.mediation.MediationConfigurationBL.getDTO(java.util.List)", "com.sapienter.jbilling.server.mediation.IMediationSessionBean.updateAllConfiguration(java.lang.Integer,java.util.List)", "java.util.List.size()", "com.sapienter.jbilling.server.mediation.db.MediationConfiguration.getId()", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "java.util.List.add(java.lang.Object)", "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerId()"],
    "com.sapienter.jbilling.server.entity.PaymentInfoChequeDTO.isIdentical(Object)": ["java.util.Date.equals(java.lang.Object)", "java.lang.String.equals(java.lang.Object)"],
    "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.setToProcess(Integer)": ["com.sapienter.jbilling.server.invoice.db.InvoiceDTO.setInvoiceStatus(com.sapienter.jbilling.server.invoice.db.InvoiceStatusDTO)", "com.sapienter.jbilling.server.util.db.AbstractGenericStatusDAS.find(java.io.Serializable)"],
    "com.sapienter.jbilling.server.user.ContactBL.setEntityFromUser(Integer)": ["com.sapienter.jbilling.server.user.UserBL.getEntityId(java.lang.Integer)", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)"],
    "com.sapienter.jbilling.server.invoice.InvoiceBL.calculateTotal()": ["com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getInvoiceLines()", "java.util.Iterator.next()", "java.util.Iterator.hasNext()", "java.math.BigDecimal.add(java.math.BigDecimal)", "java.util.Collection.iterator()", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO.getAmount()"],
    "com.sapienter.jbilling.server.pluggableTask.PluggableTask.invalidateRuleCache(Integer)": ["java.util.HashMap.remove(java.lang.Integer)"],
    "com.sapienter.jbilling.server.mediation.FormatField.setStartPosition(String)": ["java.lang.Integer.valueOf(java.lang.String)"],
    "com.sapienter.jbilling.server.process.BillingProcessBL.getEndOfProcessPeriod(BillingProcessDTO)": ["java.util.Calendar.setTime(java.util.Date)", "com.sapienter.jbilling.server.process.db.PeriodUnitDTO.getId()", "com.sapienter.jbilling.server.process.db.BillingProcessDTO.getPeriodValue()", "com.sapienter.jbilling.server.process.db.BillingProcessDTO.getBillingDate()", "java.util.GregorianCalendar.add(int,int)", "com.sapienter.jbilling.server.util.MapPeriodToCalendar.map(java.lang.Integer)", "java.util.Calendar.getTime()", "com.sapienter.jbilling.server.process.db.BillingProcessDTO.getPeriodUnit()"],
    "com.sapienter.jbilling.server.order.event.NewStatusEvent.toString()": ["com.sapienter.jbilling.server.order.event.NewStatusEvent.getName()"],
    "com.sapienter.jbilling.server.payment.PaymentSessionBean.generatePayment(InvoiceDTO)": ["org.apache.log4j.Category.debug(java.lang.Object)", "java.util.Calendar.getInstance()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getId()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setAttempt(java.lang.Integer)", "java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getPaymentMethod()", "com.sapienter.jbilling.server.payment.PaymentSessionBean.processAndUpdateInvoice(com.sapienter.jbilling.server.payment.PaymentDTOEx,com.sapienter.jbilling.server.invoice.db.InvoiceDTO)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setAmount(java.math.BigDecimal)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.payment.db.PaymentMethodDTO.getId()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getAttempt()", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.user.db.UserDTO.getCompany()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getBalance()", "com.sapienter.jbilling.server.payment.PaymentBL.findPaymentInstrument(java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.util.db.CurrencyDTO.getId()", "com.sapienter.jbilling.server.util.audit.EventLogger.auditBySystem(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.util.Date)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getBaseUser()", "org.apache.log4j.Category.fatal(java.lang.Object,java.lang.Throwable)", "com.sapienter.jbilling.server.system.event.EventManager.process(com.sapienter.jbilling.server.system.event.Event)", "com.sapienter.jbilling.server.payment.PaymentDTOEx.setUserId(java.lang.Integer)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.setPaymentAttempts(int)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getCurrency()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setPaymentDate(java.util.Date)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setCurrency(com.sapienter.jbilling.server.util.db.CurrencyDTO)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setIsRefund(int)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getPaymentAttempts()", "java.util.Calendar.getTime()", "com.sapienter.jbilling.server.user.db.UserDTO.getUserId()"],
    "com.sapienter.jbilling.server.util.db.InternationalDescriptionDAS.findIt(String, Integer, String, Integer)": ["com.sapienter.jbilling.server.util.db.JbillingTable.getId()", "com.sapienter.jbilling.server.util.db.JbillingTableDAS.findByName(java.lang.String)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)"],
    "com.sapienter.jbilling.server.user.UserBL.getUserWS()": ["com.sapienter.jbilling.server.user.UserDTOEx.getUserId()", "com.sapienter.jbilling.server.user.UserWS.getCreditCard()", "com.sapienter.jbilling.server.entity.CreditCardDTO.setNumber(java.lang.String)", "java.lang.String.substring(int)", "com.sapienter.jbilling.server.util.DTOFactory.getUserDTOEx(com.sapienter.jbilling.server.user.db.UserDTO)", "com.sapienter.jbilling.server.user.ContactBL.getDTO()", "com.sapienter.jbilling.server.user.ContactBL.set(java.lang.Integer)", "com.sapienter.jbilling.server.user.ContactBL.getEntity()", "com.sapienter.jbilling.server.util.PreferenceBL.getInt()", "com.sapienter.jbilling.server.user.UserDTOEx.getEntityId()", "com.sapienter.jbilling.server.user.UserWS.setContact(com.sapienter.jbilling.server.user.ContactWS)", "com.sapienter.jbilling.server.util.PreferenceBL.set(java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.entity.CreditCardDTO.getNumber()", "java.lang.String.length()"],
    "com.sapienter.jbilling.server.mediation.MediationSessionBean.findRecordByKey(List, String)": ["com.sapienter.jbilling.server.mediation.Record.getKey()", "java.lang.String.equals(java.lang.Object)"],
    "com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.parseGetCustomerProfileResponse(String)": ["com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.setAccountNumber(java.lang.String)", "org.xml.sax.InputSource.setCharacterStream(java.io.Reader)", "org.w3c.dom.Node.normalize()", "javax.xml.parsers.DocumentBuilderFactory.newInstance()", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.setAddress(java.lang.String)", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.setPhoneNumber(java.lang.String)", "org.w3c.dom.Node.getNodeName()", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.setState(java.lang.String)", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.setFaxNumber(java.lang.String)", "org.w3c.dom.Node.getNodeValue()", "java.lang.String.equals(java.lang.Object)", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.setLastName(java.lang.String)", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.setEmail(java.lang.String)", "javax.xml.parsers.DocumentBuilder.parse(org.xml.sax.InputSource)", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.setAccountName(java.lang.String)", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.setCreditCardNumber(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.setCustomerProfileId(java.lang.String)", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.setRoutingNumber(java.lang.String)", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.setCountry(java.lang.String)", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.setAccountType(java.lang.String)", "org.w3c.dom.Document.getDocumentElement()", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.setCompany(java.lang.String)", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.setCity(java.lang.String)", "java.lang.String.format(java.lang.String,java.lang.Object[])", "org.w3c.dom.NodeList.item(int)", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.setBankName(java.lang.String)", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.setCustomerPaymentProfileId(java.lang.String)", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.setFirstName(java.lang.String)", "org.w3c.dom.Node.getChildNodes()", "javax.xml.parsers.DocumentBuilderFactory.newDocumentBuilder()", "org.apache.log4j.Category.error(java.lang.Object)", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.setCreditCardExpirationDate(java.lang.String)"],
    "com.sapienter.jbilling.server.user.partner.PartnerWS.setReferralFee(BigDecimal)": ["java.math.BigDecimal.toString()"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.updateCurrency(CurrencyWS)": ["com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerCompanyId()", "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerLanguageId()", "com.sapienter.jbilling.server.item.CurrencyBL.update(com.sapienter.jbilling.server.util.db.CurrencyDTO,java.lang.Integer)", "com.sapienter.jbilling.server.util.CurrencyWS.getDescription()", "com.sapienter.jbilling.server.util.db.AbstractDescription.setDescription(java.lang.String,java.lang.Integer)", "com.sapienter.jbilling.server.item.CurrencyBL.setEntityCurrency(java.lang.Integer,java.lang.Integer)", "java.lang.String.equals(java.lang.Object)", "com.sapienter.jbilling.server.util.db.CurrencyDTO.getId()", "com.sapienter.jbilling.server.util.CurrencyWS.isDefaultCurrency()", "com.sapienter.jbilling.server.util.db.AbstractDescription.getDescription()"],
    "com.sapienter.jbilling.server.mediation.MediationSessionBean.getMediationRecordsByMediationProcess(Integer)": ["com.sapienter.jbilling.server.mediation.db.MediationRecordDAS.findByProcess(java.lang.Integer)"],
    "com.sapienter.jbilling.server.mediation.task.JDBCReader.getSqlQueryString()": ["com.sapienter.jbilling.server.mediation.task.AbstractJDBCReader.getTableName()", "org.apache.log4j.Category.debug(java.lang.Object)", "java.util.Iterator.next()", "java.lang.StringBuilder.append(java.lang.Object)", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription.getName()", "java.lang.StringBuilder.append(java.lang.String)", "com.sapienter.jbilling.server.mediation.task.AbstractJDBCReader.getKeyColumns()", "java.lang.StringBuilder.toString()", "java.util.Iterator.hasNext()", "com.sapienter.jbilling.server.pluggableTask.PluggableTask.getParameter(java.lang.String,java.lang.String)", "com.sapienter.jbilling.server.mediation.task.AbstractJDBCReader.getMarkMethod()", "com.sapienter.jbilling.server.mediation.task.AbstractJDBCReader.getTimestampColumnName()", "java.util.List.size()", "com.sapienter.jbilling.server.mediation.task.AbstractJDBCReader.getLastId()", "java.util.List.iterator()", "java.util.List.get(int)"],
    "com.sapienter.jbilling.server.mediation.task.SaveToFileMediationErrorHandler.getFileForDate(Date)": ["com.sapienter.jbilling.server.mediation.task.SaveToFileMediationErrorHandler.getFileName(java.util.Date)", "com.sapienter.jbilling.server.mediation.task.SaveToFileMediationErrorHandler.getDirectory()"],
    "com.sapienter.jbilling.server.item.tasks.PricingResult.setPrice(String)": ["com.sapienter.jbilling.server.item.tasks.PricingResult.setPrice(java.math.BigDecimal)"],
    "com.sapienter.jbilling.server.user.permisson.db.RoleDTO.getTitle(Integer)": ["com.sapienter.jbilling.server.util.db.AbstractDescription.getDescription(java.lang.Integer,java.lang.String)"],
    "com.sapienter.jbilling.server.order.db.OrderLineDAS.findOnetimeByUserItem(Integer, Integer, Integer)": ["org.joda.time.DateMidnight.minusMonths(java.lang.Integer)", "org.joda.time.DateMidnight.toDate()", "org.hibernate.Query.list()", "org.hibernate.Query.setParameter(java.lang.String)", "getSession()", "org.hibernate.Query.setParameter(java.lang.String,java.lang.Integer)", "createQuery(java.lang.String)"],
    "com.sapienter.jbilling.server.util.db.InternationalDescriptionDAS.findByTable_Row(String, Integer)": ["org.hibernate.Query.list()", "org.hibernate.Query.setParameter(java.lang.String,java.lang.String)", "getSession()", "org.hibernate.Query.setParameter(java.lang.String,java.lang.Integer)", "createQuery(java.lang.String)"],
    "com.sapienter.jbilling.server.invoice.InvoiceBL.getUsersOverdueInvoices(Integer, Date)": ["java.util.List.size()", "com.sapienter.jbilling.server.invoice.db.InvoiceDAS.findIdsOverdueForUser(java.lang.Integer,java.util.Date)", "java.util.List.toArray(java.lang.Object[])"],
    "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDAS.create(String, String)": ["com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.setCode1(java.lang.String)", "java.util.Calendar.getInstance()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.setCreateDate(java.util.Date)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.setProcessor(java.lang.String)", "java.util.Calendar.getTime()", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)"],
    "com.sapienter.jbilling.server.invoice.InvoiceBL.getManyByItemTypeWS(Integer, Integer, Integer)": ["com.sapienter.jbilling.server.invoice.db.InvoiceDAS.findIdsByUserAndItemTypeLatestFirst(java.lang.Integer,java.lang.Integer,int)", "java.util.List.size()", "java.util.List.toArray(java.lang.Object[])"],
    "com.sapienter.jbilling.server.process.BillingProcessBL.getTotal(CurrencyDTO, List)": ["java.util.List.size()", "java.lang.Object.equals(java.lang.Object)", "java.util.List.add(java.lang.Object)", "com.sapienter.jbilling.server.process.db.ProcessRunTotalDTO.getCurrency()", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.util.db.CurrencyDTO.getId()", "java.util.List.get(int)"],
    "com.sapienter.jbilling.server.payment.event.AbstractPaymentEvent.forPaymentResult(Integer, PaymentDTOEx)": ["java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getPaymentResult()", "com.sapienter.jbilling.server.payment.db.PaymentResultDTO.getId()"],
    "com.sapienter.jbilling.server.order.OrderBL.validate(OrderWS)": ["com.sapienter.jbilling.server.order.OrderWS.getPeriod()", "com.sapienter.jbilling.server.order.OrderBL.validate(com.sapienter.jbilling.server.order.OrderLineWS)", "com.sapienter.jbilling.server.order.OrderWS.getUserId()", "com.sapienter.jbilling.server.order.OrderWS.getOrderLines()", "com.sapienter.jbilling.server.order.OrderWS.getBillingTypeId()"],
    "com.sapienter.jbilling.server.user.UserDTOEx.setMainRoleId(Integer)": ["java.util.List.contains(java.lang.Object)", "java.util.List.add(java.lang.Object)"],
    "com.sapienter.jbilling.server.item.ItemBL.invalidateCache()": ["org.springmodules.cache.provider.CacheProviderFacade.flushCache(org.springmodules.cache.FlushingModel)"],
    "com.sapienter.jbilling.common.SystemProperties.getJBillingResourcesDir()": ["com.sapienter.jbilling.common.SystemProperties.getJBillingHome()", "java.io.File.exists()", "java.io.File.getCanonicalPath()", "org.apache.log4j.Category.warn(java.lang.Object,java.lang.Throwable)"],
    "com.sapienter.jbilling.server.order.Usage.calculateUsage(List)": ["com.sapienter.jbilling.server.order.db.OrderLineDTO.getQuantity()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getAmount()", "java.math.BigDecimal.add(java.math.BigDecimal)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.deletePayment(Integer)": ["com.sapienter.jbilling.server.payment.PaymentBL.delete()"],
    "com.sapienter.jbilling.server.rule.task.VelocityRulesGeneratorTask.addParameters(VelocityContext, Object)": ["java.lang.reflect.Method.invoke(java.lang.Object,java.lang.Object[])", "java.lang.String.substring(int)", "java.lang.reflect.Method.getName()", "java.lang.String.substring(int,int)", "java.lang.String.startsWith(java.lang.String)", "java.lang.Class.getMethods()", "java.lang.reflect.Method.getReturnType()", "java.lang.String.toLowerCase()", "java.lang.reflect.Method.getParameterTypes()", "java.lang.Object.getClass()", "java.lang.Class.isPrimitive()", "org.apache.velocity.VelocityContext.put(java.lang.String,java.lang.Object)", "org.apache.log4j.Category.error(java.lang.Object)", "java.lang.String.length()"],
    "com.sapienter.jbilling.server.invoice.db.InvoiceDAS.findTotalAmountOwed(Integer)": ["org.hibernate.criterion.Restrictions.ne(java.lang.String,java.lang.Integer)", "com.sapienter.jbilling.server.invoice.db.InvoiceDAS.addUserCriteria(org.hibernate.Criteria,java.lang.Integer)", "org.hibernate.criterion.Projections.sum(java.lang.String)", "getSession()", "org.hibernate.Criteria.createAlias(java.lang.String,java.lang.String)", "org.hibernate.Criteria.add()", "createCriteria(java.lang.Class)", "org.hibernate.Criteria.setComment(java.lang.String)", "org.hibernate.Criteria.uniqueResult()", "org.hibernate.criterion.Restrictions.eq(java.lang.String,int)", "org.hibernate.Criteria.setProjection()"],
    "com.sapienter.jbilling.server.order.OrderHelper.synchronizeOrderLines(OrderDTO)": ["com.sapienter.jbilling.server.order.db.OrderDTO.getLines()", "com.sapienter.jbilling.server.order.db.OrderDTO.setLines(java.util.List)"],
    "com.sapienter.jbilling.server.process.BillingProcessSessionBean.verifyIsRetry(Integer, int, Date)": ["org.apache.log4j.Category.debug(java.lang.Object)", "java.util.Calendar.setTime(java.util.Date)", "com.sapienter.jbilling.server.process.BillingProcessBL.getEntity()", "java.util.GregorianCalendar.add(int,int)", "java.util.Collections.max(java.util.Collection,java.util.Comparator)", "com.sapienter.jbilling.common.Util.truncateDate(java.util.Date)", "com.sapienter.jbilling.server.process.db.ProcessRunDTO.getStarted()", "java.util.Date.after(java.util.Date)", "com.sapienter.jbilling.server.process.db.BillingProcessDTO.getProcessRuns()", "java.util.Calendar.getTime()"],
    "com.sapienter.jbilling.server.user.UserSessionBean.update(Integer, UserDTOEx)": ["com.sapienter.jbilling.server.user.UserDTOEx.getUserId()", "com.sapienter.jbilling.server.user.UserBL.update(java.lang.Integer,com.sapienter.jbilling.server.user.UserDTOEx)"],
    "com.sapienter.jbilling.server.entity.InvoiceLineDTO.hashCode()": ["java.lang.String.hashCode()", "java.math.BigDecimal.hashCode()", "java.lang.Integer.hashCode()"],
    "com.sapienter.jbilling.server.pluggableTask.BasicLineTotalTask.validateLinesQuantity(List)": ["com.sapienter.jbilling.server.order.db.OrderLineDTO.getDeleted()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getQuantity()", "com.sapienter.jbilling.server.item.db.ItemDTO.getHasDecimals()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getItem()", "java.math.BigDecimal.compareTo(java.math.BigDecimal)", "java.math.BigDecimal.remainder(java.math.BigDecimal)"],
    "com.sapienter.jbilling.server.process.db.ProcessRunUserDTO.toString()": ["java.lang.StringBuffer.append(int)", "java.lang.StringBuffer.toString()", "java.lang.StringBuffer.append(java.lang.String)", "java.lang.StringBuffer.append(java.lang.Object)"],
    "com.sapienter.jbilling.server.payment.event.GatewayAlarmEventProcessor.process(Event)": ["com.sapienter.jbilling.server.system.event.EventProcessor.getPluggableTask(java.lang.Integer,java.lang.Integer)", "java.lang.Integer.equals(java.lang.Object)", "org.apache.log4j.Category.info(java.lang.Object)", "org.apache.log4j.Category.warn(java.lang.Object)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getPaymentResult()", "com.sapienter.jbilling.server.payment.event.AbstractPaymentEvent.getPaymentProcessor()", "com.sapienter.jbilling.server.system.event.Event.getEntityId()", "com.sapienter.jbilling.server.payment.event.AbstractPaymentEvent.getPayment()", "com.sapienter.jbilling.server.pluggableTask.ProcessorAlarm.unavailable()", "com.sapienter.jbilling.server.pluggableTask.ProcessorAlarm.init(java.lang.String,java.lang.Integer)", "com.sapienter.jbilling.server.pluggableTask.ProcessorAlarm.successful()", "com.sapienter.jbilling.server.payment.db.PaymentResultDTO.getId()", "com.sapienter.jbilling.server.pluggableTask.ProcessorAlarm.fail()"],
    "com.sapienter.jbilling.server.user.permisson.db.PermissionUserDTO.isGranted()": ["com.sapienter.jbilling.server.user.permisson.db.PermissionUserDTO.getIsGrant()"],
    "com.sapienter.jbilling.server.user.partner.PartnerPayoutWS.setRefundsAmount(BigDecimal)": ["java.math.BigDecimal.toString()"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getAllItems()": ["com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerCompanyId()", "com.sapienter.jbilling.server.item.ItemBL.getAllItems(java.lang.Integer)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.updateOrder(OrderWS)": ["com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.validateOrder(com.sapienter.jbilling.server.order.OrderWS)", "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.processLines(com.sapienter.jbilling.server.order.db.OrderDTO,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String)", "com.sapienter.jbilling.server.order.OrderWS.getPricingFields()", "com.sapienter.jbilling.server.order.OrderBL.recalculate(java.lang.Integer)", "com.sapienter.jbilling.server.order.OrderWS.getUserId()", "com.sapienter.jbilling.server.user.UserBL.getEntity()", "com.sapienter.jbilling.server.user.UserBL.getEntityId(java.lang.Integer)", "com.sapienter.jbilling.server.order.OrderWS.getId()", "com.sapienter.jbilling.server.user.db.UserDTO.getLanguageIdField()", "com.sapienter.jbilling.server.order.OrderBL.set(com.sapienter.jbilling.server.order.db.OrderDTO)", "com.sapienter.jbilling.server.order.OrderBL.setForUpdate(java.lang.Integer)", "com.sapienter.jbilling.server.order.OrderWS.getCurrencyId()", "com.sapienter.jbilling.server.order.OrderBL.update(java.lang.Integer,com.sapienter.jbilling.server.order.db.OrderDTO)", "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerId()", "com.sapienter.jbilling.server.order.OrderBL.getDTO(com.sapienter.jbilling.server.order.OrderWS)", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)", "com.sapienter.jbilling.server.user.db.UserDTO.getUserId()"],
    "com.sapienter.jbilling.server.process.BillingProcessRunBL.set(Integer)": ["com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)"],
    "com.sapienter.jbilling.server.pluggableTask.ProcessorEmailAlarm.canSendEmail(int)": ["java.lang.System.currentTimeMillis()"],
    "com.sapienter.jbilling.server.user.db.CreditCardDAS.findByNumber(String)": ["org.hibernate.Query.list()", "org.hibernate.Query.setParameter(java.lang.String,java.lang.String)", "getSession()", "org.hibernate.Query.setComment(java.lang.String)", "createQuery(java.lang.String)"],
    "com.sapienter.jbilling.server.user.EntityBL.updateEntityAndContact(CompanyWS, Integer, Integer)": ["com.sapienter.jbilling.server.user.ContactWS.getStateProvince()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.setCity(java.lang.String)", "com.sapienter.jbilling.server.user.ContactWS.getPostalCode()", "com.sapienter.jbilling.server.user.CompanyWS.getDTO()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.setAddress2(java.lang.String)", "com.sapienter.jbilling.server.user.ContactBL.getEntity()", "com.sapienter.jbilling.server.user.ContactBL.setEntity(java.lang.Integer)", "com.sapienter.jbilling.server.user.ContactWS.getCity()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.setCountryCode(java.lang.String)", "com.sapienter.jbilling.server.user.CompanyWS.getContact()", "com.sapienter.jbilling.server.user.ContactWS.getAddress2()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.setStateProvince(java.lang.String)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.setPostalCode(java.lang.String)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getId()", "com.sapienter.jbilling.server.user.ContactWS.getAddress1()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.setAddress1(java.lang.String)", "com.sapienter.jbilling.server.util.audit.EventLogger.auditBySystem(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.util.Date)", "com.sapienter.jbilling.server.user.ContactWS.getCountryCode()", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)"],
    "com.sapienter.jbilling.server.payment.PaymentSessionBean.removeInvoiceLink(Integer)": ["com.sapienter.jbilling.server.payment.PaymentBL.removeInvoiceLink(java.lang.Integer)"],
    "com.sapienter.jbilling.server.user.UserBL.isCurrentlySubscribed(Date)": ["org.apache.log4j.Category.debug(java.lang.Object)", "java.util.List.isEmpty()", "com.sapienter.jbilling.server.invoice.db.InvoiceDAS.findIdsByUserAndPeriodDate(java.lang.Integer,java.util.Date)", "com.sapienter.jbilling.server.user.db.UserDTO.getUserId()"],
    "com.sapienter.jbilling.common.Util.getDate(Integer, Integer, Integer)": ["java.util.Calendar.set(int,int,int)", "java.util.Calendar.clear()", "java.util.Calendar.getTime()", "java.lang.Integer.intValue()", "java.util.Calendar.setLenient(boolean)"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentSageTask.isApplicable(PaymentDTOEx)": ["com.sapienter.jbilling.server.payment.PaymentDTOEx.getAch()", "org.apache.log4j.Category.warn(java.lang.Object)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getIsRefund()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getCreditCard()"],
    "com.sapienter.jbilling.server.util.Bootstrap.scheduleBatchJobs()": ["com.sapienter.jbilling.client.process.Trigger.Initialize()"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentRouterCurrencyTask.getAsyncParameters(InvoiceDTO)": ["java.util.Map.put(java.lang.Object,java.lang.Object)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getCurrency()", "com.sapienter.jbilling.server.util.db.CurrencyDTO.getCode()"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentsGatewayTask.processPGRequest(String)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.setTransactionId(java.lang.String)", "java.lang.String.substring(int)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.setCode1(java.lang.String)", "java.lang.String.substring(int,int)", "java.io.BufferedReader.close()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getResponseMessage()", "java.io.BufferedReader.readLine()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.setCode2(java.lang.String)", "java.lang.String.indexOf(int)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.setApprovalCode(java.lang.String)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.setResponseMessage(java.lang.String)", "com.sapienter.jbilling.server.payment.tasks.PaymentsGatewayTask.callPG(java.lang.String)", "java.lang.String.trim()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.setCode3(java.lang.String)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.setProcessor(java.lang.String)", "java.lang.String.equals(java.lang.Object)", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)"],
    "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskManager.getInstance(String, String)": ["org.apache.log4j.Category.debug(java.lang.Object)", "java.lang.Class.newInstance()", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskManager.getClass(java.lang.String)", "java.lang.Class.isAssignableFrom(java.lang.Class)"],
    "com.sapienter.jbilling.client.authentication.StaticAuthenticationFilter.doFilter(ServletRequest, ServletResponse, FilterChain)": ["org.springframework.security.authentication.AuthenticationDetailsSource.buildDetails(javax.servlet.http.HttpServletRequest)", "com.sapienter.jbilling.client.authentication.StaticAuthenticationFilter.getRememberMeServices()", "setAuthentication(org.springframework.security.core.Authentication)", "com.sapienter.jbilling.client.authentication.StaticAuthenticationFilter.getUsername()", "org.springframework.security.authentication.AuthenticationManager.authenticate(org.springframework.security.authentication.UsernamePasswordAuthenticationToken)", "com.sapienter.jbilling.client.authentication.StaticAuthenticationFilter.getPassword()", "org.springframework.security.web.authentication.RememberMeServices.loginSuccess(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.security.core.Authentication)", "com.sapienter.jbilling.client.authentication.StaticAuthenticationFilter.getAuthenticationDetailsSource()", "setAuthentication(<unknown>)", "org.springframework.security.core.context.SecurityContextHolder.getContext()", "org.springframework.security.web.AuthenticationEntryPoint.commence(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.security.core.AuthenticationException)", "com.sapienter.jbilling.client.authentication.StaticAuthenticationFilter.getAuthenticationEntryPoint()", "com.sapienter.jbilling.client.authentication.StaticAuthenticationFilter.isAuthenticationRequired(java.lang.String)", "java.lang.String.trim()", "com.sapienter.jbilling.client.authentication.StaticAuthenticationFilter.getAuthenticationManager()", "org.springframework.security.authentication.UsernamePasswordAuthenticationToken.setDetails()", "org.springframework.security.web.authentication.RememberMeServices.loginFail(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "javax.servlet.FilterChain.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"],
    "com.sapienter.jbilling.server.order.OrderLineWS.setQuantity(BigDecimal)": ["java.math.BigDecimal.toString()"],
    "com.sapienter.jbilling.server.pluggableTask.PluggableTask.createChangeSetStringFromTaskParameters()": ["java.util.Map.get(java.lang.Object)", "org.apache.log4j.Category.debug(java.lang.Object)", "org.apache.log4j.Category.warn(java.lang.Object)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.toString()", "java.util.Map.keySet()", "java.io.File.isAbsolute()", "com.sapienter.jbilling.server.pluggableTask.PluggableTask.appendResource(java.lang.StringBuilder,java.lang.String,java.lang.String)", "java.util.Map.isEmpty()", "com.sapienter.jbilling.server.util.Util.csvSplitLine(java.lang.String,char)", "java.lang.String.equals(java.lang.Object)", "com.sapienter.jbilling.common.Util.getSysProp(java.lang.String)", "org.apache.commons.lang.StringUtils.isNotEmpty(java.lang.String)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.updatePlugin(PluggableTaskWS)": ["com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerCompanyId()", "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerId()", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskBL.update(java.lang.Integer,com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDTO)"],
    "com.sapienter.jbilling.server.order.OrderBL.isDateInvoiced(Date)": ["java.util.Date.before(java.util.Date)", "com.sapienter.jbilling.server.order.db.OrderDTO.getNextBillableDay()"],
    "com.sapienter.jbilling.server.mediation.task.AbstractJDBCReader.iterator()": ["com.sapienter.jbilling.server.mediation.task.AbstractJDBCReader.getJdbcTemplate()"],
    "com.sapienter.jbilling.server.provisioning.ExternalProvisioning.onMessage(Message)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.provisioning.config.Provisioning.getCommands()", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "com.sapienter.jbilling.server.provisioning.ExternalProvisioning.processCommand(com.sapienter.jbilling.server.provisioning.config.Command)", "java.lang.String.equals(java.lang.Object)", "com.sapienter.jbilling.server.provisioning.config.Command.getId()", "javax.jms.MapMessage.getStringProperty(java.lang.String)"],
    "com.sapienter.jbilling.server.user.ContactBL.getPrimaryType(Integer)": ["com.sapienter.jbilling.server.user.contact.db.ContactTypeDTO.getId()", "com.sapienter.jbilling.server.user.contact.db.ContactTypeDAS.findPrimary(java.lang.Integer)"],
    "com.sapienter.jbilling.server.process.BillingProcessBL.generateDBInvoice(Integer, NewInvoiceDTO, BillingProcessDTO, Integer)": ["java.math.BigDecimal.subtract(java.math.BigDecimal)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.setInProcessPayment(int)", "com.sapienter.jbilling.server.invoice.InvoiceBL.create(java.lang.Integer,com.sapienter.jbilling.server.invoice.NewInvoiceDTO,com.sapienter.jbilling.server.process.db.BillingProcessDTO)", "org.apache.log4j.Category.fatal(java.lang.Object,java.lang.Throwable)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getCarriedBalance()", "com.sapienter.jbilling.server.invoice.InvoiceBL.createLines(com.sapienter.jbilling.server.invoice.NewInvoiceDTO)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.setBalance(java.math.BigDecimal)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getTotal()", "com.sapienter.jbilling.server.invoice.NewInvoiceDTO.calculateTotal()", "com.sapienter.jbilling.server.invoice.InvoiceBL.getEntity()", "com.sapienter.jbilling.server.process.BillingProcessBL.createOrderProcess(com.sapienter.jbilling.server.invoice.NewInvoiceDTO,com.sapienter.jbilling.server.invoice.db.InvoiceDTO,com.sapienter.jbilling.server.process.db.BillingProcessDTO,java.lang.Integer)"],
    "com.sapienter.jbilling.client.authentication.JBillingPasswordEncoder.isPasswordValid(String, String, Object)": ["com.sapienter.jbilling.client.authentication.JBillingPasswordEncoder.encodePassword(java.lang.String,java.lang.Object)", "java.lang.String.equals(java.lang.Object)"],
    "com.sapienter.jbilling.server.user.UserBL.init()": ["com.sapienter.jbilling.server.util.audit.EventLogger.getInstance()"],
    "com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase.getOptionalParameter(String, String)": ["java.util.Map.get(java.lang.Object)"],
    "com.sapienter.jbilling.server.invoice.InvoiceBL.getInvoicesByUserId(Integer)": ["java.sql.Connection.close()", "javax.sql.RowSet.setInt(int,int)", "com.sapienter.jbilling.server.list.ResultList.execute()", "com.sapienter.jbilling.server.list.ResultList.prepareStatement(java.lang.String)", "java.lang.Integer.intValue()"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentsGatewayTask.process(PaymentDTOEx)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getIsPreauth()", "com.sapienter.jbilling.server.payment.tasks.PaymentsGatewayTask.getChargeData(com.sapienter.jbilling.server.payment.PaymentDTOEx,int,boolean)", "com.sapienter.jbilling.server.payment.tasks.PaymentsGatewayTask.validateParameters()", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getId()", "java.lang.Integer.intValue()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getCheque()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getAch()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getCode1()", "com.sapienter.jbilling.server.payment.PaymentAuthorizationBL.create(com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO,java.lang.Integer)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setPaymentResult(com.sapienter.jbilling.server.payment.db.PaymentResultDTO)", "com.sapienter.jbilling.server.payment.tasks.PaymentsGatewayTask.processPGRequest(java.lang.String)", "java.lang.String.equals(java.lang.Object)", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getCreditCard()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.setAuthorization(com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO)", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)", "org.apache.log4j.Category.error(java.lang.Object)", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getMethod()"],
    "com.sapienter.jbilling.server.user.ContactBL.getVoidDTO(Integer)": ["com.sapienter.jbilling.server.user.ContactDTOEx.setFieldsTable(java.util.Hashtable)", "com.sapienter.jbilling.server.user.ContactBL.initializeFields()"],
    "com.sapienter.jbilling.server.order.OrderBL.addRelationships(Integer, Integer, Integer)": ["com.sapienter.jbilling.server.order.db.OrderDTO.setCurrency(com.sapienter.jbilling.server.util.db.CurrencyDTO)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.order.db.OrderDTO.setOrderPeriod(com.sapienter.jbilling.server.order.db.OrderPeriodDTO)", "com.sapienter.jbilling.server.order.db.OrderDTO.setBaseUserByUserId(com.sapienter.jbilling.server.user.db.UserDTO)"],
    "com.sapienter.jbilling.server.process.task.BasicAgeingTask.getStatusDescription(UserStatusDTO)": ["com.sapienter.jbilling.server.util.db.AbstractDescription.getDescription()"],
    "com.sapienter.jbilling.server.item.ItemBL.getWS(ItemDTO)": ["com.sapienter.jbilling.server.item.db.ItemDTO.getExcludedTypeIds()", "com.sapienter.jbilling.server.item.ItemDTOEx.setPrice(java.math.BigDecimal)", "com.sapienter.jbilling.server.item.ItemPriceDTOEx.setCurrencyId(java.lang.Integer)", "com.sapienter.jbilling.server.item.db.ItemDTO.getHasDecimals()", "com.sapienter.jbilling.server.item.ItemDTOEx.setDeleted(java.lang.Integer)", "com.sapienter.jbilling.server.item.db.ItemDTO.getDeleted()", "java.util.List.add(java.lang.Object)", "com.sapienter.jbilling.server.item.ItemDTOEx.setPercentage(java.math.BigDecimal)", "com.sapienter.jbilling.server.item.db.ItemDTO.getId()", "com.sapienter.jbilling.server.item.ItemPriceDTOEx.setPriceForm(java.lang.String)", "com.sapienter.jbilling.server.item.ItemDTOEx.setPrices(java.util.List)", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.item.ItemPriceDTOEx.setPrice(java.math.BigDecimal)", "com.sapienter.jbilling.server.item.db.ItemDTO.getEntity()", "com.sapienter.jbilling.server.item.db.ItemPriceDTO.getPriceForm()", "com.sapienter.jbilling.server.item.ItemDTOEx.setGlCode(java.lang.String)", "com.sapienter.jbilling.server.item.db.ItemDTO.getGlCode()", "com.sapienter.jbilling.server.item.db.ItemDTO.getCurrencyId()", "com.sapienter.jbilling.server.item.ItemDTOEx.setPriceManual(java.lang.Integer)", "com.sapienter.jbilling.server.item.db.ItemDTO.getPrice()", "com.sapienter.jbilling.server.util.db.CurrencyDTO.getId()", "com.sapienter.jbilling.server.item.ItemDTOEx.setHasDecimals(java.lang.Integer)", "java.util.List.get(int)", "com.sapienter.jbilling.server.item.ItemPriceDTOEx.setId(java.lang.Integer)", "com.sapienter.jbilling.server.item.db.ItemDTO.getPercentage()", "com.sapienter.jbilling.server.item.db.ItemDTO.getPriceManual()", "com.sapienter.jbilling.server.item.db.ItemPriceDTO.getName()", "com.sapienter.jbilling.server.item.db.ItemDTO.getPromoCode()", "com.sapienter.jbilling.server.item.ItemDTOEx.setTypes(java.lang.Integer[])", "com.sapienter.jbilling.server.item.ItemDTOEx.setEntityId(java.lang.Integer)", "com.sapienter.jbilling.server.item.ItemDTOEx.setOrderLineTypeId(java.lang.Integer)", "com.sapienter.jbilling.server.item.db.ItemPriceDTO.getPrice()", "com.sapienter.jbilling.server.item.ItemDTOEx.setExcludedTypes(java.lang.Integer[])", "com.sapienter.jbilling.server.item.db.ItemDTO.getInternalNumber()", "com.sapienter.jbilling.server.item.db.ItemDTO.getPrices()", "com.sapienter.jbilling.server.item.ItemDTOEx.setNumber(java.lang.String)", "com.sapienter.jbilling.server.item.db.ItemDTO.getTypes()", "java.util.List.size()", "com.sapienter.jbilling.server.item.ItemDTOEx.setPromoCode(java.lang.String)", "com.sapienter.jbilling.server.item.db.ItemPriceDTO.getCurrency()", "com.sapienter.jbilling.server.item.ItemDTOEx.setDescription(java.lang.String)", "com.sapienter.jbilling.server.util.db.AbstractDescription.getDescription()", "com.sapienter.jbilling.server.item.db.ItemPriceDTO.getId()", "com.sapienter.jbilling.server.item.db.ItemDTO.getOrderLineTypeId()", "com.sapienter.jbilling.server.item.ItemPriceDTOEx.setName(java.lang.String)", "com.sapienter.jbilling.server.item.ItemDTOEx.setId(java.lang.Integer)", "com.sapienter.jbilling.server.item.ItemDTOEx.setCurrencyId(java.lang.Integer)"],
    "com.sapienter.jbilling.common.JBCryptoImpl.getSecretKeyFactory()": ["javax.crypto.SecretKeyFactory.getInstance(java.lang.String)"],
    "com.sapienter.jbilling.server.notification.MessageDTO.addParameter(String, Object)": ["java.util.HashMap.put(java.lang.Object,java.lang.Object)"],
    "com.sapienter.jbilling.server.payment.tasks.AbstractPaymentRouterTask.confirmPreAuth(PaymentAuthorizationDTO, PaymentDTOEx)": ["com.sapienter.jbilling.server.payment.tasks.AbstractPaymentRouterTask.selectDelegate(com.sapienter.jbilling.server.payment.PaymentDTOEx)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getTransactionId()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getUserId()", "com.sapienter.jbilling.server.pluggableTask.PaymentTask.confirmPreAuth(com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO,com.sapienter.jbilling.server.payment.PaymentDTOEx)", "org.apache.log4j.Category.error(java.lang.Object)"],
    "com.sapienter.jbilling.server.util.db.AbstractDAS.delete(T)": ["delete(java.lang.Object)", "com.sapienter.jbilling.server.util.db.AbstractDAS.getHibernateTemplate()"],
    "com.sapienter.jbilling.server.item.ItemBL.findPrices(Integer, Integer)": ["com.sapienter.jbilling.server.item.db.ItemPriceDTO.setName(java.lang.String)", "java.math.BigDecimal.toString()", "com.sapienter.jbilling.server.item.db.ItemPriceDTO.setPriceForm(java.lang.String)", "com.sapienter.jbilling.server.item.db.ItemPriceDAS.find(java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.util.db.AbstractDescription.getDescription(java.lang.Integer)", "com.sapienter.jbilling.server.item.db.ItemPriceDTO.getPrice()", "java.util.List.add(java.lang.Object)", "com.sapienter.jbilling.server.item.db.ItemDTO.getId()", "com.sapienter.jbilling.server.item.db.ItemPriceDTO.setPrice(java.math.BigDecimal)", "com.sapienter.jbilling.server.item.db.ItemPriceDTO.setCurrency(com.sapienter.jbilling.server.util.db.CurrencyDTO)", "com.sapienter.jbilling.server.item.db.ItemDTO.getEntity()", "com.sapienter.jbilling.server.user.db.CompanyDTO.getCurrencies()", "com.sapienter.jbilling.server.util.db.CurrencyDTO.getId()"],
    "com.sapienter.jbilling.client.api.ExternalCallbackServlet.getInt(String)": ["org.apache.log4j.Category.debug(java.lang.Object)", "java.lang.Throwable.getMessage()", "java.lang.String.length()", "java.lang.Integer.parseInt(java.lang.String)"],
    "com.sapienter.jbilling.server.payment.db.PaymentDAS.findPreauth(Integer)": ["org.hibernate.Criteria.list()", "getSession()", "org.hibernate.Criteria.add()", "createCriteria(java.lang.Class)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "org.hibernate.criterion.Restrictions.ge(java.lang.String,java.math.BigDecimal)", "org.hibernate.criterion.Restrictions.eq(java.lang.String,int)", "org.hibernate.criterion.Restrictions.eq(java.lang.String,com.sapienter.jbilling.server.user.db.UserDTO)"],
    "com.sapienter.jbilling.server.user.UserBL.updateAch(AchDTO, Integer)": ["java.util.Set.add(java.lang.Object)", "com.sapienter.jbilling.server.user.AchBL.getEntity()", "com.sapienter.jbilling.server.user.db.AchDTO.setBaseUser(com.sapienter.jbilling.server.user.db.UserDTO)", "java.util.Set.toArray()", "com.sapienter.jbilling.server.user.db.UserDTO.getAchs()", "com.sapienter.jbilling.server.user.AchBL.set(java.lang.Integer)", "com.sapienter.jbilling.server.user.db.AchDTO.getBaseUser()", "java.util.Set.size()", "com.sapienter.jbilling.server.user.AchBL.create(com.sapienter.jbilling.server.user.db.AchDTO)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.user.AchBL.update(java.lang.Integer,com.sapienter.jbilling.server.user.db.AchDTO)", "com.sapienter.jbilling.server.user.db.AchDTO.getId()"],
    "com.sapienter.jbilling.server.order.UsageBL.getSubAccountItemUsage(Integer)": ["com.sapienter.jbilling.server.order.db.OrderDTO.getId()", "org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.order.UsageBL.getMainOrder()", "com.sapienter.jbilling.server.order.UsageBL.getPeriodStart()", "com.sapienter.jbilling.server.order.UsageBL.addWorkingOrder(com.sapienter.jbilling.server.order.Usage)", "com.sapienter.jbilling.server.order.UsageBL.getPeriodEnd()", "com.sapienter.jbilling.server.order.UsageBL.getWorkingOrder()", "org.apache.log4j.Category.warn(java.lang.Object)", "com.sapienter.jbilling.server.order.db.UsageDAS.findSubAccountUsageByItem(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.util.Date,java.util.Date)"],
    "com.sapienter.jbilling.server.notification.NotificationBL.getAgeingMessage(Integer, Integer, Integer, Integer)": ["com.sapienter.jbilling.server.notification.MessageDTO.setTypeId(java.lang.Integer)", "com.sapienter.jbilling.server.invoice.InvoiceBL.set(java.lang.Integer)", "org.apache.log4j.Category.warn(java.lang.Object)", "com.sapienter.jbilling.server.notification.MessageDTO.getTypeId()", "com.sapienter.jbilling.server.invoice.InvoiceBL.getEntity()", "com.sapienter.jbilling.server.notification.NotificationBL.setContent(com.sapienter.jbilling.server.notification.MessageDTO,java.lang.Integer,java.lang.Integer,java.lang.Integer)", "java.lang.Integer.intValue()", "com.sapienter.jbilling.server.notification.MessageDTO.addParameter(java.lang.String,java.lang.Object)", "com.sapienter.jbilling.server.invoice.InvoiceBL.getLastByUser(java.lang.Integer)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getBalance()", "com.sapienter.jbilling.server.util.Util.decimal2string(java.math.BigDecimal,java.util.Locale)", "com.sapienter.jbilling.server.user.UserBL.getLocale()", "com.sapienter.jbilling.server.notification.NotificationBL.initializeMessage(java.lang.Integer,java.lang.Integer)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.updateCreditCard(Integer, CreditCardDTO)": ["com.sapienter.jbilling.server.entity.CreditCardDTO.getName()", "com.sapienter.jbilling.server.entity.CreditCardDTO.getExpiry()", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "com.sapienter.jbilling.server.user.IUserSessionBean.updateCreditCard(java.lang.Integer,java.lang.Integer,com.sapienter.jbilling.server.user.db.CreditCardDTO)", "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerId()"],
    "com.sapienter.jbilling.server.payment.blacklist.TestBlacklistFilter.checkPayment(PaymentDTOEx)": ["com.sapienter.jbilling.server.payment.PaymentDTOEx.getUserId()", "com.sapienter.jbilling.server.payment.blacklist.TestBlacklistFilter.checkUser(java.lang.Integer)"],
    "com.sapienter.jbilling.server.process.task.AbstractBackwardSimpleScheduledTask.setTriggerFromProperties(SimpleTrigger)": ["org.apache.commons.lang.StringUtils.isNotBlank(java.lang.String)", "java.lang.Long.parseLong(java.lang.String)", "org.quartz.SimpleTrigger.setStartTime(java.util.Date)", "com.sapienter.jbilling.common.Util.getSysProp(java.lang.String)", "java.text.DateFormat.parse(java.lang.String)", "org.quartz.SimpleTrigger.setRepeatInterval(long)"],
    "com.sapienter.jbilling.server.order.task.RulesLineTotalTask.doProcessing(OrderDTO)": ["com.sapienter.jbilling.server.user.db.UserDTO.getCurrency()", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.user.db.UserDTO.getLanguage()", "com.sapienter.jbilling.server.user.db.UserDTO.getEntity()", "com.sapienter.jbilling.server.util.db.LanguageDTO.getId()", "com.sapienter.jbilling.server.util.db.CurrencyDTO.getId()", "com.sapienter.jbilling.server.item.tasks.RulesItemManager.processRules(com.sapienter.jbilling.server.order.db.OrderDTO)", "com.sapienter.jbilling.server.order.db.OrderDTO.getBaseUserByUserId()", "com.sapienter.jbilling.server.user.db.UserDTO.getUserId()"],
    "com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.getMerchantAuthenticationXML()": ["com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.endTag(java.lang.StringBuffer,java.lang.String)", "java.lang.StringBuffer.toString()", "com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.buildTag(java.lang.StringBuffer,java.lang.String,java.lang.String)", "com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.beginTag(java.lang.StringBuffer,java.lang.String)"],
    "com.sapienter.jbilling.server.invoice.InvoiceBL.getTotalPaid()": ["com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getPaymentMap()", "java.util.Iterator.next()", "com.sapienter.jbilling.server.payment.db.PaymentInvoiceMapDTO.getAmount()", "java.util.Iterator.hasNext()", "java.math.BigDecimal.add(java.math.BigDecimal)", "java.util.Collection.iterator()"],
    "com.sapienter.jbilling.server.util.audit.db.EventLogDAS.getEventsByAffectedUser(Integer)": ["org.hibernate.criterion.Order.desc(java.lang.String)", "org.hibernate.Criteria.list()", "org.hibernate.criterion.Restrictions.eq(java.lang.String,java.lang.Integer)", "addOrder()", "getSession()", "add()", "createCriteria(java.lang.Class)"],
    "com.sapienter.jbilling.server.provisioning.ProvisioningProcessSessionBean.updateProvisioningStatus(Integer, Integer, String)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getProvisioningStatusId()", "java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.order.OrderBL.setProvisioningStatus(java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.util.db.AbstractDAS.findForUpdate(java.io.Serializable)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getId()", "java.lang.String.equals(java.lang.Object)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)"],
    "com.sapienter.jbilling.server.user.UserSessionBean.setUserBlacklisted(Integer, Integer, Boolean)": ["com.sapienter.jbilling.server.user.UserBL.setUserBlacklisted(java.lang.Integer,java.lang.Boolean)"],
    "com.sapienter.jbilling.server.order.OrderBL.getOnetimeOrderLinesByParent(Integer, Integer, Integer)": ["com.sapienter.jbilling.server.order.db.OrderLineDAS.findOnetimeByParentUserItem(java.lang.Integer,java.lang.Integer,java.lang.Integer)"],
    "com.sapienter.jbilling.server.order.TimePeriod.equals(Object)": ["java.lang.Long.equals(java.lang.Object)", "com.sapienter.jbilling.server.order.TimePeriod.getUnitId()", "java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.order.TimePeriod.getValue()", "com.sapienter.jbilling.server.order.TimePeriod.getDf_fm()", "java.lang.Boolean.booleanValue()", "com.sapienter.jbilling.server.order.TimePeriod.getOwn_invoice()"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getMediationEventsForInvoice(Integer)": ["com.sapienter.jbilling.server.mediation.db.MediationRecordLineDAS.findByInvoice(java.lang.Integer)", "com.sapienter.jbilling.server.mediation.MediationRecordBL.getWS(java.util.Collection)"],
    "com.sapienter.jbilling.server.entity.AchDTO.setPrimaryKey(Integer)": ["com.sapienter.jbilling.server.entity.AchDTO.setId(java.lang.Integer)"],
    "com.sapienter.jbilling.server.order.db.OrderDAS.findByUserSubscriptions(Integer)": ["org.hibernate.Criteria.list()", "createAlias(java.lang.String,java.lang.String)", "org.hibernate.criterion.Restrictions.eq(java.lang.String,java.lang.Integer)", "org.hibernate.criterion.Restrictions.ne(java.lang.String,java.lang.Integer)", "getSession()", "add()", "createCriteria(java.lang.Class)", "org.hibernate.criterion.Restrictions.eq(java.lang.String,int)"],
    "com.sapienter.jbilling.server.invoice.NewInvoiceDTO.areLinesGeneratedEmpty()": ["java.util.List.isEmpty()"],
    "com.sapienter.jbilling.server.item.ItemDTOEx.hashCode()": ["java.lang.String.hashCode()", "java.lang.Integer.hashCode()"],
    "com.sapienter.jbilling.server.invoice.db.InvoiceDAS.findIdsByUserAndPeriodDate(Integer, Date)": ["setParameter(java.lang.String,java.util.Date)", "list()", "getSession()", "createQuery(java.lang.String)", "setParameter(java.lang.String,java.lang.Integer)", "setComment(java.lang.String)"],
    "com.sapienter.jbilling.server.payment.tasks.paypal.PaypalApi.doVoid(String)": ["com.paypal.sdk.core.nvp.NVPEncoder.encode()", "com.paypal.sdk.core.nvp.NVPDecoder.get(java.lang.String)", "com.sapienter.jbilling.server.payment.tasks.paypal.dto.PaypalResult.setErrorCode(java.lang.String)", "equals(java.lang.String)", "com.paypal.sdk.services.NVPCallerServices.call(java.lang.String)", "com.paypal.sdk.core.nvp.NVPDecoder.decode(java.lang.String)", "com.paypal.sdk.services.NVPCallerServices.setAPIProfile(com.paypal.sdk.profiles.APIProfile)", "com.sapienter.jbilling.server.payment.tasks.paypal.dto.PaypalResult.setSucceseeded(boolean)", "com.sapienter.jbilling.server.payment.tasks.paypal.dto.PaypalResult.setTransactionId(java.lang.String)", "com.paypal.sdk.core.nvp.NVPEncoder.add(java.lang.String,java.lang.String)"],
    "com.sapienter.jbilling.server.mediation.task.MediationResult.addLine(Integer, Integer)": ["com.sapienter.jbilling.server.mediation.task.MediationResult.addLine(java.lang.Integer,java.math.BigDecimal)"],
    "com.sapienter.jbilling.server.order.db.OrderPeriodDTO.setUnitId(int)": ["com.sapienter.jbilling.server.order.db.OrderPeriodDTO.setPeriodUnit(com.sapienter.jbilling.server.process.db.PeriodUnitDTO)"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentFilterTask.preAuth(PaymentDTOEx)": ["com.sapienter.jbilling.server.payment.tasks.PaymentFilterTask.callFilters(com.sapienter.jbilling.server.payment.PaymentDTOEx)"],
    "com.sapienter.jbilling.server.invoice.NewInvoiceDTO.validate()": ["java.util.Date.before(java.util.Date)", "com.sapienter.jbilling.server.invoice.NewInvoiceDTO.getBillingDate()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getDueDate()"],
    "com.sapienter.jbilling.server.process.task.ScpUploadTask.collectFiles(File, String, boolean)": ["org.apache.log4j.Category.debug(java.lang.Object)", "java.lang.String.matches(java.lang.String)", "java.util.List.addAll(java.util.Collection)", "java.io.File.getPath()", "java.lang.Object.java.lang.Object()", "java.util.List.add(java.lang.Object)", "java.io.File.isDirectory()", "java.io.File.listFiles(java.io.FilenameFilter)", "com.sapienter.jbilling.server.process.task.ScpUploadTask.collectFiles(java.io.File,java.lang.String,boolean)", "java.util.Arrays.asList(java.lang.Object[])"],
    "com.sapienter.jbilling.common.JBCrypto.digest(String)": ["com.sapienter.jbilling.server.util.Util.binaryToString(byte[])", "java.lang.String.getBytes(java.nio.charset.Charset)", "java.security.MessageDigest.digest(byte[])", "java.security.MessageDigest.getInstance(java.lang.String)", "org.apache.commons.codec.binary.Base64.encodeBase64(byte[])"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentPaypalExternalTask.storeCreditCard(ContactDTO, CreditCardDTO, AchDTO)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setAttempt(java.lang.Integer)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getUserId()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setAmount(java.math.BigDecimal)", "com.sapienter.jbilling.server.user.UserBL.getEntity()", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getTransactionId()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getNumber()", "com.sapienter.jbilling.server.payment.tasks.PaymentPaypalExternalTask.doProcess(com.sapienter.jbilling.server.payment.PaymentDTOEx,com.sapienter.jbilling.server.payment.tasks.paypal.dto.PaymentAction,boolean)", "com.sapienter.jbilling.common.Util.getPaymentMethod(java.lang.String)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setCreditCard(com.sapienter.jbilling.server.user.db.CreditCardDTO)", "com.sapienter.jbilling.server.user.UserBL.getCreditCard()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setBaseUser(com.sapienter.jbilling.server.user.db.UserDTO)", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)", "java.util.Iterator.next()", "com.sapienter.jbilling.server.user.db.UserDTO.getCurrency()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setDeleted(int)", "com.sapienter.jbilling.server.payment.tasks.PaymentPaypalExternalTask.getProcessorName()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setCreateDatetime(java.util.Date)", "org.apache.log4j.Category.warn(java.lang.Object)", "com.sapienter.jbilling.server.payment.tasks.PaymentPaypalExternalTask.doVoid(com.sapienter.jbilling.server.payment.PaymentDTOEx)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getBaseUsers()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setIsPreauth(java.lang.Integer)", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getAuthorization()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setPaymentDate(java.util.Date)", "java.util.Set.isEmpty()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setCurrency(com.sapienter.jbilling.server.util.db.CurrencyDTO)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setPaymentMethod(com.sapienter.jbilling.server.payment.db.PaymentMethodDTO)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setIsRefund(int)", "java.util.Set.iterator()", "org.apache.log4j.Category.error(java.lang.Object)", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)"],
    "com.sapienter.jbilling.server.user.UserBL.entity2WS()": ["com.sapienter.jbilling.server.user.UserWS.setLastStatusChange(java.util.Date)", "com.sapienter.jbilling.server.user.db.UserDTO.getUserName()", "com.sapienter.jbilling.server.user.UserWS.setUserId(int)", "com.sapienter.jbilling.server.user.db.UserDTO.getDeleted()", "com.sapienter.jbilling.server.user.UserBL.getMainRole()", "com.sapienter.jbilling.server.user.ContactBL.getDTO()", "com.sapienter.jbilling.server.user.UserWS.setCreditCard(com.sapienter.jbilling.server.entity.CreditCardDTO)", "com.sapienter.jbilling.server.user.db.UserDTO.getLastStatusChange()", "com.sapienter.jbilling.server.user.ContactBL.set(java.lang.Integer)", "com.sapienter.jbilling.server.user.db.UserDTO.getCreateDatetime()", "java.util.Collection.size()", "com.sapienter.jbilling.server.user.partner.db.Partner.getId()", "com.sapienter.jbilling.server.user.UserWS.setStatusId(java.lang.Integer)", "com.sapienter.jbilling.server.user.UserWS.setPassword(java.lang.String)", "com.sapienter.jbilling.server.user.UserWS.setCreateDatetime(java.util.Date)", "com.sapienter.jbilling.server.user.db.UserDTO.getLanguageIdField()", "com.sapienter.jbilling.server.user.UserBL.getCurrencyId()", "com.sapienter.jbilling.server.user.UserWS.setLastLogin(java.util.Date)", "com.sapienter.jbilling.server.user.db.UserDTO.getLastLogin()", "java.util.Collection.toArray()", "com.sapienter.jbilling.server.user.UserWS.setUserName(java.lang.String)", "com.sapienter.jbilling.server.user.UserWS.setLanguageId(java.lang.Integer)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getOldDTO()", "com.sapienter.jbilling.server.user.db.UserDTO.getStatus()", "com.sapienter.jbilling.server.user.UserWS.setPartnerId(java.lang.Integer)", "com.sapienter.jbilling.server.user.db.UserDTO.getPartner()", "com.sapienter.jbilling.server.user.UserWS.setDeleted(int)", "com.sapienter.jbilling.server.user.UserWS.setMainRoleId(java.lang.Integer)", "com.sapienter.jbilling.server.user.UserWS.setCurrencyId(java.lang.Integer)", "com.sapienter.jbilling.server.user.db.UserDTO.getPassword()", "com.sapienter.jbilling.server.user.UserWS.getUserId()", "com.sapienter.jbilling.server.user.UserWS.setContact(com.sapienter.jbilling.server.user.ContactWS)", "com.sapienter.jbilling.server.user.db.UserDTO.getCreditCards()", "com.sapienter.jbilling.server.util.db.AbstractGenericStatus.getId()", "com.sapienter.jbilling.server.user.db.UserDTO.getUserId()"],
    "com.sapienter.jbilling.server.pluggableTask.PluggableTaskSessionBean.getDTO(Integer, Integer)": ["com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskBL.set(java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskBL.getDTO()"],
    "com.sapienter.jbilling.server.user.partner.PartnerWS.setBalance(BigDecimal)": ["java.math.BigDecimal.toString()"],
    "com.sapienter.jbilling.server.order.OrderBL.getLatestByItemType(Integer, Integer)": ["java.sql.ResultSet.wasNull()", "java.sql.ResultSet.next()", "java.sql.Connection.close()", "javax.sql.RowSet.setInt(int,int)", "java.sql.ResultSet.getInt(int)", "com.sapienter.jbilling.server.list.ResultList.execute()", "com.sapienter.jbilling.server.list.ResultList.prepareStatement(java.lang.String)", "java.lang.Integer.intValue()", "java.sql.ResultSet.close()"],
    "com.sapienter.jbilling.server.entity.AchDTO.equals(Object)": ["com.sapienter.jbilling.server.entity.AchDTO.isIdentical(java.lang.Object)", "java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.entity.AchDTO.hasIdentity()"],
    "com.sapienter.jbilling.server.order.task.RulesItemManager2.addItem(Integer, BigDecimal, Integer, Integer, Integer, Integer, OrderDTO, List)": ["com.sapienter.jbilling.server.order.task.RulesItemManager2.processRules(com.sapienter.jbilling.server.order.db.OrderDTO,java.lang.Integer)", "com.sapienter.jbilling.server.item.tasks.BasicItemManager.addItem(java.lang.Integer,java.math.BigDecimal,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,com.sapienter.jbilling.server.order.db.OrderDTO,java.util.List)"],
    "com.sapienter.jbilling.server.payment.blacklist.NameFilter.checkPayment(PaymentDTOEx)": ["com.sapienter.jbilling.server.payment.blacklist.NameFilter.checkUser(java.lang.Integer)", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getUserId()"],
    "com.sapienter.jbilling.server.user.permisson.db.PermissionTypeDTO.hashCode()": ["java.lang.String.hashCode()"],
    "com.sapienter.jbilling.server.item.db.ItemTypeDTO.equals(Object)": ["java.lang.Object.getClass()", "java.lang.Object.equals(java.lang.Object)", "java.lang.String.equals(java.lang.Object)"],
    "com.sapienter.jbilling.server.process.BillingProcessWS.getOwningEntityId()": ["com.sapienter.jbilling.server.process.BillingProcessWS.getEntityId()"],
    "com.sapienter.jbilling.server.order.UsageBL.getItemTypeUsage(Integer)": ["com.sapienter.jbilling.server.order.db.OrderDTO.getId()", "org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.order.UsageBL.getMainOrder()", "com.sapienter.jbilling.server.order.UsageBL.getPeriodStart()", "com.sapienter.jbilling.server.order.UsageBL.addWorkingOrder(com.sapienter.jbilling.server.order.Usage)", "com.sapienter.jbilling.server.order.UsageBL.getPeriodEnd()", "com.sapienter.jbilling.server.order.UsageBL.getWorkingOrder()", "org.apache.log4j.Category.warn(java.lang.Object)", "com.sapienter.jbilling.server.order.db.UsageDAS.findUsageByItemType(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.util.Date,java.util.Date)"],
    "com.sapienter.jbilling.server.payment.db.PaymentDTO.getResultId()": ["com.sapienter.jbilling.server.payment.db.PaymentDTO.getPaymentResult()", "com.sapienter.jbilling.server.payment.db.PaymentResultDTO.getId()"],
    "com.sapienter.jbilling.server.util.audit.db.EventLogDAS.getLastTransitionEvent(Integer)": ["org.hibernate.Query.uniqueResult()", "getSession()", "org.apache.log4j.Category.warn(java.lang.Object)", "org.hibernate.Query.setParameter(java.lang.String,java.lang.Integer)", "com.sapienter.jbilling.server.util.audit.db.EventLogDTO.getOldNum()", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "createQuery(java.lang.String)"],
    "com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.parseCreateCustomerProfileResponse(String)": ["com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.throwDuplicateProfileError(java.lang.String,java.lang.String)", "javax.xml.parsers.DocumentBuilder.parse(org.xml.sax.InputSource)", "org.xml.sax.InputSource.setCharacterStream(java.io.Reader)", "org.w3c.dom.Node.normalize()", "javax.xml.parsers.DocumentBuilderFactory.newInstance()", "org.w3c.dom.Document.getDocumentElement()", "java.lang.String.format(java.lang.String,java.lang.Object[])", "org.w3c.dom.NodeList.item(int)", "org.w3c.dom.Node.getChildNodes()", "org.w3c.dom.Node.getNodeValue()", "java.lang.String.equals(java.lang.Object)", "javax.xml.parsers.DocumentBuilderFactory.newDocumentBuilder()", "org.apache.log4j.Category.error(java.lang.Object)"],
    "com.sapienter.jbilling.server.user.CreditCardBL.update(Integer, CreditCardDTO, Integer)": ["com.sapienter.jbilling.server.user.db.CreditCardDTO.setName(java.lang.String)", "org.apache.log4j.Category.debug(java.lang.Object)", "java.util.Set.add(java.lang.Object)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getId()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.setNumber(java.lang.String)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getName()", "com.sapienter.jbilling.server.system.event.EventManager.process(com.sapienter.jbilling.server.system.event.Event)", "com.sapienter.jbilling.server.payment.PaymentBL.getHome()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getCcExpiry()", "com.sapienter.jbilling.server.payment.db.PaymentDAS.findPreauth(java.lang.Integer)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getBaseUsers()", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "java.lang.String.contains(java.lang.CharSequence)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.setDeleted(int)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.setBaseUsers(java.util.Set)", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.util.audit.EventLogger.audit(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.util.Date)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getNumber()", "com.sapienter.jbilling.server.user.db.UserDTO.getCompany()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.setCcExpiry(java.util.Date)", "com.sapienter.jbilling.server.user.db.UserDTO.getCreditCards()", "com.sapienter.jbilling.server.payment.PaymentBL.delete()", "com.sapienter.jbilling.server.payment.PaymentBL.set(com.sapienter.jbilling.server.payment.db.PaymentDTO)", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)"],
    "com.sapienter.jbilling.server.order.event.PeriodCancelledEvent.toString()": ["com.sapienter.jbilling.server.order.event.PeriodCancelledEvent.getName()"],
    "com.sapienter.jbilling.server.payment.PaymentAuthorizationBL.markAsUsed(PaymentDTOEx)": ["com.sapienter.jbilling.server.payment.db.PaymentDTO.setPayment(com.sapienter.jbilling.server.payment.db.PaymentDTO)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setBalance(java.math.BigDecimal)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getPayment()", "com.sapienter.jbilling.server.payment.PaymentBL.getEntity()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getId()"],
    "com.sapienter.jbilling.server.process.BillingProcessRunBL.getTotalDTO(ProcessRunTotalDTO, Integer)": ["com.sapienter.jbilling.server.process.BillingProcessRunTotalDTOEx.setCurrencyName(java.lang.String)", "com.sapienter.jbilling.server.process.db.ProcessRunTotalDTO.setTotalPaid(java.math.BigDecimal)", "java.util.Iterator.next()", "com.sapienter.jbilling.server.process.BillingProcessRunTotalDTOEx.setPmTotals(java.util.Hashtable)", "com.sapienter.jbilling.server.util.db.AbstractDescription.getDescription(java.lang.Integer)", "java.util.Iterator.hasNext()", "com.sapienter.jbilling.server.process.db.ProcessRunTotalPmDTO.getTotal()", "java.util.Hashtable.put(java.lang.Object,java.lang.Object)", "com.sapienter.jbilling.server.item.CurrencyBL.getEntity()", "com.sapienter.jbilling.server.process.db.ProcessRunTotalDTO.getId()", "com.sapienter.jbilling.server.process.db.ProcessRunTotalDTO.getTotalPaid()", "com.sapienter.jbilling.server.process.db.ProcessRunTotalDTO.getTotalsPaymentMethod()", "com.sapienter.jbilling.server.process.db.ProcessRunTotalDTO.setId(int)", "com.sapienter.jbilling.server.process.db.ProcessRunTotalPmDTO.getPaymentMethod()", "com.sapienter.jbilling.server.process.db.ProcessRunTotalDTO.getCurrency()", "com.sapienter.jbilling.server.process.db.ProcessRunTotalDTO.getTotalNotPaid()", "com.sapienter.jbilling.server.util.db.CurrencyDTO.getId()", "com.sapienter.jbilling.server.process.db.ProcessRunTotalDTO.setTotalInvoiced(java.math.BigDecimal)", "com.sapienter.jbilling.server.process.db.ProcessRunTotalDTO.setTotalNotPaid(java.math.BigDecimal)", "java.util.Set.iterator()", "com.sapienter.jbilling.server.process.db.ProcessRunTotalDTO.setCurrency(com.sapienter.jbilling.server.util.db.CurrencyDTO)", "com.sapienter.jbilling.server.process.db.ProcessRunTotalDTO.getTotalInvoiced()"],
    "com.sapienter.jbilling.server.user.ContactBL.createForUser(ContactDTOEx, Integer, Integer)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.user.ContactBL.create(com.sapienter.jbilling.server.user.ContactDTOEx,java.lang.String,java.lang.Integer,java.lang.Integer)"],
    "com.sapienter.jbilling.server.order.OrderBL.recalculate(Integer)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.order.db.OrderDTO.setDefaults()", "org.apache.log4j.Category.fatal(java.lang.Object,java.lang.Throwable)", "java.lang.Throwable.getCause()", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskManager.getNextClass()", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.order.db.OrderDTO.setBaseUserByUserId(com.sapienter.jbilling.server.user.db.UserDTO)", "com.sapienter.jbilling.server.order.db.OrderDTO.touch()", "com.sapienter.jbilling.server.pluggableTask.OrderProcessingTask.doProcessing(com.sapienter.jbilling.server.order.db.OrderDTO)", "java.util.List.size()", "com.sapienter.jbilling.server.order.db.OrderDTO.getLines()", "com.sapienter.jbilling.server.user.db.UserDTO.getId()", "com.sapienter.jbilling.server.order.db.OrderDTO.getBaseUserByUserId()"],
    "com.sapienter.jbilling.server.order.db.OrderDTO.setStatusId(Integer)": ["com.sapienter.jbilling.server.order.db.OrderDTO.setOrderStatus(com.sapienter.jbilling.server.order.db.OrderStatusDTO)", "com.sapienter.jbilling.server.util.db.AbstractGenericStatus.setId(int)"],
    "com.sapienter.jbilling.server.payment.blacklist.BlacklistBL.getBlacklistMatches(Integer)": ["com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.payment.tasks.PaymentFilterTask.getBlacklistMatches(java.lang.Integer)", "com.sapienter.jbilling.server.user.db.UserDTO.getCompany()", "com.sapienter.jbilling.server.payment.blacklist.BlacklistBL.instantiatePaymentFilter(java.lang.Integer)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)"],
    "com.sapienter.jbilling.server.process.task.ScheduledTask._init(JobExecutionContext)": ["toString()", "getJobDataMap()", "org.quartz.JobExecutionContext.getJobDetail()", "org.quartz.JobDataMap.get(java.lang.Object)", "java.util.Map.put(java.lang.Object,java.lang.Object)", "org.quartz.JobDataMap.keySet()", "com.sapienter.jbilling.server.pluggableTask.PluggableTask.setEntityId(java.lang.Integer)", "org.quartz.JobDataMap.getInt(java.lang.String)"],
    "com.sapienter.jbilling.server.invoice.InvoiceBL.getList(Integer)": ["java.sql.Connection.close()", "javax.sql.RowSet.setInt(int,int)", "com.sapienter.jbilling.server.order.db.OrderDTO.getUser()", "com.sapienter.jbilling.server.user.db.CustomerDTO.getBaseUser()", "com.sapienter.jbilling.server.list.ResultList.execute()", "com.sapienter.jbilling.server.list.ResultList.prepareStatement(java.lang.String)", "com.sapienter.jbilling.server.user.db.UserDTO.getCustomer()", "com.sapienter.jbilling.server.order.OrderBL.getEntity()", "java.lang.Integer.intValue()", "com.sapienter.jbilling.server.user.db.CustomerDTO.getParent()", "com.sapienter.jbilling.server.user.db.UserDTO.getUserId()"],
    "com.sapienter.jbilling.server.util.db.AbstractDAS.clear()": ["clear()", "com.sapienter.jbilling.server.util.db.AbstractDAS.getHibernateTemplate()"],
    "com.sapienter.jbilling.server.mediation.task.AbstractJDBCReader.validate(List)": ["com.sapienter.jbilling.server.mediation.task.AbstractJDBCReader.init()", "java.lang.Throwable.getMessage()", "java.util.List.add(java.lang.Object)", "com.sapienter.jbilling.server.mediation.task.AbstractReader.validate(java.util.List)", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask.getStoreId()": ["com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase.ensureGetParameter(java.lang.String)"],
    "com.sapienter.jbilling.server.notification.NotificationBL.getPaymentMessage(Integer, PaymentDTOEx, boolean)": ["com.sapienter.jbilling.server.notification.MessageDTO.setTypeId(java.lang.Integer)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getPaymentMethod()", "com.sapienter.jbilling.server.notification.MessageDTO.getTypeId()", "com.sapienter.jbilling.server.payment.PaymentBL.getEntity()", "com.sapienter.jbilling.server.invoice.InvoiceBL.getEntity()", "com.sapienter.jbilling.server.user.UserBL.getEntity()", "com.sapienter.jbilling.server.notification.NotificationBL.setContent(com.sapienter.jbilling.server.notification.MessageDTO,java.lang.Integer,java.lang.Integer,java.lang.Integer)", "java.lang.String.toString()", "java.lang.Integer.intValue()", "com.sapienter.jbilling.server.notification.MessageDTO.addParameter(java.lang.String,java.lang.Object)", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getInvoiceIds()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getAmount()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getCurrency()", "com.sapienter.jbilling.server.user.db.UserDTO.getLanguageIdField()", "com.sapienter.jbilling.server.util.Util.formatMoney(java.math.BigDecimal,java.lang.Integer,java.lang.Integer,boolean)", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getUserId()", "com.sapienter.jbilling.server.payment.PaymentBL.getMethodDescription(com.sapienter.jbilling.server.payment.db.PaymentMethodDTO,java.lang.Integer)", "java.util.List.size()", "com.sapienter.jbilling.server.util.db.CurrencyDTO.getId()", "java.util.List.get(int)", "com.sapienter.jbilling.server.notification.NotificationBL.initializeMessage(java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getPublicNumber()"],
    "com.sapienter.jbilling.server.notification.NotificationBL.createUpdate(Integer, MessageDTO)": ["java.lang.String.substring(int)", "java.util.Set.add(java.lang.Object)", "org.hibernate.collection.PersistentSet.toArray()", "com.sapienter.jbilling.server.notification.db.NotificationMessageLineDTO.setNotificationMessageSection(com.sapienter.jbilling.server.notification.db.NotificationMessageSectionDTO)", "java.lang.String.substring(int,int)", "com.sapienter.jbilling.server.notification.db.NotificationMessageDTO.getId()", "com.sapienter.jbilling.server.notification.MessageDTO.getTypeId()", "com.sapienter.jbilling.server.notification.db.NotificationMessageDAS.create(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Boolean)", "com.sapienter.jbilling.server.notification.db.NotificationMessageSectionDTO.setNotificationMessage(com.sapienter.jbilling.server.notification.db.NotificationMessageDTO)", "com.sapienter.jbilling.server.notification.MessageDTO.getContent()", "java.lang.Integer.intValue()", "com.sapienter.jbilling.server.notification.db.NotificationMessageSectionDTO.getNotificationMessageLines()", "com.sapienter.jbilling.server.notification.MessageSection.getSection()", "com.sapienter.jbilling.server.notification.db.NotificationMessageDTO.getNotificationMessageSections()", "com.sapienter.jbilling.server.notification.db.NotificationMessageLineDAS.create(java.lang.String)", "com.sapienter.jbilling.server.notification.NotificationBL.set(java.lang.Integer,java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.notification.MessageDTO.getUseFlag()", "com.sapienter.jbilling.server.notification.MessageDTO.getLanguageId()", "com.sapienter.jbilling.server.notification.db.NotificationMessageSectionDAS.create(java.lang.Integer)", "com.sapienter.jbilling.server.util.db.AbstractDAS.delete(java.lang.Object)", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)", "java.lang.String.length()", "com.sapienter.jbilling.server.notification.MessageSection.getContent()"],
    "com.sapienter.jbilling.server.util.audit.EventLogger.log(Integer, Integer, Integer, Integer, Integer, Integer, String)": ["com.sapienter.jbilling.server.util.db.JbillingTableDAS.findByName(java.lang.String)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)"],
    "com.sapienter.jbilling.server.user.UserBL.getCreditCard()": ["java.util.Set.toArray()", "com.sapienter.jbilling.server.user.db.UserDTO.getCreditCards()", "java.util.Set.isEmpty()"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentRouterCurrencyTask.selectDelegate(PaymentDTOEx)": ["com.sapienter.jbilling.server.payment.db.PaymentDTO.getCurrency()", "java.util.Map.get(java.lang.Object)", "org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.payment.tasks.AbstractPaymentRouterTask.instantiateTask(java.lang.Integer)", "org.apache.log4j.Category.warn(java.lang.Object)", "com.sapienter.jbilling.server.util.db.CurrencyDTO.getCode()", "com.sapienter.jbilling.server.payment.tasks.AbstractPaymentRouterTask.intValueOf(java.lang.Object)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getLatestInvoice(Integer)": ["com.sapienter.jbilling.server.invoice.InvoiceBL.getLastByUser(java.lang.Integer)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)", "com.sapienter.jbilling.server.invoice.InvoiceBL.getWS(com.sapienter.jbilling.server.invoice.db.InvoiceDTO)"],
    "com.sapienter.jbilling.server.order.OrderBL.getOrderLine(OrderLineWS)": ["com.sapienter.jbilling.server.order.db.OrderLineDTO.setUseItem(java.lang.Boolean)", "com.sapienter.jbilling.server.order.OrderLineWS.getDeleted()", "com.sapienter.jbilling.server.order.OrderLineWS.getEditable()", "com.sapienter.jbilling.server.order.OrderLineWS.getTypeId()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setProvisioningStatus(com.sapienter.jbilling.server.provisioning.db.ProvisioningStatusDTO)", "com.sapienter.jbilling.server.order.OrderLineWS.getDescription()", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setDescription(java.lang.String)", "com.sapienter.jbilling.server.order.OrderLineWS.getQuantityAsDecimal()", "com.sapienter.jbilling.server.order.OrderLineWS.getProvisioningStatusId()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setAmount(java.math.BigDecimal)", "com.sapienter.jbilling.server.order.OrderLineWS.getItemId()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setOrderLineType(com.sapienter.jbilling.server.order.db.OrderLineTypeDTO)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setDeleted(int)", "com.sapienter.jbilling.server.order.OrderLineWS.getPriceAsDecimal()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setProvisioningRequestId(java.lang.String)", "com.sapienter.jbilling.server.order.OrderLineWS.getVersionNum()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setQuantity(java.math.BigDecimal)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setItemId(java.lang.Integer)", "com.sapienter.jbilling.server.order.OrderLineWS.getOrderId()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setItem(com.sapienter.jbilling.server.item.db.ItemDTO)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setId(int)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setEditable(java.lang.Boolean)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setVersionNum(java.lang.Integer)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setCreateDatetime(java.util.Date)", "com.sapienter.jbilling.server.order.OrderLineWS.getAmountAsDecimal()", "com.sapienter.jbilling.server.order.OrderLineWS.getUseItem()", "com.sapienter.jbilling.server.order.OrderLineWS.getProvisioningRequestId()", "com.sapienter.jbilling.server.order.OrderLineWS.getCreateDatetime()", "com.sapienter.jbilling.server.order.OrderLineWS.getId()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setPrice(java.math.BigDecimal)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setPurchaseOrder(com.sapienter.jbilling.server.order.db.OrderDTO)", "com.sapienter.jbilling.server.util.db.AbstractGenericStatusDAS.find(java.io.Serializable)"],
    "com.sapienter.jbilling.server.invoice.InvoiceBL.init()": ["com.sapienter.jbilling.server.util.audit.EventLogger.getInstance()"],
    "com.sapienter.jbilling.common.PermissionIdComparator.compare(PermissionDTO, PermissionDTO)": ["java.lang.Integer.compareTo(java.lang.Integer)", "com.sapienter.jbilling.server.user.permisson.db.PermissionDTO.getId()"],
    "com.sapienter.jbilling.server.user.db.CreditCardDTO.getName()": ["com.sapienter.jbilling.common.JBCrypto.getCreditCardCrypto()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getRawName()", "com.sapienter.jbilling.common.JBCrypto.decrypt(java.lang.String)"],
    "com.sapienter.jbilling.server.user.ContactBL.set(Integer, Integer)": ["com.sapienter.jbilling.server.user.ContactBL.setEntityFromUser(java.lang.Integer)", "com.sapienter.jbilling.server.user.contact.db.ContactDAS.findContact(java.lang.Integer,java.lang.Integer)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.notifyPaymentByEmail(Integer)": ["com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "com.sapienter.jbilling.server.notification.INotificationSessionBean.emailPayment(java.lang.Integer)"],
    "com.sapienter.jbilling.server.entity.AchDTO.toString()": ["com.sapienter.jbilling.server.entity.AchDTO.getGatewayKey()", "com.sapienter.jbilling.server.entity.AchDTO.getId()", "java.lang.StringBuffer.append(char)", "com.sapienter.jbilling.server.entity.AchDTO.getAbaRouting()", "java.lang.StringBuffer.toString()", "com.sapienter.jbilling.server.entity.AchDTO.getBankAccount()", "com.sapienter.jbilling.server.entity.AchDTO.getAccountType()", "com.sapienter.jbilling.server.entity.AchDTO.getBankName()", "java.lang.StringBuffer.append(java.lang.String)", "com.sapienter.jbilling.server.entity.AchDTO.getAccountName()"],
    "com.sapienter.jbilling.server.user.UserBL.getBalance(Integer)": ["java.math.BigDecimal.subtract(java.math.BigDecimal)", "com.sapienter.jbilling.server.payment.db.PaymentDAS.findTotalBalanceByUser(java.lang.Integer)", "com.sapienter.jbilling.server.invoice.db.InvoiceDAS.findTotalBalanceByUser(java.lang.Integer)"],
    "com.sapienter.jbilling.tools.ConvertToBinHexa.getConnection(String, String, String, String)": ["java.lang.Class.forName(java.lang.String)", "java.lang.String.equals(java.lang.Object)", "java.sql.DriverManager.getConnection(java.lang.String,java.lang.String,java.lang.String)"],
    "com.sapienter.jbilling.server.notification.NotificationBL.setContent(MessageDTO)": ["java.util.Iterator.next()", "com.sapienter.jbilling.server.notification.db.NotificationMessageLineDTO.getContent()", "java.lang.StringBuffer.toString()", "com.sapienter.jbilling.server.notification.db.NotificationMessageLineDTO.getId()", "java.util.Iterator.hasNext()", "com.sapienter.jbilling.server.notification.db.NotificationMessageSectionDTO.getNotificationMessageLines()", "java.lang.StringBuffer.append(java.lang.String)", "com.sapienter.jbilling.server.notification.db.NotificationMessageDTO.getNotificationMessageSections()", "java.util.Collections.sort(java.util.List,java.util.Comparator)", "com.sapienter.jbilling.server.notification.MessageDTO.addSection(com.sapienter.jbilling.server.notification.MessageSection)", "com.sapienter.jbilling.server.notification.db.NotificationMessageSectionDTO.getSection()", "java.util.List.iterator()", "org.apache.log4j.Category.error(java.lang.Object)", "java.util.Collection.iterator()"],
    "com.sapienter.jbilling.server.user.db.CustomerDAS.create()": ["com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.user.db.CustomerDTO.setInvoiceDeliveryMethod(com.sapienter.jbilling.server.invoice.db.InvoiceDeliveryMethodDTO)", "com.sapienter.jbilling.server.user.db.CustomerDTO.setExcludeAging(int)", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)"],
    "com.sapienter.jbilling.server.user.UserDTOEx.getUserId()": ["com.sapienter.jbilling.server.user.db.UserDTO.getId()"],
    "com.sapienter.jbilling.server.invoice.db.InvoiceDAS.addItemCategoryCriteria(Criteria, Integer)": ["createAlias(java.lang.String,java.lang.String)", "org.hibernate.criterion.Restrictions.eq(java.lang.String,java.lang.Integer)", "add()", "org.hibernate.Criteria.createAlias(java.lang.String,java.lang.String)", "org.hibernate.criterion.Restrictions.eq(java.lang.String,int)"],
    "com.sapienter.jbilling.server.user.db.AchDTO.setAbaRouting(String)": ["com.sapienter.jbilling.server.user.db.AchDTO.setRawAbaRouting(java.lang.String)", "java.lang.String.trim()", "com.sapienter.jbilling.common.JBCrypto.getCreditCardCrypto()", "java.lang.String.equals(java.lang.Object)", "com.sapienter.jbilling.common.JBCrypto.encrypt(java.lang.String)"],
    "com.sapienter.jbilling.server.notification.barcode.BarcodeFactory.ean13(Checksum, TextPlacement)": ["org.krysalis.barcode4j.impl.upcean.EAN13Bean.setMsgPosition(org.krysalis.barcode4j.HumanReadablePlacement)", "org.krysalis.barcode4j.impl.upcean.EAN13Bean.setChecksumMode(org.krysalis.barcode4j.ChecksumMode)", "com.sapienter.jbilling.server.notification.barcode.BarcodeFactory.getPlacement(com.sapienter.jbilling.server.notification.barcode.TextPlacement)", "com.sapienter.jbilling.server.notification.barcode.BarcodeFactory.getChecksum(com.sapienter.jbilling.server.notification.barcode.Checksum)"],
    "com.sapienter.jbilling.server.pluggableTask.ProcessorEmailAlarmTask.parseInt(Object)": ["java.lang.Number.intValue()", "java.lang.Integer.parseInt(java.lang.String)"],
    "com.sapienter.jbilling.server.invoice.InvoiceSessionBean.generatePDFFile(Map, String)": ["java.util.Map.get(java.lang.Object)", "com.sapienter.jbilling.server.process.db.BillingProcessDTO.getEntity()", "java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.user.db.UserDTO.getEntity()", "com.sapienter.jbilling.server.invoice.InvoiceBL.getInvoicesByUserId(java.lang.Integer)", "com.sapienter.jbilling.server.invoice.InvoiceBL.getInvoicesToPrintByProcessId(java.lang.Integer)", "com.sapienter.jbilling.server.user.UserBL.getEntity()", "java.lang.Integer.compareTo(java.lang.Integer)", "com.sapienter.jbilling.server.process.BillingProcessBL.getEntity()", "com.sapienter.jbilling.server.invoice.InvoiceBL.convertNumberToID(java.lang.Integer,java.lang.String)", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.invoice.PaperInvoiceBatchBL.generateFile(javax.sql.rowset.CachedRowSet,java.lang.Integer,java.lang.String)", "com.sapienter.jbilling.server.invoice.InvoiceBL.getInvoicesByIdRange(java.lang.Integer,java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.invoice.InvoiceBL.getInvoicesByCreateDate(java.lang.Integer,java.util.Date,java.util.Date)"],
    "com.sapienter.jbilling.server.user.AchBL.init()": ["com.sapienter.jbilling.server.util.audit.EventLogger.getInstance()", "org.apache.log4j.Logger.getLogger(java.lang.Class)"],
    "com.sapienter.jbilling.server.entity.AchDTO.hashCode()": ["java.lang.String.hashCode()", "java.lang.Integer.hashCode()"],
    "com.sapienter.jbilling.server.mediation.task.FixedFileReader.splitFields(String)": ["java.lang.String.substring(int,int)", "com.sapienter.jbilling.server.mediation.FormatField.getLength()", "java.util.List.size()", "java.util.List.add(java.lang.Object)", "com.sapienter.jbilling.server.mediation.Format.getFields()", "com.sapienter.jbilling.server.mediation.FormatField.getStartPosition()", "java.lang.String.length()", "java.util.List.toArray(java.lang.Object[])"],
    "com.sapienter.jbilling.server.util.db.AbstractDAS.findAll()": ["com.sapienter.jbilling.server.util.db.AbstractDAS.findByCriteria(org.hibernate.criterion.Criterion[])"],
    "com.sapienter.jbilling.server.notification.NotificationBL.sendSapienterEmail(String, Integer, String, String, String[])": ["org.apache.log4j.Category.debug(java.lang.Object)", "java.util.Calendar.getInstance()", "java.lang.String.replaceFirst(java.lang.String,java.lang.String)", "javax.mail.Message.setRecipients()", "javax.mail.Message.setSubject(java.lang.String)", "javax.mail.internet.MimeBodyPart.setContent(java.lang.String,java.lang.String)", "javax.mail.internet.MimeMultipart.addBodyPart(javax.mail.internet.MimeBodyPart)", "java.util.Properties.setProperty(java.lang.String,java.lang.String)", "java.util.ResourceBundle.getString(java.lang.String)", "javax.mail.Message.setFrom(javax.mail.internet.InternetAddress)", "java.io.File.getName()", "javax.mail.internet.MimeBodyPart.setFileName(java.lang.String)", "com.sapienter.jbilling.server.user.EntityBL.getLocale()", "com.sapienter.jbilling.common.Util.getSysProp(java.lang.String)", "javax.mail.internet.MimeBodyPart.setDataHandler(javax.activation.DataHandler)", "javax.mail.Message.setContent(javax.mail.internet.MimeMultipart)", "javax.mail.internet.InternetAddress.parse(java.lang.String,boolean)", "java.util.ResourceBundle.getBundle(java.lang.String,java.util.Locale)", "javax.mail.Session.getTransport(java.lang.String)", "javax.mail.Transport.connect(java.lang.String,int,java.lang.String,java.lang.String)", "javax.mail.Transport.sendMessage(javax.mail.Message,javax.mail.internet.InternetAddress[])", "javax.mail.internet.MimeBodyPart.setDescription(java.lang.String)", "javax.mail.Message.setSentDate(java.util.Date)", "javax.mail.Message.setText(java.lang.String)", "javax.mail.internet.MimeBodyPart.setDisposition()", "java.util.Calendar.getTime()", "javax.mail.Session.getInstance(java.util.Properties,<unknown>)", "java.lang.Integer.parseInt(java.lang.String)"],
    "com.sapienter.jbilling.server.process.db.ProcessRunDAS.create(BillingProcessDTO, Date, Integer, ProcessRunStatusDTO)": ["com.sapienter.jbilling.server.process.db.ProcessRunDTO.setStatus(com.sapienter.jbilling.server.process.db.ProcessRunStatusDTO)", "com.sapienter.jbilling.server.process.db.ProcessRunDTO.setBillingProcess(com.sapienter.jbilling.server.process.db.BillingProcessDTO)", "java.util.Set.add(java.lang.Object)", "java.util.Calendar.getInstance()", "com.sapienter.jbilling.server.process.db.ProcessRunDTO.setInvoicesGenerated(java.lang.Integer)", "java.util.Calendar.getTime()", "com.sapienter.jbilling.server.process.db.BillingProcessDTO.getProcessRuns()", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)"],
    "com.sapienter.jbilling.server.process.BillingProcessBL.updateStatusFinished(OrderDTO, Date, Date)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.order.db.OrderDTO.getId()", "com.sapienter.jbilling.server.order.db.OrderPeriodDTO.getId()", "java.util.Date.compareTo(java.util.Date)", "com.sapienter.jbilling.server.order.OrderBL.setStatus(java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.order.db.OrderDTO.getActiveUntil()", "com.sapienter.jbilling.common.Util.truncateDate(java.util.Date)", "org.apache.log4j.Logger.getLogger(java.lang.Class)", "com.sapienter.jbilling.server.order.db.OrderDTO.getOrderPeriod()"],
    "com.sapienter.jbilling.server.util.audit.db.EventLogDTO.touch()": ["com.sapienter.jbilling.server.util.audit.db.EventLogDTO.getJbillingTable()", "com.sapienter.jbilling.server.util.audit.db.EventLogDTO.getBaseUser()", "com.sapienter.jbilling.server.util.db.JbillingTable.getName()", "com.sapienter.jbilling.server.user.db.UserDTO.getUserName()", "com.sapienter.jbilling.server.util.audit.db.EventLogMessageDTO.getId()", "com.sapienter.jbilling.server.util.audit.db.EventLogModuleDTO.getId()", "com.sapienter.jbilling.server.util.audit.db.EventLogDTO.getEventLogMessage()", "com.sapienter.jbilling.server.util.audit.db.EventLogDTO.getEventLogModule()"],
    "com.sapienter.jbilling.server.invoice.InvoiceSessionBean.getInvoice(Integer)": ["com.sapienter.jbilling.server.util.db.AbstractDAS.findNow(java.io.Serializable)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getBalance()"],
    "com.sapienter.jbilling.server.order.OrderSessionBean.setStatus(Integer, Integer, Integer, Integer)": ["com.sapienter.jbilling.server.order.OrderBL.getDTO()", "com.sapienter.jbilling.server.order.db.OrderDTO.touch()", "com.sapienter.jbilling.server.order.OrderBL.setStatus(java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.order.db.OrderDTO.addExtraFields(java.lang.Integer)"],
    "com.sapienter.jbilling.server.process.task.BusinessDayAgeingTask.isAgeingRequired(UserDTO, AgeingEntityStepDTO, Date)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.process.db.AgeingEntityStepDTO.getDays()", "java.util.Date.before(java.util.Date)", "com.sapienter.jbilling.server.process.task.BusinessDayAgeingTask.getBusinessDaysHelper()", "java.util.Date.equals(java.lang.Object)", "com.sapienter.jbilling.server.user.db.UserDTO.getLastStatusChange()", "com.sapienter.jbilling.server.process.BusinessDays.addBusinessDays(java.util.Date,int)", "com.sapienter.jbilling.server.user.db.UserDTO.getCreateDatetime()"],
    "com.sapienter.jbilling.server.pluggableTask.BasicEmailNotificationTask.getSections()": ["com.sapienter.jbilling.server.pluggableTask.BasicEmailNotificationTask.init()"],
    "com.sapienter.jbilling.server.item.ItemDTOEx.toString()": ["java.lang.StringBuilder.append(java.lang.Object)", "java.util.Arrays.toString(java.lang.Object[])", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.toString()"],
    "com.sapienter.jbilling.server.pluggableTask.PluggableTask.getTaskId()": ["com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDTO.getId()"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.createPaymentLink(Integer, Integer)": ["com.sapienter.jbilling.server.payment.IPaymentSessionBean.applyPayment(java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)"],
    "com.sapienter.jbilling.server.mediation.db.MediationProcess.toString()": ["com.sapienter.jbilling.server.mediation.db.MediationProcess.getOrdersAffected()"],
    "com.sapienter.jbilling.server.provisioning.task.TestCommunication.pause(long)": ["org.apache.log4j.Category.debug(java.lang.Object)", "java.lang.Thread.sleep(long)"],
    "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDAS.findByUser(Integer)": ["org.hibernate.Criteria.list()", "createAlias(java.lang.String,java.lang.String)", "org.hibernate.criterion.Restrictions.eq(java.lang.String,java.lang.Integer)", "getSession()", "add()", "createCriteria(java.lang.Class)"],
    "com.sapienter.jbilling.server.order.TimePeriod.setDf_fm(Integer)": ["java.lang.Integer.intValue()"],
    "com.sapienter.jbilling.server.process.BillingProcessSessionBean.processUser(Integer, Integer, boolean, boolean)": ["com.sapienter.jbilling.server.user.UserBL.canInvoice()", "org.apache.log4j.Category.debug(java.lang.Object)", "org.springframework.transaction.interceptor.TransactionAspectSupport.currentTransactionStatus()", "com.sapienter.jbilling.server.system.event.EventManager.process(com.sapienter.jbilling.server.system.event.Event)", "com.sapienter.jbilling.server.process.db.BillingProcessDTO.getBillingDate()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getId()", "org.apache.log4j.Category.info(java.lang.Object)", "com.sapienter.jbilling.server.process.BillingProcessBL.generateInvoice(com.sapienter.jbilling.server.process.db.BillingProcessDTO,com.sapienter.jbilling.server.user.db.UserDTO,boolean,boolean)", "setRollbackOnly()", "com.sapienter.jbilling.server.user.UserBL.getEntity()", "com.sapienter.jbilling.server.user.db.UserDTO.getSubscriberStatus()", "com.sapienter.jbilling.server.user.UserBL.getEntityId(java.lang.Integer)", "com.sapienter.jbilling.server.process.BillingProcessBL.getEntity()", "com.sapienter.jbilling.server.util.db.AbstractGenericStatus.getId()", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)"],
    "com.sapienter.jbilling.server.order.OrderBL.getOrderLineWS(Integer)": ["com.sapienter.jbilling.server.order.db.OrderDTO.getId()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getVersionNum()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getDeleted()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getProvisioningStatusId()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getQuantity()", "com.sapienter.jbilling.server.util.db.AbstractDAS.findNow(java.io.Serializable)", "org.apache.log4j.Category.warn(java.lang.Object)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getAmount()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getEditable()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getId()", "com.sapienter.jbilling.server.item.db.ItemDTO.getId()", "com.sapienter.jbilling.server.order.db.OrderLineTypeDTO.getId()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getPrice()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getCreateDatetime()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getProvisioningRequestId()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getDescription()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getUseItem()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getItem()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getOrderLineType()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getPurchaseOrder()"],
    "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.buildFromGatewayKey(String)": ["java.lang.String.substring(int,int)", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.length()"],
    "com.sapienter.jbilling.server.order.db.OrderDAS.findIdsByUserLatestFirst(Integer, int)": ["org.hibernate.criterion.Order.desc(java.lang.String)", "org.hibernate.criterion.Restrictions.eq(java.lang.String,java.lang.Integer)", "addOrder()", "getSession()", "add()", "createCriteria(java.lang.Class)", "org.hibernate.criterion.Projections.id()", "org.hibernate.Criteria.list()", "createAlias(java.lang.String,java.lang.String)", "setProjection()", "setMaxResults(int)", "org.hibernate.criterion.Restrictions.eq(java.lang.String,int)", "setComment(java.lang.String)"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask.post(NVPList)": ["org.apache.log4j.Category.debug(java.lang.Object)", "org.apache.commons.httpclient.HttpClient.setConnectionTimeout(int)", "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask$NVPList.toString()", "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask.getProcessorName()", "org.apache.commons.httpclient.methods.PostMethod.getResponseBodyAsString()", "org.apache.commons.httpclient.methods.PostMethod.setRequestEntity(org.apache.commons.httpclient.methods.StringRequestEntity)", "org.apache.commons.httpclient.methods.PostMethod.releaseConnection()", "com.sapienter.jbilling.server.pluggableTask.PaymentTaskWithTimeout.getTimeoutSeconds()", "org.apache.commons.httpclient.HttpClient.executeMethod(org.apache.commons.httpclient.methods.PostMethod)", "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask.getGatewayUrl()"],
    "com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.parseCustomerProfileTransactionResponse(String)": ["com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.setTransactionId(java.lang.String)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.setCode1(java.lang.String)", "java.util.Calendar.getInstance()", "javax.xml.parsers.DocumentBuilder.parse(org.xml.sax.InputSource)", "org.xml.sax.InputSource.setCharacterStream(java.io.Reader)", "org.w3c.dom.Node.normalize()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.setCreateDate(java.util.Date)", "javax.xml.parsers.DocumentBuilderFactory.newInstance()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.setCode2(java.lang.String)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.setAvs(java.lang.String)", "org.w3c.dom.Document.getDocumentElement()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.setApprovalCode(java.lang.String)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.setResponseMessage(java.lang.String)", "org.w3c.dom.NodeList.item(int)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.setCode3(java.lang.String)", "org.w3c.dom.Node.getChildNodes()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.setProcessor(java.lang.String)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.setMD5(java.lang.String)", "org.w3c.dom.Node.getNodeValue()", "java.lang.String.equals(java.lang.Object)", "java.lang.String.split(java.lang.String,int)", "javax.xml.parsers.DocumentBuilderFactory.newDocumentBuilder()", "java.util.Calendar.getTime()", "org.apache.log4j.Category.error(java.lang.Object)"],
    "com.sapienter.jbilling.server.item.ItemBL.getDTO(ItemDTOEx)": ["com.sapienter.jbilling.server.item.db.ItemDTO.setCurrencyId(java.lang.Integer)", "com.sapienter.jbilling.server.item.db.ItemDTO.setNumber(java.lang.String)", "com.sapienter.jbilling.server.item.ItemDTOEx.getGlCode()", "java.util.List.add(java.lang.Object)", "com.sapienter.jbilling.server.item.ItemPriceDTOEx.getCurrencyId()", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.item.ItemDTOEx.getHasDecimals()", "com.sapienter.jbilling.server.util.db.AbstractDescription.setDescription(java.lang.String)", "com.sapienter.jbilling.server.item.ItemDTOEx.getExcludedTypes()", "com.sapienter.jbilling.server.item.db.ItemDTO.setHasDecimals(java.lang.Integer)", "com.sapienter.jbilling.server.item.ItemDTOEx.getEntityId()", "com.sapienter.jbilling.server.item.db.ItemDTO.setPriceManual(java.lang.Integer)", "com.sapienter.jbilling.server.item.db.ItemDTO.setEntity(com.sapienter.jbilling.server.user.db.CompanyDTO)", "com.sapienter.jbilling.server.item.db.ItemPriceDTO.setCurrency(com.sapienter.jbilling.server.util.db.CurrencyDTO)", "com.sapienter.jbilling.server.item.ItemDTOEx.getTypes()", "com.sapienter.jbilling.server.item.db.ItemDTO.setExcludedTypeIds(java.lang.Integer[])", "com.sapienter.jbilling.server.item.ItemDTOEx.getCurrencyId()", "com.sapienter.jbilling.server.item.db.ItemDTO.setPrices(java.util.List)", "com.sapienter.jbilling.server.item.db.ItemDTO.setGlCode(java.lang.String)", "com.sapienter.jbilling.server.item.db.ItemDTO.setPromoCode(java.lang.String)", "com.sapienter.jbilling.server.item.db.ItemPriceDTO.setId(java.lang.Integer)", "com.sapienter.jbilling.server.item.db.ItemDTO.setTypes(java.lang.Integer[])", "java.util.List.get(int)", "com.sapienter.jbilling.server.item.ItemDTOEx.getPriceAsDecimal()", "com.sapienter.jbilling.server.item.db.ItemPriceDTO.setName(java.lang.String)", "com.sapienter.jbilling.server.item.ItemDTOEx.getId()", "com.sapienter.jbilling.server.item.db.ItemDTO.setPercentage(java.math.BigDecimal)", "com.sapienter.jbilling.server.item.ItemDTOEx.getPromoCode()", "com.sapienter.jbilling.server.item.db.ItemPriceDTO.setPriceForm(java.lang.String)", "com.sapienter.jbilling.server.item.ItemDTOEx.getPriceManual()", "com.sapienter.jbilling.server.item.ItemDTOEx.getNumber()", "com.sapienter.jbilling.server.item.ItemDTOEx.getDeleted()", "com.sapienter.jbilling.server.item.db.ItemDTO.setOrderLineTypeId(java.lang.Integer)", "com.sapienter.jbilling.server.item.ItemPriceDTOEx.getPriceAsDecimal()", "com.sapienter.jbilling.server.item.db.ItemPriceDTO.setPrice(java.math.BigDecimal)", "com.sapienter.jbilling.server.item.db.ItemDTO.setPrice(java.math.BigDecimal)", "com.sapienter.jbilling.server.item.ItemDTOEx.getPercentageAsDecimal()", "com.sapienter.jbilling.server.item.ItemPriceDTOEx.getName()", "com.sapienter.jbilling.server.item.ItemDTOEx.getOrderLineTypeId()", "java.util.List.size()", "com.sapienter.jbilling.server.item.ItemDTOEx.getDescription()", "com.sapienter.jbilling.server.item.ItemPriceDTOEx.getPriceForm()", "com.sapienter.jbilling.server.item.ItemPriceDTOEx.getId()", "com.sapienter.jbilling.server.item.db.ItemDTO.setId(int)", "com.sapienter.jbilling.server.item.db.ItemDTO.setDeleted(java.lang.Integer)", "com.sapienter.jbilling.server.item.ItemDTOEx.getPrices()"],
    "com.sapienter.jbilling.server.notification.NotificationBL.getInvoiceRemainderMessage(Integer, Integer, Integer, Date, String, BigDecimal, Date, Integer)": ["com.sapienter.jbilling.server.notification.MessageDTO.setTypeId(java.lang.Integer)", "com.sapienter.jbilling.server.util.Util.formatDate(java.util.Date,java.lang.Integer)", "com.sapienter.jbilling.server.user.db.UserDTO.getLanguageIdField()", "com.sapienter.jbilling.server.util.Util.formatMoney(java.math.BigDecimal,java.lang.Integer,java.lang.Integer,boolean)", "com.sapienter.jbilling.server.notification.MessageDTO.getTypeId()", "com.sapienter.jbilling.server.user.UserBL.getEntity()", "com.sapienter.jbilling.server.notification.NotificationBL.setContent(com.sapienter.jbilling.server.notification.MessageDTO,java.lang.Integer,java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.notification.MessageDTO.addParameter(java.lang.String,java.lang.Object)", "java.lang.Integer.toString()", "com.sapienter.jbilling.server.notification.NotificationBL.initializeMessage(java.lang.Integer,java.lang.Integer)"],
    "com.sapienter.jbilling.server.item.CurrencyBL.setCurrencies(Integer, CurrencyDTO[])": ["com.sapienter.jbilling.server.util.db.CurrencyExchangeDTO.setCreateDatetime(java.util.Date)", "java.util.Set.add(java.lang.Object)", "java.util.Iterator.next()", "com.sapienter.jbilling.server.util.db.CurrencyDTO.getInUse()", "com.sapienter.jbilling.server.util.db.CurrencyDTO.getRateAsDecimal()", "java.util.Calendar.getInstance()", "java.util.Set.clear()", "java.util.Iterator.hasNext()", "com.sapienter.jbilling.server.util.db.CurrencyExchangeDAS.findByEntity(java.lang.Integer)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.util.db.CurrencyExchangeDTO.setCurrency(com.sapienter.jbilling.server.util.db.CurrencyDTO)", "com.sapienter.jbilling.server.util.db.CurrencyExchangeDTO.setRate(java.math.BigDecimal)", "com.sapienter.jbilling.server.user.EntityBL.getEntity()", "com.sapienter.jbilling.server.item.CurrencyBL.set(java.lang.Integer)", "com.sapienter.jbilling.server.user.db.CompanyDTO.getCurrencies()", "java.util.List.iterator()", "com.sapienter.jbilling.server.util.db.AbstractDAS.delete(java.lang.Object)", "com.sapienter.jbilling.server.util.db.CurrencyExchangeDTO.setEntityId(java.lang.Integer)", "com.sapienter.jbilling.server.util.db.CurrencyDTO.getId()", "com.sapienter.jbilling.server.util.db.CurrencyDTO.getRate()", "java.util.Calendar.getTime()", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)"],
    "com.sapienter.jbilling.server.order.UsageBL.getBillingPeriods()": ["com.sapienter.jbilling.server.order.UsagePeriod.getBillingPeriods()"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentSageTask.doProcess(PaymentDTOEx, Transaction, PaymentAuthorizationDTO)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.payment.tasks.PaymentSageTask$SageAuthorization.isCommunicationProblem()", "com.sapienter.jbilling.server.payment.tasks.PaymentSageTask$NVPList.add(java.lang.String,java.lang.String)", "com.sapienter.jbilling.server.payment.tasks.PaymentSageTask.makeCall(com.sapienter.jbilling.server.payment.tasks.PaymentSageTask$NVPList,boolean)", "com.sapienter.jbilling.server.payment.tasks.PaymentSageTask.isAch(com.sapienter.jbilling.server.payment.PaymentDTOEx)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.payment.tasks.PaymentSageTask.fillData(com.sapienter.jbilling.server.payment.tasks.PaymentSageTask$NVPList,com.sapienter.jbilling.server.payment.PaymentDTOEx,com.sapienter.jbilling.server.payment.tasks.PaymentSageTask$Transaction)", "com.sapienter.jbilling.server.payment.tasks.PaymentSageTask$SageAuthorization.getJBResultId()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getTransactionId()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setPaymentResult(com.sapienter.jbilling.server.payment.db.PaymentResultDTO)", "com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase.storeProcessedAuthorization(com.sapienter.jbilling.server.payment.PaymentDTOEx,com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO)", "com.sapienter.jbilling.server.payment.tasks.PaymentSageTask$SageAuthorization.getDTO()", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)", "com.sapienter.jbilling.server.payment.tasks.PaymentSageTask.isApplicable(com.sapienter.jbilling.server.payment.PaymentDTOEx)"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentSageTask.isServerError(String)": ["java.lang.String.equals(java.lang.Object)"],
    "com.sapienter.jbilling.server.user.ContactBL.createContactField(Integer, String)": ["java.util.Set.add(java.lang.Object)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getFields()", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.user.contact.db.ContactFieldDTO.setContent(java.lang.String)", "com.sapienter.jbilling.server.user.contact.db.ContactFieldDTO.setType(com.sapienter.jbilling.server.user.contact.db.ContactFieldTypeDTO)", "com.sapienter.jbilling.server.user.contact.db.ContactFieldDTO.setContact(com.sapienter.jbilling.server.user.contact.db.ContactDTO)", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)"],
    "com.sapienter.jbilling.server.process.task.AbstractBackwardSimpleScheduledTask.execute(JobExecutionContext)": ["com.sapienter.jbilling.server.process.task.ScheduledTask._init(org.quartz.JobExecutionContext)"],
    "com.sapienter.jbilling.common.JNDILookup.getFactory(boolean)": ["org.apache.log4j.Category.info(java.lang.Object)"],
    "com.sapienter.jbilling.server.provisioning.task.MMSCProvisioningTask.sendCommand(String, String)": ["java.util.Map.get(java.lang.Object)", "com.sapienter.jbilling.server.provisioning.task.mmsc.ModifyCustomerRequest.setMmsCapability(java.lang.String)", "com.sapienter.jbilling.server.provisioning.task.mmsc.IMMSCHandlerFacade.addCustomer(com.sapienter.jbilling.server.provisioning.task.mmsc.AddCustomerRequest)", "com.sapienter.jbilling.server.provisioning.task.MMSCProvisioningTask.getParameters(java.lang.String,java.lang.String)", "com.sapienter.jbilling.server.provisioning.task.MMSCProvisioningTask.populateRequest(com.sapienter.jbilling.server.provisioning.task.mmsc.EfsBaseMSISDNRequest,java.util.Map)", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription.getName()", "java.util.Map.isEmpty()", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "java.lang.String.equals(java.lang.Object)", "com.sapienter.jbilling.server.provisioning.task.mmsc.IMMSCHandlerFacade.modifyCustomer(com.sapienter.jbilling.server.provisioning.task.mmsc.ModifyCustomerRequest)", "com.sapienter.jbilling.server.provisioning.task.mmsc.AddCustomerRequest.setSubscriptionType(java.lang.String)", "com.sapienter.jbilling.server.provisioning.task.mmsc.IMMSCHandlerFacade.deleteCustomer(com.sapienter.jbilling.server.provisioning.task.mmsc.DeleteCustomerRequest)"],
    "com.sapienter.jbilling.server.user.EntityBL.getRootUser(Integer)": ["java.sql.ResultSet.next()", "java.sql.Connection.close()", "javax.sql.RowSet.setInt(int,int)", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "java.sql.ResultSet.getInt(int)", "com.sapienter.jbilling.server.list.ResultList.execute()", "com.sapienter.jbilling.server.list.ResultList.prepareStatement(java.lang.String)"],
    "com.sapienter.jbilling.server.user.EntityBL.getLocale()": ["com.sapienter.jbilling.server.util.db.LanguageDTO.getCode()", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getCountryCode()", "com.sapienter.jbilling.server.user.ContactBL.getEntity()", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.user.db.CompanyDTO.getLanguageId()", "com.sapienter.jbilling.server.user.ContactBL.setEntity(java.lang.Integer)"],
    "com.sapienter.jbilling.server.util.Util.getEntityNotificationsBundle(Integer)": ["java.util.ResourceBundle.getBundle(java.lang.String,java.util.Locale)", "com.sapienter.jbilling.server.user.UserBL.getLocale()"],
    "com.sapienter.jbilling.server.user.partner.PartnerBL.processPayment(PaymentDTOEx, Integer, PartnerPayout, boolean)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.user.partner.PartnerBL.applyPayout(com.sapienter.jbilling.server.user.partner.db.PartnerPayout)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setAttempt(java.lang.Integer)", "java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.payment.PaymentBL.getEntity()", "com.sapienter.jbilling.server.user.partner.db.PartnerPayout.getStartingDate()", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "java.math.BigDecimal.compareTo(java.math.BigDecimal)", "com.sapienter.jbilling.server.user.partner.db.Partner.getId()", "com.sapienter.jbilling.server.user.partner.db.PartnerPayout.setPayment(com.sapienter.jbilling.server.payment.db.PaymentDTO)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getAmount()", "com.sapienter.jbilling.server.user.db.UserDTO.getLanguageIdField()", "com.sapienter.jbilling.server.user.partner.db.PartnerPayout.getId()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.setPayoutId(java.lang.Integer)", "com.sapienter.jbilling.server.user.partner.db.PartnerPayout.getEndingDate()", "com.sapienter.jbilling.server.user.partner.db.Partner.getUser()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getPaymentResult()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getId()", "com.sapienter.jbilling.server.payment.PaymentBL.processPayment(java.lang.Integer,com.sapienter.jbilling.server.payment.PaymentDTOEx)", "com.sapienter.jbilling.server.payment.PaymentBL.create(com.sapienter.jbilling.server.payment.PaymentDTOEx)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setIsRefund(int)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setBalance(java.math.BigDecimal)", "com.sapienter.jbilling.server.user.partner.db.Partner.setDuePayout(java.math.BigDecimal)", "com.sapienter.jbilling.server.user.partner.db.PartnerPayout.getPayment()", "com.sapienter.jbilling.server.user.partner.PartnerBL.notifyPayout(java.lang.Integer,java.lang.Integer,java.math.BigDecimal,java.util.Date,java.util.Date,boolean)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setPaymentResult(com.sapienter.jbilling.server.payment.db.PaymentResultDTO)"],
    "com.sapienter.jbilling.server.pluggableTask.PluggableTaskSessionBean.updateAll(Integer, PluggableTaskDTO[])": ["com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskBL.update(java.lang.Integer,com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDTO)", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskBL.getDTO()"],
    "com.sapienter.jbilling.server.notification.NotificationBL.getInvoiceEmailMessage(Integer, Integer, InvoiceDTO)": ["com.sapienter.jbilling.server.notification.MessageDTO.setTypeId(java.lang.Integer)", "org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getId()", "com.sapienter.jbilling.server.notification.NotificationBL.generatePaperInvoiceAsFile(com.sapienter.jbilling.server.invoice.db.InvoiceDTO)", "com.sapienter.jbilling.server.notification.MessageDTO.getAttachmentFile()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getCurrency()", "com.sapienter.jbilling.server.notification.NotificationBL.setContent(com.sapienter.jbilling.server.notification.MessageDTO,java.lang.Integer,java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.notification.MessageDTO.addParameter(java.lang.String,java.lang.Object)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getCustomerNotes()", "com.sapienter.jbilling.server.util.PreferenceBL.getInt()", "com.sapienter.jbilling.server.notification.MessageDTO.setAttachmentFile(java.lang.String)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getDueDate()", "com.sapienter.jbilling.server.util.Util.formatDate(java.util.Date,java.lang.Integer)", "com.sapienter.jbilling.server.util.Util.formatMoney(java.math.BigDecimal,java.lang.Integer,java.lang.Integer,boolean)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getTotal()", "com.sapienter.jbilling.server.util.PreferenceBL.set(java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.util.db.CurrencyDTO.getId()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getBaseUser()", "org.apache.log4j.Category.error(java.lang.Object)", "com.sapienter.jbilling.server.notification.NotificationBL.initializeMessage(java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.user.db.UserDTO.getUserId()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getPublicNumber()"],
    "com.sapienter.jbilling.server.process.BillingProcessSessionBean.endPayments(Integer)": ["com.sapienter.jbilling.server.process.db.BillingProcessDTO.getId()", "com.sapienter.jbilling.server.process.BillingProcessRunBL.updatePaymentsStatistic(java.lang.Integer)", "com.sapienter.jbilling.server.process.BillingProcessRunBL.updateTotals(java.lang.Integer)", "com.sapienter.jbilling.server.process.db.ProcessRunDTO.getId()", "com.sapienter.jbilling.server.process.BillingProcessRunBL.updatePaymentsFinished()", "com.sapienter.jbilling.server.process.db.ProcessRunDTO.getBillingProcess()", "com.sapienter.jbilling.server.process.BillingProcessRunBL.getEntity()"],
    "com.sapienter.jbilling.server.user.UserBL.delete(Integer)": ["com.sapienter.jbilling.server.user.db.UserDTO.getPermissions()", "com.sapienter.jbilling.server.user.db.UserDTO.setUserStatus(com.sapienter.jbilling.server.user.db.UserStatusDTO)", "java.util.Calendar.getInstance()", "java.util.Set.clear()", "com.sapienter.jbilling.server.user.db.UserDTO.setLastStatusChange(java.util.Date)", "com.sapienter.jbilling.server.user.db.UserDTO.getOrders()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.setDeleted(int)", "com.sapienter.jbilling.server.util.audit.EventLogger.audit(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.util.Date)", "com.sapienter.jbilling.server.user.db.UserDTO.setDeleted(int)", "com.sapienter.jbilling.server.order.db.OrderDTO.setDeleted(int)", "com.sapienter.jbilling.server.user.db.UserDTO.getRoles()", "com.sapienter.jbilling.server.user.db.UserDTO.getCreditCards()", "com.sapienter.jbilling.server.user.db.UserDTO.getId()", "java.util.Calendar.getTime()", "com.sapienter.jbilling.server.util.db.AbstractGenericStatusDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.user.db.UserDTO.getUserId()"],
    "com.sapienter.jbilling.server.mediation.Record.getKey()": ["java.lang.StringBuffer.toString()"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getPayment(Integer)": ["com.sapienter.jbilling.server.user.db.UserDTO.getLanguageIdField()", "com.sapienter.jbilling.server.payment.PaymentBL.getWS(com.sapienter.jbilling.server.payment.PaymentDTOEx)", "com.sapienter.jbilling.server.payment.PaymentBL.getDTOEx(java.lang.Integer)", "com.sapienter.jbilling.server.user.UserBL.getEntity()", "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerId()"],
    "com.sapienter.jbilling.server.util.db.CurrencyExchangeDAS.findExchange(Integer, Integer)": ["org.hibernate.Query.uniqueResult()", "getSession()", "org.hibernate.Query.setParameter(java.lang.String,java.lang.Integer)", "createQuery(java.lang.String)"],
    "com.sapienter.jbilling.server.rule.task.AbstractGeneratorTask.getAbsolutePath(String)": ["com.sapienter.jbilling.common.Util.getSysProp(java.lang.String)", "java.io.File.isAbsolute()"],
    "com.sapienter.jbilling.server.user.db.CustomerDTO.toString()": ["com.sapienter.jbilling.server.user.db.UserDTO.getUserName()", "com.sapienter.jbilling.server.user.db.UserDTO.getUserId()"],
    "com.sapienter.jbilling.server.util.WSExceptionAdvice.afterThrowing(Method, Object[], Object, Exception)": ["org.apache.log4j.Category.debug(java.lang.Object)", "java.lang.Throwable.printStackTrace(java.io.PrintWriter)", "java.io.PrintWriter.close()", "java.lang.reflect.Method.getName()", "java.lang.Throwable.getMessage()", "java.util.Arrays.toString(java.lang.Object[])", "com.sapienter.jbilling.common.SessionInternalError.getErrorMessages()", "java.io.StringWriter.toString()"],
    "com.sapienter.jbilling.server.process.task.BillableUserOrdersBillingProcessFilterTask.findUsersToProcess(Integer, Date)": ["com.sapienter.jbilling.server.process.db.BillingProcessDAS.findBillableUsersWithOrdersToProcess(int,java.util.Date)"],
    "com.sapienter.jbilling.server.user.balance.DynamicBalanceManagerTask.updateDynamicBalance(Integer, Integer, BigDecimal)": ["org.apache.log4j.Category.debug(java.lang.Object)", "java.math.BigDecimal.toString()", "com.sapienter.jbilling.server.user.db.CustomerDTO.setDynamicBalance(java.math.BigDecimal)", "com.sapienter.jbilling.server.system.event.EventManager.process(com.sapienter.jbilling.server.system.event.Event)", "com.sapienter.jbilling.server.user.db.UserDTO.getEntity()", "com.sapienter.jbilling.server.user.db.CustomerDTO.getId()", "java.math.BigDecimal.equals(java.lang.Object)", "com.sapienter.jbilling.server.user.db.CustomerDTO.getBalanceType()", "com.sapienter.jbilling.server.user.db.UserDTO.getCustomer()", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "java.math.BigDecimal.compareTo(java.math.BigDecimal)", "java.math.BigDecimal.subtract(java.math.BigDecimal)", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.user.db.CustomerDTO.getInvoiceChild()", "com.sapienter.jbilling.server.user.db.CustomerDTO.getBaseUser()", "com.sapienter.jbilling.server.user.db.CustomerDTO.getDynamicBalance()", "com.sapienter.jbilling.server.util.audit.EventLogger.auditBySystem(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.util.Date)", "com.sapienter.jbilling.server.user.db.UserDTO.getId()", "java.math.BigDecimal.add(java.math.BigDecimal)", "com.sapienter.jbilling.server.user.db.CustomerDTO.getParent()", "com.sapienter.jbilling.server.user.db.UserDTO.getUserId()"],
    "com.sapienter.jbilling.server.order.Usage.subractAmount(BigDecimal)": ["com.sapienter.jbilling.server.order.Usage.setAmount(java.math.BigDecimal)", "java.math.BigDecimal.subtract(java.math.BigDecimal)", "com.sapienter.jbilling.server.order.Usage.getAmount()"],
    "com.sapienter.jbilling.server.payment.PaymentDTOEx.addPaymentMap(PaymentInvoiceMapDTOEx)": ["org.apache.log4j.Category.debug(java.lang.Object)", "java.util.List.add(java.lang.Object)", "org.apache.log4j.Logger.getLogger(java.lang.Class)"],
    "com.sapienter.jbilling.server.process.db.BillingProcessDAS.findBillableUsersToProcess(int, Date)": ["getSession()", "org.hibernate.Query.setParameter(java.lang.String,int)", "createQuery(java.lang.String)", "org.hibernate.Query.scroll()", "org.hibernate.Query.setParameter(java.lang.String,java.util.Date)"],
    "com.sapienter.jbilling.server.payment.db.PaymentDAS.findIdsByUserLatestFirst(Integer, int)": ["org.hibernate.criterion.Order.desc(java.lang.String)", "org.hibernate.Criteria.list()", "createAlias(java.lang.String,java.lang.String)", "org.hibernate.criterion.Restrictions.eq(java.lang.String,java.lang.Integer)", "addOrder()", "setProjection()", "getSession()", "add()", "createCriteria(java.lang.Class)", "org.hibernate.criterion.Projections.id()", "setMaxResults(int)", "org.hibernate.criterion.Restrictions.eq(java.lang.String,int)"],
    "com.sapienter.jbilling.server.order.validator.DateRangeValidator.isValid(Object, ConstraintValidatorContext)": ["org.apache.log4j.Category.debug(java.lang.Object)", "org.apache.commons.lang.StringUtils.isBlank(java.lang.String)", "java.util.Date.before(java.util.Date)", "java.text.DateFormat.parse(java.lang.String)", "org.apache.commons.beanutils.BeanUtils.getProperty(java.lang.Object,java.lang.String)"],
    "com.sapienter.jbilling.server.payment.blacklist.CreditCardFilter.checkCreditCard(Integer, Collection)": ["com.sapienter.jbilling.server.util.Util.getEntityNotificationsBundle(java.lang.Integer)", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "java.util.List.isEmpty()", "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDAS.filterByCcNumbers(java.lang.Integer,java.util.Collection)", "java.util.Collection.isEmpty()", "com.sapienter.jbilling.server.user.db.UserDTO.getCompany()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getRawNumber()", "java.util.List.add(java.lang.Object)", "java.util.ResourceBundle.getString(java.lang.String)", "java.util.Collection.size()", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)"],
    "com.sapienter.jbilling.server.mediation.db.MediationRecordLineDAS.getByOrder(Integer)": ["org.hibernate.Query.list()", "getSession()", "org.hibernate.Query.setParameter(java.lang.String,java.lang.Integer)", "createQuery(java.lang.String)"],
    "com.sapienter.jbilling.server.mediation.task.AbstractReader.validate(List)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.mediation.task.AbstractReader.getBatchSize()", "java.lang.Throwable.getMessage()", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription.getName()", "java.util.List.add(java.lang.Object)", "com.sapienter.jbilling.server.pluggableTask.PluggableTask.getParameter(java.lang.String,java.lang.Integer)"],
    "com.sapienter.jbilling.server.order.OrderBL.audit(Integer, Integer)": ["com.sapienter.jbilling.server.order.db.OrderDTO.getId()", "com.sapienter.jbilling.server.util.audit.EventLogger.audit(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.util.Date)", "com.sapienter.jbilling.server.user.db.UserDTO.getId()", "com.sapienter.jbilling.server.order.db.OrderDTO.getBaseUserByUserId()"],
    "com.sapienter.jbilling.server.payment.PaymentBL.create(PaymentDTOEx)": ["com.sapienter.jbilling.server.user.db.AchDTO.getPayments()", "com.sapienter.jbilling.server.payment.db.PaymentInfoChequeDTO.getDate()", "com.sapienter.jbilling.server.payment.PaymentBL.getEntity()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getPaymentNotes()", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getAmount()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getAttempt()", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getUserId()", "com.sapienter.jbilling.server.payment.db.PaymentInfoChequeDTO.setBank(java.lang.String)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setCreditCard(com.sapienter.jbilling.server.user.db.CreditCardDTO)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setAch(com.sapienter.jbilling.server.user.db.AchDTO)", "com.sapienter.jbilling.server.util.audit.EventLogger.auditBySystem(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.util.Date)", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getCreditCard()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setPayment(com.sapienter.jbilling.server.payment.db.PaymentDTO)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setPaymentNotes(java.lang.String)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setId(int)", "com.sapienter.jbilling.server.payment.db.PaymentDAS.create(java.math.BigDecimal,com.sapienter.jbilling.server.payment.db.PaymentMethodDTO,java.lang.Integer,java.lang.Integer,com.sapienter.jbilling.server.payment.db.PaymentResultDTO,com.sapienter.jbilling.server.util.db.CurrencyDTO)", "com.sapienter.jbilling.server.user.CreditCardBL.create(com.sapienter.jbilling.server.user.db.CreditCardDTO)", "com.sapienter.jbilling.server.user.AchBL.create(com.sapienter.jbilling.server.user.db.AchDTO)", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getPayment()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getId()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setIsPreauth(java.lang.Integer)", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getCheque()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setPaymentInfoCheque(com.sapienter.jbilling.server.payment.db.PaymentInfoChequeDTO)", "com.sapienter.jbilling.server.payment.db.PaymentInfoChequeDTO.setDate(java.util.Date)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setIsRefund(int)", "com.sapienter.jbilling.server.payment.db.PaymentInfoChequeDTO.getBank()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getPaymentDate()", "com.sapienter.jbilling.server.payment.db.PaymentInfoChequeDTO.getNumber()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getIsPreauth()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getPaymentMethod()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getBalance()", "java.lang.Integer.intValue()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getAch()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getPayments()", "com.sapienter.jbilling.server.user.db.UserDTO.getCompany()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setPaymentPeriod(java.lang.Integer)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getIsRefund()", "java.util.Set.add(java.lang.Object)", "com.sapienter.jbilling.server.user.AchBL.getEntity()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getPaymentResult()", "com.sapienter.jbilling.server.payment.db.PaymentInfoChequeDAS.create()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setPaymentDate(java.util.Date)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getPaymentPeriod()", "com.sapienter.jbilling.server.payment.db.PaymentInfoChequeDTO.setNumber(java.lang.String)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setCurrency(com.sapienter.jbilling.server.util.db.CurrencyDTO)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getCurrency()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setBalance(java.math.BigDecimal)", "com.sapienter.jbilling.server.user.CreditCardBL.getEntity()", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getUsersByStatus(Integer, boolean)": ["com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerCompanyId()", "org.apache.log4j.Category.debug(java.lang.Object)", "java.sql.ResultSet.next()", "com.sapienter.jbilling.server.user.UserBL.getByStatus(java.lang.Integer,java.lang.Integer,boolean)", "javax.sql.rowset.CachedRowSet.size()", "java.sql.ResultSet.getInt(int)", "java.sql.ResultSet.close()"],
    "com.sapienter.jbilling.server.order.db.OrderLineDTO.setProvisioningStatusId(Integer)": ["com.sapienter.jbilling.server.order.db.OrderLineDTO.setProvisioningStatus(com.sapienter.jbilling.server.provisioning.db.ProvisioningStatusDTO)", "com.sapienter.jbilling.server.util.db.AbstractGenericStatusDAS.find(java.io.Serializable)"],
    "com.sapienter.jbilling.server.notification.NotificationBL.printable(String, String)": ["java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.toString()"],
    "com.sapienter.jbilling.server.process.BillingProcessBL.getToRetry(Integer)": ["java.sql.ResultSet.next()", "java.sql.Connection.close()", "javax.sql.RowSet.setInt(int,int)", "java.sql.ResultSet.getInt(int)", "java.util.List.size()", "com.sapienter.jbilling.server.list.ResultList.execute()", "java.util.List.add(java.lang.Object)", "com.sapienter.jbilling.server.list.ResultList.prepareStatement(java.lang.String)", "java.lang.Integer.intValue()", "java.util.List.toArray(java.lang.Object[])"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.triggerBillingAsync(Date)": ["java.lang.Thread.start()", "com.sapienter.jbilling.server.process.IBillingProcessSessionBean.trigger(java.util.Date)", "java.lang.Object.java.lang.Object()", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)"],
    "com.sapienter.jbilling.server.payment.event.ProcessPaymentProcessor.getDestination()": ["com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)"],
    "com.sapienter.jbilling.server.user.UserBL.create(UserDTOEx)": ["com.sapienter.jbilling.server.user.UserBL.create(java.lang.Integer,java.lang.String,java.lang.String,java.lang.Integer,java.util.List,java.lang.Integer,java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.user.db.CustomerDTO.setNotes(java.lang.String)", "com.sapienter.jbilling.server.user.db.UserDTO.getEntity()", "com.sapienter.jbilling.server.user.db.UserDTO.getDeleted()", "com.sapienter.jbilling.server.user.db.CustomerDTO.setAutoPaymentType(java.lang.Integer)", "com.sapienter.jbilling.common.JBCrypto.getPasswordCrypto(java.lang.Integer)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.user.UserDTOEx.getSubscriptionStatusId()", "com.sapienter.jbilling.server.user.db.CustomerDTO.setBalanceType(int)", "com.sapienter.jbilling.server.user.UserDTOEx.getMainRoleId()", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.user.db.UserDTO.setPassword(java.lang.String)", "com.sapienter.jbilling.server.user.db.CustomerDTO.getIsParent()", "com.sapienter.jbilling.server.user.db.CustomerDTO.getNotes()", "com.sapienter.jbilling.server.user.db.CustomerDTO.getReferralFeePaid()", "com.sapienter.jbilling.server.user.db.CustomerDTO.setParent(com.sapienter.jbilling.server.user.db.CustomerDTO)", "com.sapienter.jbilling.server.user.db.CustomerDTO.setDynamicBalance(java.math.BigDecimal)", "org.apache.log4j.Category.warn(java.lang.Object)", "com.sapienter.jbilling.server.user.partner.db.Partner.getUser()", "com.sapienter.jbilling.server.user.db.CustomerDTO.getBalanceType()", "com.sapienter.jbilling.server.user.db.UserDTO.getPartner()", "com.sapienter.jbilling.server.user.db.UserDTO.setPartner(com.sapienter.jbilling.server.user.partner.db.Partner)", "com.sapienter.jbilling.server.user.db.CustomerDTO.getPartner()", "com.sapienter.jbilling.server.user.UserDTOEx.getEntityId()", "com.sapienter.jbilling.server.user.partner.PartnerBL.getEntity()", "com.sapienter.jbilling.server.user.db.UserDTO.getPassword()", "com.sapienter.jbilling.server.user.db.CustomerDTO.getDynamicBalance()", "com.sapienter.jbilling.server.user.UserDTOEx.getLanguageId()", "org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.user.db.CustomerDTO.getAutoPaymentType()", "com.sapienter.jbilling.server.user.db.UserDTO.getUserName()", "com.sapienter.jbilling.server.user.db.CustomerDTO.setIsParent(java.lang.Integer)", "com.sapienter.jbilling.server.user.partner.PartnerBL.create(com.sapienter.jbilling.server.user.partner.db.Partner)", "java.util.List.add(java.lang.Object)", "com.sapienter.jbilling.server.user.db.UserDTO.getCustomer()", "com.sapienter.jbilling.server.user.partner.db.Partner.getId()", "com.sapienter.jbilling.server.user.permisson.db.RoleDTO.getId()", "com.sapienter.jbilling.server.user.db.CustomerDTO.setReferralFeePaid(java.lang.Integer)", "com.sapienter.jbilling.server.user.db.CustomerDTO.setCreditLimit(java.math.BigDecimal)", "com.sapienter.jbilling.server.user.db.UserDTO.setCustomer(com.sapienter.jbilling.server.user.db.CustomerDTO)", "com.sapienter.jbilling.server.user.db.CustomerDTO.getId()", "com.sapienter.jbilling.server.user.db.CustomerDTO.setAutoRecharge(java.math.BigDecimal)", "java.util.Set.size()", "com.sapienter.jbilling.server.user.db.CustomerDTO.setPartner(com.sapienter.jbilling.server.user.partner.db.Partner)", "com.sapienter.jbilling.server.user.partner.db.Partner.setBaseUser(com.sapienter.jbilling.server.user.db.UserDTO)", "com.sapienter.jbilling.common.JBCrypto.encrypt(java.lang.String)", "com.sapienter.jbilling.server.user.db.CustomerDTO.getCreditLimit()", "com.sapienter.jbilling.server.user.db.UserDTO.getCurrencyId()", "com.sapienter.jbilling.server.user.UserDTOEx.getStatusId()", "com.sapienter.jbilling.server.user.db.CustomerDTO.setInvoiceChild(java.lang.Integer)", "com.sapienter.jbilling.server.user.db.CustomerDTO.getInvoiceChild()", "com.sapienter.jbilling.server.user.db.UserDTO.getRoles()", "com.sapienter.jbilling.server.user.db.CustomerDAS.create()", "com.sapienter.jbilling.server.user.db.CustomerDTO.setBaseUser(com.sapienter.jbilling.server.user.db.UserDTO)", "com.sapienter.jbilling.server.user.db.CustomerDTO.getParent()", "com.sapienter.jbilling.server.user.db.CustomerDTO.getAutoRecharge()"],
    "com.sapienter.jbilling.server.order.OrderHelper.purge(OrderDTO, Collection)": ["java.util.Iterator.next()", "com.sapienter.jbilling.server.order.db.OrderDTO.getLines()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getItemId()", "java.util.List.iterator()", "java.util.Iterator.hasNext()", "java.util.Iterator.remove()", "java.util.Collection.contains(java.lang.Object)"],
    "com.sapienter.jbilling.server.user.UserSessionBean.setCustomerNotes(Integer, String)": ["com.sapienter.jbilling.server.user.db.CustomerDTO.setNotes(java.lang.String)", "com.sapienter.jbilling.server.user.db.UserDTO.getCustomer()", "com.sapienter.jbilling.server.user.UserBL.getEntity()"],
    "com.sapienter.jbilling.server.user.db.UserDAS.findRoot(String)": ["createAlias(java.lang.String,java.lang.String)", "org.hibernate.criterion.Restrictions.eq(java.lang.String,java.lang.Integer)", "getSession()", "add()", "org.hibernate.criterion.Restrictions.eq(java.lang.String,java.lang.String)", "createCriteria(java.lang.Class)", "org.hibernate.Criteria.uniqueResult()", "org.apache.log4j.Category.error(java.lang.Object)", "org.hibernate.criterion.Restrictions.eq(java.lang.String,int)", "java.lang.String.length()", "org.hibernate.Criteria.setCacheable(boolean)"],
    "com.sapienter.jbilling.server.user.tasks.PaymentInfoNoValidateTask.getPaymentInfo(Integer)": ["com.sapienter.jbilling.server.user.db.CustomerDTO.getAutoPaymentType()", "org.apache.log4j.Category.debug(java.lang.Object)", "java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.user.db.UserDTO.getCustomer()", "java.util.Iterator.hasNext()", "com.sapienter.jbilling.server.user.UserBL.getEntity()", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.user.db.AchDTO.getId()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.setAch(com.sapienter.jbilling.server.user.db.AchDTO)", "com.sapienter.jbilling.server.payment.PaymentDTOEx.setCreditCard(com.sapienter.jbilling.server.user.db.CreditCardDTO)", "com.sapienter.jbilling.server.user.db.AchDTO.getBankName()", "java.util.Set.toArray()", "com.sapienter.jbilling.server.user.db.UserDTO.getAchs()", "com.sapienter.jbilling.server.user.db.AchDTO.getAccountName()", "com.sapienter.jbilling.server.user.db.AchDTO.getAccountType()", "com.sapienter.jbilling.server.user.db.AchDTO.getGatewayKey()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getId()", "java.util.Iterator.next()", "com.sapienter.jbilling.server.user.CreditCardBL.getDTO()", "com.sapienter.jbilling.server.user.AchBL.getEntity()", "com.sapienter.jbilling.server.user.db.AchDTO.getAbaRouting()", "com.sapienter.jbilling.server.user.CreditCardBL.set(java.lang.Integer)", "java.util.Set.size()", "java.util.Set.isEmpty()", "com.sapienter.jbilling.server.user.db.AchDTO.getBankAccount()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setPaymentMethod(com.sapienter.jbilling.server.payment.db.PaymentMethodDTO)", "com.sapienter.jbilling.server.user.db.UserDTO.getCreditCards()", "com.sapienter.jbilling.server.user.CreditCardBL.getPaymentMethod()", "java.util.Set.iterator()"],
    "com.sapienter.jbilling.server.mediation.MediationSessionBean.saveEventRecordLines(List, MediationRecordDTO, Date, String)": ["com.sapienter.jbilling.server.order.db.OrderLineDTO.getQuantity()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getAmount()", "com.sapienter.jbilling.server.mediation.db.MediationRecordLineDTO.setQuantity(java.math.BigDecimal)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getId()", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.mediation.db.MediationRecordLineDTO.setEventDate(java.util.Date)", "com.sapienter.jbilling.server.mediation.db.MediationRecordLineDTO.setRecord(com.sapienter.jbilling.server.mediation.db.MediationRecordDTO)", "com.sapienter.jbilling.server.mediation.db.MediationRecordLineDTO.setDescription(java.lang.String)", "com.sapienter.jbilling.server.mediation.db.MediationRecordLineDTO.setOrderLine(com.sapienter.jbilling.server.order.db.OrderLineDTO)", "com.sapienter.jbilling.server.mediation.db.MediationRecordLineDTO.setAmount(java.math.BigDecimal)", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)"],
    "com.sapienter.jbilling.server.order.OrderWS.toString()": ["java.lang.StringBuilder.append(java.lang.Object)", "java.util.Arrays.toString(java.lang.Object[])", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.toString()", "java.lang.StringBuilder.append(char)", "com.sapienter.jbilling.server.order.OrderWS.getOrderLines()"],
    "com.sapienter.jbilling.server.user.ContactBL.updateForUser(ContactDTOEx, Integer, Integer)": ["com.sapienter.jbilling.server.user.ContactBL.update(com.sapienter.jbilling.server.user.ContactDTOEx)", "com.sapienter.jbilling.server.user.ContactBL.setEntityFromUser(java.lang.Integer)", "com.sapienter.jbilling.server.user.contact.db.ContactDAS.findContact(java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.user.ContactBL.createForUser(com.sapienter.jbilling.server.user.ContactDTOEx,java.lang.Integer,java.lang.Integer)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.createContactTypeWS(ContactTypeWS)": ["com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerCompanyId()", "com.sapienter.jbilling.server.user.contact.db.ContactTypeDTO.getId()", "com.sapienter.jbilling.server.user.contact.db.ContactTypeDTO.setEntity(com.sapienter.jbilling.server.user.db.CompanyDTO)", "com.sapienter.jbilling.server.util.db.AbstractDAS.clear()", "com.sapienter.jbilling.server.user.ContactTypeWS.getDescriptions()", "com.sapienter.jbilling.server.util.InternationalDescriptionWS.getContent()", "com.sapienter.jbilling.server.user.ContactTypeWS.getPrimary()", "com.sapienter.jbilling.server.util.db.AbstractDescription.setDescription(java.lang.String,java.lang.Integer)", "com.sapienter.jbilling.server.util.db.AbstractDAS.flush()", "com.sapienter.jbilling.server.user.contact.db.ContactTypeDTO.setIsPrimary(java.lang.Integer)", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)", "com.sapienter.jbilling.server.util.InternationalDescriptionWS.getLanguageId()"],
    "com.sapienter.jbilling.server.item.ItemSessionBean.getCurrencies(Integer, Integer)": ["com.sapienter.jbilling.server.item.CurrencyBL.getCurrencies(java.lang.Integer,java.lang.Integer)"],
    "com.sapienter.jbilling.server.provisioning.TestExternalProvisioningMDB.testMMSCProvisioningTask(MapMessage)": ["org.apache.log4j.Category.debug(java.lang.Object)", "javax.jms.MapMessage.getIntProperty(java.lang.String)", "com.sapienter.jbilling.server.provisioning.TestExternalProvisioningMDB.pause(long)", "java.lang.String.equals(java.lang.Object)", "com.sapienter.jbilling.server.provisioning.TestExternalProvisioningMDB.updateProvisioningStatus(int,int)", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)", "org.apache.log4j.Category.error(java.lang.Object)", "javax.jms.MapMessage.getStringProperty(java.lang.String)", "java.lang.String.length()"],
    "com.sapienter.jbilling.server.process.db.ProcessRunUserDAS.create(Integer, Integer, Integer, Date)": ["com.sapienter.jbilling.server.process.db.ProcessRunUserDTO.setCreated(java.util.Date)", "com.sapienter.jbilling.server.process.db.ProcessRunUserDTO.setStatus(java.lang.Integer)", "com.sapienter.jbilling.server.process.db.ProcessRunUserDTO.setProcessRun(com.sapienter.jbilling.server.process.db.ProcessRunDTO)", "com.sapienter.jbilling.server.process.db.ProcessRunUserDTO.setUser(com.sapienter.jbilling.server.user.db.UserDTO)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)"],
    "com.sapienter.jbilling.server.order.OrderBL.getRecurringOrderLine(Integer, Integer)": ["com.sapienter.jbilling.server.order.db.OrderLineDAS.findRecurringByUserItem(java.lang.Integer,java.lang.Integer)"],
    "com.sapienter.jbilling.server.util.db.AbstractDescription.getDescriptionDTO(Integer)": ["com.sapienter.jbilling.server.util.db.AbstractDescription.getDescriptionDTO(java.lang.Integer,java.lang.String)"],
    "com.sapienter.jbilling.server.item.ItemTypeBL.getAllItemTypes()": ["java.util.List.size()", "com.sapienter.jbilling.server.util.db.AbstractDAS.findAll()"],
    "com.sapienter.jbilling.server.item.ItemPriceDTOEx.itemPriceDtoToString()": ["java.lang.StringBuffer.append(char)", "com.sapienter.jbilling.server.item.ItemPriceDTOEx.getPrice()", "java.lang.StringBuffer.toString()", "com.sapienter.jbilling.server.item.ItemPriceDTOEx.getCurrencyId()", "com.sapienter.jbilling.server.item.ItemPriceDTOEx.getId()", "java.lang.StringBuffer.append(java.lang.String)"],
    "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDTO.populateParamValues()": ["com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskParameterDTO.populateValue()"],
    "com.sapienter.jbilling.server.payment.tasks.SaveACHExternallyTask.deleteAch(AchDTO, String)": ["org.apache.log4j.Category.debug(java.lang.Object)"],
    "com.sapienter.jbilling.client.authentication.util.SecuritySession.setAttributes(HttpServletRequest, HttpServletResponse, CompanyUserDetails)": ["javax.servlet.http.HttpSession.setAttribute(java.lang.String,java.lang.Integer)", "org.apache.log4j.Category.debug(java.lang.Object)", "org.springframework.web.servlet.LocaleResolver.setLocale(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Locale)", "com.sapienter.jbilling.client.authentication.CompanyUserDetails.getUserId()", "javax.servlet.http.HttpServletRequest.getSession()", "org.apache.log4j.Category.warn(java.lang.Object)", "com.sapienter.jbilling.client.authentication.CompanyUserDetails.getMainRoleId()", "com.sapienter.jbilling.client.authentication.CompanyUserDetails.getLanguageId()", "com.sapienter.jbilling.client.authentication.CompanyUserDetails.getLocale()", "com.sapienter.jbilling.client.authentication.CompanyUserDetails.getCompanyId()", "javax.servlet.http.HttpSession.setAttribute(java.lang.String,java.util.Locale)", "com.sapienter.jbilling.client.authentication.CompanyUserDetails.getCurrencyId()"],
    "com.sapienter.jbilling.server.order.OrderBL.init()": ["com.sapienter.jbilling.server.util.audit.EventLogger.getInstance()"],
    "com.sapienter.jbilling.server.order.OrderWS.getOwningUserId()": ["com.sapienter.jbilling.server.order.OrderWS.getUserId()"],
    "com.sapienter.jbilling.server.process.task.AbstractSimpleScheduledTask.getParameter(String, Date)": ["java.util.Map.get(java.lang.Object)", "org.apache.commons.lang.StringUtils.isNotBlank(java.lang.String)", "java.text.DateFormat.parse(java.lang.String)"],
    "com.sapienter.jbilling.server.process.task.AbstractSimpleScheduledTask.getParameter(String, Integer)": ["java.util.Map.get(java.lang.Object)", "org.apache.commons.lang.StringUtils.isNotBlank(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)"],
    "com.sapienter.jbilling.server.user.ContactBL.setEntity(Integer)": ["com.sapienter.jbilling.server.user.contact.db.ContactDAS.findEntityContact(java.lang.Integer)"],
    "com.sapienter.jbilling.server.process.BillingProcessRunBL.updatePaymentsFinished()": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.process.db.ProcessRunDTO.getId()", "java.util.Calendar.getInstance()", "com.sapienter.jbilling.server.util.db.AbstractDAS.findForUpdate(java.io.Serializable)", "com.sapienter.jbilling.server.process.db.ProcessRunDTO.setPaymentFinished(java.util.Date)", "com.sapienter.jbilling.server.process.db.ProcessRunDTO.getVersionNum()", "java.util.Calendar.getTime()", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)"],
    "com.sapienter.jbilling.server.invoice.NewInvoiceDTO.setDate(Date, boolean)": ["java.util.Date.before(java.util.Date)"],
    "com.sapienter.jbilling.server.process.BillingProcessRunTotalDTOEx.toString()": ["java.lang.StringBuffer.toString()", "com.sapienter.jbilling.server.process.db.ProcessRunTotalDTO.toString()", "java.lang.StringBuffer.append(java.lang.String)", "java.lang.StringBuffer.append(java.lang.Object)"],
    "com.sapienter.jbilling.tools.UploadInvoices.main(String[])": ["java.io.PrintStream.println(java.lang.String)", "java.lang.String.split(java.lang.String)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.setInProcessPayment(int)", "java.io.BufferedReader.close()", "com.sapienter.jbilling.common.Util.parseDate(java.lang.String)", "com.sapienter.jbilling.tools.UploadInvoices.readInvoiceLines(com.sapienter.jbilling.server.invoice.NewInvoiceDTO,java.lang.String)", "com.sapienter.jbilling.tools.UploadInvoices.readLine(java.io.BufferedReader)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "java.io.BufferedReader.readLine()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.setToProcess(java.lang.Integer)", "java.lang.String.trim()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.setPublicNumber(java.lang.String)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.setCustomerNotes(java.lang.String)", "java.util.Properties.getProperty(java.lang.String)", "com.sapienter.jbilling.server.invoice.IInvoiceSessionBean.create(java.lang.Integer,java.lang.Integer,com.sapienter.jbilling.server.invoice.NewInvoiceDTO)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.setBalance(java.math.BigDecimal)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.setTotal(java.math.BigDecimal)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.setIsReview(java.lang.Integer)", "com.sapienter.jbilling.server.invoice.NewInvoiceDTO.setBillingDate(java.util.Date)", "java.lang.Integer.valueOf(java.lang.String)", "java.lang.Throwable.getMessage()", "java.util.Properties.load(java.io.InputStream)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.setDueDate(java.util.Date)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.setCurrency(com.sapienter.jbilling.server.util.db.CurrencyDTO)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.setCarriedBalance(java.math.BigDecimal)", "java.lang.Throwable.printStackTrace()"],
    "com.sapienter.jbilling.server.invoice.db.InvoiceDAS.findIdsByUserAndItemTypeLatestFirst(Integer, Integer, int)": ["list()", "getSession()", "setMaxResults(int)", "createQuery(java.lang.String)", "setParameter(java.lang.String,java.lang.Integer)"],
    "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getToProcess()": ["java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getInvoiceStatus()", "com.sapienter.jbilling.server.util.db.AbstractGenericStatus.getId()"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.createInvoiceFromOrder(Integer, Integer)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.order.db.OrderDTO.getId()", "com.sapienter.jbilling.server.order.db.OrderDTO.getStatusId()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getId()", "java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.process.IBillingProcessSessionBean.generateInvoice(java.lang.Integer,java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.doCreateInvoice(java.lang.Integer)"],
    "com.sapienter.jbilling.server.user.db.UserDAS.findByUserName(String, Integer)": ["createAlias(java.lang.String,java.lang.String)", "org.hibernate.criterion.Restrictions.eq(java.lang.String,java.lang.Integer)", "getSession()", "add()", "org.hibernate.criterion.Restrictions.eq(java.lang.String,java.lang.String)", "createCriteria(java.lang.Class)", "org.hibernate.Criteria.uniqueResult()", "org.hibernate.criterion.Restrictions.eq(java.lang.String,int)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.updatePreference(PreferenceWS)": ["com.sapienter.jbilling.server.util.PreferenceBL.createUpdateForEntity(java.lang.Integer,java.lang.Integer,java.lang.String)", "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerCompanyId()", "com.sapienter.jbilling.server.util.PreferenceTypeWS.getId()", "com.sapienter.jbilling.server.util.PreferenceWS.getPreferenceType()", "com.sapienter.jbilling.server.util.PreferenceWS.getValue()"],
    "com.sapienter.jbilling.server.util.api.validation.APIValidator.getObjectName(Object)": ["java.lang.Object.getClass()", "java.lang.Class.getSimpleName()"],
    "com.sapienter.jbilling.server.util.db.AbstractDescription.getDescription(Integer, String)": ["com.sapienter.jbilling.server.util.db.InternationalDescriptionDTO.getContent()", "com.sapienter.jbilling.server.util.db.AbstractDescription.getDescriptionDTO(java.lang.Integer,java.lang.String)"],
    "com.sapienter.jbilling.server.util.Util.formatMoney(Float, Integer, Integer, boolean)": ["java.lang.String.substring(int)", "java.text.NumberFormat.format(double)", "java.lang.String.substring(int,int)", "java.util.ResourceBundle.getBundle(java.lang.String,java.util.Locale)", "java.lang.Float.doubleValue()", "com.sapienter.jbilling.server.util.db.CurrencyDTO.getSymbol()", "java.lang.Character.toString()", "java.util.ResourceBundle.getString(java.lang.String)", "com.sapienter.jbilling.server.item.CurrencyBL.getEntity()", "java.lang.Integer.intValue()", "com.sapienter.jbilling.server.util.db.CurrencyDTO.getCode()", "java.lang.String.charAt(int)", "java.text.NumberFormat.getNumberInstance(java.util.Locale)", "java.lang.Integer.valueOf(java.lang.String)", "java.text.DecimalFormat.applyPattern(java.lang.String)", "com.sapienter.jbilling.server.user.UserBL.getLocale()", "java.lang.String.length()"],
    "com.sapienter.jbilling.server.order.db.OrderDAS.findForUpdate(Integer)": ["com.sapienter.jbilling.server.order.db.OrderDTO.getLines()", "com.sapienter.jbilling.server.util.db.AbstractDAS.findForUpdate(java.io.Serializable)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getId()"],
    "com.sapienter.jbilling.server.item.ItemPriceDTOEx.hashCode()": ["java.lang.String.hashCode()", "java.lang.Integer.hashCode()"],
    "com.sapienter.jbilling.server.user.ContactBL.create(ContactDTOEx, String, Integer, Integer)": ["com.sapienter.jbilling.server.user.contact.db.ContactMapDTO.setForeignId(int)", "org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.user.contact.db.ContactMapDTO.setJbillingTable(com.sapienter.jbilling.server.util.db.JbillingTable)", "com.sapienter.jbilling.server.util.db.JbillingTableDAS.findByName(java.lang.String)", "com.sapienter.jbilling.server.system.event.EventManager.process(com.sapienter.jbilling.server.system.event.Event)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.setContactMap(com.sapienter.jbilling.server.user.contact.db.ContactMapDTO)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getUserId()", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.user.ContactBL.updateCreateFields(java.util.Hashtable,boolean)", "com.sapienter.jbilling.server.user.contact.db.ContactMapDTO.setContactType(com.sapienter.jbilling.server.user.contact.db.ContactTypeDTO)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.setDeleted(int)", "com.sapienter.jbilling.server.user.contact.db.ContactMapDTO.setContact(com.sapienter.jbilling.server.user.contact.db.ContactDTO)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getId()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.setId(java.lang.Integer)", "com.sapienter.jbilling.server.user.ContactDTOEx.getFieldsTable()", "java.lang.String.equals(java.lang.Object)", "com.sapienter.jbilling.server.util.audit.EventLogger.auditBySystem(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.util.Date)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.setCreateDate(java.util.Date)", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.setVersionNum(int)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.findInvoice(Integer)": ["com.sapienter.jbilling.server.invoice.InvoiceBL.getEntity()"],
    "com.sapienter.jbilling.server.order.OrderBL.getInvoicingDate()": ["com.sapienter.jbilling.server.order.db.OrderDTO.getCreateDate()", "com.sapienter.jbilling.server.order.db.OrderDTO.getActiveSince()", "com.sapienter.jbilling.server.order.db.OrderDTO.getNextBillableDay()"],
    "com.sapienter.jbilling.server.user.tasks.AutoRechargeTask.isEventProcessable(BigDecimal, UserDTO, CustomerDTO)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.user.tasks.AutoRechargeTask.getAutoRechargeThreshold(java.lang.Integer)", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.user.db.UserDTO.getEntity()", "com.sapienter.jbilling.server.user.db.CustomerDTO.getBalanceType()", "com.sapienter.jbilling.server.user.db.UserDTO.getId()", "java.math.BigDecimal.compareTo(java.math.BigDecimal)", "com.sapienter.jbilling.server.user.db.CustomerDTO.getAutoRecharge()"],
    "com.sapienter.jbilling.server.user.partner.db.PartnerPayout.touch()": ["com.sapienter.jbilling.server.payment.db.PaymentDTO.getCurrency()", "com.sapienter.jbilling.server.user.partner.db.PartnerPayout.getPayment()", "com.sapienter.jbilling.server.user.partner.db.PartnerPayout.getStartingDate()"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.doPayInvoice(InvoiceDTO, CreditCardDTO)": ["com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getId()", "org.apache.log4j.Category.warn(java.lang.Object)", "com.sapienter.jbilling.server.payment.PaymentDTOEx.setUserId(java.lang.Integer)", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setAmount(java.math.BigDecimal)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getCurrency()", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "java.math.BigDecimal.compareTo(java.math.BigDecimal)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setPaymentDate(java.util.Date)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setCurrency(com.sapienter.jbilling.server.util.db.CurrencyDTO)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setPaymentMethod(com.sapienter.jbilling.server.payment.db.PaymentMethodDTO)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setIsRefund(int)", "com.sapienter.jbilling.server.payment.PaymentDTOEx.setCreditCard(com.sapienter.jbilling.server.user.db.CreditCardDTO)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getNumber()", "com.sapienter.jbilling.common.Util.getPaymentMethod(java.lang.String)", "com.sapienter.jbilling.server.payment.IPaymentSessionBean.processAndUpdateInvoice(com.sapienter.jbilling.server.payment.PaymentDTOEx,com.sapienter.jbilling.server.invoice.db.InvoiceDTO)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getBalance()", "com.sapienter.jbilling.server.util.db.CurrencyDTO.getId()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getBaseUser()", "com.sapienter.jbilling.server.user.db.UserDTO.getUserId()"],
    "com.sapienter.jbilling.server.util.audit.EventLogger.auditBySystem(Integer, Integer, String, Integer, Integer, Integer, Integer, String, Date)": ["com.sapienter.jbilling.server.util.db.JbillingTableDAS.findByName(java.lang.String)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)"],
    "com.sapienter.jbilling.server.user.UserSessionBean.getUserDTOEx(Integer)": ["com.sapienter.jbilling.server.util.DTOFactory.getUserDTOEx(java.lang.Integer)", "com.sapienter.jbilling.server.user.db.UserDTO.touch()"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentSageTask.makeCall(NVPList, boolean)": ["org.apache.log4j.Category.debug(java.lang.Object)", "org.apache.commons.httpclient.HttpClient.setConnectionTimeout(int)", "com.sapienter.jbilling.server.payment.tasks.PaymentSageTask$NVPList.toArray()", "org.apache.commons.httpclient.methods.PostMethod.getResponseBodyAsString()", "org.apache.commons.httpclient.methods.PostMethod.setRequestBody(org.apache.commons.httpclient.NameValuePair[])", "org.apache.commons.httpclient.methods.PostMethod.releaseConnection()", "com.sapienter.jbilling.server.pluggableTask.PaymentTaskWithTimeout.getTimeoutSeconds()", "org.apache.commons.httpclient.HttpClient.executeMethod(org.apache.commons.httpclient.methods.PostMethod)", "com.sapienter.jbilling.server.payment.tasks.PaymentSageTask.getUrl(boolean)", "org.apache.commons.httpclient.methods.PostMethod.recycle()"],
    "com.sapienter.jbilling.server.order.db.OrderDAS.findUserItemsByCategory(Integer, Integer)": ["list()", "getSession()", "java.util.List.size()", "createQuery(java.lang.String)", "setInteger(java.lang.String,java.lang.Integer)", "java.util.List.toArray(java.lang.Object[])"],
    "com.sapienter.jbilling.server.user.ValidatePurchaseWS.setQuantity(Double)": ["com.sapienter.jbilling.server.user.ValidatePurchaseWS.setQuantity(java.math.BigDecimal)"],
    "com.sapienter.jbilling.server.process.BillingProcessRunBL.findOrCreateTotalPM(Integer, ProcessRunTotalDTO)": ["java.util.Set.add(java.lang.Object)", "com.sapienter.jbilling.server.process.db.ProcessRunTotalPmDTO.setProcessRunTotal(com.sapienter.jbilling.server.process.db.ProcessRunTotalDTO)", "com.sapienter.jbilling.server.process.db.ProcessRunTotalPmDAS.getByMethod(java.lang.Integer,com.sapienter.jbilling.server.process.db.ProcessRunTotalDTO)", "com.sapienter.jbilling.server.process.db.ProcessRunTotalPmDAS.create(java.math.BigDecimal)", "com.sapienter.jbilling.server.process.db.ProcessRunTotalDTO.getTotalsPaymentMethod()"],
    "com.sapienter.jbilling.server.process.BillingProcessSessionBean.getConfigurationDto(Integer)": ["com.sapienter.jbilling.server.process.ConfigurationBL.getDTO()"],
    "com.sapienter.jbilling.server.invoice.NewInvoiceDTO.addResultLine(InvoiceLineDTO)": ["java.util.List.add(java.lang.Object)"],
    "com.sapienter.jbilling.server.user.EntityBL.getTables()": ["java.sql.Connection.close()", "com.sapienter.jbilling.server.list.ResultList.execute()", "com.sapienter.jbilling.server.list.ResultList.prepareStatement(java.lang.String)"],
    "com.sapienter.jbilling.server.user.db.CustomerDTO.getTotalSubAccounts()": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.user.db.CustomerDTO.getChildren()", "java.util.Set.size()"],
    "com.sapienter.jbilling.server.order.OrderBL.getDTO(OrderWS)": ["com.sapienter.jbilling.server.order.OrderWS.getOwnInvoice()", "com.sapienter.jbilling.server.order.db.OrderDTO.setIsCurrent(java.lang.Integer)", "com.sapienter.jbilling.server.order.db.OrderDTO.setCreateDate(java.util.Date)", "com.sapienter.jbilling.server.order.OrderWS.getUserId()", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.order.db.OrderDTO.setBaseUserByUserId(com.sapienter.jbilling.server.user.db.UserDTO)", "com.sapienter.jbilling.server.order.db.OrderDTO.setBaseUserByCreatedBy(com.sapienter.jbilling.server.user.db.UserDTO)", "com.sapienter.jbilling.server.order.OrderWS.getId()", "com.sapienter.jbilling.server.order.db.OrderDTO.setCurrency(com.sapienter.jbilling.server.util.db.CurrencyDTO)", "com.sapienter.jbilling.server.order.OrderWS.getDfFm()", "com.sapienter.jbilling.server.order.db.OrderDTO.setAnticipatePeriods(java.lang.Integer)", "com.sapienter.jbilling.server.order.db.OrderDTO.setId(java.lang.Integer)", "com.sapienter.jbilling.server.order.OrderWS.getCreatedBy()", "com.sapienter.jbilling.server.order.db.OrderDTO.setVersionNum(java.lang.Integer)", "com.sapienter.jbilling.server.order.OrderWS.getNextBillableDay()", "com.sapienter.jbilling.server.order.db.OrderDTO.setActiveSince(java.util.Date)", "com.sapienter.jbilling.server.order.OrderWS.getDeleted()", "com.sapienter.jbilling.server.order.OrderWS.getActiveUntil()", "java.util.Arrays.asList(java.lang.Object[])", "com.sapienter.jbilling.server.order.db.OrderDTO.setDueDateUnitId(java.lang.Integer)", "com.sapienter.jbilling.server.order.db.OrderDTO.setLastNotified(java.util.Date)", "com.sapienter.jbilling.server.order.OrderWS.getNotificationStep()", "com.sapienter.jbilling.server.order.OrderWS.getStatusId()", "com.sapienter.jbilling.server.order.OrderWS.getPeriod()", "com.sapienter.jbilling.server.order.db.OrderDTO.setActiveUntil(java.util.Date)", "com.sapienter.jbilling.server.order.OrderWS.getCreateDate()", "com.sapienter.jbilling.server.order.OrderWS.getOrderLines()", "com.sapienter.jbilling.server.order.OrderWS.getBillingTypeId()", "com.sapienter.jbilling.server.order.db.OrderDTO.setPricingFields(java.util.List)", "com.sapienter.jbilling.server.util.db.AbstractGenericStatusDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.order.db.OrderDTO.setNotesInInvoice(java.lang.Integer)", "com.sapienter.jbilling.server.order.db.OrderDTO.setDueDateValue(java.lang.Integer)", "com.sapienter.jbilling.server.order.OrderWS.getVersionNum()", "com.sapienter.jbilling.server.order.OrderWS.getPricingFields()", "com.sapienter.jbilling.server.order.db.OrderDTO.setNotes(java.lang.String)", "java.util.List.add(java.lang.Object)", "com.sapienter.jbilling.server.order.db.OrderDTO.setOrderStatus(com.sapienter.jbilling.server.order.db.OrderStatusDTO)", "com.sapienter.jbilling.server.order.db.OrderDTO.setOwnInvoice(java.lang.Integer)", "com.sapienter.jbilling.server.order.OrderWS.getCycleStarts()", "com.sapienter.jbilling.server.order.OrderWS.getNotesInInvoice()", "com.sapienter.jbilling.server.order.OrderWS.getDueDateValue()", "com.sapienter.jbilling.server.item.PricingField.getPricingFieldsValue(java.lang.String)", "com.sapienter.jbilling.server.order.db.OrderDTO.setNextBillableDay(java.util.Date)", "com.sapienter.jbilling.server.order.OrderWS.getIsCurrent()", "com.sapienter.jbilling.server.order.OrderBL.getOrderLine(com.sapienter.jbilling.server.order.OrderLineWS)", "com.sapienter.jbilling.server.order.db.OrderDTO.setDfFm(java.lang.Integer)", "com.sapienter.jbilling.server.order.db.OrderDTO.setNotify(java.lang.Integer)", "java.util.List.addAll(java.util.Collection)", "com.sapienter.jbilling.server.order.db.OrderDTO.setNotificationStep(java.lang.Integer)", "com.sapienter.jbilling.server.order.db.OrderDTO.setCycleStarts(java.util.Date)", "com.sapienter.jbilling.server.order.OrderWS.getAnticipatePeriods()", "com.sapienter.jbilling.server.order.db.OrderDTO.setOrderBillingType(com.sapienter.jbilling.server.order.db.OrderBillingTypeDTO)", "com.sapienter.jbilling.server.order.OrderWS.getNotify()", "com.sapienter.jbilling.server.order.OrderWS.getActiveSince()", "com.sapienter.jbilling.server.order.db.OrderDTO.setDeleted(int)", "com.sapienter.jbilling.server.order.db.OrderDTO.getLines()", "com.sapienter.jbilling.server.order.OrderWS.getCurrencyId()", "com.sapienter.jbilling.server.order.OrderWS.getNotes()", "com.sapienter.jbilling.server.order.db.OrderDTO.setOrderPeriod(com.sapienter.jbilling.server.order.db.OrderPeriodDTO)", "com.sapienter.jbilling.server.order.OrderWS.getLastNotified()", "com.sapienter.jbilling.server.order.OrderWS.getDueDateUnitId()"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getLastInvoicesByItemType(Integer, Integer, Integer)": ["com.sapienter.jbilling.server.invoice.InvoiceBL.getManyByItemTypeWS(java.lang.Integer,java.lang.Integer,java.lang.Integer)"],
    "com.sapienter.jbilling.server.user.partner.PartnerBL.setPayout(Integer)": ["com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)"],
    "com.sapienter.jbilling.server.util.db.AbstractGenericStatusDAS.findNow(Serializable)": ["com.sapienter.jbilling.server.util.db.AbstractGenericStatusDAS.find(java.io.Serializable)"],
    "com.sapienter.jbilling.server.notification.NotificationBL.getTypeList(Integer)": ["java.sql.Connection.close()", "javax.sql.RowSet.setInt(int,int)", "com.sapienter.jbilling.server.list.ResultList.execute()", "com.sapienter.jbilling.server.list.ResultList.prepareStatement(java.lang.String)", "java.lang.Integer.intValue()"],
    "com.sapienter.jbilling.server.user.db.CreditCardDTO.getNumber()": ["com.sapienter.jbilling.common.JBCrypto.getCreditCardCrypto()", "com.sapienter.jbilling.common.JBCrypto.decrypt(java.lang.String)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getRawNumber()"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentAuthorizeNetCIMTask.createOrUpdateProfile(ContactDTO, CreditCardDTO, AchDTO, AuthorizeNetCIMApi)": ["com.sapienter.jbilling.server.payment.tasks.PaymentAuthorizeNetCIMTask.updateProfile(com.sapienter.jbilling.server.user.contact.db.ContactDTO,com.sapienter.jbilling.server.user.db.CreditCardDTO,com.sapienter.jbilling.server.user.db.AchDTO,java.lang.String,com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi)", "com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.createCustomerProfile(com.sapienter.jbilling.server.payment.tasks.CustomerProfileData)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getGatewayKey()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.isNumberObsucred()", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.buildFromContactAndCreditCardOrACH(com.sapienter.jbilling.server.user.contact.db.ContactDTO,com.sapienter.jbilling.server.user.db.CreditCardDTO,com.sapienter.jbilling.server.user.db.AchDTO)", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.buildFromGatewayKey(java.lang.String)", "com.sapienter.jbilling.server.user.db.AchDTO.getGatewayKey()", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.getCustomerProfileId()", "com.sapienter.jbilling.server.payment.tasks.DublicateProfileRecordException.getProfileId()"],
    "com.sapienter.jbilling.server.order.OrderBL.unsetMainSubscription(Integer)": ["com.sapienter.jbilling.server.order.db.OrderDTO.getId()", "com.sapienter.jbilling.server.user.db.CustomerDTO.setCurrentOrderId(java.lang.Integer)", "com.sapienter.jbilling.server.util.audit.EventLogger.audit(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.util.Date)", "com.sapienter.jbilling.server.order.db.OrderDTO.setIsCurrent(java.lang.Integer)", "com.sapienter.jbilling.server.order.db.OrderDTO.getUser()", "com.sapienter.jbilling.server.user.db.UserDTO.getCustomer()", "com.sapienter.jbilling.server.user.db.UserDTO.getId()", "java.lang.Integer.intValue()", "com.sapienter.jbilling.server.order.db.OrderDTO.getIsCurrent()", "com.sapienter.jbilling.server.order.db.OrderDTO.getBaseUserByUserId()"],
    "com.sapienter.jbilling.server.payment.blacklist.PhoneFilter.checkUser(Integer)": ["com.sapienter.jbilling.server.util.Util.getEntityNotificationsBundle(java.lang.Integer)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getPhoneAreaCode()", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "java.util.List.isEmpty()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getPhoneCountryCode()", "com.sapienter.jbilling.server.user.db.UserDTO.getCompany()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getPhoneNumber()", "java.util.ResourceBundle.getString(java.lang.String)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.user.contact.db.ContactDAS.findPrimaryContact(java.lang.Integer)", "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDAS.filterByPhone(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String)"],
    "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getCompletePhoneNumber()": ["java.lang.StringBuilder.append(java.lang.Object)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.toString()"],
    "com.sapienter.jbilling.server.pluggableTask.BasicCompositionTask.saveOrderTotalContributionToInvoice(Integer, NewInvoiceDTO, BigDecimal)": ["java.util.Map.get(java.lang.Object)", "com.sapienter.jbilling.server.invoice.NewInvoiceDTO.getOrderTotalContributions()", "java.util.Map.put(java.lang.Object,java.lang.Object)", "java.math.BigDecimal.add(java.math.BigDecimal)"],
    "com.sapienter.jbilling.server.order.task.RulesLineTotalTask2.doProcessing(OrderDTO)": ["com.sapienter.jbilling.server.order.task.RulesItemManager2.processRules(com.sapienter.jbilling.server.order.db.OrderDTO,java.lang.Integer)", "com.sapienter.jbilling.server.order.db.OrderDTO.getBaseUserByUserId()", "com.sapienter.jbilling.server.user.db.UserDTO.getUserId()"],
    "com.sapienter.jbilling.server.user.UserBL.failedLoginAttempt()": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.user.db.UserDTO.getFailedAttempts()", "com.sapienter.jbilling.server.user.db.UserDTO.setFailedAttempts(int)", "com.sapienter.jbilling.server.user.db.UserDTO.getEntity()", "com.sapienter.jbilling.server.user.UserBL.getMainRole()", "com.sapienter.jbilling.common.JBCrypto.getPasswordCrypto(java.lang.Integer)", "com.sapienter.jbilling.server.util.PreferenceBL.getInt()", "com.sapienter.jbilling.common.JBCrypto.encrypt(java.lang.String)", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.util.PreferenceBL.set(java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.user.db.UserDTO.setPassword(java.lang.String)", "com.sapienter.jbilling.server.util.audit.EventLogger.auditBySystem(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.util.Date)", "com.sapienter.jbilling.server.user.db.UserDTO.getId()", "com.sapienter.jbilling.common.Util.getSysProp(java.lang.String)", "com.sapienter.jbilling.server.user.db.UserDTO.getUserId()"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentPaypalExternalTask.isRefund(PaymentDTOEx)": ["java.math.BigDecimal.compareTo(java.math.BigDecimal)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getIsRefund()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getAmount()"],
    "com.sapienter.jbilling.server.provisioning.TestExternalProvisioningMDB.updateProvisioningStatus(int, int)": ["com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "com.sapienter.jbilling.server.provisioning.IProvisioningProcessSessionBean.updateProvisioningStatus(java.lang.Integer,java.lang.Integer)", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)"],
    "com.sapienter.jbilling.server.item.CurrencyBL.update(CurrencyDTO, Integer)": ["com.sapienter.jbilling.server.util.db.CurrencyExchangeDTO.setCreateDatetime(java.util.Date)", "java.util.Set.add(java.lang.Object)", "com.sapienter.jbilling.server.util.db.CurrencyDTO.getInUse()", "com.sapienter.jbilling.server.util.db.CurrencyDTO.getRateAsDecimal()", "java.util.Set.remove(java.lang.Object)", "java.util.Set.clear()", "com.sapienter.jbilling.server.util.db.CurrencyDTO.setCode(java.lang.String)", "com.sapienter.jbilling.server.util.db.CurrencyDTO.getSymbol()", "com.sapienter.jbilling.server.util.db.CurrencyDTO.getCountryCode()", "com.sapienter.jbilling.server.util.db.CurrencyDTO.getCurrencyExchanges()", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.util.db.CurrencyExchangeDTO.setCurrency(com.sapienter.jbilling.server.util.db.CurrencyDTO)", "com.sapienter.jbilling.server.util.db.CurrencyDTO.getCode()", "com.sapienter.jbilling.server.util.db.CurrencyExchangeDTO.setRate(java.math.BigDecimal)", "com.sapienter.jbilling.server.util.db.CurrencyDTO.setSymbol(java.lang.String)", "com.sapienter.jbilling.server.util.db.CurrencyDTO.getSysRate()", "com.sapienter.jbilling.server.util.db.CurrencyDTO.setCountryCode(java.lang.String)", "com.sapienter.jbilling.server.util.db.CurrencyExchangeDTO.setEntityId(java.lang.Integer)", "com.sapienter.jbilling.server.user.db.CompanyDTO.getCurrencies()", "com.sapienter.jbilling.server.util.db.CurrencyDTO.getRate()", "org.apache.log4j.Category.error(java.lang.Object)"],
    "com.sapienter.jbilling.server.provisioning.task.TestExternalProvisioningTask.getId()": ["java.util.Map.get(java.lang.Object)", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription.getName()"],
    "com.sapienter.jbilling.server.notification.db.NotificationMessageDAS.create(Integer, Integer, Integer, Boolean)": ["com.sapienter.jbilling.server.notification.db.NotificationMessageDTO.setUseFlag(short)", "com.sapienter.jbilling.server.notification.db.NotificationMessageDTO.setLanguage(com.sapienter.jbilling.server.util.db.LanguageDTO)", "com.sapienter.jbilling.server.notification.db.NotificationMessageDTO.setNotificationMessageType(com.sapienter.jbilling.server.notification.db.NotificationMessageTypeDTO)", "com.sapienter.jbilling.server.notification.db.NotificationMessageDTO.setEntity(com.sapienter.jbilling.server.user.db.CompanyDTO)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)"],
    "com.sapienter.jbilling.server.process.BillingProcessBL.getLast(Integer)": ["java.sql.ResultSet.next()", "java.sql.Connection.close()", "javax.sql.RowSet.setInt(int,int)", "java.sql.ResultSet.getInt(int)", "com.sapienter.jbilling.server.list.ResultList.execute()", "com.sapienter.jbilling.server.list.ResultList.prepareStatement(java.lang.String)", "java.lang.Integer.intValue()"],
    "com.sapienter.jbilling.server.item.PricingField.getBooleanValue()": ["java.lang.Boolean.valueOf(java.lang.String)"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentPaypalExternalTask.confirmPreAuth(PaymentAuthorizationDTO, PaymentDTOEx)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getProcessor()", "com.sapienter.jbilling.server.payment.tasks.PaymentPaypalExternalTask.prepareExternalPayment(com.sapienter.jbilling.server.payment.PaymentDTOEx)", "com.sapienter.jbilling.server.payment.tasks.PaymentPaypalExternalTask.getProcessorName()", "com.sapienter.jbilling.server.payment.tasks.PaymentPaypalExternalTask.isApplicable(com.sapienter.jbilling.server.payment.PaymentDTOEx)", "org.apache.log4j.Category.warn(java.lang.Object)", "java.lang.String.equals(java.lang.Object)", "com.sapienter.jbilling.server.payment.tasks.PaymentPaypalExternalTask.doCapture(com.sapienter.jbilling.server.payment.PaymentDTOEx,com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getId()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getCreditCard()", "org.apache.log4j.Category.error(java.lang.Object)", "com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase$Result.shouldCallOtherProcessors()"],
    "com.sapienter.jbilling.server.process.BillingProcessBL.composeInvoice(Integer, Integer, NewInvoiceDTO)": ["com.sapienter.jbilling.server.invoice.NewInvoiceDTO.validate()", "com.sapienter.jbilling.server.invoice.NewInvoiceDTO.setEntityId(java.lang.Integer)", "com.sapienter.jbilling.server.pluggableTask.InvoiceCompositionTask.apply(com.sapienter.jbilling.server.invoice.NewInvoiceDTO,java.lang.Integer)", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskManager.getNextClass()", "org.apache.log4j.Category.error(java.lang.Object)"],
    "com.sapienter.jbilling.server.mediation.task.JDBCReader.executeTimestampUpdateSql(List, int[])": ["java.sql.PreparedStatement.setBoolean(int,boolean)", "java.lang.System.currentTimeMillis()", "java.sql.PreparedStatement.setBigDecimal(int,java.math.BigDecimal)", "com.sapienter.jbilling.server.mediation.task.JdbcTemplate.batchUpdate(java.lang.String,com.sapienter.jbilling.server.mediation.task.JDBCReader$1)", "java.sql.PreparedStatement.setString(int,java.lang.String)", "com.sapienter.jbilling.server.item.PricingField.getDateValue()", "java.sql.PreparedStatement.setTimestamp(int,java.sql.Timestamp)", "com.sapienter.jbilling.server.item.PricingField.getStrValue()", "java.sql.PreparedStatement.setInt(int,int)", "com.sapienter.jbilling.server.mediation.Record.getFields()", "com.sapienter.jbilling.server.item.PricingField.getType()", "com.sapienter.jbilling.server.mediation.task.AbstractJDBCReader.getJdbcTemplate()", "com.sapienter.jbilling.server.item.PricingField.getDecimalValue()", "java.util.List.size()", "com.sapienter.jbilling.server.item.PricingField.getIntValue()", "com.sapienter.jbilling.server.item.PricingField.getBooleanValue()", "java.util.Date.getTime()", "java.util.List.get(int)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.deleteAch(Integer)": ["com.sapienter.jbilling.server.user.IUserSessionBean.removeACH(java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerId()"],
    "com.sapienter.jbilling.server.invoice.db.InvoiceLineDAS.create(String, BigDecimal, BigDecimal, BigDecimal, Integer, ItemDTO, Integer, Integer)": ["com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO.setSourceUserId(java.lang.Integer)", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO.setIsPercentage(java.lang.Integer)", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO.setPrice(java.math.BigDecimal)", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO.setDescription(java.lang.String)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO.setAmount(java.math.BigDecimal)", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO.setQuantity(java.math.BigDecimal)", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO.setItem(com.sapienter.jbilling.server.item.db.ItemDTO)", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO.setDeleted(java.lang.Integer)", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO.setInvoiceLineType(com.sapienter.jbilling.server.invoice.db.InvoiceLineTypeDTO)", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)"],
    "com.sapienter.jbilling.server.user.UserBL.set(String, Integer)": ["com.sapienter.jbilling.server.user.db.UserDAS.findByUserName(java.lang.String,java.lang.Integer)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.deleteMediationConfiguration(Integer)": ["com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "com.sapienter.jbilling.server.mediation.IMediationSessionBean.delete(java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerId()"],
    "com.sapienter.jbilling.server.mediation.MediationSessionBean.getAll(Integer)": ["com.sapienter.jbilling.server.mediation.db.MediationProcessDAS.findAllByEntity(java.lang.Integer)", "com.sapienter.jbilling.server.mediation.db.MediationProcessDAS.touch(java.util.List)"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentFilterTask.process(PaymentDTOEx)": ["com.sapienter.jbilling.server.payment.tasks.PaymentFilterTask.callFilters(com.sapienter.jbilling.server.payment.PaymentDTOEx)"],
    "com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.buildCreateCustomerProfileRequest(CustomerProfileData)": ["com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.getMerchantAuthenticationXML()", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.getEmail()", "com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.endTag(java.lang.StringBuffer,java.lang.String)", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.getCreditCardNumber()", "java.lang.StringBuffer.toString()", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.getPaymentType()", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.getAccountType()", "com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.buildTag(java.lang.StringBuffer,java.lang.String,java.lang.String)", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.getLastName()", "java.lang.StringBuffer.append(java.lang.String)", "com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.buildTagIfNotEmpty(java.lang.StringBuffer,java.lang.String,java.lang.String)", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.getFirstName()", "com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.beginTag(java.lang.StringBuffer,java.lang.String)", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.getRoutingNumber()", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.getCountry()", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.getPhoneNumber()", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.getState()", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.getCreditCardCode()", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.getAccountName()", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.getCity()", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.getFaxNumber()", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.getCreditCardExpirationDate()", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.getCompany()", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.getAccountNumber()", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.getBankName()", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.getAddress()"],
    "com.sapienter.jbilling.server.process.BillingProcessBL.updateNextBillableDay(OrderDTO, Date)": ["com.sapienter.jbilling.server.order.db.OrderDTO.getStatusId()", "java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.order.db.OrderDTO.setNextBillableDay(java.util.Date)"],
    "com.sapienter.jbilling.server.invoice.InvoiceBL.getInvoicesByProcessId(Integer)": ["java.sql.Connection.close()", "javax.sql.RowSet.setInt(int,int)", "com.sapienter.jbilling.server.list.ResultList.execute()", "com.sapienter.jbilling.server.list.ResultList.prepareStatement(java.lang.String)", "java.lang.Integer.intValue()"],
    "com.sapienter.jbilling.server.process.task.ProRateOrderPeriodTask.calculateCycleStarts(OrderDTO, Date)": ["com.sapienter.jbilling.server.order.db.OrderDTO.getNextBillableDay()", "com.sapienter.jbilling.common.Util.truncateDate(java.util.Date)", "com.sapienter.jbilling.server.order.db.OrderDTO.getCycleStarts()"],
    "com.sapienter.jbilling.server.user.permisson.db.PermissionDTO.equals(Object)": ["java.lang.Integer.equals(java.lang.Object)", "java.lang.Object.getClass()", "com.sapienter.jbilling.server.user.permisson.db.PermissionTypeDTO.equals(java.lang.Object)"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentPaypalExternalTask.convertCreditCardExpiration(Date)": ["java.text.DateFormat.format(java.util.Date)"],
    "com.sapienter.jbilling.server.process.BillingProcessBL.generatePayment(Integer, Integer, Integer)": ["com.sapienter.jbilling.server.payment.IPaymentSessionBean.generatePayment(com.sapienter.jbilling.server.invoice.db.InvoiceDTO)", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "com.sapienter.jbilling.server.invoice.InvoiceBL.getEntity()"],
    "com.sapienter.jbilling.server.user.UserBL.getCurrencyId()": ["com.sapienter.jbilling.server.user.db.UserDTO.getCurrencyId()", "com.sapienter.jbilling.server.user.db.CompanyDTO.getCurrency()", "com.sapienter.jbilling.server.user.db.UserDTO.getEntity()", "com.sapienter.jbilling.server.util.db.CurrencyDTO.getId()"],
    "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskBL.deleteParameter(Integer, Integer)": ["java.util.Collection.remove(java.lang.Object)", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskParameterDTO.getTask()", "com.sapienter.jbilling.server.util.audit.EventLogger.audit(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.util.Date)", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDTO.getParameters()", "com.sapienter.jbilling.server.util.db.AbstractDAS.delete(java.lang.Object)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDTO.getId()", "com.sapienter.jbilling.server.pluggableTask.PluggableTask.invalidateRuleCache(java.lang.Integer)"],
    "com.sapienter.jbilling.server.util.db.AbstractDescription.getDescription(Integer)": ["com.sapienter.jbilling.server.util.db.AbstractDescription.getDescriptionDTO(java.lang.Integer)", "com.sapienter.jbilling.server.util.db.InternationalDescriptionDTO.getContent()"],
    "com.sapienter.jbilling.server.order.UsageBL.getItemUsage(Integer)": ["com.sapienter.jbilling.server.order.db.OrderDTO.getId()", "org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.order.UsageBL.getMainOrder()", "com.sapienter.jbilling.server.order.UsageBL.getPeriodStart()", "com.sapienter.jbilling.server.order.db.UsageDAS.findUsageByItem(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.util.Date,java.util.Date)", "com.sapienter.jbilling.server.order.UsageBL.addWorkingOrder(com.sapienter.jbilling.server.order.Usage)", "com.sapienter.jbilling.server.order.UsageBL.getPeriodEnd()", "com.sapienter.jbilling.server.order.UsageBL.getWorkingOrder()", "org.apache.log4j.Category.warn(java.lang.Object)"],
    "com.sapienter.jbilling.server.pluggableTask.ProcessorEmailAlarm.getAlarm(String, Integer)": ["java.util.HashMap.get(java.lang.Object)", "java.util.HashMap.put(java.lang.Object,java.lang.Object)"],
    "com.sapienter.jbilling.server.user.UserBL.updateRoles(Set, Integer)": ["java.util.Set.add(java.lang.Object)", "java.util.Set.clear()", "com.sapienter.jbilling.server.user.permisson.db.RoleDTO.getId()", "com.sapienter.jbilling.server.user.db.UserDTO.getRoles()", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "java.util.Set.isEmpty()"],
    "com.sapienter.jbilling.server.process.BillingProcessBL.processOrdersForUser(UserDTO, Integer, BillingProcessDTO, boolean, boolean, boolean, int, Hashtable)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.process.db.BillingProcessDTO.getBillingDate()", "com.sapienter.jbilling.server.order.db.OrderDAS.findByUser_Status(java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.user.db.UserDTO.getCustomer()", "java.util.Iterator.hasNext()", "com.sapienter.jbilling.server.user.UserBL.getEntity()", "java.lang.Integer.intValue()", "com.sapienter.jbilling.server.order.db.OrderDTO.getOrderPeriod()", "com.sapienter.jbilling.server.invoice.NewInvoiceDTO.setDate(java.util.Date)", "java.util.Hashtable.size()", "com.sapienter.jbilling.server.pluggableTask.OrderFilterTask.isApplicable(com.sapienter.jbilling.server.order.db.OrderDTO,com.sapienter.jbilling.server.process.db.BillingProcessDTO)", "com.sapienter.jbilling.server.order.OrderBL.set(com.sapienter.jbilling.server.order.db.OrderDTO)", "com.sapienter.jbilling.server.order.OrderBL.getInvoicingDate()", "com.sapienter.jbilling.server.user.db.CustomerDTO.getIsParent()", "com.sapienter.jbilling.server.order.db.OrderDTO.getId()", "com.sapienter.jbilling.server.process.BillingProcessBL.addOrderToInvoice(java.lang.Integer,com.sapienter.jbilling.server.order.db.OrderDTO,com.sapienter.jbilling.server.invoice.NewInvoiceDTO,java.util.Date,int)", "org.apache.log4j.Category.fatal(java.lang.Object,java.lang.Throwable)", "java.util.Iterator.next()", "java.util.Hashtable.get(java.lang.Object)", "com.sapienter.jbilling.server.process.BillingProcessBL.processOrdersForUser(com.sapienter.jbilling.server.user.db.UserDTO,java.lang.Integer,com.sapienter.jbilling.server.process.db.BillingProcessDTO,boolean,boolean,boolean,int,java.util.Hashtable)", "com.sapienter.jbilling.server.user.db.CustomerDTO.getChildren()", "com.sapienter.jbilling.server.user.db.CustomerDTO.getId()", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskManager.getNextClass()", "com.sapienter.jbilling.server.invoice.NewInvoiceDTO.setDueDatePeriod(com.sapienter.jbilling.server.order.TimePeriod)", "java.util.Hashtable.put(java.lang.Object,java.lang.Object)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.setIsReview(java.lang.Integer)", "com.sapienter.jbilling.server.order.db.OrderPeriodDTO.getId()", "com.sapienter.jbilling.server.invoice.NewInvoiceDTO.setDate(java.util.Date,boolean)", "com.sapienter.jbilling.server.order.OrderBL.getDueDate()", "com.sapienter.jbilling.server.user.db.CustomerDTO.getInvoiceChild()", "com.sapienter.jbilling.server.user.db.CustomerDTO.getBaseUser()", "java.util.Set.iterator()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.setCarriedBalance(java.math.BigDecimal)", "com.sapienter.jbilling.server.user.db.UserDTO.getUserId()"],
    "com.sapienter.jbilling.server.order.OrderBL.getByUserAndPeriod(Integer, Integer)": ["java.sql.ResultSet.next()", "java.sql.Connection.close()", "javax.sql.RowSet.setInt(int,int)", "java.sql.ResultSet.getInt(int)", "java.util.List.size()", "com.sapienter.jbilling.server.list.ResultList.execute()", "java.util.List.add(java.lang.Object)", "com.sapienter.jbilling.server.list.ResultList.prepareStatement(java.lang.String)", "java.lang.Integer.intValue()", "java.sql.ResultSet.close()", "java.util.List.toArray(java.lang.Object[])"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayExternalTask.storeCreditCard(ContactDTO, CreditCardDTO, AchDTO)": ["com.sapienter.jbilling.server.payment.db.PaymentDTO.getResultId()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setAttempt(java.lang.Integer)", "java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getUserId()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setAmount(java.math.BigDecimal)", "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask.doProcess(com.sapienter.jbilling.server.payment.PaymentDTOEx,com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayBaseTask$SvcType,com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO)", "com.sapienter.jbilling.server.user.UserBL.getEntity()", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getTransactionId()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getNumber()", "com.sapienter.jbilling.common.Util.getPaymentMethod(java.lang.String)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setCreditCard(com.sapienter.jbilling.server.user.db.CreditCardDTO)", "com.sapienter.jbilling.server.user.UserBL.getCreditCard()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setBaseUser(com.sapienter.jbilling.server.user.db.UserDTO)", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)", "java.util.Iterator.next()", "com.sapienter.jbilling.server.user.db.UserDTO.getCurrency()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setDeleted(int)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setCreateDatetime(java.util.Date)", "org.apache.log4j.Category.warn(java.lang.Object)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getBaseUsers()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setIsPreauth(java.lang.Integer)", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getAuthorization()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setPaymentDate(java.util.Date)", "java.util.Set.isEmpty()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setCurrency(com.sapienter.jbilling.server.util.db.CurrencyDTO)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setPaymentMethod(com.sapienter.jbilling.server.payment.db.PaymentMethodDTO)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setIsRefund(int)", "java.util.Set.iterator()", "org.apache.log4j.Category.error(java.lang.Object)", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)"],
    "com.sapienter.jbilling.server.mediation.Format.addField(FormatField)": ["java.util.List.add(java.lang.Object)"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentPaypalExternalTask.getSignature()": ["com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase.ensureGetParameter(java.lang.String)", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription.getName()"],
    "com.sapienter.jbilling.server.process.BillingProcessRunBL.findSucceededUsersList()": ["java.sql.Connection.close()", "javax.sql.RowSet.setInt(int,int)", "com.sapienter.jbilling.server.process.db.ProcessRunDTO.getId()", "com.sapienter.jbilling.server.list.ResultList.execute()", "com.sapienter.jbilling.server.list.ResultList.prepareStatement(java.lang.String)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.generateRules(String)": ["com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerCompanyId()", "com.sapienter.jbilling.server.rule.task.IRulesGenerator.process()", "com.sapienter.jbilling.server.rule.task.IRulesGenerator.unmarshal(java.lang.String)", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskManager.getNextClass()"],
    "com.sapienter.jbilling.server.user.db.CompanyDAS.findEntities()": ["list()", "getSession()", "createCriteria(java.lang.Class)"],
    "com.sapienter.jbilling.server.util.audit.EventLogger.audit(Integer, Integer, String, Integer, Integer, Integer, Integer, String, Date)": ["com.sapienter.jbilling.server.util.db.JbillingTableDAS.findByName(java.lang.String)", "com.sapienter.jbilling.server.user.db.UserDTO.getCompany()", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)"],
    "com.sapienter.jbilling.server.item.tasks.PricingManager.setByPercentage(int)": ["com.sapienter.jbilling.server.item.tasks.PricingManager.setByPercentage(double)"],
    "com.sapienter.jbilling.server.process.BillingProcessSessionBean.createRetryRun(Integer)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.process.BillingProcessBL.getEntity()", "com.sapienter.jbilling.server.process.db.ProcessRunDTO.getId()", "com.sapienter.jbilling.server.process.db.BillingProcessDTO.getBillingDate()", "com.sapienter.jbilling.server.process.BillingProcessRunBL.create(com.sapienter.jbilling.server.process.db.BillingProcessDTO,java.util.Date)", "com.sapienter.jbilling.server.process.BillingProcessRunBL.getEntity()"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.createPlugin(PluggableTaskWS)": ["com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerCompanyId()", "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerId()", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskBL.create(java.lang.Integer,com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDTO)"],
    "com.sapienter.jbilling.server.payment.PaymentEntityComparator.compare(PaymentDTO, PaymentDTO)": ["java.lang.Integer.compareTo(java.lang.Integer)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getId()"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getOrderProcesses(Integer)": ["com.sapienter.jbilling.server.order.OrderBL.getDTO()", "com.sapienter.jbilling.server.order.db.OrderDTO.getOrderProcesses()", "java.util.Collections.emptyList()", "java.util.List.add(java.lang.Object)", "java.util.Set.size()"],
    "com.sapienter.jbilling.server.item.PricingField.encode(PricingField)": ["com.sapienter.jbilling.server.item.PricingField.getStrValue()", "com.sapienter.jbilling.server.item.PricingField.getType()", "com.sapienter.jbilling.server.item.PricingField.getName()", "java.lang.StringBuffer.toString()", "com.sapienter.jbilling.server.item.PricingField.getPosition()", "java.lang.StringBuffer.append(java.lang.String)", "java.lang.StringBuffer.append(java.lang.Object)"],
    "com.sapienter.jbilling.server.mediation.task.JDBCUtils.correctColumnNames(Connection, String, String[])": ["java.util.List.add(java.lang.Object)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "com.sapienter.jbilling.server.mediation.task.JDBCUtils.getAllColumnNames(java.sql.Connection,java.lang.String)"],
    "com.sapienter.jbilling.server.pluggableTask.BasicOrderPeriodTask.calculateStart(OrderDTO)": ["com.sapienter.jbilling.server.order.db.OrderDTO.getId()", "com.sapienter.jbilling.server.order.db.OrderPeriodDTO.getId()", "com.sapienter.jbilling.server.order.db.OrderDTO.getCreateDate()", "com.sapienter.jbilling.server.order.db.OrderDTO.getActiveSince()", "com.sapienter.jbilling.server.order.db.OrderDTO.getNextBillableDay()", "com.sapienter.jbilling.common.Util.truncateDate(java.util.Date)", "com.sapienter.jbilling.server.order.db.OrderDTO.getOrderPeriod()"],
    "com.sapienter.jbilling.server.provisioning.TestExternalProvisioningMDB.onMessage(Message)": ["org.apache.log4j.Category.debug(java.lang.Object)", "equals(java.lang.String)", "com.sapienter.jbilling.server.provisioning.TestExternalProvisioningMDB.testCAIProvisioningTask(javax.jms.MapMessage)", "com.sapienter.jbilling.server.provisioning.TestExternalProvisioningMDB.testExternalProvisioningTask(javax.jms.MapMessage)", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)", "javax.jms.MapMessage.getStringProperty(java.lang.String)", "com.sapienter.jbilling.server.provisioning.TestExternalProvisioningMDB.testMMSCProvisioningTask(javax.jms.MapMessage)"],
    "com.sapienter.jbilling.server.invoice.InvoiceBL.convertNumberToID(Integer, String)": ["java.sql.ResultSet.wasNull()", "java.sql.ResultSet.next()", "java.sql.Connection.close()", "javax.sql.RowSet.setInt(int,int)", "javax.sql.RowSet.setString(int,java.lang.String)", "java.sql.ResultSet.getInt(int)", "com.sapienter.jbilling.server.list.ResultList.execute()", "com.sapienter.jbilling.server.list.ResultList.prepareStatement(java.lang.String)", "java.lang.Integer.intValue()"],
    "com.sapienter.jbilling.server.payment.PaymentBL.getMethodDescription(PaymentMethodDTO, Integer)": ["com.sapienter.jbilling.server.util.db.AbstractDescription.getDescription(java.lang.Integer)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.payment.db.PaymentMethodDTO.getId()"],
    "com.sapienter.jbilling.server.user.UserSessionBean.processPayouts(Date)": ["com.sapienter.jbilling.common.JNDILookup.getFactory()", "com.sapienter.jbilling.common.JNDILookup.lookUpDataSource()", "java.sql.ResultSet.next()", "java.sql.ResultSet.getInt(int)", "com.sapienter.jbilling.server.user.UserSessionBean.processPayout(java.lang.Integer)", "java.sql.PreparedStatement.setDate(int,java.sql.Date)", "java.sql.PreparedStatement.executeQuery()", "java.sql.Connection.prepareStatement(java.lang.String)", "java.sql.Statement.close()", "java.sql.Connection.close()", "java.util.Date.getTime()", "java.sql.ResultSet.close()", "javax.sql.DataSource.getConnection()"],
    "com.sapienter.jbilling.server.pluggableTask.PaymentAuthorizeNetTask.considerField(List, String, String)": ["java.util.List.add(java.lang.Object)", "java.lang.String.length()"],
    "com.sapienter.jbilling.server.process.BillingProcessWS.toString()": ["java.util.List.size()"],
    "com.sapienter.jbilling.server.user.db.UserDTO.getEntity()": ["com.sapienter.jbilling.server.user.db.UserDTO.getCompany()"],
    "com.sapienter.jbilling.server.customer.CustomerBL.getCustomerList(int, Integer, Integer)": ["java.sql.Connection.close()", "javax.sql.RowSet.setInt(int,int)", "java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.list.ResultList.execute()", "com.sapienter.jbilling.server.list.ResultList.prepareStatement(java.lang.String)", "java.lang.Integer.intValue()"],
    "com.sapienter.jbilling.server.user.db.UserDAS.findWebServicesRoot(String)": ["createAlias(java.lang.String,java.lang.String)", "org.hibernate.criterion.Restrictions.eq(java.lang.String,java.lang.Integer)", "getSession()", "add()", "org.hibernate.criterion.Restrictions.eq(java.lang.String,java.lang.String)", "createCriteria(java.lang.Class)", "org.hibernate.Criteria.uniqueResult()", "org.apache.log4j.Category.error(java.lang.Object)", "org.hibernate.criterion.Restrictions.eq(java.lang.String,int)", "java.lang.String.length()", "org.hibernate.Criteria.setCacheable(boolean)"],
    "com.sapienter.jbilling.server.util.Util.float2string(Float, Locale)": ["java.text.NumberFormat.getInstance(java.util.Locale)", "java.text.Format.format(java.lang.Object)"],
    "com.sapienter.jbilling.server.process.db.ProcessRunTotalDTO.toString()": ["java.lang.StringBuffer.append(int)", "java.lang.StringBuffer.toString()", "java.lang.StringBuffer.append(java.lang.String)", "java.lang.Object.toString()", "java.lang.StringBuffer.append(java.lang.Object)"],
    "com.sapienter.jbilling.server.pluggableTask.GSTTaxTask.doProcessing(OrderDTO)": ["java.util.Map.get(java.lang.Object)", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription.getName()", "com.sapienter.jbilling.server.order.OrderBL.lookUpEditable(java.lang.Integer)", "java.util.List.add(java.lang.Object)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setTypeId(java.lang.Integer)", "java.lang.String.toString()", "com.sapienter.jbilling.server.order.db.OrderDTO.getTotal()", "java.math.BigDecimal.multiply(java.math.BigDecimal)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setDescription(java.lang.String)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setItem(com.sapienter.jbilling.server.item.db.ItemDTO)", "java.math.BigDecimal.divide(java.math.BigDecimal,int,int)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setAmount(java.math.BigDecimal)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setEditable(java.lang.Boolean)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setDeleted(int)", "com.sapienter.jbilling.server.order.db.OrderDTO.getLines()", "com.sapienter.jbilling.server.order.db.OrderDTO.setTotal(java.math.BigDecimal)", "java.math.BigDecimal.add(java.math.BigDecimal)", "com.sapienter.jbilling.server.item.db.ItemDTO.setId(int)"],
    "com.sapienter.jbilling.server.payment.blacklist.CsvProcessor.lineColMessage(Column, String, Object[])": ["com.sapienter.jbilling.server.payment.blacklist.CsvProcessor.getMessage(java.lang.String,java.lang.Object[])"],
    "com.sapienter.jbilling.server.pluggableTask.PluggableTaskSessionBean.delete(Integer, Integer)": ["com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskBL.delete(java.lang.Integer)"],
    "com.sapienter.jbilling.client.authentication.CompanyUserRememberMeFilter.onUnsuccessfulAuthentication(HttpServletRequest, HttpServletResponse, AuthenticationException)": ["org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.onUnsuccessfulAuthentication(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.security.core.AuthenticationException)", "com.sapienter.jbilling.client.authentication.util.SecuritySession.clearAttributes(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"],
    "com.sapienter.jbilling.server.payment.PaymentSessionBean.applyPayment(Integer, Integer)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.payment.PaymentBL.getDTO()", "com.sapienter.jbilling.server.payment.PaymentSessionBean.applyPayment(com.sapienter.jbilling.server.payment.db.PaymentDTO,com.sapienter.jbilling.server.invoice.db.InvoiceDTO,boolean)", "org.apache.log4j.Category.warn(java.lang.Object)", "com.sapienter.jbilling.server.payment.PaymentBL.createMap(com.sapienter.jbilling.server.invoice.db.InvoiceDTO,java.math.BigDecimal)", "com.sapienter.jbilling.server.invoice.InvoiceBL.getEntity()"],
    "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDAS.invalidateCache()": ["org.springmodules.cache.provider.CacheProviderFacade.flushCache(org.springmodules.cache.FlushingModel)"],
    "com.sapienter.jbilling.server.user.RoleBL.create(RoleDTO)": ["com.sapienter.jbilling.server.user.permisson.db.RoleDTO.getId()", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)", "org.apache.log4j.Category.error(java.lang.Object)"],
    "com.sapienter.jbilling.server.pluggableTask.BasicLineTotalTask.getTotalForTax(List, Set)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getDeleted()", "com.sapienter.jbilling.server.pluggableTask.BasicLineTotalTask.isItemExcluded(com.sapienter.jbilling.server.item.db.ItemDTO,java.util.Set)", "java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getTypeId()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getAmount()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getItem()", "java.math.BigDecimal.add(java.math.BigDecimal)", "com.sapienter.jbilling.server.item.db.ItemDTO.getId()"],
    "com.sapienter.jbilling.server.user.UserBL.getUserEntity(Integer)": ["com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)"],
    "com.sapienter.jbilling.server.util.audit.EventLogger.debug(Integer, Integer, Integer, Integer, Integer, String)": ["com.sapienter.jbilling.server.util.audit.EventLogger.log(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String)"],
    "com.sapienter.jbilling.server.process.BillingProcessRunBL.updateNewPayment(Integer, Integer, BigDecimal, boolean)": ["com.sapienter.jbilling.server.process.db.ProcessRunTotalDTO.setTotalPaid(java.math.BigDecimal)", "com.sapienter.jbilling.server.process.BillingProcessRunBL.findOrCreateTotal(java.lang.Integer)", "com.sapienter.jbilling.server.process.BillingProcessRunBL.findOrCreateTotalPM(java.lang.Integer,com.sapienter.jbilling.server.process.db.ProcessRunTotalDTO)", "com.sapienter.jbilling.server.process.db.ProcessRunTotalPmDTO.setPaymentMethod(com.sapienter.jbilling.server.payment.db.PaymentMethodDTO)", "com.sapienter.jbilling.server.process.db.ProcessRunTotalPmDTO.getTotal()", "com.sapienter.jbilling.server.process.db.ProcessRunTotalDTO.getTotalNotPaid()", "java.math.BigDecimal.add(java.math.BigDecimal)", "com.sapienter.jbilling.server.process.db.ProcessRunTotalPmDTO.setTotal(java.math.BigDecimal)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.process.db.ProcessRunTotalDTO.setTotalNotPaid(java.math.BigDecimal)", "com.sapienter.jbilling.server.process.db.ProcessRunTotalDTO.getTotalPaid()"],
    "com.sapienter.jbilling.server.invoice.InvoiceBL.getInvoicesByCreateDate(Integer, Date, Date)": ["java.util.Calendar.setTime(java.util.Date)", "java.sql.Connection.close()", "javax.sql.RowSet.setInt(int,int)", "java.util.GregorianCalendar.add(int,int)", "com.sapienter.jbilling.server.list.ResultList.execute()", "javax.sql.RowSet.setDate(int,java.sql.Date)", "com.sapienter.jbilling.server.list.ResultList.prepareStatement(java.lang.String)", "java.util.Date.getTime()", "java.util.Calendar.getTime()", "java.lang.Integer.intValue()"],
    "com.sapienter.jbilling.server.notification.MessageDTO.setContent(MessageSection[])": ["com.sapienter.jbilling.server.notification.MessageDTO.addSection(com.sapienter.jbilling.server.notification.MessageSection)"],
    "com.sapienter.jbilling.server.user.UserBL.update(Integer, UserDTOEx)": ["java.util.Calendar.getInstance()", "com.sapienter.jbilling.server.user.db.UserDTO.setCurrency(com.sapienter.jbilling.server.util.db.CurrencyDTO)", "com.sapienter.jbilling.server.process.AgeingBL.setUserStatus(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.util.Date)", "com.sapienter.jbilling.server.user.db.CustomerDTO.getExcludeAging()", "com.sapienter.jbilling.server.user.db.UserDTO.getEntity()", "com.sapienter.jbilling.common.JBCrypto.getPasswordCrypto(java.lang.Integer)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.user.UserDTOEx.getSubscriptionStatusId()", "com.sapienter.jbilling.server.user.db.CustomerDTO.setBalanceType(int)", "com.sapienter.jbilling.server.user.UserDTOEx.getMainRoleId()", "com.sapienter.jbilling.server.user.db.UserDTO.getLanguageIdField()", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.user.db.UserDTO.setPassword(java.lang.String)", "com.sapienter.jbilling.server.user.db.CustomerDTO.getDfFm()", "com.sapienter.jbilling.server.user.db.CustomerDTO.getIsParent()", "com.sapienter.jbilling.server.user.db.CustomerDTO.setExcludeAging(int)", "com.sapienter.jbilling.server.user.db.CustomerDTO.setParent(com.sapienter.jbilling.server.user.db.CustomerDTO)", "com.sapienter.jbilling.server.user.db.UserDTO.setUserName(java.lang.String)", "com.sapienter.jbilling.server.user.db.CustomerDTO.getBalanceType()", "com.sapienter.jbilling.server.user.db.CustomerDTO.getPartner()", "com.sapienter.jbilling.server.user.UserDTOEx.getEntityId()", "com.sapienter.jbilling.server.user.db.UserDTO.getPassword()", "com.sapienter.jbilling.server.user.db.UserDTO.setCompany(com.sapienter.jbilling.server.user.db.CompanyDTO)", "com.sapienter.jbilling.server.user.db.UserDTO.getId()", "com.sapienter.jbilling.server.util.db.AbstractGenericStatus.getId()", "com.sapienter.jbilling.server.user.UserDTOEx.getLanguageId()", "com.sapienter.jbilling.server.order.OrderBL.setMainSubscription(java.lang.Integer)", "com.sapienter.jbilling.server.user.db.UserDTO.getUserId()", "com.sapienter.jbilling.server.user.db.UserDTO.getUserName()", "java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.user.db.CustomerDTO.setIsParent(java.lang.Integer)", "com.sapienter.jbilling.server.user.UserBL.getMainRole()", "com.sapienter.jbilling.server.user.db.CustomerDTO.getDueDateUnitId()", "com.sapienter.jbilling.server.user.db.UserDTO.getCustomer()", "com.sapienter.jbilling.server.user.db.CustomerDTO.getDueDateValue()", "com.sapienter.jbilling.server.user.UserBL.updateRoles(java.util.Set,java.lang.Integer)", "com.sapienter.jbilling.server.user.db.CustomerDTO.getInvoiceDeliveryMethod()", "com.sapienter.jbilling.server.user.db.CustomerDTO.setDueDateValue(java.lang.Integer)", "java.lang.String.equals(java.lang.Object)", "com.sapienter.jbilling.server.user.db.CustomerDTO.getCurrentOrderId()", "com.sapienter.jbilling.server.user.db.CustomerDTO.setCreditLimit(java.math.BigDecimal)", "com.sapienter.jbilling.server.user.UserBL.updateSubscriptionStatus(java.lang.Integer)", "com.sapienter.jbilling.server.user.db.UserDTO.setLanguage(com.sapienter.jbilling.server.util.db.LanguageDTO)", "com.sapienter.jbilling.server.user.db.UserDTO.getStatus()", "com.sapienter.jbilling.server.user.db.CustomerDTO.getId()", "com.sapienter.jbilling.server.user.db.CustomerDTO.setAutoRecharge(java.math.BigDecimal)", "com.sapienter.jbilling.server.user.db.CustomerDTO.setDueDateUnitId(java.lang.Integer)", "com.sapienter.jbilling.server.user.db.CustomerDTO.setPartner(com.sapienter.jbilling.server.user.partner.db.Partner)", "com.sapienter.jbilling.common.JBCrypto.encrypt(java.lang.String)", "com.sapienter.jbilling.server.user.db.CustomerDTO.setDfFm(java.lang.Integer)", "com.sapienter.jbilling.server.user.db.CustomerDTO.getCreditLimit()", "com.sapienter.jbilling.server.user.db.UserDTO.getCurrencyId()", "com.sapienter.jbilling.server.user.UserDTOEx.getStatusId()", "com.sapienter.jbilling.server.util.audit.EventLogger.audit(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.util.Date)", "com.sapienter.jbilling.server.user.db.CustomerDTO.getInvoiceChild()", "com.sapienter.jbilling.server.user.db.CustomerDTO.setInvoiceChild(java.lang.Integer)", "com.sapienter.jbilling.server.user.db.UserDTO.getRoles()", "java.util.Calendar.getTime()", "com.sapienter.jbilling.server.user.db.CustomerDTO.setInvoiceDeliveryMethod(com.sapienter.jbilling.server.invoice.db.InvoiceDeliveryMethodDTO)", "com.sapienter.jbilling.server.user.db.CustomerDTO.getParent()", "com.sapienter.jbilling.server.user.db.CustomerDTO.getAutoRecharge()"],
    "com.sapienter.jbilling.server.provisioning.task.CommandsQueueSender.postCommandsQueue(LinkedList, String)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.provisioning.task.CommandsQueueSender.postCommand(java.util.LinkedList,java.lang.String,javax.jms.MapMessage)", "java.util.AbstractCollection.isEmpty()", "java.util.Iterator.next()", "javax.jms.Session.createMapMessage()", "java.util.AbstractSequentialList.iterator()", "org.springframework.jms.core.JmsTemplate.send(javax.jms.Destination,com.sapienter.jbilling.server.provisioning.task.CommandsQueueSender$1)", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "java.util.Iterator.hasNext()"],
    "com.sapienter.jbilling.server.util.PreferenceBL.createUpdateForEntity(Integer, Integer, String)": ["com.sapienter.jbilling.server.util.db.PreferenceDTO.setForeignId(int)", "com.sapienter.jbilling.server.util.db.PreferenceDTO.setValue(java.lang.String)", "com.sapienter.jbilling.server.util.db.JbillingTableDAS.findByName(java.lang.String)", "com.sapienter.jbilling.server.util.db.PreferenceDTO.setJbillingTable(com.sapienter.jbilling.server.util.db.JbillingTable)", "com.sapienter.jbilling.server.util.PreferenceBL.set(java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.util.db.PreferenceDTO.setPreferenceType(com.sapienter.jbilling.server.util.db.PreferenceTypeDTO)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)"],
    "com.sapienter.jbilling.server.util.PreferenceBL.createUpdateForEntity(Integer, Integer, Integer)": ["com.sapienter.jbilling.server.util.PreferenceBL.createUpdateForEntity(java.lang.Integer,java.lang.Integer,java.lang.String)", "java.lang.Integer.toString()"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getUserSubscriptions(Integer)": ["java.util.List.indexOf(java.lang.Object)", "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerLanguageId()", "java.util.List.size()", "com.sapienter.jbilling.server.order.db.OrderDAS.findByUserSubscriptions(java.lang.Integer)", "com.sapienter.jbilling.server.order.OrderBL.getWS(java.lang.Integer)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.createInvoice(Integer, boolean)": ["com.sapienter.jbilling.server.process.db.BillingProcessDTO.setIsReview(int)", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.getPeriodUnit()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getId()", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.getPeriodValue()", "com.sapienter.jbilling.server.process.db.BillingProcessDTO.setRetriesToDo(int)", "com.sapienter.jbilling.server.process.BillingProcessBL.generateInvoice(com.sapienter.jbilling.server.process.db.BillingProcessDTO,com.sapienter.jbilling.server.user.db.UserDTO,boolean,boolean)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.process.db.BillingProcessDTO.setEntity(com.sapienter.jbilling.server.user.db.CompanyDTO)", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDAS.findByEntity(com.sapienter.jbilling.server.user.db.CompanyDTO)", "com.sapienter.jbilling.server.user.db.UserDTO.getCompany()", "com.sapienter.jbilling.server.process.db.BillingProcessDTO.setPeriodUnit(com.sapienter.jbilling.server.process.db.PeriodUnitDTO)", "com.sapienter.jbilling.server.process.db.BillingProcessDTO.setBillingDate(java.util.Date)", "com.sapienter.jbilling.server.process.db.BillingProcessDTO.setPeriodValue(int)", "com.sapienter.jbilling.server.process.db.BillingProcessDTO.setId(int)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerCompanyId()": ["com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getSpringSecurityService()", "grails.plugins.springsecurity.SpringSecurityService.getPrincipal()", "com.sapienter.jbilling.client.authentication.CompanyUserDetails.getCompanyId()"],
    "com.sapienter.jbilling.server.order.OrderHelper.desynchronizeOrderLines(OrderDTO)": ["com.sapienter.jbilling.server.order.db.OrderDTO.getLines()", "com.sapienter.jbilling.server.order.db.OrderDTO.setLines(java.util.List)"],
    "com.sapienter.jbilling.server.process.task.ScpUploadTask.mark(List, File)": ["org.apache.log4j.Category.debug(java.lang.Object)", "java.io.Writer.write(java.lang.String)", "java.io.File.getParentFile()", "java.io.OutputStreamWriter.close()", "java.io.File.getPath()", "java.io.File.getName()"],
    "com.sapienter.jbilling.server.notification.db.NotificationMessageArchLineDAS.create(String, Integer)": ["com.sapienter.jbilling.server.notification.db.NotificationMessageArchLineDTO.setSection(int)", "com.sapienter.jbilling.server.notification.db.NotificationMessageArchLineDTO.setContent(java.lang.String)", "java.lang.String.substring(int,int)", "org.apache.log4j.Category.warn(java.lang.Object)", "org.apache.log4j.Logger.getLogger(java.lang.Class)", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)", "java.lang.String.length()"],
    "com.sapienter.jbilling.server.pluggableTask.PaymentEmailAuthorizeNetTask.process(PaymentDTOEx)": ["java.util.Map.get(java.lang.Object)", "org.apache.log4j.Category.debug(java.lang.Object)", "java.math.BigDecimal.toString()", "com.sapienter.jbilling.server.user.db.UserDTO.getUserName()", "java.lang.Integer.equals(java.lang.Object)", "org.apache.log4j.Category.warn(java.lang.Object)", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription.getName()", "com.sapienter.jbilling.server.user.db.UserDTO.getEntity()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getPaymentResult()", "com.sapienter.jbilling.server.user.UserBL.getEntity()", "org.apache.log4j.Logger.getLogger(java.lang.Class)", "com.sapienter.jbilling.server.pluggableTask.PaymentAuthorizeNetTask.process(com.sapienter.jbilling.server.payment.PaymentDTOEx)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getId()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getAuthorization()", "java.lang.Integer.toString()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getAmount()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getApprovalCode()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getTransactionId()", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getUserId()", "com.sapienter.jbilling.server.payment.db.PaymentResultDTO.getId()", "com.sapienter.jbilling.server.notification.NotificationBL.sendSapienterEmail(java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String[])"],
    "com.sapienter.jbilling.server.payment.PaymentBL.getLatest(Integer)": ["java.sql.ResultSet.wasNull()", "java.sql.ResultSet.next()", "java.sql.Connection.close()", "javax.sql.RowSet.setInt(int,int)", "java.sql.ResultSet.getInt(int)", "com.sapienter.jbilling.server.list.ResultList.execute()", "com.sapienter.jbilling.server.list.ResultList.prepareStatement(java.lang.String)", "java.lang.Integer.intValue()", "java.sql.ResultSet.close()"],
    "com.sapienter.jbilling.server.order.TimePeriod.setOwn_invoice(Integer)": ["java.util.Calendar.getInstance()", "java.util.Calendar.getTimeInMillis()", "java.lang.Integer.intValue()"],
    "com.sapienter.jbilling.server.payment.blacklist.CsvProcessor.createIpAddressRecord(BlacklistDTO)": ["java.util.Set.add(java.lang.Object)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.setFields(java.util.Set)", "com.sapienter.jbilling.server.payment.blacklist.CsvProcessor.checkForEmptyRecord(java.lang.String,com.sapienter.jbilling.server.payment.blacklist.CsvProcessor$Column[])", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.setDeleted(int)", "com.sapienter.jbilling.server.user.contact.db.ContactFieldDTO.setContent(java.lang.String)", "com.sapienter.jbilling.server.payment.blacklist.CsvProcessor.getString(com.sapienter.jbilling.server.payment.blacklist.CsvProcessor$Column)", "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDTO.setContact(com.sapienter.jbilling.server.user.contact.db.ContactDTO)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.setCreateDate(java.util.Date)", "com.sapienter.jbilling.server.user.contact.db.ContactFieldDTO.setType(com.sapienter.jbilling.server.user.contact.db.ContactFieldTypeDTO)", "com.sapienter.jbilling.server.user.contact.db.ContactFieldDTO.setContact(com.sapienter.jbilling.server.user.contact.db.ContactDTO)"],
    "com.sapienter.jbilling.server.payment.db.PaymentDTO.getFieldValues()": ["com.sapienter.jbilling.server.user.db.UserDTO.getUserName()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getId()", "java.lang.StringBuffer.toString()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getCardCode()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getExpiry()", "com.sapienter.jbilling.server.payment.db.PaymentInfoChequeDTO.getDate()", "java.util.Iterator.hasNext()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getAvs()", "java.lang.StringBuffer.append(java.lang.String)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getCode2()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getCode3()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getTransactionId()", "com.sapienter.jbilling.server.user.db.AchDTO.getBankName()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getCode1()", "java.lang.StringBuffer.append(int)", "com.sapienter.jbilling.server.user.db.AchDTO.getAccountName()", "com.sapienter.jbilling.server.user.db.AchDTO.getAccountType()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getCcNumberPlain()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getProcessor()", "java.util.Iterator.next()", "com.sapienter.jbilling.server.payment.db.PaymentInvoiceMapDTO.getInvoiceEntity()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getName()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getResponseMessage()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getCcType()", "java.util.Set.isEmpty()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getApprovalCode()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getMD5()", "com.sapienter.jbilling.server.payment.db.PaymentInfoChequeDTO.getBank()", "com.sapienter.jbilling.server.user.db.UserDTO.getId()", "com.sapienter.jbilling.server.util.db.AbstractDescription.getDescription()", "java.util.Set.iterator()", "com.sapienter.jbilling.server.payment.db.PaymentInfoChequeDTO.getNumber()"],
    "com.sapienter.jbilling.tools.RulesGenerator.readFileToString(File)": ["java.lang.StringBuffer.toString()", "java.io.Reader.read(char[])", "java.lang.StringBuffer.append(char[],int,int)", "java.io.BufferedReader.close()"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentBeanstreamTask.preAuth(PaymentDTOEx)": ["com.sapienter.jbilling.server.payment.tasks.PaymentBeanstreamTask.doPost(java.lang.String,com.sapienter.jbilling.server.payment.PaymentDTOEx)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getCode1()", "com.sapienter.jbilling.server.payment.tasks.PaymentBeanstreamTask$BeanstreamResponseDTO.parseResponse(java.lang.String)", "com.sapienter.jbilling.server.payment.PaymentAuthorizationBL.create(com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO,java.lang.Integer)", "com.sapienter.jbilling.server.payment.tasks.PaymentBeanstreamTask.getPOSTString(com.sapienter.jbilling.server.payment.PaymentDTOEx,java.lang.String,java.lang.String)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setPaymentResult(com.sapienter.jbilling.server.payment.db.PaymentResultDTO)", "java.lang.String.equals(java.lang.Object)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getId()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.setAuthorization(com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO)"],
    "com.sapienter.jbilling.server.user.contact.db.ContactFieldDAS.findByType(Integer, Integer)": ["org.hibernate.Query.uniqueResult()", "getSession()", "org.hibernate.Query.setParameter(java.lang.String,java.lang.Integer)", "createQuery(java.lang.String)"],
    "com.sapienter.jbilling.server.payment.blacklist.CsvProcessor.getMessage(String, Object[])": ["java.lang.String.replaceFirst(java.lang.String,java.lang.String)", "java.util.ResourceBundle.getString(java.lang.String)", "java.lang.Object.toString()"],
    "com.sapienter.jbilling.server.process.ProcessRunWS.toString()": ["java.util.List.size()"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.setReviewApproval(Boolean)": ["com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerCompanyId()", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerId()", "com.sapienter.jbilling.server.process.IBillingProcessSessionBean.setReviewApproval(java.lang.Integer,java.lang.Integer,java.lang.Boolean)", "com.sapienter.jbilling.server.process.ConfigurationBL.getWS(com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO)"],
    "com.sapienter.jbilling.server.util.CurrencyWS.setRate(BigDecimal)": ["java.math.BigDecimal.toString()"],
    "com.sapienter.jbilling.server.pluggableTask.ProcessorEmailAlarmTask.sendEmail(String, String[])": ["org.apache.log4j.Category.debug(java.lang.Object)", "java.util.Map.get(java.lang.Object)", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription.getName()", "com.sapienter.jbilling.server.notification.NotificationBL.sendSapienterEmail(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String[])", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)", "com.sapienter.jbilling.server.notification.NotificationBL.sendSapienterEmail(java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String[])"],
    "com.sapienter.jbilling.server.mediation.db.MediationProcessDAS.findAllByEntity(Integer)": ["org.hibernate.Query.list()", "getSession()", "org.hibernate.Query.setParameter(java.lang.String,java.lang.Integer)", "createQuery(java.lang.String)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.updatePayment(PaymentWS)": ["com.sapienter.jbilling.server.payment.PaymentBL.update(java.lang.Integer,com.sapienter.jbilling.server.payment.PaymentDTOEx)", "com.sapienter.jbilling.server.payment.PaymentWS.getId()", "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerId()"],
    "com.sapienter.jbilling.server.payment.db.PaymentDAS.findTotalRevenueByUser(Integer)": ["org.hibernate.criterion.Restrictions.eq(java.lang.String,java.lang.Integer)", "org.hibernate.criterion.Restrictions.ne(java.lang.String,java.lang.Integer)", "getSession()", "add()", "org.hibernate.Criteria.add()", "createCriteria(java.lang.Class)", "org.hibernate.Criteria.uniqueResult()", "org.hibernate.Criteria.setProjection()", "createAlias(java.lang.String,java.lang.String)", "java.math.BigDecimal.subtract(java.math.BigDecimal)", "org.hibernate.criterion.Projections.sum(java.lang.String)", "org.hibernate.Criteria.setComment(java.lang.String)", "org.hibernate.criterion.Restrictions.eq(java.lang.String,int)"],
    "com.sapienter.jbilling.server.order.db.OrderLineDTO.getProvisioningStatusId()": ["com.sapienter.jbilling.server.order.db.OrderLineDTO.getProvisioningStatus()", "com.sapienter.jbilling.server.util.db.AbstractGenericStatus.getId()"],
    "com.sapienter.jbilling.server.user.UserBL.setPermissions(Set)": ["org.apache.log4j.Category.debug(java.lang.Object)", "java.util.Set.add(java.lang.Object)", "com.sapienter.jbilling.server.user.db.UserDTO.getPermissions()", "java.util.Set.clear()", "com.sapienter.jbilling.server.user.db.UserDTO.getRoles()", "com.sapienter.jbilling.server.user.permisson.db.RoleDTO.getPermissions()", "java.util.Set.contains(java.lang.Object)", "java.util.Set.size()", "com.sapienter.jbilling.server.user.db.UserDTO.getId()", "java.util.Set.addAll(java.util.Collection)", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)"],
    "com.sapienter.jbilling.server.user.db.UserDTO.getStatus()": ["com.sapienter.jbilling.server.user.db.UserDTO.getUserStatus()"],
    "com.sapienter.jbilling.server.item.CurrencyBL.convert(Integer, Integer, BigDecimal, Integer)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.item.CurrencyBL.convertToPivot(java.lang.Integer,java.math.BigDecimal,java.lang.Integer)", "java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.item.CurrencyBL.convertPivotToCurrency(java.lang.Integer,java.math.BigDecimal,java.lang.Integer)"],
    "com.sapienter.jbilling.server.order.OrderBL.create(Integer, Integer, OrderDTO)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.order.db.OrderDTO.setIsCurrent(java.lang.Integer)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setProvisioningStatus(com.sapienter.jbilling.server.provisioning.db.ProvisioningStatusDTO)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.order.db.OrderDTO.getOrderPeriod()", "java.lang.Integer.intValue()", "com.sapienter.jbilling.server.order.db.OrderDTO.setBaseUserByUserId(com.sapienter.jbilling.server.user.db.UserDTO)", "com.sapienter.jbilling.server.order.db.OrderDTO.setBaseUserByCreatedBy(com.sapienter.jbilling.server.user.db.UserDTO)", "com.sapienter.jbilling.server.util.audit.EventLogger.auditBySystem(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.util.Date)", "com.sapienter.jbilling.server.order.db.OrderDTO.getBaseUserByUserId()", "com.sapienter.jbilling.server.order.db.OrderDTO.getIsCurrent()", "com.sapienter.jbilling.server.order.db.OrderDTO.getId()", "com.sapienter.jbilling.server.order.db.OrderDTO.setDefaults()", "com.sapienter.jbilling.server.system.event.EventManager.process(com.sapienter.jbilling.server.system.event.Event)", "com.sapienter.jbilling.server.order.db.OrderPeriodDTO.getId()", "com.sapienter.jbilling.server.order.db.OrderDTO.getActiveSince()", "java.util.Date.before(java.util.Date)", "com.sapienter.jbilling.server.order.db.OrderDTO.setOrderBillingType(com.sapienter.jbilling.server.order.db.OrderBillingTypeDTO)", "com.sapienter.jbilling.server.order.db.OrderDTO.getLines()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setPurchaseOrder(com.sapienter.jbilling.server.order.db.OrderDTO)", "com.sapienter.jbilling.server.user.db.UserDTO.getId()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getProvisioningStatus()", "com.sapienter.jbilling.server.util.db.AbstractGenericStatus.getId()", "com.sapienter.jbilling.server.order.OrderBL.setMainSubscription(java.lang.Integer)", "com.sapienter.jbilling.server.order.db.OrderDTO.setOrderPeriod(com.sapienter.jbilling.server.order.db.OrderPeriodDTO)", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)", "com.sapienter.jbilling.server.util.db.AbstractGenericStatusDAS.find(java.io.Serializable)"],
    "com.sapienter.jbilling.server.util.Util.join(List, String)": ["java.util.Iterator.next()", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.toString()", "java.util.List.iterator()", "java.util.Iterator.hasNext()"],
    "com.sapienter.jbilling.server.util.PreferenceBL.getString()": ["com.sapienter.jbilling.server.util.db.PreferenceDTO.getValue()", "org.apache.commons.lang.StringUtils.isNotBlank(java.lang.String)", "com.sapienter.jbilling.server.util.db.PreferenceTypeDTO.getDefaultValue()"],
    "com.sapienter.jbilling.server.process.AgeingWS.getOwningEntityId()": ["com.sapienter.jbilling.server.process.AgeingWS.getEntityId()"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentPaypalExternalTask.convertCreditCard(PaymentDTOEx)": ["com.sapienter.jbilling.server.user.db.CreditCardDTO.getSecurityCode()", "com.sapienter.jbilling.server.payment.tasks.PaymentPaypalExternalTask.convertCreditCardType(int)", "com.sapienter.jbilling.server.payment.tasks.PaymentPaypalExternalTask.convertCreditCardExpiration(java.util.Date)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getExpiry()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getCcType()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getCcNumberPlain()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getCreditCard()"],
    "com.sapienter.jbilling.server.process.task.SimpleTaxCompositionTask.isTaxCalculationNeeded(Integer, Integer)": ["com.sapienter.jbilling.server.user.contact.db.ContactDTO.getFields()", "com.sapienter.jbilling.server.user.contact.db.ContactFieldDTO.getType()", "com.sapienter.jbilling.server.user.contact.db.ContactFieldDTO.getContent()", "com.sapienter.jbilling.server.user.contact.db.ContactFieldTypeDTO.getId()", "java.lang.String.equalsIgnoreCase(java.lang.String)", "com.sapienter.jbilling.server.user.contact.db.ContactDAS.findPrimaryContact(java.lang.Integer)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getUsersByCreditCard(String)": ["com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerCompanyId()", "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getByCCNumber(java.lang.Integer,java.lang.String)"],
    "com.sapienter.jbilling.server.order.OrderHelper.delete(OrderDTO, Integer)": ["java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setDeleted(int)", "com.sapienter.jbilling.server.order.db.OrderDTO.getLines()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getItemId()"],
    "com.sapienter.jbilling.server.payment.PaymentSessionBean.processPayout(PaymentDTOEx, Date, Date, Integer, Boolean)": ["com.sapienter.jbilling.server.user.partner.PartnerBL.processPayout(java.lang.Integer,java.util.Date,java.util.Date,com.sapienter.jbilling.server.payment.PaymentDTOEx,java.lang.Boolean)"],
    "com.sapienter.jbilling.server.process.event.InvoicesGeneratedEvent.addInvoices(InvoiceDTO[])": ["com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getId()", "java.util.List.add(java.lang.Object)"],
    "com.sapienter.jbilling.server.user.UserBL.hasCreditCard()": ["com.sapienter.jbilling.server.user.db.UserDTO.getCreditCards()", "java.util.Set.isEmpty()"],
    "com.sapienter.jbilling.server.provisioning.task.CAIProvisioningTask.getId()": ["java.util.Map.get(java.lang.Object)", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription.getName()"],
    "com.sapienter.jbilling.server.user.UserBL.canInvoice()": ["java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.user.db.CustomerDTO.getInvoiceChild()", "com.sapienter.jbilling.server.user.db.UserDTO.getDeleted()", "com.sapienter.jbilling.server.user.UserBL.getMainRole()", "com.sapienter.jbilling.server.user.db.UserDTO.getCustomer()", "java.lang.Integer.intValue()", "com.sapienter.jbilling.server.user.db.CustomerDTO.getParent()"],
    "com.sapienter.jbilling.server.invoice.NewInvoiceDTO.isEmpty()": ["java.util.List.isEmpty()", "java.util.Set.isEmpty()"],
    "com.sapienter.jbilling.server.user.UserDTOEx.setEntityId(Integer)": ["com.sapienter.jbilling.server.user.db.UserDTO.setCompany(com.sapienter.jbilling.server.user.db.CompanyDTO)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getUnpaidInvoices(Integer)": ["java.sql.ResultSet.next()", "com.sapienter.jbilling.server.invoice.InvoiceBL.getPayableInvoicesByUser(java.lang.Integer)", "javax.sql.rowset.CachedRowSet.size()", "java.sql.ResultSet.getInt(int)", "java.sql.ResultSet.close()"],
    "com.sapienter.jbilling.server.pluggableTask.BasicEmailNotificationTask.deliver(UserDTO, MessageDTO)": ["getAllRecipients()", "java.util.Calendar.getInstance()", "org.apache.log4j.Category.info(java.lang.Object)", "com.sapienter.jbilling.server.user.db.UserDTO.getEntity()", "org.springframework.mail.javamail.MimeMessageHelper.setSubject(java.lang.String)", "org.springframework.mail.javamail.MimeMessageHelper.addAttachment(java.lang.String,org.springframework.core.io.FileSystemResource)", "org.springframework.mail.javamail.MimeMessageHelper.setText(java.lang.String)", "org.apache.log4j.Category.warn(java.lang.Object,java.lang.Throwable)", "org.springframework.mail.javamail.JavaMailSenderImpl.setPassword(java.lang.String)", "org.springframework.mail.javamail.JavaMailSenderImpl.getJavaMailProperties()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getEmail()", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "org.apache.log4j.Category.debug(java.lang.Object,java.lang.Throwable)", "org.springframework.mail.javamail.MimeMessageHelper.setText(java.lang.String,java.lang.String)", "org.springframework.mail.javamail.JavaMailSenderImpl.setPort(int)", "com.sapienter.jbilling.common.Util.getSysProp(java.lang.String)", "org.springframework.mail.javamail.JavaMailSenderImpl.setHost(java.lang.String)", "java.io.File.delete()", "org.springframework.mail.javamail.MimeMessageHelper.setReplyTo(java.lang.String)", "java.util.Map.get(java.lang.Object)", "com.sapienter.jbilling.server.pluggableTask.BasicEmailNotificationTask.getSections()", "getRecipients()", "org.springframework.mail.javamail.JavaMailSenderImpl.send(javax.mail.internet.MimeMessage)", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription.getName()", "com.sapienter.jbilling.server.notification.MessageDTO.getAttachmentFile()", "org.springframework.mail.javamail.MimeMessageHelper.setTo(javax.mail.internet.InternetAddress[])", "com.sapienter.jbilling.server.notification.MessageDTO.getContent()", "java.lang.Integer.compareTo(java.lang.Integer)", "setProperty(java.lang.String,java.lang.String)", "com.sapienter.jbilling.server.notification.NotificationBL.sendSapienterEmail(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String[])", "com.sapienter.jbilling.server.user.db.UserDTO.getUserId()", "com.sapienter.jbilling.server.notification.MessageSection.getContent()", "org.apache.log4j.Category.debug(java.lang.Object)", "org.springframework.mail.javamail.JavaMailSenderImpl.setUsername(java.lang.String)", "com.sapienter.jbilling.server.user.ContactBL.getAll(java.lang.Integer)", "java.util.List.add(java.lang.Object)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getInclude()", "org.springframework.mail.javamail.JavaMailSenderImpl.createMimeMessage()", "java.lang.Integer.intValue()", "java.io.File.getName()", "java.lang.String.trim()", "com.sapienter.jbilling.server.pluggableTask.BasicEmailNotificationTask.init()", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)", "javax.mail.MessagingException.getMessage()", "java.util.List.get(int)", "org.springframework.mail.javamail.MimeMessageHelper.setFrom(javax.mail.internet.InternetAddress)", "java.lang.String.length()", "java.util.List.toArray(java.lang.Object[])", "org.springframework.mail.javamail.MimeMessageHelper.setSentDate(java.util.Date)", "org.springframework.mail.javamail.MimeMessageHelper.getMimeMessage()", "com.sapienter.jbilling.server.notification.MessageDTO.getTypeId()", "javax.mail.Address.toString()", "java.lang.Throwable.getMessage()", "java.util.List.size()", "java.util.Calendar.getTime()", "org.springframework.mail.javamail.MimeMessageHelper.setBcc(javax.mail.internet.InternetAddress)"],
    "com.sapienter.jbilling.server.notification.NotificationSessionBean.notify(Integer, MessageDTO)": ["com.sapienter.jbilling.server.notification.NotificationSessionBean.notify(com.sapienter.jbilling.server.user.db.UserDTO,com.sapienter.jbilling.server.notification.MessageDTO)", "java.lang.Throwable.getMessage()", "com.sapienter.jbilling.server.user.UserBL.getEntity()"],
    "com.sapienter.jbilling.server.user.UserSessionBean.getAuthPaymentType(Integer)": ["com.sapienter.jbilling.server.user.db.CustomerDTO.getAutoPaymentType()", "com.sapienter.jbilling.server.user.db.UserDTO.getCustomer()", "com.sapienter.jbilling.server.user.UserBL.getEntity()"],
    "com.sapienter.jbilling.server.payment.PaymentAuthorizationBL.getDTO()": ["com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getProcessor()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.setTransactionId(java.lang.String)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.setCode1(java.lang.String)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getCardCode()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getResponseMessage()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.setCreateDate(java.util.Date)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getAvs()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.setAvs(java.lang.String)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.setCode2(java.lang.String)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.setId(int)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getCode2()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getApprovalCode()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getCode3()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getCreateDate()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.setApprovalCode(java.lang.String)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getMD5()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getTransactionId()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getCode1()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.setResponseMessage(java.lang.String)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.setCode3(java.lang.String)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.setCardCode(java.lang.String)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.setMD5(java.lang.String)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.setProcessor(java.lang.String)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getId()"],
    "com.sapienter.jbilling.server.user.partner.PartnerWS.setTotalPayments(BigDecimal)": ["java.math.BigDecimal.toString()"],
    "com.sapienter.jbilling.server.payment.PaymentBL.set(Integer)": ["com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)"],
    "com.sapienter.jbilling.server.process.db.ProcessRunUserDAS.findUsersCountByStatus(Integer, Integer)": ["org.hibernate.criterion.Restrictions.eq(java.lang.String,java.lang.Integer)", "setProjection()", "getSession()", "add()", "createCriteria(java.lang.Class)", "org.hibernate.Criteria.uniqueResult()", "org.hibernate.criterion.Projections.count(java.lang.String)"],
    "com.sapienter.jbilling.server.user.tasks.UserBalanceValidatePurchaseTask.validate(CustomerDTO, List, List, ValidatePurchaseWS, List)": ["com.sapienter.jbilling.server.user.balance.IUserBalanceValidation.validate(com.sapienter.jbilling.server.user.db.CustomerDTO,java.math.BigDecimal)", "java.math.BigDecimal.setScale(int,int)", "com.sapienter.jbilling.server.user.ValidatePurchaseWS.setQuantity(java.math.BigDecimal)", "com.sapienter.jbilling.server.user.db.CustomerDTO.getInvoiceChild()", "com.sapienter.jbilling.server.user.db.CustomerDTO.getBalanceType()", "java.math.BigDecimal.add(java.math.BigDecimal)", "com.sapienter.jbilling.server.user.ValidatePurchaseWS.getAuthorized()", "java.math.BigDecimal.compareTo(java.math.BigDecimal)", "com.sapienter.jbilling.server.user.ValidatePurchaseWS.setAuthorized(java.lang.Boolean)", "com.sapienter.jbilling.server.user.db.CustomerDTO.getParent()"],
    "com.sapienter.jbilling.server.process.PeriodOfTime.toString()": ["com.sapienter.jbilling.server.process.PeriodOfTime.getDaysInCycle()"],
    "com.sapienter.jbilling.server.user.db.AchDAS.create(UserDTO, String, String, Integer, String, String, String)": ["com.sapienter.jbilling.server.user.db.AchDTO.setAbaRouting(java.lang.String)", "com.sapienter.jbilling.server.user.db.AchDTO.setAccountName(java.lang.String)", "com.sapienter.jbilling.server.user.db.AchDTO.setBaseUser(com.sapienter.jbilling.server.user.db.UserDTO)", "com.sapienter.jbilling.server.user.db.AchDTO.setBankName(java.lang.String)", "com.sapienter.jbilling.server.user.db.AchDTO.setBankAccount(java.lang.String)", "com.sapienter.jbilling.server.user.db.AchDTO.setAccountType(int)", "com.sapienter.jbilling.server.user.db.AchDTO.setGatewayKey(java.lang.String)", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)"],
    "com.sapienter.jbilling.server.item.ItemPriceDTOEx.toString()": ["com.sapienter.jbilling.server.item.ItemPriceDTOEx.itemPriceDtoToString()"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentBeanstreamTask.process(PaymentDTOEx)": ["com.sapienter.jbilling.server.payment.tasks.PaymentBeanstreamTask.doPost(java.lang.String,com.sapienter.jbilling.server.payment.PaymentDTOEx)", "com.sapienter.jbilling.server.payment.tasks.PaymentBeanstreamTask$BeanstreamResponseDTO.parseResponse(java.lang.String)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "java.math.BigDecimal.compareTo(java.math.BigDecimal)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getId()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getAmount()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getAch()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getCode1()", "com.sapienter.jbilling.server.payment.PaymentAuthorizationBL.create(com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO,java.lang.Integer)", "com.sapienter.jbilling.server.payment.tasks.PaymentBeanstreamTask.getPOSTString(com.sapienter.jbilling.server.payment.PaymentDTOEx,java.lang.String,java.lang.String)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setPaymentResult(com.sapienter.jbilling.server.payment.db.PaymentResultDTO)", "java.lang.String.equals(java.lang.Object)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getIsRefund()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getCreditCard()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.setAuthorization(com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO)", "org.apache.log4j.Category.error(java.lang.Object)"],
    "com.sapienter.jbilling.server.process.AgeingBL.getSteps(Integer, Integer, Integer)": ["com.sapienter.jbilling.server.user.db.UserStatusDTO.getCanLogin()", "com.sapienter.jbilling.server.process.AgeingDTOEx.setStatusStr(java.lang.String)", "com.sapienter.jbilling.server.process.AgeingDTOEx.setInUse(java.lang.Boolean)", "com.sapienter.jbilling.server.process.AgeingDTOEx.setFailedLoginMessage(java.lang.String)", "com.sapienter.jbilling.server.process.AgeingDTOEx.setWelcomeMessage(java.lang.String)", "com.sapienter.jbilling.server.process.AgeingDTOEx.setStatusId(java.lang.Integer)", "com.sapienter.jbilling.server.util.db.AbstractDescription.getDescription(java.lang.Integer)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.process.db.AgeingEntityStepDTO.getWelcomeMessage(java.lang.Integer)", "java.lang.Integer.intValue()", "com.sapienter.jbilling.server.process.AgeingDTOEx.setCanLogin(java.lang.Integer)", "com.sapienter.jbilling.server.process.db.AgeingEntityStepDTO.getDays()", "com.sapienter.jbilling.server.process.db.AgeingEntityStepDTO.getId()", "com.sapienter.jbilling.server.process.db.AgeingEntityStepDTO.setDays(int)", "com.sapienter.jbilling.server.process.db.AgeingEntityStepDTO.getFailedLoginMessage(java.lang.Integer)", "com.sapienter.jbilling.server.util.db.AbstractGenericStatusDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.process.db.AgeingEntityStepDAS.findStep(java.lang.Integer,java.lang.Integer)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getLatestOrderByItemType(Integer, Integer)": ["com.sapienter.jbilling.server.user.db.UserDTO.getLanguageIdField()", "com.sapienter.jbilling.server.order.OrderBL.getLatestByItemType(java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.user.UserBL.getEntity()", "com.sapienter.jbilling.server.order.OrderBL.set(java.lang.Integer)", "com.sapienter.jbilling.server.order.OrderBL.getWS(java.lang.Integer)", "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerId()"],
    "com.sapienter.jbilling.server.rule.RulesBaseTask.executeRules()": ["org.apache.log4j.Category.debug(java.lang.Object)", "org.drools.runtime.StatelessKnowledgeSession.execute(java.util.List)", "com.sapienter.jbilling.server.pluggableTask.PluggableTask.readKnowledgeBase()", "org.drools.runtime.StatelessKnowledgeSession.setGlobal(java.lang.String,org.apache.log4j.Logger)", "org.mvel2.optimizers.OptimizerFactory.setDefaultOptimizer(java.lang.String)", "org.mvel2.optimizers.OptimizerFactory.getThreadAccessorOptimizer()", "org.drools.KnowledgeBase.newStatelessKnowledgeSession()", "org.mvel2.optimizers.OptimizerFactory.getDefaultAccessorCompiler()"],
    "com.sapienter.jbilling.server.pluggableTask.PaperInvoiceNotificationTask.getDesign(UserDTO)": ["com.sapienter.jbilling.server.util.db.LanguageDTO.getCode()", "com.sapienter.jbilling.server.user.db.UserDTO.getLanguage()"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentsGatewayTask.validateParameters()": ["com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase.ensureGetParameter(java.lang.String)"],
    "com.sapienter.jbilling.server.user.contact.ContactFieldTypeWS.getDescription(Integer)": ["java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.util.InternationalDescriptionWS.getLanguageId()"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getUsersByCustomField(Integer, String)": ["com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerCompanyId()", "org.apache.log4j.Category.debug(java.lang.Object)", "java.sql.ResultSet.next()", "javax.sql.rowset.CachedRowSet.size()", "java.sql.ResultSet.getInt(int)", "com.sapienter.jbilling.server.user.UserBL.getByCustomField(java.lang.Integer,java.lang.Integer,java.lang.String)", "java.sql.ResultSet.close()", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)"],
    "com.sapienter.jbilling.client.authentication.CompanyUserAuthenticationFilter.successfulAuthentication(HttpServletRequest, HttpServletResponse, Authentication)": ["org.springframework.security.core.Authentication.getPrincipal()", "org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter.successfulAuthentication(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.security.core.Authentication)", "com.sapienter.jbilling.client.authentication.util.SecuritySession.setAttributes(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.sapienter.jbilling.client.authentication.CompanyUserDetails)"],
    "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskManager.getNextClass()": ["org.apache.log4j.Category.debug(java.lang.Object)", "java.util.Iterator.next()", "org.apache.log4j.Category.fatal(java.lang.Object)", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskTypeDTO.getClassName()", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskTypeCategoryDTO.getInterfaceName()", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskTypeDTO.getCategory()", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDTO.getProcessingOrder()", "java.util.Iterator.hasNext()", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDTO.getType()", "java.lang.Integer.intValue()", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskManager.getInstance(java.lang.String,java.lang.String,com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDTO)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCompany()": ["com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerCompanyId()", "org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.createItemCategory(ItemTypeWS)": ["com.sapienter.jbilling.server.item.ItemTypeBL.getEntity()", "com.sapienter.jbilling.server.item.db.ItemTypeDTO.setDescription(java.lang.String)", "com.sapienter.jbilling.server.item.ItemTypeBL.create(com.sapienter.jbilling.server.item.db.ItemTypeDTO)", "com.sapienter.jbilling.server.item.db.ItemTypeDTO.setEntity(com.sapienter.jbilling.server.user.db.CompanyDTO)", "com.sapienter.jbilling.server.item.db.ItemTypeDTO.getId()", "com.sapienter.jbilling.server.item.db.ItemTypeDTO.setOrderLineTypeId(int)", "com.sapienter.jbilling.server.user.UserBL.getEntity()", "com.sapienter.jbilling.server.item.ItemTypeWS.getDescription()", "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerId()", "com.sapienter.jbilling.server.user.UserBL.getEntityId(java.lang.Integer)", "com.sapienter.jbilling.server.user.db.UserDTO.getUserId()", "com.sapienter.jbilling.server.item.ItemTypeWS.getOrderLineTypeId()"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getUsersNotInStatus(Integer)": ["com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getUsersByStatus(java.lang.Integer,boolean)"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentAuthorizeNetCIMTask.createApi()": ["com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase.ensureGetParameter(java.lang.String)", "com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase.getOptionalParameter(java.lang.String,java.lang.String)", "com.sapienter.jbilling.server.pluggableTask.PaymentTaskWithTimeout.getTimeoutSeconds()", "java.lang.Boolean.valueOf(java.lang.String)"],
    "com.sapienter.jbilling.server.payment.event.ProcessPaymentMDB.onMessage(Message)": ["org.apache.log4j.Category.debug(java.lang.Object)", "javax.jms.Message.getIntProperty(java.lang.String)", "javax.jms.MapMessage.getInt(java.lang.String)", "com.sapienter.jbilling.server.process.IBillingProcessSessionBean.processPayment(java.lang.Integer,java.lang.Integer,java.lang.Integer)", "javax.jms.Message.getStringProperty(java.lang.String)", "java.lang.Object.hashCode()", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "java.lang.String.equals(java.lang.Object)", "com.sapienter.jbilling.server.util.db.AbstractDAS.findForUpdate(java.io.Serializable)", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)", "com.sapienter.jbilling.server.process.IBillingProcessSessionBean.endPayments(java.lang.Integer)", "org.apache.log4j.Category.error(java.lang.Object)"],
    "com.sapienter.jbilling.server.invoice.PaperInvoiceBatchBL.init()": ["com.sapienter.jbilling.server.util.audit.EventLogger.getInstance()"],
    "com.sapienter.jbilling.server.process.task.BasicAgeingTask.getGracePeriod(Integer)": ["java.util.Map.get(java.lang.Object)", "com.sapienter.jbilling.server.util.PreferenceBL.set(java.lang.Integer,java.lang.Integer)", "java.util.Map.put(java.lang.Object,java.lang.Object)", "java.util.Map.containsKey(java.lang.Object)", "com.sapienter.jbilling.server.util.PreferenceBL.getInt()"],
    "com.sapienter.jbilling.server.order.OrderBL.getListIdsByItemType(Integer, Integer, Integer)": ["java.util.List.size()", "com.sapienter.jbilling.server.order.db.OrderDAS.findIdsByUserAndItemTypeLatestFirst(java.lang.Integer,java.lang.Integer,int)", "java.util.List.toArray(java.lang.Object[])"],
    "com.sapienter.jbilling.server.item.PricingField.setIntValue(Integer)": ["java.lang.Integer.toString()"],
    "com.sapienter.jbilling.server.provisioning.ExternalProvisioning.callProcessor(IExternalProvisioning, Processor, Map, String)": ["org.apache.log4j.Category.debug(java.lang.Object)", "java.util.Map.get(java.lang.Object)", "java.lang.Throwable.printStackTrace(java.io.PrintWriter)", "java.io.PrintWriter.close()", "java.lang.StringBuilder.indexOf(java.lang.String,int)", "com.sapienter.jbilling.server.provisioning.config.Processor.getRequests()", "java.lang.AbstractStringBuilder.substring(int,int)", "java.lang.Object.equals(java.lang.Object)", "java.lang.StringBuilder.replace(int,int,java.lang.String)", "java.lang.StringBuilder.toString()", "com.sapienter.jbilling.server.provisioning.ExternalProvisioning.postResults(java.util.Map,java.lang.String)", "com.sapienter.jbilling.server.provisioning.config.Request.getSubmit()", "java.util.Collections.sort(java.util.List)", "java.io.StringWriter.toString()", "com.sapienter.jbilling.server.provisioning.config.Request.getContinueOnType()", "java.lang.Throwable.toString()", "com.sapienter.jbilling.server.provisioning.task.IExternalProvisioning.sendRequest(java.lang.String,java.lang.String)", "java.lang.Throwable.getMessage()", "com.sapienter.jbilling.server.provisioning.config.Request.getPostResult()", "java.lang.StringBuilder.indexOf(java.lang.String)", "org.apache.log4j.Category.error(java.lang.Object)"],
    "com.sapienter.jbilling.server.mediation.MediationSessionBean.createProcessRecord(MediationConfiguration)": ["com.sapienter.jbilling.server.mediation.db.MediationProcess.setStartDatetime(java.util.Date)", "java.util.Calendar.getInstance()", "com.sapienter.jbilling.server.util.db.AbstractDAS.flush()", "com.sapienter.jbilling.server.mediation.db.MediationProcess.setConfiguration(com.sapienter.jbilling.server.mediation.db.MediationConfiguration)", "com.sapienter.jbilling.server.mediation.db.MediationProcess.setOrdersAffected(java.lang.Integer)", "java.util.Calendar.getTime()", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)"],
    "com.sapienter.jbilling.server.user.ContactBL.createUpdatePrimaryForUser(ContactDTOEx, Integer, Integer)": ["com.sapienter.jbilling.server.user.ContactBL.update(com.sapienter.jbilling.server.user.ContactDTOEx)", "com.sapienter.jbilling.server.user.contact.db.ContactDAS.findPrimaryContact(java.lang.Integer)", "com.sapienter.jbilling.server.user.ContactBL.createPrimaryForUser(com.sapienter.jbilling.server.user.ContactDTOEx,java.lang.Integer,java.lang.Integer)"],
    "com.sapienter.jbilling.server.order.db.OrderLineDTO.getTypeId()": ["com.sapienter.jbilling.server.order.db.OrderLineDTO.getOrderLineType()", "com.sapienter.jbilling.server.order.db.OrderLineTypeDTO.getId()"],
    "com.sapienter.jbilling.server.user.db.CreditCardDTO.getType()": ["com.sapienter.jbilling.server.user.db.CreditCardDTO.getCcType()"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentAtlasTask.preAuth(PaymentDTOEx)": ["com.sapienter.jbilling.server.payment.PaymentAuthorizationBL.create(com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO,java.lang.Integer)", "com.sapienter.jbilling.server.payment.tasks.PaymentAtlasTask.makeCall(java.util.Map,boolean)", "com.sapienter.jbilling.server.payment.tasks.PaymentAtlasTask.getChargeData(com.sapienter.jbilling.server.payment.PaymentDTOEx)", "com.sapienter.jbilling.server.payment.tasks.PaymentAtlasTask.validateParameters()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getId()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.setAuthorization(com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO)", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)"],
    "com.sapienter.jbilling.server.process.BillingProcessRunBL.setProcess(Integer)": ["com.sapienter.jbilling.server.process.BillingProcessBL.getEntity()", "java.util.Iterator.next()", "java.util.Set.size()", "com.sapienter.jbilling.server.process.db.BillingProcessDTO.getProcessRuns()", "java.util.Set.iterator()"],
    "com.sapienter.jbilling.server.payment.PaymentSessionBean.applyPayment(PaymentDTO, InvoiceDTO, boolean)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.user.partner.db.Partner.setTotalPayments(java.math.BigDecimal)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getId()", "java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.user.partner.db.Partner.getTotalRefunds()", "com.sapienter.jbilling.server.payment.PaymentBL.getEntity()", "com.sapienter.jbilling.server.user.db.UserDTO.getCustomer()", "java.math.BigDecimal.compareTo(java.math.BigDecimal)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getBalance()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getAmount()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.setToProcess(java.lang.Integer)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getToProcess()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getAttempt()", "com.sapienter.jbilling.server.user.partner.db.Partner.getTotalPayments()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getBalance()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getIsRefund()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getBaseUser()", "com.sapienter.jbilling.server.user.partner.db.Partner.setTotalRefunds(java.math.BigDecimal)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.setPaymentAttempts(int)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.setBalance(java.math.BigDecimal)", "com.sapienter.jbilling.server.process.AgeingBL.out(com.sapienter.jbilling.server.user.db.UserDTO,java.lang.Integer)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getId()", "com.sapienter.jbilling.server.user.db.CustomerDTO.getPartner()", "java.math.BigDecimal.subtract(java.math.BigDecimal)", "com.sapienter.jbilling.server.user.partner.db.Partner.getBalance()", "com.sapienter.jbilling.server.user.partner.db.Partner.setBalance(java.math.BigDecimal)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setBalance(java.math.BigDecimal)", "java.math.BigDecimal.add(java.math.BigDecimal)"],
    "com.sapienter.jbilling.server.payment.blacklist.AddressFilter.checkUser(Integer)": ["com.sapienter.jbilling.server.util.Util.getEntityNotificationsBundle(java.lang.Integer)", "java.util.List.isEmpty()", "java.util.ResourceBundle.getString(java.lang.String)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getStateProvince()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getCity()", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getCountryCode()", "com.sapienter.jbilling.server.user.db.UserDTO.getCompany()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getAddress2()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getPostalCode()", "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDAS.filterByAddress(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getAddress1()", "com.sapienter.jbilling.server.user.contact.db.ContactDAS.findPrimaryContact(java.lang.Integer)"],
    "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDAS.findByEntityType(Integer, Integer)": ["org.hibernate.Query.setCacheable(boolean)", "org.hibernate.Query.uniqueResult()", "getSession()", "org.hibernate.Query.setComment(java.lang.String)", "org.hibernate.Query.setParameter(java.lang.String,java.lang.Integer)", "createQuery(java.lang.String)"],
    "com.sapienter.jbilling.server.item.CurrencyBL.getCurrencies(Integer, Integer)": ["com.sapienter.jbilling.server.item.CurrencyBL.set(java.lang.Integer)", "com.sapienter.jbilling.server.util.db.CurrencyDTO.setName(java.lang.String)", "java.math.BigDecimal.toString()", "com.sapienter.jbilling.server.util.db.CurrencyDTO.setInUse(java.lang.Boolean)", "com.sapienter.jbilling.server.item.CurrencyBL.entityHasCurrency(java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.util.db.AbstractDescription.getDescription(java.lang.Integer)", "com.sapienter.jbilling.server.util.db.CurrencyExchangeDTO.getRate()", "com.sapienter.jbilling.server.util.db.CurrencyExchangeDAS.findExchange(java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.item.CurrencyBL.getSymbols()", "com.sapienter.jbilling.server.util.db.CurrencyDTO.getId()", "com.sapienter.jbilling.server.util.db.CurrencyDTO.setSysRate(java.math.BigDecimal)", "com.sapienter.jbilling.server.util.db.CurrencyDTO.setRate(java.lang.String)"],
    "com.sapienter.jbilling.server.pluggableTask.PluggableTaskSessionBean.deleteParameter(Integer, Integer)": ["com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskBL.deleteParameter(java.lang.Integer,java.lang.Integer)"],
    "com.sapienter.jbilling.server.user.UserBL.validatePurchase(List, List, List)": ["org.apache.log4j.Category.debug(java.lang.Object)", "java.lang.Throwable.printStackTrace(java.io.PrintWriter)", "java.io.PrintWriter.close()", "com.sapienter.jbilling.server.user.ValidatePurchaseWS.setQuantity(java.math.BigDecimal)", "com.sapienter.jbilling.server.user.tasks.IValidatePurchaseTask.validate(com.sapienter.jbilling.server.user.db.CustomerDTO,java.util.List,java.util.List,com.sapienter.jbilling.server.user.ValidatePurchaseWS,java.util.List)", "com.sapienter.jbilling.server.user.ValidatePurchaseWS.setSuccess(java.lang.Boolean)", "java.util.List.toArray()", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskManager.getNextClass()", "com.sapienter.jbilling.server.user.db.UserDTO.getCustomer()", "com.sapienter.jbilling.server.user.ValidatePurchaseWS.setMessage(java.lang.String[])", "com.sapienter.jbilling.server.user.ValidatePurchaseWS.setAuthorized(java.lang.Boolean)", "java.io.StringWriter.toString()", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "java.lang.Throwable.getMessage()", "java.util.Arrays.toString(java.lang.Object[])", "com.sapienter.jbilling.server.user.db.UserDTO.getCompany()", "org.apache.log4j.Category.error(java.lang.Object)"],
    "com.sapienter.jbilling.server.pluggableTask.BasicOrderPeriodTask.verifyEndOfMonthDay(OrderDTO, Date)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.order.db.OrderDTO.getId()", "java.util.Calendar.get(int)", "java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.order.db.OrderPeriodDTO.getUnitId()", "com.sapienter.jbilling.server.order.db.OrderDTO.getCycleStarts()", "com.sapienter.jbilling.server.order.db.OrderDTO.getOrderPeriod()", "java.util.Calendar.set(int,int)", "java.util.GregorianCalendar.getActualMaximum(int)", "java.util.Calendar.setTime(java.util.Date)", "com.sapienter.jbilling.server.pluggableTask.BasicOrderPeriodTask.calculateStart(com.sapienter.jbilling.server.order.db.OrderDTO)", "com.sapienter.jbilling.server.order.db.OrderDTO.getCreateDate()", "com.sapienter.jbilling.server.order.db.OrderDTO.getActiveSince()", "java.util.Calendar.getTime()"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentFilterTask.confirmPreAuth(PaymentAuthorizationDTO, PaymentDTOEx)": ["com.sapienter.jbilling.server.payment.tasks.PaymentFilterTask.callFilters(com.sapienter.jbilling.server.payment.PaymentDTOEx)"],
    "com.sapienter.jbilling.server.order.UsageBL.addWorkingOrder(Usage)": ["com.sapienter.jbilling.server.order.Usage.addLine(com.sapienter.jbilling.server.order.db.OrderLineDTO)", "com.sapienter.jbilling.server.order.UsageBL.getWorkingOrder()", "java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.order.Usage.getItemTypeId()", "com.sapienter.jbilling.server.order.db.OrderDTO.getLines()", "com.sapienter.jbilling.server.item.ItemBL.getEntity()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getItemId()", "com.sapienter.jbilling.server.item.db.ItemDTO.hasType(java.lang.Integer)", "com.sapienter.jbilling.server.order.Usage.getItemId()"],
    "com.sapienter.jbilling.server.user.tasks.BasicSubscriptionStatusManagerTask.isPaymentApplicable(boolean)": ["java.util.Map.get(java.lang.Object)", "org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getIsPreauth()", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription.getName()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getId()", "com.sapienter.jbilling.server.invoice.db.InvoiceDAS.isReleatedToItemType(java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getInvoiceIds()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getAttempt()", "java.lang.Integer.valueOf(java.lang.String)", "java.util.List.size()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getUserId()", "com.sapienter.jbilling.server.util.audit.EventLogger.auditBySystem(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.util.Date)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getIsRefund()", "java.lang.String.length()"],
    "com.sapienter.jbilling.server.provisioning.ExternalProvisioning.processCommand(Command)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.provisioning.task.IExternalProvisioning.getId()", "com.sapienter.jbilling.server.provisioning.config.Command.getFields()", "com.sapienter.jbilling.server.provisioning.config.Field.getDefaultValue()", "com.sapienter.jbilling.server.provisioning.config.Processor.getId()", "com.sapienter.jbilling.server.provisioning.config.Field.getName()", "java.util.Map.put(java.lang.Object,java.lang.Object)", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskManager.getNextClass()", "com.sapienter.jbilling.server.provisioning.ExternalProvisioning.callProcessor(com.sapienter.jbilling.server.provisioning.task.IExternalProvisioning,com.sapienter.jbilling.server.provisioning.config.Processor,java.util.Map,java.lang.String)", "javax.jms.MapMessage.getStringProperty(java.lang.String)", "com.sapienter.jbilling.server.provisioning.config.Command.getProcessors()", "javax.jms.MapMessage.getIntProperty(java.lang.String)", "java.lang.String.equals(java.lang.Object)"],
    "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDAS.findByEntityCategory(Integer, Integer)": ["org.hibernate.Query.setCacheable(boolean)", "org.hibernate.Query.list()", "getSession()", "org.springmodules.cache.provider.CacheProviderFacade.getFromCache(java.lang.String,org.springmodules.cache.CachingModel)", "org.hibernate.Query.setComment(java.lang.String)", "org.hibernate.Query.setParameter(java.lang.String,java.lang.Integer)", "org.springmodules.cache.provider.CacheProviderFacade.putInCache(java.lang.String,org.springmodules.cache.CachingModel,java.util.List)", "createQuery(java.lang.String)"],
    "com.sapienter.jbilling.server.process.task.BasicAgeingTask.performAgeingCallback(UserDTO, UserStatusDTO, UserStatusDTO)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.user.db.UserStatusDTO.getCanLogin()", "com.sapienter.jbilling.server.user.db.UserDTO.getUserName()", "com.sapienter.jbilling.server.user.db.UserDTO.getEntity()", "com.sapienter.jbilling.server.util.PreferenceBL.getString()", "org.apache.commons.httpclient.HttpClient.setConnectionTimeout(int)", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "org.apache.commons.httpclient.methods.PostMethod.setRequestBody(org.apache.commons.httpclient.NameValuePair[])", "com.sapienter.jbilling.server.util.PreferenceBL.set(java.lang.Integer,java.lang.Integer)", "org.apache.commons.httpclient.HttpClient.executeMethod(org.apache.commons.httpclient.methods.PostMethod)", "java.lang.String.valueOf(int)", "com.sapienter.jbilling.server.user.db.UserDTO.getId()", "com.sapienter.jbilling.server.util.db.AbstractGenericStatus.getId()", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)", "java.lang.String.length()"],
    "com.sapienter.jbilling.server.user.db.CreditCardDTO.setName(String)": ["com.sapienter.jbilling.server.user.db.CreditCardDTO.setRawName(java.lang.String)", "com.sapienter.jbilling.common.JBCrypto.getCreditCardCrypto()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getName()", "java.lang.String.equals(java.lang.Object)", "com.sapienter.jbilling.common.JBCrypto.encrypt(java.lang.String)", "org.apache.log4j.Category.error(java.lang.Object)"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentPaypalExternalTask.isApplicable(PaymentDTOEx)": ["com.sapienter.jbilling.server.payment.PaymentDTOEx.getAch()", "org.apache.log4j.Category.warn(java.lang.Object)", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getCreditCard()"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getOrderByPeriod(Integer, Integer)": ["com.sapienter.jbilling.server.order.OrderBL.getByUserAndPeriod(java.lang.Integer,java.lang.Integer)"],
    "com.sapienter.jbilling.server.process.task.AbstractCronTask.getTrigger()": ["org.quartz.CronTrigger.setMisfireInstruction()", "com.sapienter.jbilling.server.process.task.IScheduledTask.getTaskName()", "com.sapienter.jbilling.server.process.task.AbstractCronTask.getCronExpression()", "org.quartz.CronTrigger.setCronExpression(java.lang.String)"],
    "com.sapienter.jbilling.server.user.partner.PartnerBL.calculatePayout(Date, Date, Integer)": ["org.apache.log4j.Category.debug(java.lang.Object)", "java.sql.ResultSet.getInt(int)", "com.sapienter.jbilling.server.user.db.UserDTO.getEntity()", "com.sapienter.jbilling.server.user.partner.db.PartnerPayout.setStartingDate(java.util.Date)", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "com.sapienter.jbilling.server.payment.PaymentBL.getEntity()", "com.sapienter.jbilling.server.user.partner.db.PartnerPayout.setEndingDate(java.util.Date)", "java.sql.PreparedStatement.executeQuery()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setAmount(java.math.BigDecimal)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.user.partner.db.Partner.getId()", "com.sapienter.jbilling.server.user.partner.db.PartnerPayout.setPayment(com.sapienter.jbilling.server.payment.db.PaymentDTO)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getAmount()", "java.sql.PreparedStatement.setInt(int,int)", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getBaseUser()", "com.sapienter.jbilling.server.item.CurrencyBL.convert(java.lang.Integer,java.lang.Integer,java.math.BigDecimal,java.lang.Integer)", "com.sapienter.jbilling.server.util.db.CurrencyDTO.getId()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setBaseUser(com.sapienter.jbilling.server.user.db.UserDTO)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getIsRefund()", "javax.sql.DataSource.getConnection()", "java.sql.ResultSet.next()", "com.sapienter.jbilling.server.user.partner.db.PartnerPayout.setPaymentsAmount(java.math.BigDecimal)", "com.sapienter.jbilling.server.user.partner.PartnerBL.calculateCommission(java.math.BigDecimal,java.lang.Integer,com.sapienter.jbilling.server.user.db.UserDTO,boolean)", "com.sapienter.jbilling.server.user.partner.db.Partner.getUser()", "java.sql.PreparedStatement.setDate(int,java.sql.Date)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setPayoutIncludedIn(com.sapienter.jbilling.server.user.partner.db.PartnerPayout)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setCurrency(com.sapienter.jbilling.server.util.db.CurrencyDTO)", "java.sql.Connection.prepareStatement(java.lang.String)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getCurrency()", "java.math.BigDecimal.subtract(java.math.BigDecimal)", "com.sapienter.jbilling.server.user.partner.db.PartnerPayout.setRefundsAmount(java.math.BigDecimal)", "java.sql.Statement.close()", "java.sql.Connection.close()", "com.sapienter.jbilling.server.user.partner.db.Partner.getBaseUser()", "java.math.BigDecimal.add(java.math.BigDecimal)", "java.util.Date.getTime()", "java.sql.ResultSet.close()"],
    "com.sapienter.jbilling.server.item.db.ItemTypeDAS.isInUse(Integer)": ["createAlias(java.lang.String,java.lang.String)", "org.hibernate.criterion.Restrictions.eq(java.lang.String,java.lang.Integer)", "setProjection()", "getSession()", "add()", "createCriteria(java.lang.Class)", "org.hibernate.Criteria.setComment(java.lang.String)", "com.sapienter.jbilling.server.util.db.AbstractDAS.getPersistentClass()", "org.hibernate.Criteria.uniqueResult()", "org.hibernate.criterion.Restrictions.eq(java.lang.String,int)", "org.hibernate.criterion.Projections.count(java.lang.String)"],
    "com.sapienter.jbilling.server.order.db.OrderPeriodDTO.getUnitId()": ["com.sapienter.jbilling.server.process.db.PeriodUnitDTO.getId()", "com.sapienter.jbilling.server.order.db.OrderPeriodDTO.getPeriodUnit()"],
    "com.sapienter.jbilling.server.provisioning.task.TestExternalProvisioningTask.sendRequest(String, String)": ["org.apache.log4j.Category.debug(java.lang.Object)", "java.lang.String.startsWith(java.lang.String)", "java.util.Map.put(java.lang.Object,java.lang.Object)"],
    "com.sapienter.jbilling.server.user.UserBL.validate(UserWS)": ["com.sapienter.jbilling.server.user.UserBL.validate(com.sapienter.jbilling.server.user.UserDTOEx)"],
    "com.sapienter.jbilling.server.notification.NotificationSessionBean.getEmails(Integer, String)": ["com.sapienter.jbilling.server.notification.NotificationBL.getEmails(java.lang.String,java.lang.Integer)"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentAuthorizeNetCIMTask.doProcess(PaymentDTOEx, String, String)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.payment.tasks.PaymentAuthorizeNetCIMTask.isCreditCardStored(com.sapienter.jbilling.server.payment.PaymentDTOEx,boolean)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getGatewayKey()", "java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getMethodId()", "com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi.performTransaction(java.math.BigDecimal,com.sapienter.jbilling.server.payment.tasks.CustomerProfileData,java.lang.String,java.lang.String)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.payment.tasks.CustomerProfileData.buildFromGatewayKey(java.lang.String)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getId()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getAmount()", "com.sapienter.jbilling.server.payment.tasks.PaymentAuthorizeNetCIMTask.createApi()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.setCreditCard(com.sapienter.jbilling.server.user.db.CreditCardDTO)", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getAch()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getCode1()", "com.sapienter.jbilling.server.payment.PaymentAuthorizationBL.create(com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO,java.lang.Integer)", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getUserId()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setPaymentResult(com.sapienter.jbilling.server.payment.db.PaymentResultDTO)", "com.sapienter.jbilling.server.user.UserBL.getCreditCard()", "java.lang.String.equals(java.lang.Object)", "com.sapienter.jbilling.server.user.db.AchDTO.getGatewayKey()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getCreditCard()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.setAuthorization(com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO)", "org.apache.log4j.Category.error(java.lang.Object)"],
    "com.sapienter.jbilling.server.pluggableTask.PaymentFakeTask.getFakeProcessorName()": ["java.util.Map.get(java.lang.Object)", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription.getName()"],
    "com.sapienter.jbilling.server.process.ConfigurationBL.setReviewApproval(Integer, boolean)": ["com.sapienter.jbilling.server.util.audit.EventLogger.audit(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.util.Date)", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.setReviewStatus(int)", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.getId()", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.getReviewStatus()"],
    "com.sapienter.jbilling.server.user.db.UserDTO.getCurrencyId()": ["com.sapienter.jbilling.server.user.db.UserDTO.getCurrency()", "com.sapienter.jbilling.server.util.db.CurrencyDTO.getId()"],
    "com.sapienter.jbilling.server.payment.PaymentBL.automaticPaymentApplication(InvoiceDTO)": ["java.lang.Integer.equals(java.lang.Object)", "java.util.List.size()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getBalance()", "com.sapienter.jbilling.server.payment.PaymentBL.getPaymentsWithBalance(java.lang.Integer)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getPaymentResult()", "java.math.BigDecimal.compareTo(java.math.BigDecimal)", "com.sapienter.jbilling.server.payment.db.PaymentResultDTO.getId()", "com.sapienter.jbilling.server.payment.PaymentBL.applyPaymentToInvoice(com.sapienter.jbilling.server.invoice.db.InvoiceDTO)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getBaseUser()", "java.util.List.get(int)", "com.sapienter.jbilling.server.user.db.UserDTO.getUserId()"],
    "com.sapienter.jbilling.server.payment.blacklist.CsvProcessor.createCcRecord(BlacklistDTO)": ["com.sapienter.jbilling.server.user.db.CreditCardDTO.setNumber(java.lang.String)", "com.sapienter.jbilling.server.payment.blacklist.CsvProcessor.checkForEmptyRecord(java.lang.String,com.sapienter.jbilling.server.payment.blacklist.CsvProcessor$Column[])", "com.sapienter.jbilling.server.user.db.CreditCardDTO.setCcExpiry(java.util.Date)", "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDTO.setCreditCard(com.sapienter.jbilling.server.user.db.CreditCardDTO)", "com.sapienter.jbilling.server.payment.blacklist.CsvProcessor.getString(com.sapienter.jbilling.server.payment.blacklist.CsvProcessor$Column)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.setDeleted(int)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.setCcType(java.lang.Integer)"],
    "com.sapienter.jbilling.server.util.db.AbstractDAS.save(T)": ["merge(java.lang.Object)", "com.sapienter.jbilling.server.util.db.AbstractDAS.getSession()"],
    "com.sapienter.jbilling.server.user.UserWS.setOwingBalance(BigDecimal)": ["java.math.BigDecimal.toString()"],
    "com.sapienter.jbilling.server.payment.PaymentBL.isMethodAccepted(Integer, Integer)": ["java.util.Iterator.next()", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.payment.db.PaymentMethodDTO.getEntities()", "java.util.Iterator.hasNext()", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "java.util.Set.iterator()"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.notifyInvoiceByEmail(Integer)": ["com.sapienter.jbilling.server.notification.INotificationSessionBean.emailInvoice(java.lang.Integer)", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentPaypalExternalTask.getUserId()": ["com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase.ensureGetParameter(java.lang.String)", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription.getName()"],
    "com.sapienter.jbilling.server.process.BusinessDays.loadHolidayFile(File)": ["com.sapienter.jbilling.server.process.BusinessDays.loadHolidayFile(java.io.File,java.text.DateFormat)"],
    "com.sapienter.jbilling.server.invoice.PaperInvoiceBatchBL.createGet(Integer)": ["com.sapienter.jbilling.server.util.PreferenceBL.getEntity()", "com.sapienter.jbilling.server.process.BillingProcessBL.getEntity()", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.process.db.BillingProcessDTO.getEntity()", "com.sapienter.jbilling.server.process.db.BillingProcessDTO.setPaperInvoiceBatch(com.sapienter.jbilling.server.process.db.PaperInvoiceBatchDTO)", "com.sapienter.jbilling.server.process.db.PaperInvoiceBatchDAS.create(java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.util.PreferenceBL.set(java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.process.db.BillingProcessDTO.getPaperInvoiceBatch()", "com.sapienter.jbilling.server.util.db.PreferenceDTO.getIntValue()"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.deleteOrderPeriod(Integer)": ["com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "com.sapienter.jbilling.server.order.IOrderSessionBean.deletePeriod(java.lang.Integer)"],
    "com.sapienter.jbilling.server.invoice.InvoiceSessionBean.getPDFInvoice(Integer)": ["com.sapienter.jbilling.server.pluggableTask.PluggableTask.initializeParamters(com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDTO)", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.user.db.UserDTO.getLanguageIdField()", "com.sapienter.jbilling.server.notification.NotificationBL.getInvoicePaperMessage(java.lang.Integer,java.lang.Integer,java.lang.Integer,com.sapienter.jbilling.server.invoice.db.InvoiceDTO)", "com.sapienter.jbilling.server.user.db.UserDTO.getEntity()", "com.sapienter.jbilling.server.invoice.InvoiceBL.getEntity()", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskBL.set(java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.pluggableTask.PaperInvoiceNotificationTask.getPDF(com.sapienter.jbilling.server.user.db.UserDTO,com.sapienter.jbilling.server.notification.MessageDTO)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getBaseUser()", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskBL.getDTO()"],
    "com.sapienter.jbilling.server.item.db.ItemPriceDTO.getCurrencyId()": ["com.sapienter.jbilling.server.item.db.ItemPriceDTO.getCurrency()", "com.sapienter.jbilling.server.util.db.CurrencyDTO.getId()"],
    "com.sapienter.jbilling.server.item.db.ItemPriceDTO.toString()": ["java.lang.Object.toString()"],
    "com.sapienter.jbilling.server.order.OrderBL.getOrCreateCurrentOrder(Integer, Date, Integer, boolean)": ["com.sapienter.jbilling.server.order.db.OrderDTO.touch()", "com.sapienter.jbilling.server.order.CurrentOrder.create(java.util.Date,java.lang.Integer,java.lang.Integer)", "org.apache.log4j.Category.warn(java.lang.Object)", "com.sapienter.jbilling.server.util.db.AbstractDAS.detach(java.lang.Object)", "com.sapienter.jbilling.server.order.CurrentOrder.getCurrent()", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.user.UserBL.getEntityId(java.lang.Integer)"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentBeanstreamTask.doPost(String, PaymentDTOEx)": ["org.apache.log4j.Category.debug(java.lang.Object)", "java.lang.StringBuffer.append(char)", "java.lang.StringBuffer.toString()", "com.sapienter.jbilling.server.pluggableTask.PaymentTaskWithTimeout.getTimeoutSeconds()", "java.net.URLConnection.getInputStream()", "java.io.OutputStream.close()", "java.lang.String.getBytes()", "java.io.InputStream.read()", "java.io.InputStream.close()", "java.net.URLConnection.getOutputStream()", "java.net.URLConnection.setConnectTimeout(int)", "java.net.URLConnection.setDoOutput(boolean)", "java.net.URL.openConnection()", "java.io.OutputStream.write(byte[])", "org.apache.log4j.Category.error(java.lang.Object)"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentPaypalExternalTask.doCapture(PaymentDTOEx, PaymentAuthorizationDTO)": ["com.sapienter.jbilling.server.payment.tasks.PaymentPaypalExternalTask.formatDollarAmount(java.math.BigDecimal)", "com.sapienter.jbilling.server.payment.tasks.paypal.PaypalApi.doCapture(java.lang.String,com.sapienter.jbilling.server.payment.tasks.paypal.dto.Payment,com.sapienter.jbilling.server.payment.tasks.paypal.dto.CompleteType)", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getTransactionId()", "com.sapienter.jbilling.server.payment.tasks.PaymentPaypalExternalTask.buildPaymentAuthorization(com.sapienter.jbilling.server.payment.tasks.paypal.dto.PaypalResult)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setPaymentResult(com.sapienter.jbilling.server.payment.db.PaymentResultDTO)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)", "com.sapienter.jbilling.server.payment.tasks.PaymentPaypalExternalTask.getApi()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getAmount()", "com.sapienter.jbilling.server.payment.tasks.PaymentPaypalExternalTask.storePaypalResult(com.sapienter.jbilling.server.payment.tasks.paypal.dto.PaypalResult,com.sapienter.jbilling.server.payment.PaymentDTOEx,com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO,boolean)"],
    "com.sapienter.jbilling.server.item.ItemSessionBean.deleteType(Integer, Integer)": ["com.sapienter.jbilling.server.item.ItemTypeBL.delete(java.lang.Integer)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getByCCNumber(Integer, String)": ["com.sapienter.jbilling.server.user.db.CreditCardDAS.findByLastDigits(java.lang.Integer,java.lang.String)", "java.util.List.size()", "java.util.List.toArray(java.lang.Object[])"],
    "com.sapienter.jbilling.server.invoice.InvoiceBL.DTOtoWS(List)": ["org.apache.log4j.Category.debug(java.lang.Object)", "java.util.List.size()", "java.util.List.get(int)", "com.sapienter.jbilling.server.invoice.InvoiceBL.getWS(com.sapienter.jbilling.server.invoice.db.InvoiceDTO)"],
    "com.sapienter.jbilling.server.order.OrderBL.getLatest(Integer)": ["java.sql.ResultSet.wasNull()", "java.sql.ResultSet.next()", "java.sql.Connection.close()", "javax.sql.RowSet.setInt(int,int)", "java.sql.ResultSet.getInt(int)", "com.sapienter.jbilling.server.list.ResultList.execute()", "com.sapienter.jbilling.server.list.ResultList.prepareStatement(java.lang.String)", "java.lang.Integer.intValue()", "java.sql.ResultSet.close()"],
    "com.sapienter.jbilling.server.invoice.PaperInvoiceBatchBL.compileInvoiceFiles(String, String, Integer, Integer[])": ["com.lowagie.text.Document.close()", "org.apache.log4j.Category.debug(java.lang.Object)", "com.lowagie.text.pdf.PdfReader.getPageSizeWithRotation(int)", "java.util.ArrayList.isEmpty()", "org.apache.log4j.Category.warn(java.lang.Object)", "java.util.ArrayList.addAll(java.util.Collection)", "com.lowagie.text.pdf.PdfReader.consolidateNamedDestinations()", "com.lowagie.text.pdf.SimpleBookmark.shiftPageNumbers(java.util.List,int,<unknown>)", "com.lowagie.text.pdf.PdfCopy.getImportedPage(com.lowagie.text.pdf.PdfReader,int)", "com.lowagie.text.pdf.SimpleBookmark.getBookmark(com.lowagie.text.pdf.PdfReader)", "com.lowagie.text.pdf.PdfReader.getAcroForm()", "com.lowagie.text.pdf.PdfReader.getNumberOfPages()", "com.lowagie.text.Document.open()", "com.lowagie.text.pdf.PdfCopy.addPage(com.lowagie.text.pdf.PdfImportedPage)", "com.lowagie.text.pdf.PdfCopy.setOutlines(java.util.ArrayList)", "com.lowagie.text.pdf.PdfCopy.copyAcroForm(com.lowagie.text.pdf.PdfReader)", "com.lowagie.text.pdf.PdfReader.close()", "com.sapienter.jbilling.common.Util.getSysProp(java.lang.String)", "com.lowagie.text.pdf.PdfCopy.freeReader(com.lowagie.text.pdf.PdfReader)", "java.io.File.delete()"],
    "com.sapienter.jbilling.server.mediation.db.MediationRecordDAS.findNewestByKey(String)": ["org.hibernate.Query.list()", "java.util.List.isEmpty()", "org.hibernate.Query.setParameter(java.lang.String,java.lang.String)", "getSession()", "createQuery(java.lang.String)", "java.util.List.get(int)"],
    "com.sapienter.jbilling.server.provisioning.task.TestMMSCCommunication.addCustomer(AddCustomerRequest)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.provisioning.task.mmsc.EfsBaseRequest.getTransactionId()", "com.sapienter.jbilling.server.provisioning.task.TestMMSCCommunication.getResponse(java.lang.String)"],
    "com.sapienter.jbilling.server.pluggableTask.PaymentACHCommerceTask.process(PaymentDTOEx)": ["com.sapienter.jbilling.server.payment.PaymentDTOEx.getAch()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getCode1()", "com.sapienter.jbilling.server.pluggableTask.PaymentACHCommerceTask.processACHRequest(com.sapienter.jbilling.server.payment.PaymentDTOEx)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setPaymentResult(com.sapienter.jbilling.server.payment.db.PaymentResultDTO)", "java.lang.String.equals(java.lang.Object)", "com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase.storeProcessedAuthorization(com.sapienter.jbilling.server.payment.PaymentDTOEx,com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.payment.PaymentDTOEx.setAuthorization(com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO)", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)", "com.sapienter.jbilling.server.user.db.AchDTO.getBankAccount()", "java.lang.String.length()"],
    "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getFieldValues()": ["com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO.getPrice()", "com.sapienter.jbilling.server.user.db.UserDTO.getUserName()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getId()", "java.lang.StringBuffer.toString()", "java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO.getDescription()", "java.util.List.add(java.lang.Object)", "java.util.Iterator.hasNext()", "com.sapienter.jbilling.server.item.db.ItemDTO.getId()", "java.lang.StringBuffer.append(java.lang.String)", "java.lang.StringBuffer.append(int)", "java.util.List.toArray(java.lang.Object[])", "java.util.Iterator.next()", "com.sapienter.jbilling.server.payment.db.PaymentInvoiceMapDTO.getPayment()", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO.getDeleted()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getId()", "com.sapienter.jbilling.server.item.db.ItemDTO.getInternalNumber()", "java.util.List.size()", "com.sapienter.jbilling.server.user.db.UserDTO.getId()", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO.getItem()", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO.getQuantity()", "com.sapienter.jbilling.server.util.db.AbstractDescription.getDescription()", "java.util.Set.iterator()", "java.util.Collection.iterator()", "com.sapienter.jbilling.server.invoice.db.InvoiceLineDTO.getAmount()"],
    "com.sapienter.jbilling.server.user.ContactTypeWS.getDescription(Integer)": ["java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.util.InternationalDescriptionWS.getLanguageId()"],
    "com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase.storeProcessedAuthorization(PaymentDTOEx, PaymentAuthorizationDTO)": ["com.sapienter.jbilling.server.payment.PaymentAuthorizationBL.create(com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO,java.lang.Integer)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getId()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.setAuthorization(com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO)"],
    "com.sapienter.jbilling.server.util.DescriptionBL.init()": ["com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)"],
    "com.sapienter.jbilling.server.user.UserSessionBean.updateCreditCard(String, Integer, CreditCardDTO)": ["com.sapienter.jbilling.server.user.UserSessionBean.updateCreditCard(com.sapienter.jbilling.server.user.db.UserDTO,com.sapienter.jbilling.server.user.db.CreditCardDTO,java.lang.Integer)", "com.sapienter.jbilling.server.user.UserBL.getEntity()"],
    "com.sapienter.jbilling.server.entity.PaymentInfoChequeDTO.hashCode()": ["java.lang.String.hashCode()", "java.util.Date.hashCode()", "java.lang.Integer.hashCode()"],
    "com.sapienter.jbilling.server.item.ItemPriceDTOEx.isIdentical(Object)": ["java.lang.Integer.equals(java.lang.Object)", "java.lang.String.equals(java.lang.Object)"],
    "com.sapienter.jbilling.server.user.partner.PartnerBL.processPayout(Integer, Date, Date, PaymentDTOEx, Boolean)": ["com.sapienter.jbilling.server.user.partner.db.PartnerPayout.setPaymentsAmount(java.math.BigDecimal)", "java.util.Set.add(java.lang.Object)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setAttempt(java.lang.Integer)", "com.sapienter.jbilling.server.user.db.UserDTO.getEntity()", "com.sapienter.jbilling.server.user.partner.db.PartnerPayout.setStartingDate(java.util.Date)", "com.sapienter.jbilling.server.user.partner.PartnerBL.calculatePayout(java.util.Date,java.util.Date,java.lang.Integer)", "com.sapienter.jbilling.server.user.partner.db.PartnerPayout.setEndingDate(java.util.Date)", "com.sapienter.jbilling.server.user.partner.db.Partner.getUser()", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getPaymentResult()", "com.sapienter.jbilling.server.user.partner.db.PartnerPayout.setPartner(com.sapienter.jbilling.server.user.partner.db.Partner)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getCurrency()", "com.sapienter.jbilling.server.user.partner.PartnerBL.processPayment(com.sapienter.jbilling.server.payment.PaymentDTOEx,java.lang.Integer,com.sapienter.jbilling.server.user.partner.db.PartnerPayout,boolean)", "com.sapienter.jbilling.server.user.partner.db.PartnerPayout.setRefundsAmount(java.math.BigDecimal)", "com.sapienter.jbilling.server.user.partner.db.PartnerPayout.setBalanceLeft(java.math.BigDecimal)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setIsRefund(int)", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.util.db.CurrencyDTO.getId()", "java.lang.Boolean.booleanValue()", "com.sapienter.jbilling.server.payment.db.PaymentResultDTO.getId()", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)", "com.sapienter.jbilling.server.user.partner.db.Partner.getPartnerPayouts()"],
    "com.sapienter.jbilling.server.item.ItemTypeWS.equals(Object)": ["java.lang.Integer.equals(java.lang.Object)", "java.lang.Object.getClass()", "java.lang.String.equals(java.lang.Object)"],
    "com.sapienter.jbilling.server.order.db.OrderDTO.touch()": ["com.sapienter.jbilling.server.order.db.OrderDTO.getOrderBillingType()", "com.sapienter.jbilling.server.order.db.OrderBillingTypeDTO.getId()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getCreateDatetime()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.touch()", "com.sapienter.jbilling.server.user.db.UserDTO.getCreateDatetime()", "com.sapienter.jbilling.server.order.db.OrderDTO.getOrderPeriod()", "com.sapienter.jbilling.server.order.db.OrderProcessDTO.getPeriodStart()", "com.sapienter.jbilling.server.order.db.OrderPeriodDTO.getId()", "com.sapienter.jbilling.server.order.db.OrderDTO.getBaseUserByCreatedBy()", "com.sapienter.jbilling.server.order.db.OrderDTO.getActiveSince()", "com.sapienter.jbilling.server.order.db.OrderDTO.getOrderProcesses()", "com.sapienter.jbilling.server.order.db.OrderDTO.getInvoices()", "com.sapienter.jbilling.server.order.db.OrderDTO.getLines()", "com.sapienter.jbilling.server.util.db.AbstractGenericStatus.getId()", "com.sapienter.jbilling.server.order.db.OrderDTO.getBaseUserByUserId()", "com.sapienter.jbilling.server.order.db.OrderDTO.getOrderStatus()"],
    "com.sapienter.jbilling.server.user.UserSessionBean.getPrimaryContactDTO(Integer)": ["com.sapienter.jbilling.server.user.ContactBL.getDTO()", "com.sapienter.jbilling.server.user.ContactBL.set(java.lang.Integer)", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)"],
    "com.sapienter.jbilling.server.process.BillingProcessRunDTOEx.toString()": ["com.sapienter.jbilling.server.process.db.ProcessRunDTO.toString()", "java.lang.StringBuffer.toString()", "com.sapienter.jbilling.server.process.BillingProcessRunTotalDTOEx.toString()", "java.lang.StringBuffer.append(java.lang.String)"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentAtlasTask.process(PaymentDTOEx)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription.getName()", "com.sapienter.jbilling.server.payment.tasks.PaymentAtlasTask.makeCall(java.util.Map,boolean)", "com.sapienter.jbilling.server.payment.tasks.PaymentAtlasTask.getChargeData(com.sapienter.jbilling.server.payment.PaymentDTOEx)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getPayment()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getAuthorization()", "com.sapienter.jbilling.server.payment.tasks.PaymentAtlasTask.validateParameters()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getId()", "com.sapienter.jbilling.server.payment.tasks.PaymentAtlasTask.addAVSFields(java.lang.Integer,java.util.Map)", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getPayoutId()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getAch()", "com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO.getCode1()", "com.sapienter.jbilling.server.payment.PaymentAuthorizationBL.create(com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO,java.lang.Integer)", "com.sapienter.jbilling.server.pluggableTask.PaymentTaskBase.getOptionalParameter(java.lang.String,java.lang.String)", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getUserId()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.setPaymentResult(com.sapienter.jbilling.server.payment.db.PaymentResultDTO)", "com.sapienter.jbilling.server.payment.tasks.PaymentAtlasTask.getRefundData(com.sapienter.jbilling.server.payment.PaymentDTOEx)", "java.lang.String.equals(java.lang.Object)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getIsRefund()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getCreditCard()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.setAuthorization(com.sapienter.jbilling.server.payment.db.PaymentAuthorizationDTO)", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)", "org.apache.log4j.Category.error(java.lang.Object)"],
    "com.sapienter.jbilling.server.invoice.InvoiceWS.toString()": ["java.lang.StringBuilder.append(java.lang.Object)", "java.util.Arrays.toString(java.lang.Object[])", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.toString()"],
    "com.sapienter.jbilling.server.process.task.BasicAgeingTask.setUserStatus(UserDTO, UserStatusDTO, Date, Integer)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.user.db.UserStatusDTO.getCanLogin()", "com.sapienter.jbilling.server.user.UserBL.delete(java.lang.Integer)", "com.sapienter.jbilling.server.user.db.UserDTO.setUserStatus(com.sapienter.jbilling.server.user.db.UserStatusDTO)", "com.sapienter.jbilling.server.system.event.EventManager.process(com.sapienter.jbilling.server.system.event.Event)", "com.sapienter.jbilling.server.process.task.BasicAgeingTask.performAgeingCallback(com.sapienter.jbilling.server.user.db.UserDTO,com.sapienter.jbilling.server.user.db.UserStatusDTO,com.sapienter.jbilling.server.user.db.UserStatusDTO)", "com.sapienter.jbilling.server.user.db.UserDTO.setLastStatusChange(java.util.Date)", "com.sapienter.jbilling.server.order.db.OrderDAS.findByUser_Status(java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.user.db.UserDTO.getStatus()", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.process.task.BasicAgeingTask.sendAgeingNotification(com.sapienter.jbilling.server.user.db.UserDTO,com.sapienter.jbilling.server.user.db.UserStatusDTO,com.sapienter.jbilling.server.user.db.UserStatusDTO)", "com.sapienter.jbilling.server.util.audit.EventLogger.audit(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.util.Date)", "com.sapienter.jbilling.server.order.OrderBL.set(com.sapienter.jbilling.server.order.db.OrderDTO)", "com.sapienter.jbilling.server.order.OrderBL.setStatus(java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.process.task.BasicAgeingTask.getStatusDescription(com.sapienter.jbilling.server.user.db.UserStatusDTO)", "com.sapienter.jbilling.server.user.db.UserDTO.getCompany()", "com.sapienter.jbilling.server.user.db.UserDTO.getId()", "com.sapienter.jbilling.server.util.audit.EventLogger.auditBySystem(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.util.Date)", "com.sapienter.jbilling.server.util.db.AbstractGenericStatus.getId()"],
    "com.sapienter.jbilling.server.user.UserWS.setDynamicBalance(BigDecimal)": ["java.math.BigDecimal.toString()"],
    "com.sapienter.jbilling.server.notification.MessageDTO.setContentSize(int)": ["java.util.Vector.setSize(int)"],
    "com.sapienter.jbilling.server.mediation.task.SaveToJDBCMediationErrorHandler.escapedKeywordsColumnName(String)": ["com.sapienter.jbilling.server.mediation.task.SaveToJDBCMediationErrorHandler.isMySQL()"],
    "com.sapienter.jbilling.server.payment.PaymentWS.getOwningUserId()": ["com.sapienter.jbilling.server.payment.PaymentWS.getUserId()"],
    "com.sapienter.jbilling.tools.RulesGenerator.generateRules(File, File, char, File)": ["com.sapienter.jbilling.tools.RulesGenerator.readFileToString(java.io.File)", "org.apache.velocity.app.VelocityEngine.evaluate(org.apache.velocity.VelocityContext,java.io.FileWriter,java.lang.String,java.lang.String)", "java.io.BufferedReader.close()", "java.io.OutputStreamWriter.close()", "com.sapienter.jbilling.server.util.Util.csvSplitLine(java.lang.String,char)", "java.util.Map.put(java.lang.Object,java.lang.Object)", "java.io.BufferedReader.readLine()", "org.apache.log4j.Category.error(java.lang.Object)"],
    "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDAS.findByEntity(CompanyDTO)": ["org.hibernate.criterion.Restrictions.eq(java.lang.String,com.sapienter.jbilling.server.user.db.CompanyDTO)", "getSession()", "org.hibernate.Criteria.add()", "createCriteria(java.lang.Class)", "org.hibernate.Criteria.uniqueResult()"],
    "com.sapienter.jbilling.server.invoice.InvoiceSessionBean.getAllInvoices(Integer)": ["java.util.Iterator.next()", "com.sapienter.jbilling.server.user.UserBL.getEntity()", "java.util.Set.iterator()", "com.sapienter.jbilling.server.user.db.UserDTO.getInvoices()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getDueDate()"],
    "com.sapienter.jbilling.server.invoice.InvoiceWS.getOwningUserId()": ["com.sapienter.jbilling.server.invoice.InvoiceWS.getUserId()"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.removePaymentLink(Integer, Integer)": ["com.sapienter.jbilling.server.payment.PaymentBL.unLinkFromInvoice(java.lang.Integer)"],
    "com.sapienter.jbilling.server.notification.barcode.BarcodeFactory.code39(Checksum, boolean, TextPlacement)": ["org.krysalis.barcode4j.impl.code39.Code39Bean.setMsgPosition(org.krysalis.barcode4j.HumanReadablePlacement)", "org.krysalis.barcode4j.impl.code39.Code39Bean.setDisplayChecksum(boolean)", "com.sapienter.jbilling.server.notification.barcode.BarcodeFactory.getPlacement(com.sapienter.jbilling.server.notification.barcode.TextPlacement)", "org.krysalis.barcode4j.impl.code39.Code39Bean.setChecksumMode(org.krysalis.barcode4j.ChecksumMode)", "com.sapienter.jbilling.server.notification.barcode.BarcodeFactory.getChecksum(com.sapienter.jbilling.server.notification.barcode.Checksum)"],
    "com.sapienter.jbilling.server.payment.PaymentInvoiceMapDTOEx.toString()": ["com.sapienter.jbilling.server.payment.db.PaymentInvoiceMapDTO.getCreateDatetime()", "com.sapienter.jbilling.server.payment.db.PaymentInvoiceMapDTO.getAmount()", "com.sapienter.jbilling.server.payment.db.PaymentInvoiceMapDTO.getId()"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.doCreateOrder(OrderWS, boolean)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.validateOrder(com.sapienter.jbilling.server.order.OrderWS)", "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.processLines(com.sapienter.jbilling.server.order.db.OrderDTO,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String)", "com.sapienter.jbilling.server.order.OrderWS.getPricingFields()", "org.apache.log4j.Category.info(java.lang.Object)", "com.sapienter.jbilling.server.util.db.AbstractDAS.findNow(java.io.Serializable)", "com.sapienter.jbilling.server.order.OrderWS.getUserId()", "com.sapienter.jbilling.server.order.db.OrderDTO.getCycleStarts()", "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getWSFromOrder(com.sapienter.jbilling.server.order.OrderBL,java.lang.Integer)", "com.sapienter.jbilling.server.user.UserBL.getEntity()", "com.sapienter.jbilling.server.user.UserBL.getEntityId(java.lang.Integer)", "com.sapienter.jbilling.server.util.PreferenceBL.getInt()", "com.sapienter.jbilling.server.user.db.UserDTO.getLanguageIdField()", "com.sapienter.jbilling.server.order.OrderBL.set(com.sapienter.jbilling.server.order.db.OrderDTO)", "com.sapienter.jbilling.server.order.db.OrderDTO.getUser()", "com.sapienter.jbilling.server.util.PreferenceBL.set(java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.order.db.OrderDTO.setId(java.lang.Integer)", "com.sapienter.jbilling.server.order.OrderBL.set(java.lang.Integer)", "com.sapienter.jbilling.server.order.OrderBL.getWS(java.lang.Integer)", "com.sapienter.jbilling.server.order.db.OrderDTO.setVersionNum(java.lang.Integer)", "com.sapienter.jbilling.server.order.db.OrderDTO.getIsCurrent()", "com.sapienter.jbilling.server.order.OrderBL.recalculate(java.lang.Integer)", "com.sapienter.jbilling.server.order.db.OrderDTO.setCycleStarts(java.util.Date)", "com.sapienter.jbilling.server.order.OrderBL.getMainOrderId(java.lang.Integer)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setId(int)", "com.sapienter.jbilling.server.order.OrderBL.create(java.lang.Integer,java.lang.Integer,com.sapienter.jbilling.server.order.db.OrderDTO)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setVersionNum(java.lang.Integer)", "com.sapienter.jbilling.server.order.db.OrderDTO.getLines()", "com.sapienter.jbilling.server.order.OrderWS.getCurrencyId()", "com.sapienter.jbilling.server.user.db.UserDTO.getId()", "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerId()", "com.sapienter.jbilling.server.order.OrderBL.getDTO(com.sapienter.jbilling.server.order.OrderWS)", "com.sapienter.jbilling.server.user.db.UserDTO.getUserId()", "com.sapienter.jbilling.server.user.UserBL.set(java.lang.Integer)"],
    "com.sapienter.jbilling.server.mediation.task.JDBCUtils.correctTableName(Connection, String)": ["java.util.List.isEmpty()", "com.sapienter.jbilling.server.mediation.task.JDBCUtils.correctTableNames(java.sql.Connection,java.lang.String[])", "java.util.List.get(int)"],
    "com.sapienter.jbilling.server.entity.InvoiceLineDTO.equals(Object)": ["java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.entity.InvoiceLineDTO.isIdentical(java.lang.Object)", "com.sapienter.jbilling.server.entity.InvoiceLineDTO.hasIdentity()"],
    "com.sapienter.jbilling.server.user.UserBL.setUserBlacklisted(Integer, Boolean)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDTO.setType(java.lang.Integer)", "java.util.List.isEmpty()", "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDAS.findByUserType(java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDTO.getId()", "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDTO.setCreateDate(java.util.Date)", "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDTO.setUser(com.sapienter.jbilling.server.user.db.UserDTO)", "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDTO.setSource(java.lang.Integer)", "com.sapienter.jbilling.server.util.audit.EventLogger.audit(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.util.Date)", "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDTO.setCompany(com.sapienter.jbilling.server.user.db.CompanyDTO)", "com.sapienter.jbilling.server.user.db.UserDTO.getCompany()", "com.sapienter.jbilling.server.util.db.AbstractDAS.delete(java.lang.Object)", "com.sapienter.jbilling.server.user.db.UserDTO.getId()", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentRouterCCFTask.selectDelegate(PaymentDTOEx)": ["java.util.Map.get(java.lang.Object)", "org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.payment.tasks.AbstractPaymentRouterTask.instantiateTask(java.lang.Integer)", "com.sapienter.jbilling.server.payment.tasks.PaymentRouterCCFTask.getProcessorName(java.lang.Integer)", "org.apache.log4j.Category.warn(java.lang.Object)", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getUserId()", "com.sapienter.jbilling.server.payment.tasks.AbstractPaymentRouterTask.intValueOf(java.lang.Object)"],
    "com.sapienter.jbilling.server.payment.PaymentBL.findPaymentInstrument(Integer, Integer)": ["org.apache.log4j.Category.fatal(java.lang.Object)", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskManager.getNextClass()", "org.apache.log4j.Logger.getLogger(java.lang.Class)", "com.sapienter.jbilling.server.pluggableTask.PaymentInfoTask.getPaymentInfo(java.lang.Integer)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.createOrderAndInvoice(OrderWS)": ["com.sapienter.jbilling.server.order.OrderWS.getId()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getId()", "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.doCreateOrder(com.sapienter.jbilling.server.order.OrderWS,boolean)", "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.doCreateInvoice(java.lang.Integer)"],
    "com.sapienter.jbilling.server.util.db.AbstractDAS.detach(T)": ["flush()", "evict(java.lang.Object)", "com.sapienter.jbilling.server.util.db.AbstractDAS.getSession()"],
    "com.sapienter.jbilling.server.invoice.InvoiceBL.getList(Integer, Integer, Integer)": ["java.sql.Connection.close()", "javax.sql.RowSet.setInt(int,int)", "java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.list.ResultList.execute()", "com.sapienter.jbilling.server.list.ResultList.prepareStatement(java.lang.String)", "java.lang.Integer.intValue()"],
    "com.sapienter.jbilling.server.util.Util.decimal2string(BigDecimal, Locale)": ["java.text.NumberFormat.getInstance(java.util.Locale)", "java.text.Format.format(java.lang.Object)"],
    "com.sapienter.jbilling.server.report.ReportBL.run()": ["com.sapienter.jbilling.server.report.db.ReportDTO.getName()", "com.sapienter.jbilling.server.report.ReportBL.run(java.lang.String,java.io.File,java.lang.String,java.util.Map,java.util.Locale,java.lang.Integer)", "com.sapienter.jbilling.server.report.db.ReportDTO.getParameterMap()", "com.sapienter.jbilling.server.report.db.ReportDTO.getReportBaseDir()", "com.sapienter.jbilling.server.report.db.ReportDTO.getReportFile()"],
    "com.sapienter.jbilling.server.entity.InvoiceLineDTO.toString()": ["java.lang.StringBuffer.append(char)", "com.sapienter.jbilling.server.entity.InvoiceLineDTO.getItemId()", "java.lang.StringBuffer.toString()", "com.sapienter.jbilling.server.entity.InvoiceLineDTO.getSourceUserId()", "com.sapienter.jbilling.server.entity.InvoiceLineDTO.getPrice()", "com.sapienter.jbilling.server.entity.InvoiceLineDTO.getAmount()", "com.sapienter.jbilling.server.entity.InvoiceLineDTO.getQuantity()", "com.sapienter.jbilling.server.entity.InvoiceLineDTO.getIsPercentage()", "com.sapienter.jbilling.server.entity.InvoiceLineDTO.getDescription()", "com.sapienter.jbilling.server.entity.InvoiceLineDTO.getDeleted()", "java.lang.StringBuffer.append(java.lang.String)", "com.sapienter.jbilling.server.entity.InvoiceLineDTO.getId()"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentAuthorizeNetCIMTask.deleteCreditCard(ContactDTO, CreditCardDTO, AchDTO)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.payment.tasks.PaymentAuthorizeNetCIMTask.createApi()", "org.apache.log4j.Category.warn(java.lang.Object)", "com.sapienter.jbilling.server.payment.tasks.PaymentAuthorizeNetCIMTask.deletePaymentProfile(com.sapienter.jbilling.server.user.db.CreditCardDTO,com.sapienter.jbilling.server.user.db.AchDTO,com.sapienter.jbilling.server.payment.tasks.AuthorizeNetCIMApi)", "com.sapienter.jbilling.server.user.db.AchDTO.getGatewayKey()"],
    "com.sapienter.jbilling.server.item.db.ItemPriceDAS.find(Integer, Integer)": ["createAlias(java.lang.String,java.lang.String)", "org.hibernate.criterion.Restrictions.eq(java.lang.String,java.lang.Integer)", "getSession()", "add()", "createCriteria(java.lang.Class)", "org.hibernate.Criteria.uniqueResult()"],
    "com.sapienter.jbilling.server.system.event.InternalEventProcessor.isProcessable(IInternalEventsTask, Event)": ["com.sapienter.jbilling.server.system.event.task.IInternalEventsTask.getSubscribedEvents()", "java.lang.Object.equals(java.lang.Object)", "java.lang.Object.getClass()"],
    "com.sapienter.jbilling.tools.ConvertToBinHexa.getUserRowsToUpdate()": ["java.sql.Connection.prepareStatement(java.lang.String)", "java.sql.Statement.getResultSet()", "java.sql.PreparedStatement.execute()"],
    "com.sapienter.jbilling.server.mediation.MediationSessionBean.updateAllConfiguration(Integer, List)": ["com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDTO.getEntityId()", "com.sapienter.jbilling.server.mediation.db.MediationConfiguration.getEntityId()", "java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.mediation.db.MediationConfiguration.getPluggableTask()", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "java.util.List.add(java.lang.Object)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDTO.getId()", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)", "com.sapienter.jbilling.server.mediation.db.MediationConfiguration.setPluggableTask(com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDTO)"],
    "com.sapienter.jbilling.server.invoice.InvoiceSessionBean.getInvoiceEx(Integer, Integer)": ["com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getPaymentMap()", "com.sapienter.jbilling.server.order.db.OrderDTO.getCreateDate()", "com.sapienter.jbilling.server.payment.db.PaymentInvoiceMapDTO.getPayment()", "com.sapienter.jbilling.server.order.db.OrderProcessDTO.getPurchaseOrder()", "com.sapienter.jbilling.server.invoice.InvoiceBL.getDTOEx(java.lang.Integer,boolean)", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getCreateDatetime()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getOrderProcesses()"],
    "com.sapienter.jbilling.server.order.db.OrderLineDAS.findRecurringByUser(Integer)": ["org.hibernate.Query.list()", "getSession()", "org.hibernate.Query.setParameter(java.lang.String,java.lang.Integer)", "createQuery(java.lang.String)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.updateItem(ItemDTOEx)": ["com.sapienter.jbilling.server.user.db.UserDTO.getLanguageIdField()", "com.sapienter.jbilling.server.item.ItemBL.getDTO(com.sapienter.jbilling.server.item.ItemDTOEx)", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "com.sapienter.jbilling.server.user.UserBL.getEntity()", "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerId()", "com.sapienter.jbilling.server.item.IItemSessionBean.update(java.lang.Integer,com.sapienter.jbilling.server.item.db.ItemDTO,java.lang.Integer)", "com.sapienter.jbilling.server.user.db.UserDTO.getUserId()"],
    "com.sapienter.jbilling.server.invoice.InvoiceBL.isUserWithOverdueInvoices(Integer, Date, Integer)": ["org.apache.log4j.Category.debug(java.lang.Object)", "java.sql.ResultSet.next()", "java.sql.Connection.close()", "javax.sql.RowSet.setInt(int,int)", "java.sql.ResultSet.getInt(int)", "com.sapienter.jbilling.server.list.ResultList.execute()", "javax.sql.RowSet.setDate(int,java.sql.Date)", "com.sapienter.jbilling.server.list.ResultList.prepareStatement(java.lang.String)", "java.util.Date.getTime()", "java.lang.Integer.intValue()"],
    "com.sapienter.jbilling.common.Util.getMonth(String)": ["java.lang.String.indexOf(int)", "java.lang.Integer.valueOf(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.lastIndexOf(int)", "java.lang.Integer.intValue()"],
    "com.sapienter.jbilling.server.user.UserBL.selectMainRole(Collection)": ["java.lang.Integer.compareTo(java.lang.Integer)", "java.util.Iterator.next()", "java.util.Iterator.hasNext()", "java.util.Collection.iterator()"],
    "com.sapienter.jbilling.server.process.ConfigurationBL.validate(BillingProcessConfigurationWS)": ["com.sapienter.jbilling.common.SessionInternalError.setErrorMessages(java.lang.String[])", "com.sapienter.jbilling.server.process.db.ProcessRunDAS.getLatestSuccessful(java.lang.Integer)", "com.sapienter.jbilling.server.process.BillingProcessConfigurationWS.getEntityId()", "com.sapienter.jbilling.server.process.db.ProcessRunDTO.getStatus()", "com.sapienter.jbilling.server.process.db.BillingProcessDTO.getBillingDate()", "java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.process.db.BillingProcessDAS.isPresent(java.lang.Integer,java.lang.Integer,java.util.Date)", "com.sapienter.jbilling.server.process.db.BillingProcessDTO.getProcessRuns()", "java.util.Date.before(java.util.Date)", "com.sapienter.jbilling.server.process.db.ProcessRunDTO.getBillingProcess()", "com.sapienter.jbilling.server.process.BillingProcessConfigurationWS.getNextRunDate()", "com.sapienter.jbilling.server.util.db.AbstractGenericStatus.getId()", "org.apache.log4j.Category.error(java.lang.Object)"],
    "com.sapienter.jbilling.server.util.CurrencyWS.setSysRateAsDecimal(BigDecimal)": ["com.sapienter.jbilling.server.util.CurrencyWS.setSysRate(java.math.BigDecimal)"],
    "com.sapienter.jbilling.server.process.BillingProcessRunBL.create(BillingProcessDTO, Date)": ["com.sapienter.jbilling.server.process.db.ProcessRunDTO.getId()", "com.sapienter.jbilling.server.process.db.ProcessRunDAS.create(com.sapienter.jbilling.server.process.db.BillingProcessDTO,java.util.Date,java.lang.Integer,com.sapienter.jbilling.server.process.db.ProcessRunStatusDTO)", "com.sapienter.jbilling.server.util.db.AbstractGenericStatusDAS.find(java.io.Serializable)"],
    "com.sapienter.jbilling.server.notification.db.NotificationMessageDAS.create(Integer, Integer, Integer, Boolean, Set)": ["com.sapienter.jbilling.server.notification.db.NotificationMessageDTO.setUseFlag(short)", "com.sapienter.jbilling.server.notification.db.NotificationMessageDTO.setLanguage(com.sapienter.jbilling.server.util.db.LanguageDTO)", "com.sapienter.jbilling.server.notification.db.NotificationMessageDTO.setNotificationMessageSections(java.util.Set)", "com.sapienter.jbilling.server.notification.db.NotificationMessageDTO.setNotificationMessageType(com.sapienter.jbilling.server.notification.db.NotificationMessageTypeDTO)", "com.sapienter.jbilling.server.notification.db.NotificationMessageDTO.setEntity(com.sapienter.jbilling.server.user.db.CompanyDTO)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)"],
    "com.sapienter.jbilling.server.notification.db.NotificationMessageArchDAS.create(Integer, MessageSection[])": ["com.sapienter.jbilling.server.notification.MessageSection.getSection()", "com.sapienter.jbilling.server.notification.db.NotificationMessageArchLineDTO.setNotificationMessageArch(com.sapienter.jbilling.server.notification.db.NotificationMessageArchDTO)", "java.util.Set.add(java.lang.Object)", "java.lang.String.substring(int,int)", "com.sapienter.jbilling.server.notification.db.NotificationMessageArchDTO.setCreateDatetime(java.util.Date)", "com.sapienter.jbilling.server.notification.db.NotificationMessageArchLineDAS.create(java.lang.String,java.lang.Integer)", "com.sapienter.jbilling.server.notification.db.NotificationMessageArchDTO.getNotificationMessageArchLines()", "com.sapienter.jbilling.server.notification.db.NotificationMessageArchDTO.setTypeId(java.lang.Integer)", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)", "com.sapienter.jbilling.server.notification.MessageSection.getContent()", "java.lang.String.length()"],
    "com.sapienter.jbilling.server.process.task.ScpUploadTask.getTaskName()": ["com.sapienter.jbilling.server.process.task.AbstractCronTask.getScheduleString()"],
    "com.sapienter.jbilling.server.mediation.task.RulesMediationTask.getLog()": ["org.apache.log4j.Logger.getLogger(java.lang.Class)"],
    "com.sapienter.jbilling.server.user.contact.db.ContactDAS.findPrimaryContact(Integer)": ["org.hibernate.Query.setParameter(java.lang.String,java.lang.String)", "org.hibernate.Query.uniqueResult()", "getSession()", "org.hibernate.Query.setParameter(java.lang.String,java.lang.Integer)", "createQuery(java.lang.String)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.zero2null(Integer)": ["java.lang.Integer.intValue()"],
    "com.sapienter.jbilling.server.user.tasks.BasicSubscriptionStatusManagerTask.subscriptionEnds(Integer, Date)": ["com.sapienter.jbilling.server.user.UserBL.updateSubscriptionStatus(java.lang.Integer)", "com.sapienter.jbilling.server.user.tasks.BasicSubscriptionStatusManagerTask.getUser(java.lang.Integer)", "com.sapienter.jbilling.server.user.UserBL.isCurrentlySubscribed(java.util.Date)"],
    "com.sapienter.jbilling.server.user.contact.db.ContactDAS.findEntityContact(Integer)": ["org.hibernate.Query.setCacheable(boolean)", "org.hibernate.Query.setParameter(java.lang.String,java.lang.String)", "org.hibernate.Query.uniqueResult()", "getSession()", "org.hibernate.Query.setParameter(java.lang.String,java.lang.Integer)", "createQuery(java.lang.String)"],
    "com.sapienter.jbilling.server.mediation.MediationSessionBean.trigger(Integer)": ["org.apache.log4j.Category.debug(java.lang.Object)", "java.lang.StringBuffer.toString()", "com.sapienter.jbilling.server.mediation.db.MediationConfiguration.getPluggableTask()", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskBL.instantiateTask()", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "java.lang.StringBuffer.append(java.lang.String)", "com.sapienter.jbilling.server.mediation.task.IMediationReader.validate(java.util.List)", "org.springframework.util.StopWatch.start()", "com.sapienter.jbilling.server.mediation.db.MediationConfiguration.getName()", "org.springframework.util.StopWatch.getTotalTimeMillis()", "com.sapienter.jbilling.server.mediation.IMediationSessionBean.updateProcessRecord(com.sapienter.jbilling.server.mediation.db.MediationProcess,java.util.Date)", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)", "com.sapienter.jbilling.server.mediation.IMediationSessionBean.isProcessing(java.lang.Integer)", "java.util.List.isEmpty()", "com.sapienter.jbilling.server.mediation.IMediationSessionBean.getAllConfigurations(java.lang.Integer)", "com.sapienter.jbilling.server.mediation.IMediationSessionBean.createProcessRecord(com.sapienter.jbilling.server.mediation.db.MediationConfiguration)", "org.springframework.util.StopWatch.stop()", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskManager.getNextClass()", "com.sapienter.jbilling.server.mediation.IMediationSessionBean.normalizeRecordGroup(com.sapienter.jbilling.server.mediation.task.IMediationProcess,java.lang.Integer,com.sapienter.jbilling.server.mediation.db.MediationProcess,java.util.List,java.lang.Integer,com.sapienter.jbilling.server.mediation.db.MediationConfiguration)", "com.sapienter.jbilling.server.user.EntityBL.getRootUser(java.lang.Integer)", "com.sapienter.jbilling.server.mediation.db.MediationProcess.getEndDatetime()", "org.springframework.util.StopWatch.prettyPrint()", "java.util.List.size()", "org.springframework.util.StopWatch.start(java.lang.String)", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskBL.set(com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDTO)"],
    "com.sapienter.jbilling.server.pluggableTask.PaymentAuthorizeNetTask.getACHChargeData(String, String, boolean, BigDecimal, String, String, Integer, String, String, String)": ["java.math.BigDecimal.toString()", "java.lang.Integer.intValue()"],
    "com.sapienter.jbilling.server.invoice.PaperInvoiceBatchBL.sendEmail()": ["com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.process.db.BillingProcessDTO.getEntity()", "com.sapienter.jbilling.server.process.db.PaperInvoiceBatchDTO.getId()", "com.sapienter.jbilling.server.process.db.PaperInvoiceBatchDTO.getProcess()", "com.sapienter.jbilling.server.notification.NotificationBL.sendSapienterEmail(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String[])", "com.sapienter.jbilling.server.util.PreferenceBL.set(java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.common.Util.getSysProp(java.lang.String)", "java.lang.Boolean.booleanValue()", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)", "com.sapienter.jbilling.server.util.PreferenceBL.getInt()"],
    "com.sapienter.jbilling.server.payment.tasks.paypal.PaypalApi.doCapture(String, Payment, CompleteType)": ["com.paypal.sdk.core.nvp.NVPEncoder.encode()", "com.paypal.sdk.core.nvp.NVPDecoder.get(java.lang.String)", "com.sapienter.jbilling.server.payment.tasks.paypal.dto.CompleteType.toString()", "equals(java.lang.String)", "com.paypal.sdk.core.nvp.NVPDecoder.decode(java.lang.String)", "com.sapienter.jbilling.server.payment.tasks.paypal.dto.PaypalResult.setSucceseeded(boolean)", "com.sapienter.jbilling.server.payment.tasks.paypal.dto.Payment.getAmount()", "com.sapienter.jbilling.server.payment.tasks.paypal.dto.PaypalResult.setErrorCode(java.lang.String)", "com.paypal.sdk.services.NVPCallerServices.call(java.lang.String)", "com.paypal.sdk.services.NVPCallerServices.setAPIProfile(com.paypal.sdk.profiles.APIProfile)", "com.sapienter.jbilling.server.payment.tasks.paypal.dto.Payment.getCurrencyCode()", "com.sapienter.jbilling.server.payment.tasks.paypal.dto.PaypalResult.setTransactionId(java.lang.String)", "com.paypal.sdk.core.nvp.NVPEncoder.add(java.lang.String,java.lang.String)"],
    "com.sapienter.jbilling.server.mediation.db.MediationProcessDAS.touch(List)": ["com.sapienter.jbilling.server.util.db.AbstractDAS.touch(java.util.List,java.lang.String)", "com.sapienter.jbilling.server.mediation.db.MediationConfiguration.getCreateDatetime()", "com.sapienter.jbilling.server.mediation.db.MediationProcess.getConfiguration()"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentAtlasTask.addAVSFields(Integer, Map)": ["com.sapienter.jbilling.server.user.contact.db.ContactDTO.getStateProvince()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getCity()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getEmail()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getAddress2()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getPostalCode()", "java.util.Map.put(java.lang.Object,java.lang.Object)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getAddress1()", "com.sapienter.jbilling.server.user.ContactBL.set(java.lang.Integer)", "com.sapienter.jbilling.server.user.ContactBL.getEntity()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getPhoneNumber()", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)", "java.lang.Integer.toString()"],
    "com.sapienter.jbilling.server.item.db.ItemDTO.getEntityId()": ["com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.item.db.ItemDTO.getEntity()"],
    "com.sapienter.jbilling.common.Util.luhnCheck(String)": ["com.sapienter.jbilling.common.Util.getDigitsOnly(java.lang.String)", "java.lang.String.substring(int,int)", "com.sapienter.jbilling.common.Util.isLuhnNum(java.lang.String)", "java.lang.String.length()", "java.lang.Integer.parseInt(java.lang.String)"],
    "com.sapienter.jbilling.server.order.event.NewActiveUntilEvent.toString()": ["com.sapienter.jbilling.server.order.event.NewActiveUntilEvent.getName()"],
    "com.sapienter.jbilling.server.payment.blacklist.NameFilter.checkUser(Integer)": ["com.sapienter.jbilling.server.util.Util.getEntityNotificationsBundle(java.lang.Integer)", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "java.util.List.isEmpty()", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getFirstName()", "com.sapienter.jbilling.server.user.db.UserDTO.getCompany()", "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDAS.filterByName(java.lang.Integer,java.lang.String,java.lang.String)", "java.util.ResourceBundle.getString(java.lang.String)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.user.contact.db.ContactDAS.findPrimaryContact(java.lang.Integer)", "com.sapienter.jbilling.server.user.contact.db.ContactDTO.getLastName()"],
    "com.sapienter.jbilling.server.notification.NotificationSessionBean.emailPayment(Integer)": ["com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.user.db.UserDTO.getLanguageIdField()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getBaseUser()", "com.sapienter.jbilling.server.notification.NotificationSessionBean.notify(com.sapienter.jbilling.server.user.db.UserDTO,com.sapienter.jbilling.server.notification.MessageDTO)", "java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.user.db.UserDTO.getEntity()", "com.sapienter.jbilling.server.payment.PaymentBL.getEntity()", "com.sapienter.jbilling.server.payment.PaymentBL.getDTOEx(java.lang.Integer)", "com.sapienter.jbilling.server.user.UserBL.getEntity()", "com.sapienter.jbilling.server.payment.db.PaymentDTO.getPaymentResult()", "com.sapienter.jbilling.server.payment.db.PaymentResultDTO.getId()", "com.sapienter.jbilling.server.notification.NotificationBL.getPaymentMessage(java.lang.Integer,com.sapienter.jbilling.server.payment.PaymentDTOEx,boolean)"],
    "com.sapienter.jbilling.server.order.OrderSessionBean.addItem(Integer, Integer, OrderDTO, Integer, Integer, Integer)": ["com.sapienter.jbilling.server.order.OrderSessionBean.addItem(java.lang.Integer,java.math.BigDecimal,com.sapienter.jbilling.server.order.db.OrderDTO,java.lang.Integer,java.lang.Integer,java.lang.Integer)"],
    "com.sapienter.jbilling.server.payment.PaymentWS.setBalance(BigDecimal)": ["java.math.BigDecimal.toString()"],
    "com.sapienter.jbilling.server.payment.blacklist.db.BlacklistDAS.findByUserType(Integer, Integer)": ["org.hibernate.Criteria.list()", "createAlias(java.lang.String,java.lang.String)", "org.hibernate.criterion.Restrictions.eq(java.lang.String,java.lang.Integer)", "getSession()", "add()", "createCriteria(java.lang.Class)"],
    "com.sapienter.jbilling.server.user.db.UserDAS.findNotInStatus(Integer, Integer)": ["org.hibernate.Query.list()", "getSession()", "org.hibernate.Query.setParameter(java.lang.String,java.lang.Integer)", "createQuery(java.lang.String)"],
    "com.sapienter.jbilling.server.item.ItemTypeBL.create(ItemTypeDTO)": ["com.sapienter.jbilling.server.item.db.ItemTypeDTO.getDescription()", "com.sapienter.jbilling.server.item.db.ItemTypeDTO.getOrderLineTypeId()", "com.sapienter.jbilling.server.item.db.ItemTypeDTO.setDescription(java.lang.String)", "com.sapienter.jbilling.server.item.db.ItemTypeDTO.getEntity()", "com.sapienter.jbilling.server.item.db.ItemTypeDTO.setEntity(com.sapienter.jbilling.server.user.db.CompanyDTO)", "com.sapienter.jbilling.server.item.db.ItemTypeDTO.setOrderLineTypeId(int)", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)"],
    "com.sapienter.jbilling.server.process.ConfigurationBL.init()": ["com.sapienter.jbilling.server.util.audit.EventLogger.getInstance()"],
    "com.sapienter.jbilling.server.order.OrderBL.update(Integer, OrderDTO)": ["com.sapienter.jbilling.server.order.db.OrderDTO.getOrderBillingType()", "org.apache.log4j.Category.info(java.lang.Object)", "com.sapienter.jbilling.server.order.db.OrderDTO.getNotes()", "java.util.Iterator.hasNext()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getId()", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.order.db.OrderDTO.getOrderPeriod()", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.order.OrderBL.setStatus(java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.order.db.OrderDTO.setAnticipatePeriods(java.lang.Integer)", "com.sapienter.jbilling.server.util.audit.EventLogger.auditBySystem(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.util.Date)", "com.sapienter.jbilling.server.order.db.OrderDTO.getIsCurrent()", "com.sapienter.jbilling.server.order.db.OrderDTO.getId()", "com.sapienter.jbilling.server.order.db.OrderDTO.setActiveSince(java.util.Date)", "com.sapienter.jbilling.common.Util.equal(java.util.Date,java.util.Date)", "com.sapienter.jbilling.server.order.db.OrderPeriodDTO.getId()", "com.sapienter.jbilling.server.order.db.OrderDTO.getNotify()", "com.sapienter.jbilling.server.order.db.OrderDTO.setDueDateUnitId(java.lang.Integer)", "com.sapienter.jbilling.server.order.db.OrderDTO.getActiveUntil()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getDescription()", "com.sapienter.jbilling.server.user.db.UserDTO.getId()", "com.sapienter.jbilling.server.util.db.AbstractGenericStatus.getId()", "com.sapienter.jbilling.server.order.db.OrderDTO.getDueDateValue()", "com.sapienter.jbilling.server.order.OrderBL.setMainSubscription(java.lang.Integer)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setDefaults()", "com.sapienter.jbilling.server.util.db.AbstractGenericStatusDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.order.db.OrderDTO.getStatusId()", "com.sapienter.jbilling.server.order.db.OrderDTO.setNotesInInvoice(java.lang.Integer)", "com.sapienter.jbilling.server.order.db.OrderDTO.setDueDateValue(java.lang.Integer)", "java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.order.db.OrderDTO.getAnticipatePeriods()", "com.sapienter.jbilling.server.order.db.OrderDTO.setNotes(java.lang.String)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setProvisioningStatus(com.sapienter.jbilling.server.provisioning.db.ProvisioningStatusDTO)", "com.sapienter.jbilling.server.order.db.OrderDTO.getCycleStarts()", "java.lang.Integer.intValue()", "com.sapienter.jbilling.server.order.OrderBL.checkOrderLineQuantities(java.util.List,java.util.List,java.lang.Integer,java.lang.Integer,boolean)", "com.sapienter.jbilling.server.order.db.OrderDTO.setOwnInvoice(java.lang.Integer)", "com.sapienter.jbilling.server.user.db.UserDTO.getCompany()", "java.util.List.iterator()", "com.sapienter.jbilling.server.order.db.OrderDTO.getBaseUserByUserId()", "com.sapienter.jbilling.server.order.db.OrderDTO.setDfFm(java.lang.Integer)", "java.util.Iterator.next()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getDeleted()", "com.sapienter.jbilling.server.order.OrderBL.updateActiveUntil(java.lang.Integer,java.util.Date,com.sapienter.jbilling.server.order.db.OrderDTO)", "com.sapienter.jbilling.server.order.db.OrderDTO.setNotify(java.lang.Integer)", "java.util.List.clear()", "com.sapienter.jbilling.server.system.event.EventManager.process(com.sapienter.jbilling.server.system.event.Event)", "java.util.List.addAll(java.util.Collection)", "com.sapienter.jbilling.server.order.db.OrderDTO.setCycleStarts(java.util.Date)", "com.sapienter.jbilling.server.order.OrderBL.audit(java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.order.db.OrderDTO.getActiveSince()", "com.sapienter.jbilling.server.order.OrderBL.unsetMainSubscription(java.lang.Integer)", "com.sapienter.jbilling.server.util.audit.EventLogger.audit(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.util.Date)", "com.sapienter.jbilling.server.order.db.OrderDTO.setOrderBillingType(com.sapienter.jbilling.server.order.db.OrderBillingTypeDTO)", "com.sapienter.jbilling.server.order.db.OrderDTO.getOwnInvoice()", "com.sapienter.jbilling.server.order.OrderBL.audit(java.lang.Integer,java.util.Date)", "com.sapienter.jbilling.server.order.db.OrderDTO.getLines()", "com.sapienter.jbilling.server.order.db.OrderDTO.getNextBillableDay()", "java.util.List.size()", "com.sapienter.jbilling.server.order.db.OrderDTO.getDfFm()", "com.sapienter.jbilling.server.order.OrderBL.updateNextBillableDay(java.lang.Integer,java.util.Date)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getItemId()", "com.sapienter.jbilling.server.order.db.OrderDTO.getDueDateUnitId()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setPurchaseOrder(com.sapienter.jbilling.server.order.db.OrderDTO)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getProvisioningStatus()", "com.sapienter.jbilling.server.order.db.OrderDTO.setOrderPeriod(com.sapienter.jbilling.server.order.db.OrderPeriodDTO)", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)", "com.sapienter.jbilling.server.order.db.OrderDTO.getNotesInInvoice()"],
    "com.sapienter.jbilling.server.payment.event.ProcessPaymentProcessor.processEnd(EndProcessPaymentEvent)": ["com.sapienter.jbilling.server.system.event.MapMessage.setStringProperty(java.lang.String,java.lang.String)", "java.lang.Object.getClass()", "com.sapienter.jbilling.server.payment.event.EndProcessPaymentEvent.getRunId()", "com.sapienter.jbilling.server.system.event.MapMessage.setInt(java.lang.String,java.lang.Integer)"],
    "com.sapienter.jbilling.server.order.OrderBL.addPeriod(Integer, Integer)": ["com.sapienter.jbilling.server.order.db.OrderPeriodDTO.setPeriodUnit(com.sapienter.jbilling.server.process.db.PeriodUnitDTO)", "com.sapienter.jbilling.server.util.db.AbstractDescription.setDescription(java.lang.String,java.lang.Integer)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.order.db.OrderPeriodDTO.setValue(java.lang.Integer)", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)", "com.sapienter.jbilling.server.order.db.OrderPeriodDTO.setCompany(com.sapienter.jbilling.server.user.db.CompanyDTO)"],
    "com.sapienter.jbilling.server.user.CreditCardBL.delete(Integer)": ["com.sapienter.jbilling.server.user.db.CreditCardDTO.getId()", "java.util.Iterator.next()", "com.sapienter.jbilling.server.util.audit.EventLogger.audit(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.util.Date)", "java.util.Set.remove(java.lang.Object)", "com.sapienter.jbilling.server.user.db.UserDTO.getCreditCards()", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getBaseUsers()", "java.util.Iterator.hasNext()", "java.util.Iterator.remove()", "java.util.Set.iterator()", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.setDeleted(int)"],
    "com.sapienter.jbilling.server.order.db.OrderDAS.findEarliestActiveOrder(Integer)": ["org.hibernate.Criteria.list()", "createAlias(java.lang.String,java.lang.String)", "org.hibernate.criterion.Restrictions.eq(java.lang.String,java.lang.Integer)", "org.hibernate.criterion.Order.asc(java.lang.String)", "java.util.List.isEmpty()", "addOrder()", "getSession()", "add()", "createCriteria(java.lang.Class)", "org.hibernate.criterion.Restrictions.eq(java.lang.String,int)", "java.util.List.get(int)"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getLatestInvoiceByItemType(Integer, Integer)": ["com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.invoice.InvoiceBL.getLastByUserAndItemType(java.lang.Integer,java.lang.Integer)", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)", "com.sapienter.jbilling.server.invoice.InvoiceBL.getWS(com.sapienter.jbilling.server.invoice.db.InvoiceDTO)"],
    "com.sapienter.jbilling.server.item.db.ItemDTO.getExcludedTypeIds()": ["com.sapienter.jbilling.server.item.db.ItemDTO.setExcludedTypeIds(java.lang.Integer[])", "com.sapienter.jbilling.server.item.db.ItemTypeDTO.getId()", "java.util.Set.size()"],
    "com.sapienter.jbilling.server.user.UserSessionBean.getUserDTOEx(String, Integer)": ["com.sapienter.jbilling.server.user.db.UserDTO.touch()", "com.sapienter.jbilling.server.util.DTOFactory.getUserDTOEx(com.sapienter.jbilling.server.user.db.UserDTO)", "com.sapienter.jbilling.server.user.UserBL.getEntity()", "com.sapienter.jbilling.server.user.UserBL.set(java.lang.String,java.lang.Integer)"],
    "com.sapienter.jbilling.server.user.db.CreditCardDTO.useGatewayKey()": ["com.sapienter.jbilling.server.user.db.CreditCardDTO.getGatewayKey()", "java.lang.Integer.equals(java.lang.Object)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.getCcType()"],
    "com.sapienter.jbilling.server.user.partner.PartnerBL.getPayoutList(Integer)": ["java.sql.Connection.close()", "javax.sql.RowSet.setInt(int,int)", "com.sapienter.jbilling.server.list.ResultList.execute()", "com.sapienter.jbilling.server.list.ResultList.prepareStatement(java.lang.String)", "java.lang.Integer.intValue()"],
    "com.sapienter.jbilling.server.process.BillingProcessDTOEx.toString()": ["com.sapienter.jbilling.server.process.BillingProcessRunDTOEx.toString()", "java.lang.StringBuffer.toString()", "com.sapienter.jbilling.server.process.db.BillingProcessDTO.toString()", "java.lang.StringBuffer.append(java.lang.String)"],
    "com.sapienter.jbilling.server.item.ItemTypeBL.init()": ["com.sapienter.jbilling.server.util.audit.EventLogger.getInstance()"],
    "com.sapienter.jbilling.server.provisioning.task.TestMMSCCommunication.deleteCustomer(DeleteCustomerRequest)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.provisioning.task.mmsc.EfsBaseRequest.getTransactionId()", "com.sapienter.jbilling.server.provisioning.task.TestMMSCCommunication.getResponse(java.lang.String)"],
    "com.sapienter.jbilling.server.item.tasks.BasicItemManager.populateOrderLine(Integer, Integer, Integer, Integer, OrderLineDTO, List)": ["com.sapienter.jbilling.server.order.OrderBL.lookUpEditable(java.lang.Integer)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setTypeId(java.lang.Integer)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setDescription(java.lang.String)", "java.math.BigDecimal.multiply(java.math.BigDecimal)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setAmount(java.math.BigDecimal)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getPrice()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setDeleted(int)", "com.sapienter.jbilling.server.item.db.ItemDTO.getPrice()", "com.sapienter.jbilling.server.item.ItemBL.setPricingFields(java.util.List)", "com.sapienter.jbilling.server.item.db.ItemDTO.getPercentage()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setQuantity(java.math.BigDecimal)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getQuantity()", "java.util.List.addAll(java.util.Collection)", "com.sapienter.jbilling.server.item.ItemBL.getDTO(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.math.BigDecimal)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getAmount()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setItem(com.sapienter.jbilling.server.item.db.ItemDTO)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setEditable(java.lang.Boolean)", "java.math.BigDecimal.setScale(int,int)", "com.sapienter.jbilling.server.mediation.Record.getFields()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setCreateDatetime(java.util.Date)", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getDescription()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getItemId()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.setPrice(java.math.BigDecimal)", "com.sapienter.jbilling.server.util.db.AbstractDescription.getDescription()", "com.sapienter.jbilling.server.item.db.ItemDTO.getOrderLineTypeId()"],
    "com.sapienter.jbilling.server.order.OrderLineBL.addItem(OrderDTO, Integer, boolean)": ["com.sapienter.jbilling.server.order.OrderLineBL.addItem(com.sapienter.jbilling.server.order.db.OrderDTO,java.lang.Integer,java.math.BigDecimal,boolean)"],
    "com.sapienter.jbilling.server.user.partner.PartnerBL.getRangedCommission()": ["java.util.Collections.sort(java.util.List,java.util.Comparator)", "java.util.List.size()", "com.sapienter.jbilling.server.user.partner.db.PartnerRange.getRangeTo()", "com.sapienter.jbilling.server.user.partner.db.PartnerRange.getRangeFrom()", "com.sapienter.jbilling.server.user.partner.db.Partner.getRanges()", "com.sapienter.jbilling.server.user.partner.PartnerBL.getCustomersCount()", "java.util.List.get(int)"],
    "com.sapienter.jbilling.server.provisioning.task.ProvisioningCommandsRulesTask.process(Event)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.order.db.OrderDTO.getId()", "com.sapienter.jbilling.server.order.event.NewQuantityEvent.getNewQuantity()", "com.sapienter.jbilling.server.provisioning.task.ProvisioningCommandsRulesTask.processRules(com.sapienter.jbilling.server.order.db.OrderDTO,com.sapienter.jbilling.server.order.db.OrderLineDTO,java.lang.String)", "com.sapienter.jbilling.server.pluggableTask.PluggableTask.readKnowledgeBase()", "com.sapienter.jbilling.server.order.event.NewQuantityEvent.getOrderLine()", "org.drools.KnowledgeBase.newStatefulKnowledgeSession()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getId()", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "java.math.BigDecimal.compareTo(java.math.BigDecimal)", "com.sapienter.jbilling.server.provisioning.event.SubscriptionActiveEvent.getOrder()", "com.sapienter.jbilling.server.provisioning.event.SubscriptionInactiveEvent.getOrder()", "com.sapienter.jbilling.server.provisioning.task.ProvisioningCommandsRulesTask.checkOrder(com.sapienter.jbilling.server.order.db.OrderDTO)", "com.sapienter.jbilling.server.provisioning.task.ProvisioningCommandsRulesTask.processRules(com.sapienter.jbilling.server.order.db.OrderDTO,java.lang.String)", "com.sapienter.jbilling.server.order.event.NewQuantityEvent.getOrderId()", "com.sapienter.jbilling.server.order.event.NewQuantityEvent.getOldQuantity()"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.validatePurchase(Integer, Integer, String)": ["com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.doValidatePurchase(java.lang.Integer,java.lang.Integer[],java.lang.String[])"],
    "com.sapienter.jbilling.server.user.UserBL.getByEmail(String)": ["java.sql.ResultSet.next()", "java.sql.Connection.close()", "javax.sql.RowSet.setString(int,java.lang.String)", "java.sql.ResultSet.getInt(int)", "com.sapienter.jbilling.server.list.ResultList.execute()", "com.sapienter.jbilling.server.list.ResultList.prepareStatement(java.lang.String)", "java.sql.ResultSet.close()"],
    "com.sapienter.jbilling.server.notification.NotificationSessionBean.emailInvoice(Integer)": ["com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.user.db.UserDTO.getLanguageIdField()", "com.sapienter.jbilling.server.notification.NotificationSessionBean.notify(com.sapienter.jbilling.server.user.db.UserDTO,com.sapienter.jbilling.server.notification.MessageDTO)", "com.sapienter.jbilling.server.user.db.UserDTO.getEntity()", "com.sapienter.jbilling.server.invoice.InvoiceBL.getEntity()", "com.sapienter.jbilling.server.notification.NotificationBL.getInvoiceEmailMessage(java.lang.Integer,java.lang.Integer,com.sapienter.jbilling.server.invoice.db.InvoiceDTO)", "com.sapienter.jbilling.server.user.UserBL.getEntity()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getBaseUser()"],
    "com.sapienter.jbilling.server.pluggableTask.PluggableTaskSessionBean.createParameter(Integer, Integer, PluggableTaskParameterDTO)": ["com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskBL.createParameter(java.lang.Integer,com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskParameterDTO)"],
    "com.sapienter.jbilling.server.util.db.PreferenceDAS.findByType_Row(Integer, Integer, String)": ["org.hibernate.Query.setCacheable(boolean)", "org.hibernate.Query.setParameter(java.lang.String,java.lang.String)", "org.hibernate.Query.uniqueResult()", "getSession()", "org.hibernate.Query.setParameter(java.lang.String,java.lang.Integer)", "createQuery(java.lang.String)"],
    "com.sapienter.jbilling.server.order.OrderLineBL.addItem(OrderDTO, Integer, Integer)": ["com.sapienter.jbilling.server.order.OrderLineBL.addItem(com.sapienter.jbilling.server.order.db.OrderDTO,java.lang.Integer,java.lang.Integer,boolean)"],
    "com.sapienter.jbilling.server.process.BillingProcessBL.generateInvoice(BillingProcessDTO, UserDTO, boolean, boolean)": ["com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getId()", "com.sapienter.jbilling.server.user.db.UserDTO.getEntity()", "java.util.Iterator.hasNext()", "com.sapienter.jbilling.server.invoice.NewInvoiceDTO.areLinesGeneratedEmpty()", "com.sapienter.jbilling.server.invoice.NewInvoiceDTO.setDate(java.util.Date)", "com.sapienter.jbilling.server.util.PreferenceBL.getInt()", "com.sapienter.jbilling.server.order.db.OrderDTO.setBaseUserByUserId(com.sapienter.jbilling.server.user.db.UserDTO)", "java.util.Hashtable.size()", "com.sapienter.jbilling.server.user.db.CompanyDTO.getId()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.setInvoiceStatus(com.sapienter.jbilling.server.invoice.db.InvoiceStatusDTO)", "com.sapienter.jbilling.server.util.PreferenceBL.set(java.lang.Integer,java.lang.Integer)", "com.sapienter.jbilling.server.process.db.BillingProcessDTO.getId()", "com.sapienter.jbilling.server.process.BillingProcessBL.processOrdersForUser(com.sapienter.jbilling.server.user.db.UserDTO,java.lang.Integer,com.sapienter.jbilling.server.process.db.BillingProcessDTO,boolean,boolean,boolean,int,java.util.Hashtable)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getCarriedBalance()", "org.apache.log4j.Category.warn(java.lang.Object)", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskManager.getNextClass()", "com.sapienter.jbilling.server.invoice.NewInvoiceDTO.setDueDatePeriod(com.sapienter.jbilling.server.order.TimePeriod)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getCurrency()", "java.util.Hashtable.put(java.lang.Object,java.lang.Object)", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.getAutoPaymentApplication()", "com.sapienter.jbilling.server.invoice.db.InvoiceDAS.findWithBalanceByUser(com.sapienter.jbilling.server.user.db.UserDTO)", "com.sapienter.jbilling.server.order.OrderBL.getDueDate()", "java.util.Hashtable.entrySet()", "com.sapienter.jbilling.server.process.BillingProcessBL.processOrderToInvoiceEvents(com.sapienter.jbilling.server.invoice.NewInvoiceDTO,java.lang.Integer)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.setCurrency(com.sapienter.jbilling.server.util.db.CurrencyDTO)", "com.sapienter.jbilling.server.user.db.UserDTO.getUserId()", "com.sapienter.jbilling.server.util.db.AbstractGenericStatusDAS.find(java.io.Serializable)", "org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.pluggableTask.InvoiceFilterTask.isApplicable(com.sapienter.jbilling.server.invoice.db.InvoiceDTO,com.sapienter.jbilling.server.process.db.BillingProcessDTO)", "com.sapienter.jbilling.server.invoice.NewInvoiceDTO.getInvoices()", "java.util.Hashtable.values()", "com.sapienter.jbilling.server.process.db.BillingProcessDTO.getBillingDate()", "com.sapienter.jbilling.server.process.BillingProcessBL.processOrderAddedOnInvoiceEvents(com.sapienter.jbilling.server.invoice.NewInvoiceDTO,java.lang.Integer)", "java.math.BigDecimal.compareTo(java.math.BigDecimal)", "com.sapienter.jbilling.server.process.event.InvoicesGeneratedEvent.addInvoices(com.sapienter.jbilling.server.invoice.db.InvoiceDTO[])", "com.sapienter.jbilling.server.order.OrderBL.set(com.sapienter.jbilling.server.order.db.OrderDTO)", "java.util.Hashtable.elements()", "java.util.Map$Entry.getValue()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getBalance()", "com.sapienter.jbilling.server.util.db.CurrencyDTO.getId()", "org.apache.log4j.Category.error(java.lang.Object,java.lang.Throwable)", "java.util.Enumeration.nextElement()", "java.util.Iterator.next()", "org.apache.log4j.Category.fatal(java.lang.Object,java.lang.Throwable)", "com.sapienter.jbilling.server.system.event.EventManager.process(com.sapienter.jbilling.server.system.event.Event)", "com.sapienter.jbilling.server.process.db.BillingProcessDTO.getEntity()", "com.sapienter.jbilling.server.process.ConfigurationBL.getEntity()", "com.sapienter.jbilling.server.invoice.NewInvoiceDTO.addInvoice(com.sapienter.jbilling.server.invoice.db.InvoiceDTO)", "com.sapienter.jbilling.server.invoice.InvoiceBL.getDTO()", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.getInvoiceDateProcess()", "java.util.Hashtable.isEmpty()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.setIsReview(java.lang.Integer)", "com.sapienter.jbilling.server.payment.PaymentBL.automaticPaymentApplication(com.sapienter.jbilling.server.invoice.db.InvoiceDTO)", "com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO.getMaximumPeriods()", "com.sapienter.jbilling.server.process.BillingProcessBL.composeInvoice(java.lang.Integer,java.lang.Integer,com.sapienter.jbilling.server.invoice.NewInvoiceDTO)", "java.math.BigDecimal.add(java.math.BigDecimal)", "com.sapienter.jbilling.server.process.BillingProcessBL.generateDBInvoice(java.lang.Integer,com.sapienter.jbilling.server.invoice.NewInvoiceDTO,com.sapienter.jbilling.server.process.db.BillingProcessDTO,java.lang.Integer)", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.setCarriedBalance(java.math.BigDecimal)", "org.apache.log4j.Category.error(java.lang.Object)", "java.util.Collection.iterator()"],
    "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.touch()": ["com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getBillingProcess()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getInvoice()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getCurrency()", "java.util.Collection.size()", "java.util.Set.size()", "com.sapienter.jbilling.server.order.db.OrderProcessDTO.getPurchaseOrder()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getPaymentMap()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getPaperInvoiceBatch()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getInvoiceLines()", "com.sapienter.jbilling.server.order.db.OrderDTO.touch()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getInvoices()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getBaseUser()", "com.sapienter.jbilling.server.invoice.db.InvoiceDTO.getOrderProcesses()"],
    "com.sapienter.jbilling.server.pluggableTask.PluggableTask.readKnowledgeBase()": ["org.drools.agent.KnowledgeAgentFactory.newKnowledgeAgent(java.lang.String)", "java.lang.String.getBytes()", "com.sapienter.jbilling.server.pluggableTask.PluggableTask.startRulesScannerIfNeeded()", "java.util.HashMap.containsKey(java.lang.Integer)", "java.util.HashMap.put(java.lang.Integer,org.drools.agent.KnowledgeAgent)", "org.drools.agent.KnowledgeAgent.getKnowledgeBase()", "getKnowledgeBase()", "org.drools.agent.KnowledgeAgent.applyChangeSet(org.drools.io.impl.ByteArrayResource)", "com.sapienter.jbilling.server.pluggableTask.PluggableTask.createChangeSetStringFromTaskParameters()", "java.util.HashMap.get(java.lang.Integer)", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDTO.getId()"],
    "com.sapienter.jbilling.server.provisioning.task.TelnetCommunication.send(String)": ["java.lang.String.substring(int,int)", "com.sapienter.jbilling.server.provisioning.task.TelnetCommunication.write(java.lang.String)", "com.sapienter.jbilling.server.provisioning.task.TelnetCommunication.readUntil(java.lang.String)", "java.lang.String.length()"],
    "com.sapienter.jbilling.server.item.CurrencyBL.setEntityCurrency(Integer, Integer)": ["com.sapienter.jbilling.server.user.db.CompanyDTO.setCurrency(com.sapienter.jbilling.server.util.db.CurrencyDTO)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)"],
    "com.sapienter.jbilling.server.order.OrderBL.deletePeriod(Integer)": ["com.sapienter.jbilling.server.util.db.AbstractDAS.delete(java.lang.Object)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "java.util.Set.size()", "com.sapienter.jbilling.server.order.db.OrderPeriodDTO.getPurchaseOrders()"],
    "com.sapienter.jbilling.server.util.PreferenceBL.createUpdateForEntity(Integer, Integer, BigDecimal)": ["com.sapienter.jbilling.server.util.PreferenceBL.createUpdateForEntity(java.lang.Integer,java.lang.Integer,java.lang.String)", "java.math.BigDecimal.toString()"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.validatePayment(PaymentWS)": ["com.sapienter.jbilling.server.payment.PaymentWS.setBaseUserId(java.lang.Integer)", "com.sapienter.jbilling.server.payment.PaymentWS.setCurrencyId(java.lang.Integer)", "com.sapienter.jbilling.server.payment.PaymentWS.setPaymentId(java.lang.Integer)", "com.sapienter.jbilling.server.payment.PaymentWS.getPaymentId()", "com.sapienter.jbilling.server.payment.PaymentWS.getMethodId()", "com.sapienter.jbilling.server.payment.PaymentWS.getCurrencyId()", "com.sapienter.jbilling.server.payment.PaymentWS.getBaseUserId()", "com.sapienter.jbilling.server.payment.PaymentWS.setMethodId(java.lang.Integer)"],
    "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskBL.update(Integer, PluggableTaskDTO)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskBL.validate(com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDTO)", "com.sapienter.jbilling.server.util.audit.EventLogger.audit(java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.util.Date)", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDTO.populateParamValues()", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDTO.getParameters()", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDTO.getId()", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskParameterDTO.expandValue()", "com.sapienter.jbilling.server.pluggableTask.admin.PluggableTaskDAS.invalidateCache()", "com.sapienter.jbilling.server.pluggableTask.PluggableTask.invalidateRuleCache(java.lang.Integer)", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)"],
    "com.sapienter.jbilling.server.order.OrderLineWS.setPriceAsDecimal(BigDecimal)": ["com.sapienter.jbilling.server.order.OrderLineWS.setPrice(java.math.BigDecimal)"],
    "com.sapienter.jbilling.server.process.task.DailyProRateCompositionTask.calculatePeriodAmount(BigDecimal, PeriodOfTime)": ["com.sapienter.jbilling.server.process.PeriodOfTime.getDaysInPeriod()", "com.sapienter.jbilling.server.process.PeriodOfTime.getDaysInCycle()", "org.apache.log4j.Category.warn(java.lang.Object)", "java.math.BigDecimal.multiply(java.math.BigDecimal)", "java.math.BigDecimal.divide(java.math.BigDecimal,int,int)"],
    "com.sapienter.jbilling.server.payment.tasks.PaymentWorldPayExternalTask.prepareExternalPayment(PaymentDTOEx)": ["org.apache.log4j.Category.debug(java.lang.Object)", "com.sapienter.jbilling.server.payment.PaymentDTOEx.setCreditCard(com.sapienter.jbilling.server.user.db.CreditCardDTO)", "com.sapienter.jbilling.server.user.db.CreditCardDTO.useGatewayKey()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getUserId()", "com.sapienter.jbilling.server.user.UserBL.getCreditCard()", "com.sapienter.jbilling.server.payment.PaymentDTOEx.getCreditCard()"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.saveAgeingConfiguration(AgeingWS[], Integer, Integer)": ["com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerCompanyId()", "com.sapienter.jbilling.server.process.IBillingProcessSessionBean.setAgeingSteps(java.lang.Integer,java.lang.Integer,com.sapienter.jbilling.server.process.AgeingDTOEx[])", "com.sapienter.jbilling.server.user.IUserSessionBean.setEntityParameter(java.lang.Integer,java.lang.Integer,java.lang.String)", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "com.sapienter.jbilling.server.process.AgeingBL.validate(com.sapienter.jbilling.server.process.AgeingDTOEx[])", "com.sapienter.jbilling.server.process.AgeingBL.getDTOEx(com.sapienter.jbilling.server.process.AgeingWS)", "java.lang.Integer.toString()"],
    "com.sapienter.jbilling.server.process.db.AgeingEntityStepDAS.create(Integer, Integer, String, String, Integer, int)": ["com.sapienter.jbilling.server.process.db.AgeingEntityStepDTO.setUserStatus(com.sapienter.jbilling.server.user.db.UserStatusDTO)", "com.sapienter.jbilling.server.process.db.AgeingEntityStepDTO.setWelcomeMessage(java.lang.Integer,java.lang.String)", "com.sapienter.jbilling.server.process.db.AgeingEntityStepDTO.setFailedLoginMessage(java.lang.Integer,java.lang.String)", "com.sapienter.jbilling.server.util.db.AbstractDAS.find(java.io.Serializable)", "com.sapienter.jbilling.server.process.db.AgeingEntityStepDTO.setDays(int)", "com.sapienter.jbilling.server.process.db.AgeingEntityStepDTO.setCompany(com.sapienter.jbilling.server.user.db.CompanyDTO)", "com.sapienter.jbilling.server.util.db.AbstractDAS.save(java.lang.Object)", "com.sapienter.jbilling.server.util.db.AbstractGenericStatusDAS.find(java.io.Serializable)"],
    "com.sapienter.jbilling.server.rule.task.VelocityRulesGeneratorTask.generateRules(Object)": ["java.util.Map.get(java.lang.Object)", "org.apache.velocity.app.VelocityEngine.setProperty(java.lang.String)", "com.sapienter.jbilling.server.rule.task.VelocityRulesGeneratorTask.addParameters(org.apache.velocity.VelocityContext,java.lang.Object)", "com.sapienter.jbilling.server.pluggableTask.admin.ParameterDescription.getName()", "java.io.File.getParent()", "com.sapienter.jbilling.server.rule.task.AbstractGeneratorTask.getAbsolutePath(java.lang.String)", "org.apache.velocity.app.VelocityEngine.mergeTemplate(java.lang.String,org.apache.velocity.VelocityContext,java.io.StringWriter)", "org.apache.velocity.app.VelocityEngine.init()", "org.apache.log4j.Category.error(java.lang.Object)", "java.io.File.getName()", "java.io.StringWriter.toString()"],
    "com.sapienter.jbilling.server.order.OrderBL.getWS(Integer)": ["com.sapienter.jbilling.server.order.db.OrderDTO.getOrderBillingType()", "com.sapienter.jbilling.server.order.db.OrderDTO.getNotes()", "java.util.Iterator.hasNext()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getId()", "com.sapienter.jbilling.server.order.db.OrderDTO.getOrderPeriod()", "com.sapienter.jbilling.server.invoice.InvoiceBL.DTOtoWS(java.util.List)", "com.sapienter.jbilling.server.order.db.OrderDTO.getInvoices()", "com.sapienter.jbilling.server.order.db.OrderDTO.getVersionNum()", "com.sapienter.jbilling.server.order.db.OrderDTO.getIsCurrent()", "com.sapienter.jbilling.server.order.db.OrderDTO.getId()", "com.sapienter.jbilling.server.order.OrderBL.getOrderLineWS(java.lang.Integer)", "com.sapienter.jbilling.server.order.db.OrderDTO.addExtraFields(java.lang.Integer)", "com.sapienter.jbilling.server.order.db.OrderDTO.getNotificationStep()", "com.sapienter.jbilling.server.util.db.AbstractDescription.getDescription(java.lang.Integer)", "com.sapienter.jbilling.server.order.OrderWS.setGeneratedInvoices(com.sapienter.jbilling.server.invoice.InvoiceWS[])", "com.sapienter.jbilling.server.order.db.OrderDTO.getTotal()", "com.sapienter.jbilling.server.order.OrderWS.setOrderLines(com.sapienter.jbilling.server.order.OrderLineWS[])", "com.sapienter.jbilling.server.order.db.OrderDTO.getNotify()", "com.sapienter.jbilling.server.order.db.OrderPeriodDTO.getId()", "com.sapienter.jbilling.server.order.db.OrderDTO.getCurrencyId()", "com.sapienter.jbilling.server.order.db.OrderDTO.getActiveUntil()", "com.sapienter.jbilling.server.order.db.OrderDTO.getDeleted()", "com.sapienter.jbilling.server.order.db.OrderDTO.getBillingTypeId()", "com.sapienter.jbilling.server.user.db.UserDTO.getId()", "com.sapienter.jbilling.server.order.OrderWS.setStatusStr(java.lang.String)", "com.sapienter.jbilling.server.order.OrderWS.getOrderLines()", "com.sapienter.jbilling.server.order.db.OrderDTO.getDueDateValue()", "com.sapienter.jbilling.server.order.db.OrderDTO.getStatusId()", "com.sapienter.jbilling.server.order.OrderWS.setPeriodStr(java.lang.String)", "com.sapienter.jbilling.server.order.db.OrderDTO.getAnticipatePeriods()", "com.sapienter.jbilling.server.order.OrderWS.setTotal(java.math.BigDecimal)", "java.util.List.add(java.lang.Object)", "com.sapienter.jbilling.server.order.db.OrderDTO.getCycleStarts()", "com.sapienter.jbilling.server.order.OrderWS.setBillingTypeStr(java.lang.String)", "com.sapienter.jbilling.server.order.db.OrderDTO.getCreatedBy()", "java.util.List.iterator()", "com.sapienter.jbilling.server.order.db.OrderDTO.getLastNotified()", "com.sapienter.jbilling.server.order.db.OrderDTO.getBaseUserByUserId()", "com.sapienter.jbilling.server.order.db.OrderDTO.getOrderStatus()", "java.util.List.toArray(java.lang.Object[])", "java.util.Iterator.next()", "com.sapienter.jbilling.server.order.db.OrderLineDTO.getDeleted()", "com.sapienter.jbilling.server.order.db.OrderDTO.getCreateDate()", "com.sapienter.jbilling.server.order.db.OrderDTO.getActiveSince()", "com.sapienter.jbilling.server.order.db.OrderDTO.getOwnInvoice()", "com.sapienter.jbilling.server.order.db.OrderDTO.getNextBillableDay()", "com.sapienter.jbilling.server.order.db.OrderDTO.getLines()", "java.util.List.size()", "com.sapienter.jbilling.server.order.db.OrderDTO.getDfFm()", "com.sapienter.jbilling.server.order.db.OrderDTO.getDueDateUnitId()", "com.sapienter.jbilling.server.order.db.OrderDTO.getNotesInInvoice()"],
    "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.createUpdateBillingProcessConfiguration(BillingProcessConfigurationWS)": ["com.sapienter.jbilling.server.process.ConfigurationBL.validate(com.sapienter.jbilling.server.process.BillingProcessConfigurationWS)", "com.sapienter.jbilling.server.util.Context.getBean(com.sapienter.jbilling.server.util.Context$Name)", "com.sapienter.jbilling.server.process.IBillingProcessSessionBean.createUpdateConfiguration(java.lang.Integer,com.sapienter.jbilling.server.process.db.BillingProcessConfigurationDTO)", "com.sapienter.jbilling.server.util.WebServicesSessionSpringBean.getCallerId()", "com.sapienter.jbilling.server.process.ConfigurationBL.getDTO(com.sapienter.jbilling.server.process.BillingProcessConfigurationWS)"]
  }
}
